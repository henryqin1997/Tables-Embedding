{"relation": [["Parameter", "CrossJoin", "QualifiedJoin", "TableSpec1", "TableSpec2", "JoinType JOIN", "ON SearchCondition"], ["Description", "Performs a cross join on two tables. A cross join returns a result table that is the cartesian product of the input tables. The result is the same as that of a query with the following syntax: SELECT Selectlist FROM Table1, Table2", "Specifies that the join is of type JoinType.", "Specifies the first table of the JOIN clause.", "Specifies the second table of the JOIN clause.", "Specifies the type of join to perform. These are the supported join types: INNER LEFT [OUTER] RIGHT [OUTER] INNER JOIN returns a result table that combines the rows from two tables that meet SearchCondition. LEFT OUTER JOIN returns join rows that match SearchCondition and rows from the first table that do not have SearchCondition evaluated as true with any row from the second table. RIGHT OUTER JOIN returns join rows that match SearchCondition and rows from the second table that do not have SearchCondition evaluated as true with any row from the first table.", "Specifies the search criteria to be used in a JOIN parameter. SearchCondition can refer only to tables referenced in the current qualified join."]], "pageTitle": "SQL Statements", "title": "", "url": "https://docs.oracle.com/database/121/TTSQL/state.htm", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 63, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986022.41/warc/CC-MAIN-20150728002306-00260-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 865850715, "recordOffset": 865697787, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{916399=Use subqueries in the SET clause of the UPDATE statement. Update employees with location_id = 1700 or location_id = 2400. Set department_id for these employees to the department_id of location_id = 2500. (This is department_id 80). Set salary for these employees to the maximum salary of their department., 223584=The total number of columns in the table cannot exceed 1000. In addition, the total number of partitions in a table cannot exceed 1000, one of which is used by TimesTen., 197826=If you specify CURRENT, the current number of rows in the table is used to calculate the page count value. If you specify RowPages, the number of pages is used. To determine the value for RowPages, divide the number of expected rows in your table by 256. For example, if your table has 256,000 rows, specify 1000 for RowPages (256000/256=1000)., 808926=To find the total value of all orders entered since the beginning of the year, use the HAVING clause to select only those orders that were entered on or after January 1, 2000:, 368414=Sizes the hash index to reflect the expected number of pages in the table. If you specify CURRENT, the current number of rows in the table is used to calculate the page count value. If you specify RowPages, the number of pages is used. To determine the value for RowPages, divide the number of expected rows in your table by 256. For example, if your table has 256,000 rows, specify 1000 for RowPages (256000/256=1000)., 375351=To ensure that your hash index is sized correctly, your application must indicate the expected size of your table with the value of the RowPages parameter of the SET PAGES clause. Compute this value by dividing the number of expected rows in your table by 256. For example, if your table has 256,000 rows, specify 1000 for the value of RowPages (256000/256=1000)., 837797=The following query joins table purchasing.parts to itself to determine which parts have the same sales price as the part whose serial number is '1133-P-01'.}", "lastModified": "Thu, 02 Jul 2015 09:42:04 GMT", "textBeforeTable": "The JoinedTable parameter of the TableSpec clause of a SELECT statement has the following parameters: Parameters {INNER | LEFT [OUTER] | RIGHT [OUTER]}  In the QualifiedJoin parameter, JoinType syntax is as follows: TableSpec1 [JoinType] JOIN TableSpec2 ON SearchCondition  And QualifiedJoin is: TableSpec1 CROSS JOIN TableSpec2  Where CrossJoin is: {CrossJoin | QualifiedJoin}  The syntax for JoinedTable is as follows: SQL syntax  The JoinedTable parameter specifies a table derived from CROSS JOIN, INNER JOIN, LEFT OUTER JOIN or RIGHT OUTER JOIN. JoinedTable       Specifies a table derived from the evaluation of a SELECT statement. No FIRST NumRows or ROWS m TO n clauses are allowed in this SELECT statement. The syntax of DerivedTable is presented under \"DerivedTable\". DerivedTable Specifies the query that defines the table join. The syntax of JoinedTable is presented under \"JoinedTable\".", "textAfterTable": "Description FULL OUTER JOIN is not supported. A joined table can be used to replace a table in a FROM clause anywhere except in a statement that defines a materialized view. Thus, a joined table can be used in UNION, MINUS, INTERSECT, a subquery, a nonmaterialized view, or a derived table. A subquery cannot be specified in the operand of a joined table. For example, the following statement is not supported:  SELECT * FROM regions INNER JOIN (SELECT * FROM countries) table2 ON regions.region_id=table2.region_id; A view can be specified as an operand of a joined table. A temporary table cannot be specified as an operand of a joined table. OUTER JOIN can be specified in two ways, either using the (+) operator in SearchCondition of the WHERE clause or using a JOIN table operation. The two specification methods cannot coexist in the same statement. Join order and grouping can be specified with a JoinedTable operation, but they cannot be specified with the (+) operator. For example, the following operation cannot be specified with the (+) operator:  t LEFT JOIN (t2 INNER JOIN t3 ON x2=x3) ON (x1 = x2 - x3)", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}