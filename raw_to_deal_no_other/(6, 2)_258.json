{"relation": [["Argument", "-f [--force]", "-R [--remotePath]", "-s [--stream] arg", "-v [--verbose]", "-w [--wide]"], ["Description", "Forces the file to be unlocked with administrator privileges.", "Indicates that the provided paths are the remote paths in the specified component and specified stream.", "Specifies a stream, as indicated by the name[@repo], alias, or UUID[@repo]. If you use the --remotePath option, you must specify a stream.", "Shows more information.", "Does not shorten output. If omitted, the width defaults to the value of the COLUMNS environment variable. If the COLUMNS environment variable is not set, the width defaults to 80 characters."]], "pageTitle": "A Rational Team Concert command-line reference for software developers", "title": "", "url": "http://www.ibm.com/developerworks/rational/library/rational-team-concert-command-line-reference/index.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 32, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438043062635.98/warc/CC-MAIN-20150728002422-00190-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 505079011, "recordOffset": 505041246, "tableOrientation": "HORIZONTAL", "TableContextTimeStampBeforeTable": "{6617=15 January 2013}", "TableContextTimeStampAfterTable": "{24688=To add the \"Changes to files in the client directory\" comment to the change set with the ID of 1019, use this command:, 66237=The above output shows that the file was shared as a new object on 1 June at 03:51 am and then a subsequent change was made to the file on 21 June at 2:37 pm., 14989=The status command is frequently used to find pending changes within a workspace. The following example shows a workspace in which several changes have been made. The example shows pending changes that are waiting to be delivered and accepted for the workspace. Outgoing change set 1033 is associated with the task identified by the ID 1317 and the \"Update the banking logic code\" title:, 81757=To remove the intermediate content produced on the 26 July at 7:31 pm, use the command:, 19342=The result is shown below. It indicates that a new change set identified by the ID 1018 has been created., 15964=The incoming change set shown above is identified as being created by Marco. The change set ID is 1034, which is used to gather information about the change set, such as the content of it. This will be used later in the list command with the changesets subcommand., 26339=To suspend the 1018 change set, enter this command:, 25524=To associate the change set, which has the ID 1018, with the work item with the ID of 117, use this command:, 71874=The change set ID is listed above \u2013 1057.}", "textBeforeTable": "Table 1. Subcommands with short descriptions Table 1 is a summary of the subcommands. Details of frequently used commands and their frequently used arguments and options are displayed in the subsequent sections of this article and in the two subsequent articles in the series. Table 1 indicates which article contains each command. Subcommand summary This is text that the user types at the command line. In all examples, the actual text that you must type at the command line is shown in the fixed-width Courier New font: Arguments presented in { } brackets are optional, and arguments presented in [ ] brackets are required for the command to work. Some options are repeatedly used, such as the repository connection and user identification information. lscm {options} [subcommands] {subcommand options} In general, the commands are executed in the following manner: Execution of subcommands It is best to use lscm where possible, which is in most scenarios. The lscm command (lscm.bat on Microsoft Windows systems) is in the same directory as the scm command described previously. The difference between the two is that lscm caches the process daemon, so it operates faster. LSCM The scm command invokes a new command-line process daemon on each invocation. The path indicated above is not added to the system search path during the installation process, so you need to do this manually. UNIX: teamconcert/scmtools/eclipse/scm Windows: TeamConcert\\SCMTools\\Eclipse\\scm.exe The scm command is in the", "textAfterTable": "compare Compare the contents of workspaces, streams, baselines, or snapshots. create Create an item (subcommands: baseline, changeset, component, snapshot, workspace) delete Delete repository items. deliver Deliver checked-in changes from a remote workspace to another workspace or stream. diff Show the changes made to a file. extract Extract a specific version of a file from the repository. help List available subcommands and provide detailed help on each. history Show the history for a file or component. lastmod Return the latest modification time for a folder sub-tree. list List repository items (subcommands: baselines, changesets, components, credentials, daemons, locks, projectareas, properties, remotefiles, snapshots, states, streams, teamareas, users, workspaces). load Load a repository workspace onto the local file system. lock Acquire or release locks in a stream (subcommands: acquire, list, release). login Store credentials for a repository connection. logout Delete stored credentials. property View and update properties on files (Subcommands: get, list, remove, set). resolve Resolve conflicts.", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}