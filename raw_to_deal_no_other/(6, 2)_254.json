{"relation": [["Configuration Recommendation", "Use the \"immediate\" attribute.", "Use the \"visible\" and \"rendered\" attributes.", "Use client-side events.", "Use the \"id\" attribute.", "Use client-side components.", "Set the childCreation attribute on af:popup to deferred for a server-side performance enhancement"], ["Description", "ADF Rich Client components have an immediate attribute. If a component has its immediate attribute set to TRUE (immediate=\"true\"), then the validation, conversion, and events associated with the component are processed during the applyRequestValues phase. These are some cases where setting immediate to TRUE can lead to better performance. The commandNavigationItem in the navigationPane can use the immediate attribute set to TRUE to avoid processing the data from the current screen while navigating to the new page. If the input component value has to be validated before the other values, immediate should be set to TRUE. In case of an error it be detected earlier in the cycle and additional processing be avoided. ADF Rich Client is built on top of JSF and uses standard JSF lifecycle. See \"Understanding the JSF and ADF Faces Lifecycles\" in Oracle Fusion Middleware Web User Interface Developer's Guide for Oracle Application Development Framework. There are some important issues associated with the immediate attribute. Refer to \"Using the Immediate Attribute\" in Oracle Fusion Middleware Web User Interface Developer's Guide for Oracle Application Development Framework for more information. Note that this is an advanced feature. Most of the performance improvements can be achieved using the af:subform component. Refer to Oracle Fusion Middleware Web User Interface Developer's Guide for Oracle Application Development Framework for af:subform details.", "All ADF Faces Rich Client display components have two properties that dictate how the component is displayed on the page: The visible property specifies simply whether the component is to be displayed on the page, or is to be hidden. The rendered property specifies whether the component shall exist in the client page at all. The EL expression is commonly used to control these properties. For better performance, consider setting the component to not rendered instead of not visible, assuming there is no client interaction with the component. Making a component not rendered can improve server performance and client response time since the component does not have client side representation.", "ADF Rich Client framework provides the client-side event model based on component-level events rather than DOM level. The client-side event model is a very useful feature that can speed up the application. Review the following performance considerations: Consider using client-side events for relatively simple event handling that can be done on the client side. This improves client side performance by reducing the number of server round trips. Also, it can increase server-side throughput and scalability since requests do not have to be handled by the server. By default, the events generated on the client by the client components are propagated to the server. If a client-side event handler is provided, consider canceling the event at the end of processing so that the event does not propagate to the server.", "The \"id\" attribute should not be longer than 7 characters in length. This is particularly important for naming containers. A long id can impact performance as the amount of HTML that must be sent down to the client is impacted by the length of the ids.", "ADF Rich Client framework has client-side components that play a role in client-side event handling and component behavior. The clientComponent attribute is used to configure when (or if) a client-side component should be generated. Setting clientComponent attribute to TRUE has a performance impact, so determine if its necessary to generate client-side components. For more information, see \"Client-side Components\" in Oracle Fusion Middleware Web User Interface Developer's Guide for Oracle Application Development Framework.", "Setting childCreation to deferred postpones construction of the components under the popup until the content is delivered. A deferred setting can therefore reduce the footprint of server-side state in some cases. CAUTION: This approach CANNOT be used if any of the following tags are present inside the popup: f:attribute af:setPropertyListener af:clientListener af:serverListener It also CANNOT be used if you need to refer to any child components of the popup before the popup is displayed. Setting childCreation=\"deferred\" will postpone creating any child components of the popup and you cannot refer to them until after the popup is shown."]], "pageTitle": "Oracle Application Development Framework Performance Tuning", "title": "", "url": "http://docs.oracle.com/cd/E23943_01/core.1111/e10108/adf.htm", "hasHeader": true, "headerPosition": "MIXED", "tableType": "RELATION", "tableNum": 2, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990609.0/warc/CC-MAIN-20150728002310-00050-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 73940887, "recordOffset": 73912501, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{77612=More information can be found in the \"What You May Need to Know About Application Module Granularity\" and \"Defining Nested Application Modules\" sections of Oracle Fusion Middleware Fusion Developer's Guide for Oracle Application Development Framework.}", "lastModified": "Wed, 13 May 2015 05:20:40 GMT", "textBeforeTable": "Table 8-3 ADF Faces Component Attributes Table 8-3 provides configuration recommendations for ADF Faces Component Attributes: 8.2.3 Tuning ADF Faces Component Attributes In the Oracle 11g Release, library partitioning is on by default. In previous versions library partitioning was off by default. Ensure that the library partitioning is on by validating the oracle.adf.view.rich.libraryPartitioning.DISABLED property is set to false in the web.xml file. Enable library partitioning. Examine the code. If there are comments and long variable names, the library is not obfuscated. Note: Copyright comments are kept even in the obfuscated version of the JS files. From the Script tab select \"all-11-version.js from the drop-down menu located above the tabs. Check the source: Check the size of the column. It should be about 1.3 MB (as opposed to 2.8 MB). Locate the \"all-11-version.js\" entry. Ensure that \"All\" or \"JS\" is selected on the Net tab. ADF Faces supports a run time option for providing a non-obfuscated version of the JavaScript library. The obfuscated version is supplied by default, but the non-obfuscated version is supplied for development builds. Obfuscation reduces the overall size of the JavaScript library by about 50%.", "textAfterTable": "8.2.4 Performance Considerations for Table and Tree Components Table, Tree, and TreeTable are some of the most complex, and frequently used, components. Since these components can include large sets of data, they can be the common source of performance problems. Table 8-4 provides some performance recommendations. Table 8-4 Table and Tree Component Configurations Configuration Recommendation Description Use editingMode=\"clickToEdit\". When using editingMode=\"editAll\" all content of the editable values holders and their client components is sent. This can significantly increase the HTTP payload and the Document Object Model (DOM) content on the client. Consider switching to editingMode=\"clickToEdit\" to reduce the amount of transmitted data and potentially improve user interaction. Reduce fetchSize when possible. A larger fetch size attribute on af:table implies that more data needs to be processed, fetched from the server, and displayed on the client. This can also increase the amount of DOM displayed on the client. Modify table fetch size. Tables have a fetch size which defines the number of rows to be sent to the client", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}