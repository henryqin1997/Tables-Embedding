{"relation": [["Parameter", "queue_name", "dequeue_options", "array_size", "message_properties_array", "payload_array", "msgid_array", "error_array"], ["Description", "The queue name from which messages are dequeued (same as single-row dequeue).", "The set of options which will be applied to all messages in the array (same as single-row dequeue).", "The number of elements to dequeue.", "A record containing an array corresponding to each message property. Each payload element has a corresponding set of message properties. See MESSAGE_PROPERTIES_ARRAY_T Type.", "An array of dequeued payload data. \"\" can be an associative array, varray or nested table in its PL/SQL representation.", "An array of message IDs of the dequeued messages. See MSGID_ARRAY_T Type.", "Currently not implemented"]], "pageTitle": "DBMS_AQ", "title": "", "url": "http://docs.oracle.com/cd/E11882_01/appdev.112/e23448/d_aq.htm", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 7, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987228.91/warc/CC-MAIN-20150728002307-00132-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 75854799, "recordOffset": 75836816, "tableOrientation": "HORIZONTAL", "lastModified": "Tue, 19 May 2015 17:54:10 GMT", "textBeforeTable": "Table 22-8 DEQUEUE_ARRAY Function Parameters Parameters RETURN pls_integer; error_array OUT error_array_t) msgid_array OUT msgid_array_t, payload_array OUT \"<COLLECTION_1>\", message_properties_array OUT message_properties_array_t, array_size IN pls_integer, dequeue_options IN dequeue_options_t, queue_name IN VARCHAR2, DBMS_AQ.DEQUEUE_ARRAY (  Syntax  This function dequeues an array of messages and returns them in the form of an array of payloads, an array of message properties and an array of message IDs. This function returns the number of messages successfully dequeued. DEQUEUE_ARRAY Function       Oracle Streams Concepts and Administration for information about secure queues See Also: You must map the Oracle Streams AQ agent to a database user with dequeue privileges on the secure queue. Use DBMS_AQADM.ENABLE_DB_ACCESS to do this. See ENABLE_DB_ACCESS Procedure. You must have created a valid Oracle Streams AQ agent using DBMS_AQADM.CREATE_AQ_AGENT. See CREATE_AQ_AGENT Procedure . When you use secure queues, the following are required: For secure queues, you must specify consumer_name in the dequeue_options parameter. See DEQUEUE_OPTIONS_T Type for more information about consumer_name. Using Secure Queues When all the messages in a group have been dequeued, the dequeue returns an error indicating that all messages in the group have been processed. The application can then use the NEXT_TRANSACTION to start dequeuing messages", "textAfterTable": "Usage Notes A nonzero wait time, as specified in dequeue_options, is recognized only when there are no messages in the queue. If the queue contains messages that are eligible for dequeue, then the DEQUEUE_ARRAY function will dequeue up to array_size messages and return immediately. Dequeue by message_id is not supported. See DEQUEUE Procedure for more information on the navigation parameter. Existing NAVIGATION modes are supported. In addition, two new NAVIGATION modes are supported for queues enabled for message grouping: FIRST_MESSAGE_MULTI_GROUP NEXT_MESSAGE_MULTI_GROUP See Also: ENQUEUE_OPTIONS_T Type For transaction grouped queues and ONE_GROUP navigation, messages are dequeued from a single transaction group only, subject to the array_size limit. In MULTI_GROUP navigation, messages are dequeued across multiple transaction groups, still subject to the array_size limit. ORA-25235 is returned to indicate the end of a transaction group. DEQUEUE_ARRAY is not supported for buffered messages, but you can still use this procedure on individual buffered messages by setting array_size to one message. ENQUEUE Procedure This procedure adds a message to the specified queue. Syntax  DBMS_AQ.ENQUEUE ( queue_name IN VARCHAR2, enqueue_options IN enqueue_options_t, message_properties IN message_properties_t, payload IN \"<ADT_1>\", msgid OUT RAW); Parameters", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}