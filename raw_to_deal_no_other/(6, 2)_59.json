{"relation": [["Type", "DuplicateName", "FileNotFound", "HostConfigFault", "InvalidName", "RuntimeFault"], ["Description", "Thrown if a datastore with the same name already exists.", "Thrown if path doesn't exist", "Thrown if unable to create the datastore on host.", "Thrown if name is not valid datastore name", "Thrown if any type of runtime fault is thrown that is not covered by the other faults; for example, a communication error."]], "pageTitle": "", "title": "", "url": "https://www.vmware.com/support/developer/vc-sdk/visdk41pubs/ApiReference/vim.host.DatastoreSystem.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 8, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989018.40/warc/CC-MAIN-20150728002309-00164-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 930587267, "recordOffset": 930579065, "tableOrientation": "HORIZONTAL", "textBeforeTable": "Properties Datastore See Datastores are never automatically removed because transient storage connection outages may occur. They must be removed from the host using this interface. Destroying the datastore removes the partitions that compose the VMFS volume. An ESX Server system automatically discovers the VMFS volume on attached Logical Unit Numbers (LUNs) on startup and after re-scanning the host bus adapter. Datastores are automatically created. The datastore label is based on the VMFS volume label. If there is a conflict with an existing datastore, it is made unique by appending a suffix. The VMFS volume label will be unchanged. A datastore that is backed by a VMware File System (VMFS) is created by specifying a disk with unpartitioned space, the desired disk partition format on the disk, and some VMFS attributes. VMFS A datastore that is backed by a network-attached storage device is created by specifying the required data needed to attach the volume to the host. Destroying the datastore detaches the volume from the host. NAS Volume A datastore that is backed by a local file system volume uses a host native local file system such as NTFS or ext3. The datastore is created by identifying a file path for a directory in which virtual machine data will be stored. When the datastore is deleted, the mapping from the datastore to the file is", "textAfterTable": "Methods defined in this Managed Object ConfigureDatastorePrincipal, CreateLocalDatastore, CreateNasDatastore, CreateVmfsDatastore, ExpandVmfsDatastore, ExtendVmfsDatastore, QueryAvailableDisksForVmfs, QueryUnresolvedVmfsVolumes, QueryVmfsDatastoreCreateOptions, QueryVmfsDatastoreExpandOptions, QueryVmfsDatastoreExtendOptions, RemoveDatastore, ResignatureUnresolvedVmfsVolume_Task, UpdateLocalSwapDatastore ConfigureDatastorePrincipal Configures datastore principal user for the host. All virtual machine-related file I/O is performed under this user. Configuring datastore principal user will result in all virtual machine files (configuration, disk, and so on) being checked for proper access. If necessary, ownership and permissions are modified. Note that in some environments, file ownership and permissions modification may not be possible. For example, virtual machine files stored on NFS cannot be modified for ownership and permissions if root squashing is enabled. Ownership and permissions for these files must be manually changed by a system administrator. In general, if server process does not have rights to change ownership and file permissions of virtual machine files, they must be modified manually. If a virtual machine files are not read/writeable by this user, virtual machine related operations such as power on/off, configuration, and so on will fail. This operation must be performed while in maintenance mode and requires host reboot. Required Privileges Host.Config.Maintenance Parameters Name Type Description _this ManagedObjectReference A reference to the HostDatastoreSystem used to make the method call.", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}