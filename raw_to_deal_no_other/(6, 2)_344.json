{"relation": [["Database Parameter", "_b_tree_bitmap_plans", "DB_BLOCK_SIZE", "NLS_SORT", "OPEN_CURSORS", "SESSION_CACHED_CURSORS", "SESSION_MAX_OPEN_FILES", "JOB_QUEUE_PROCESSES", "LOG_BUFFER", "UNDO_MANAGEMENT", "PL_SQL_CODE_TYPE", "PROCESSES", "PGA_AGGREGATE_TARGET", "SGA_MAX_SIZE", "SGA_TARGET", "TRACE_ENABLED"], ["Description", "Consider setting this parameter to FALSE to prevent optimizer from attempting bitmap operations as there are no bitmap indexes in Fusion Middleware.", "DB_BLOCK_SIZE specifies (in bytes) the size of Oracle database blocks. The default block size of 8K is optimal for most systems. Set this parameter at the time of database creation.", "Consider setting NLS_SORT to BINARY, otherwise sort will do full table scan and performance can be impacted.", "Consider using a value of 500 open cursors (handles to private SQL areas) a session can have at once.", "Consider using a value of 500 session cursors to cache.", "SESSION_MAX_OPEN_FILES specifies the maximum number of BFILEs that can be opened in any session. Once this number is reached, subsequent attempts to open more files in the session by using DBMS_LOB.FILEOPEN() or OCILobFileOpen() may fail. The maximum value for this parameter depends on the equivalent parameter defined for the underlying operating system.", "JOB_QUEUE_PROCESSES specifies the maximum number of processes that can be created for the execution of jobs. It specifies the number of job queue processes per instance.", "LOG_BUFFER specifies the amount of memory (in bytes) that Oracle uses when buffering redo entries to a redo log file. Redo log entries contain a record of the changes that have been made to the database block buffers. The LGWR process writes redo log entries from the log buffer to a redo log file.", "UNDO_MANAGEMENT specifies which undo space management mode the system should use. When set to AUTO, the instance starts in automatic undo management mode. In manual undo management mode, undo space is allocated externally as rollback segments.", "Consider setting PL_SQL_CODE_TYPE to NATIVE", "Consider using a value of 5000 operating system processes to be connected to Oracle concurrently.", "Consider setting PGA_AGGREGATE_TARGET to 1G of PGA memory available to all server processes attached to the instance.", "Consider setting the SGA_MAX_SIZE to 2G initially and then monitor the production database on daily basis and adjust SGA and PGA accordingly.", "Consider setting the SGA_TARGET to 2G initially and then monitor the production database on daily basis and adjust SGA and PGA accordingly.", "TRACE_ENABLED controls tracing of the execution history, or code path, of Oracle. Oracle Support Services uses this information for debugging. Although the performance impacts incurred from processing is not excessive, you may improve performance by setting TRACE_ENABLED to FALSE."]], "pageTitle": "Top Performance Areas - 11g Release 1 (11.1.1)", "title": "", "url": "http://docs.oracle.com/cd/E25178_01/core.1111/e10108/top_issues.htm", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 5, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990114.79/warc/CC-MAIN-20150728002310-00263-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 71076019, "recordOffset": 71052644, "tableOrientation": "HORIZONTAL", "lastModified": "Thu, 20 Sep 2012 17:34:00 GMT", "textBeforeTable": "Table 2-2 Important init.ora Oracle 10g Database Tuning Parameters The following table describes several performance-related database initialization parameters for Oracle 10g database. The tuning considerations listed below are applicable to most scenarios. Always set your database parameters based on your own use case scenarios. 2.6.1.1 Initialization Parameters for Oracle 10g Consider applying Patch Set Release (PSR) 11.1.0.7 and upgrade the database prior to attempting the following modifications. Table 2-3, \"Important inti.ora Oracle 11g Database Tuning Parameters\" Table 2-2, \"Important init.ora Oracle 10g Database Tuning Parameters\" The following tables provide common init.ora parameters and their descriptions. Consider following these guidelines to set the database parameters. Ultimately, however, the DBA should monitor the database health and tune parameters based on the need. See the following tables for more information: 2.6.1 Tuning init.ora Database Parameters Always review the tuning guidelines in your database-specific vendor documentation. For more information on tuning the Oracle database, see the Oracle Database Performance Tuning Guide. Note: Tuning Automatic Segment-Space Management (ASSM) Tuning Redo Logs Location and Sizing Tuning init.ora Database Parameters This section covers the following: To achieve optimal performance", "textAfterTable": "2.6.1.2 Initialization Parameters for Oracle 11g The following table provides information on some important performance-related database initialization parameters for Oracle 11g database. Table 2-3 Important inti.ora Oracle 11g Database Tuning Parameters Database Parameter Description AUDIT_TRAIL If there is NO policy to audit db activity, consider setting this parameter to NONE. Enabling auditing can impact performance. MEMORY_MAX_TARGET MEMORY_MAX_TARGET specifies the maximum value to which a DBA can set the MEMORY_TARGET initialization parameter. MEMORY_TARGET Consider setting the MEMORY_TARGET to NONE. Set SGA and PGA separately as setting MEMORY_TARGET does not allocate sufficient memory to SGA and PGA as needed. PGA_AGGREGATE_TARGET Consider using a value of 1G for PGA initially and then monitor the production database on daily basis", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}