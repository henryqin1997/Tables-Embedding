{"relation": [["File", "AlarmClockApp.mxml or AlarmClockApp.fla", "com/example/programmingas3/clock/AlarmClock.as", "com/example/programmingas3/clock/AlarmEvent.as", "com/example/programmingas3/clock/AnalogClockFace.as", "com/example/programmingas3/clock/SimpleClock.as"], ["Description", "The main application file in Flash (FLA) or Flex (MXML).", "A class which extends the SimpleClock class, adding alarm clock functionality.", "A custom event class (a subclass of flash.events.Event) which serves as the event object for the AlarmClock class\u2019s alarm event.", "Draws a round clock face and hour, minute, and seconds hands based on the time (described in the SimpleClock example).", "A clock interface component with simple timekeeping functionality (described in the SimpleClock example)."]], "pageTitle": "Adobe\u00a0Flash\u00a0Platform * Event handling example: Alarm Clock", "title": "", "url": "http://help.adobe.com/en_US/as3/dev/WS5b3ccc516d4fbf351e63e3d118a9b90204-7e53.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 3, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989891.18/warc/CC-MAIN-20150728002309-00253-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 108465495, "recordOffset": 108449556, "tableOrientation": "HORIZONTAL", "textBeforeTable": "To get the Flash Professional application files for this sample, see http://www.adobe.com/go/learn_programmingAS3samples_flash. To get the Flex application files for this sample, see http://www.adobe.com/go/as3examples. The Alarm Clock application files can be found in the Samples/AlarmClock folder. The application includes these files: Creating a custom event type Notifying listeners of an event Listening and responding to an event The Alarm Clock example consists of a clock that allows the user to specify a time at which an alarm will go off, as well as a message to be displayed at that time. The Alarm Clock example builds on the SimpleClock application from Working with dates and times Alarm Clock illustrates several aspects of working with events in ActionScript 3.0, including: Providing a custom alarm event Notifying others of the alarm Triggering the alarm Alarm Clock overview //--> } } } document.getElementById(\"chcImage\").src = newSrc; document.getElementById(\"chcLink\").href = newHref; document.getElementById(\"chcPromo\").style.display = \"block\"; var newSrc = baseUrl + getCountryName() + \"/support/chc/GetMoreHelpFeatures.png\"; var newHref = baseUrl + getCountryName() + \"/support/chc/\" + \"?helpcfg=http://help.\" + stage + \"adobe.com/HelpCfg/\" + getLangName() + \"/\" + terms_HELPCFG + \"&url=\" + refpage + \"&product=\" + cfgArray[terms_HELPCFG]; if (document.getElementById) { // DOM3 = IE5, NS6 if ((!use_robohelp_behavior) && (terms_HELPCFG.length > 0) && (typeof(cfgArray[terms_HELPCFG]) != 'undefined') && (cfgArray[terms_HELPCFG].length > 0)) { var refpage = document.location.href.replace(/#.*$/,", "textAfterTable": "Alarm Clock overview The primary functionality of the clock in this example, including tracking the time and displaying the clock face, reuses the SimpleClock application code, which is described in Date and time example: Simple analog clock. The AlarmClock class extends the SimpleClock class from that example by adding the functionality required for an alarm clock, including setting the alarm time and providing notification when the alarm \u201cgoes off.\u201d Providing notification when something happens is the job that events are made for. The AlarmClock class exposes the Alarm event, which other objects can listen for in order to perform desired actions. In addition, the AlarmClock class uses an instance of the Timer class to determine when to trigger its alarm. Like the AlarmClock class, the Timer class provides an event to notify other objects (an AlarmClock instance, in this case) when a certain amount of time has passed. As with most ActionScript applications, events form an important part of the functionality of the Alarm Clock sample application. Triggering the alarm As mentioned previously, the only functionality that the AlarmClock class actually provides relates to setting and triggering the alarm. The built-in Timer class (flash.utils.Timer) provides a way for a developer to define code that will be executed after a specified amount of time. The AlarmClock class uses a Timer instance to determine when to set", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}