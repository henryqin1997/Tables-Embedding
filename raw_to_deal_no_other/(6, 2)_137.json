{"relation": [["Directive", "after", "afterok", "afternotok", "afterany", "before", "beforeok", "beforenotok", "beforeany"], ["Description", "Execute this job after listed jobs have begun.", "Execute this job after listed jobs have terminated without error.", "Execute this job after listed jobs have terminated with an error.", "Execute this job after listed jobs have terminated for any reason.", "Listed jobs may be run after this job begins execution.", "Listed jobs may be run after this job terminates without error.", "Listed jobs may be run after this job terminates with an error.", "Listed jobs may be run after this job terminates for any reason."]], "pageTitle": "MHPCC: Guide to the PBS Queuing Sytem on Riptide", "title": "Job Dependency Directives", "url": "http://mhpcc.hpc.mil/doc/riptidePbsGuide.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 9, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438043058631.99/warc/CC-MAIN-20150728002418-00116-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 162636067, "recordOffset": 162619673, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{27771=----------- #!/bin/bash ## Walltime in hours:minutes:seconds #PBS -l walltime=05:00:00 ## -o specifies output file #PBS -o <full path>.out ## -e specifies error file #PBS -e <full path>.error, 16330=qsub -A Project_ID -q debug -l select=2:ncpus=16:mpiprocs=16 -l place=scatter:excl -l walltime=1:00:00 -X -I}", "textBeforeTable": "The table below contains commands for managing your jobs in PBS. Job Management Commands qsub -l walltime=HHH:MM:SS run.pbs Occasionally you may want to supply one or more directives directly on the qsub command line. Directives supplied in this way override the same directives if they are already included in your script. The syntax to supply directives on the command line is the same as within a script except that #PBS is not used. For example: Once your batch script is complete, you will need to submit it to PBS for execution using the qsub command. For example, if you have saved your script into a text file named run.pbs, you would type \"qsub run.pbs\". Submitting Your Job Clean up - This usually includes archiving your results and removing temporary files and directories. Launching - Your application is launched using the mpirun command for IntelMPI codes and OpenMPI codes, and mpiexec for IBM PE codes. Compilation - You may need to compile your application if you don't already have a pre-compiled executable available. Environment Setup - This might include setting environment variables, loading modules, creating directories, copying files, initializing data, etc. As the last step in this stage, you will generally cd to the directory that you want your script to execute in. Otherwise, your script would execute by default in your home directory. Most users use \"cd $PBS_O_WORKDIR\" to run the batch script from the directory where they typed \"qsub\" to submit the job.", "textAfterTable": "qrls Release a job from hold. tracejob Display job accounting data from a completed job. pbsnodes Display host status of all PBS batch nodes. apstat Display attributes of and resources allocated to running jobs. qpeek Lets you peek at the stdout and stderr of your running job. qhist Display a detailed history of a specific job. Optional PBS Directives In addition to the required directives mentioned above, PBS has many other directives, but most users will only use a few of them. Some of the more useful optional directives are listed below. Job Identification Directives Job identification directives allow you to identify characteristics of your jobs. These directives are voluntary, but strongly encouraged. The following table contains some useful job identification directives. Job Identification Directives Directive Options Description -l application application_name Identify the application being used. -N job_name Name your job. Application Name The \"-l application\" directive allows you to identify the application being used by your job. This helps the program to accurately assess application usage and to ensure that adequate software licenses and appropriate software are purchased. To use this directive, add a line in the following form to your batch script: #PBS -l application=application_name Or to your qsub command qsub -l application=application_name", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}