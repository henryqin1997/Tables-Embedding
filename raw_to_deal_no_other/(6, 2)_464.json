{"relation": [["Operator", "<", "<=", ">", ">=", "==", "!="], ["Description", "Left-hand operand is less than right-operand", "Left-hand operand is less than or equal to right-hand operand", "Left-hand operand is greater than right-hand operand", "Left-hand operand is greater than or equal to right-hand operand", "Left-hand operand is equal to right-hand operand", "Left-hand operand is not equal to right-hand operand"]], "pageTitle": "2.11\u00a0Strings", "title": "", "url": "http://docs.oracle.com/cd/E37670_01/E38608/html/dt_strings_dlang.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 1, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990112.50/warc/CC-MAIN-20150728002310-00096-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 69533967, "recordOffset": 69525765, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{14596=Copyright \u00a9 2013, 2015, Oracle and/or its affiliates. All rights reserved. Legal Notices}", "lastModified": "Wed, 08 Jul 2015 09:43:04 GMT", "textBeforeTable": "Table\u00a02.14\u00a0D Relational Operators for Strings D overloads the binary relational operators and permits them to be used for string comparisons as well as integer comparisons. The relational operators perform string comparison whenever both operands are of type string, or when one operand is of type string and the other operand can be promoted to type string, as described in Section\u00a02.11.3, \u201cString Assignment\u201d. Table\u00a02.14, \u201cD Relational Operators for Strings\u201d lists the relational operators that can be used to compare strings. 2.11.5\u00a0String Comparison Any expression that is a scalar type such as a pointer or integer or a scalar array address may be converted to string. Expressions of other types such as void may not be converted to string. If you erroneously convert an invalid address to a string, the DTrace safety features will prevent you from damaging the system or DTrace, but you might end up tracing a sequence of undecipherable characters. The stringof operator binds very tightly to the operand on its right-hand side. Typically, parentheses are used to surround the expression for clarity, although they are not strictly necessary. s = stringof (expression); s = (string) expression;  Expressions of other types may be explicitly converted to type string by using a", "textAfterTable": "As with integers, each operator evaluates to a value of type int which is equal to one if the condition is true, or zero if it is false. The relational operators compare the two input strings byte-by-byte, similar to the C library routine strcmp(). Each byte is compared using its corresponding integer value in the ASCII character set, as shown in the ascii(7) manual page, until a null byte is read or the maximum string length is reached. Some example D string comparisons and their results are: D string comparison Result \"coffee\" < \"espresso\" Returns 1 (true) \"coffee\" == \"coffee\" Returns 1 (true) \"coffee\"\" >= \"mocha\" Returns 0 (false) Note Seemingly identical Unicode strings might compare as being different if one or the other of the strings is not normalized. Previous\u00a0 Up \u00a0Next 2.10\u00a0Pointers and Arrays\u00a0", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}