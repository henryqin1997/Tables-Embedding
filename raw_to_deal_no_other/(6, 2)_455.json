{"relation": [["Pseudo classes", "disabled", "read-only", "error", "fatal", "warning", "info", "confirmation"], ["Description", "", "For example, you can style the content when the component is readOnly by using this selector: \"af|selectManyListbox:read-only::content\"", "", "", "", "", ""]], "pageTitle": "Selectors for Skinning ADF Faces Components", "title": "", "url": "http://docs.oracle.com/cd/E29542_01/apirefs.1111/e15862/toc.htm", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 464, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990112.50/warc/CC-MAIN-20150728002310-00255-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 71128027, "recordOffset": 71025627, "tableOrientation": "HORIZONTAL", "lastModified": "Thu, 18 Dec 2014 16:23:15 GMT", "textBeforeTable": "Style on the root element of the af:activeOutputText component. af|activeOutputText Conditions Description Style Selectors af:activeOutputText af:activeImage af:activeCommandToolbarButton Renderer Selectors The activeImage component was added for a very specific use case and we expect very few application developers to use this component. The activeCommandToolbarButton component was added for a very specific use case and we expect very few application developers to use this component. skin a particular ADF Faces component. The selectors defined below are specified by the component they affect. Let's say you want to skin the af:inputText component. If you go to the af:inputText Component section of this document, you will see the selectors that you can use to skin the af:inputText component. One of the selectors is af|inputText::content. The ::content pseudo-element indicates that this is the content portion of the af:inputText component; the input. To skin this you would set CSS properties on the af|inputText::content selector in your ADF Faces skin .css file. Note that the property may only be assigned to the default style class of the component (the class returned by the RichRenderer.getDefaultStyleClass method). Should the component not have a default style class, it will also look for properties underneath the root state style classes (any of the classes returned by the RichRenderer.getRootStateStyleClasses method).", "textAfterTable": "-tr-show-last-item Valid values are true or false. Determines whether the last item is displayed or not. e.g. af|breadCrumbs {-tr-show-last-item:false} will not show the last item in the breadCrumbs. af|breadCrumbs::access-key Style on the access key character of commandNavigationItem, when it is used inside a breadCrumbs. Includes .AFFormAccessKeyStyle:alias af|breadCrumbs::body Style on the container which encloses both the breadCrumbs content and the overflow indicator. af|breadCrumbs::content Style on the container which encloses the breadCrumbs content. af|breadCrumbs::overflow-indicator Style on the overflow indicator. The indicator is specified using a background-image in this key. af|breadCrumbs::icon-style Style on the icon of commandNavigationItem, when it is used inside a breadCrumbs. af|breadCrumbs::separator Styles the separator icon. af|breadCrumbs::step Styles the step. If you skin the background-image, you may also want to skin it for :hover. Pseudo classes Description selected e.g. af|breadCrumbs::step:selected disabled \u00a0 Icon Selectors Description af|breadCrumbs::separator-icon The separator icon itself. af|breadCrumbs::overflow-icon Overrides the default overflow indicator image. Icons can be text or img elements, e.g.", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}