{"relation": [["Parameter", "rowid_type", "object_number", "relative_fno", "block_number", "row_number"], ["Description", "Type (restricted or extended). Set the rowid_type parameter to 0 for a restricted ROWID. Set it to 1 to create an extended ROWID. If you specify rowid_type as 0, then the required object_number parameter is ignored, and ROWID_CREATE returns a restricted ROWID.", "Data object number (rowid_object_undefined for restricted).", "Relative file number.", "Block number in this file.", "Returns row number in this block."]], "pageTitle": "DBMS_ROWID", "title": "", "url": "http://docs.oracle.com/cd/B28359_01/appdev.111/b28419/d_rowid.htm", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 6, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988922.24/warc/CC-MAIN-20150728002308-00164-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 73705423, "recordOffset": 73695512, "tableOrientation": "HORIZONTAL", "lastModified": "Thu, 09 Jul 2015 23:29:18 GMT", "textBeforeTable": "Table 111-7 ROWID_CREATE Function Parameters Parameters pragma RESTRICT_REFERENCES(rowid_create,WNDS,RNDS,WNPS,RNPS);  Pragmas RETURN ROWID; row_number IN NUMBER) block_number IN NUMBER, relative_fno IN NUMBER, object_number IN NUMBER, rowid_type IN NUMBER, DBMS_ROWID.ROWID_CREATE (  Syntax This is useful for testing ROWID operations, because only the Oracle Server can create a valid ROWID that points to data in a database. This function lets you create a ROWID, given the component parts as parameters. ROWID_CREATE Function   WHERE key_value = 42); FROM some_table INSERT INTO T2 (SELECT dbms_rowid.rowid_block_number(ROWID, 'BIGFILE')  The example SQL statement selects the block number from a ROWID and inserts it into another table: Examples  The type of the tablespace (bigfile/smallfile) to which the row belongs. ts_type_in ROWID to be interpreted. row_id Description Parameter Table 111-6 ROWID_BLOCK_NUMBER Function Parameters Parameters pragma RESTRICT_REFERENCES(rowid_block_number,WNDS,RNDS,WNPS,RNPS);  Pragmas RETURN NUMBER; ts_type_in IN VARCHAR2 DEFAULT 'SMALLFILE') row_id IN ROWID, DBMS_ROWID.ROWID_BLOCK_NUMBER (  Syntax This function returns the database block number for the input ROWID.", "textAfterTable": "Examples Create a dummy extended ROWID:  my_rowid := DBMS_ROWID.ROWID_CREATE(1, 9999, 12, 1000, 13); Find out what the rowid_object function returns:  obj_number := DBMS_ROWID.ROWID_OBJECT(my_rowid); The variable obj_number now contains 9999. ROWID_INFO Procedure This procedure returns information about a ROWID, including its type (restricted or extended), and the components of the ROWID. This is a procedure, and it cannot be used in a SQL statement. Syntax  DBMS_ROWID.ROWID_INFO ( rowid_in IN ROWID, rowid_type OUT NUMBER, object_number OUT NUMBER, relative_fno OUT NUMBER, block_number OUT NUMBER, row_number OUT NUMBER); Pragmas  pragma RESTRICT_REFERENCES(rowid_info,WNDS,RNDS,WNPS,RNPS); Parameters Table 111-8 ROWID_INFO Procedure Parameters Parameter Description rowid_in ROWID to be interpreted. This determines if the ROWID is a restricted (0) or extended (1) ROWID. rowid_type Returns type (restricted/extended). object_number Returns data object number (rowid_object_undefined for restricted). relative_fno Returns relative file number. block_number", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}