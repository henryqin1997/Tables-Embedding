{
    "relation": [
        [
            "CWE-ID",
            "79",
            "20",
            "184",
            "96",
            "113",
            "348",
            "116",
            "350",
            "86",
            "602",
            "692",
            "697",
            "713",
            "71"
        ],
        [
            "Weakness Name",
            "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "Improper Input Validation",
            "Incomplete Blacklist",
            "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
            "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')",
            "Use of Less Trusted Source",
            "Improper Encoding or Escaping of Output",
            "Reliance on Reverse DNS Resolution for a Security-Critical Action",
            "Improper Neutralization of Invalid Characters in Identifiers in Web Pages",
            "Client-Side Enforcement of Server-Side Security",
            "Incomplete Blacklist to Cross-Site Scripting",
            "Insufficient Comparison",
            "OWASP Top Ten 2007 Category A2 - Injection Flaws",
            "Apple '.DS_Store'"
        ],
        [
            "Weakness Relationship Type",
            "Targeted",
            "Targeted",
            "Secondary",
            "Targeted",
            "Targeted",
            "Targeted",
            "Targeted",
            "Targeted",
            "Secondary",
            "Targeted",
            "Targeted",
            "Targeted",
            "Targeted",
            "Targeted"
        ]
    ],
    "pageTitle": "CAPEC - CAPEC-63: Simple Script Injection (Version 2.6) \ufeff",
    "title": "",
    "url": "http://capec.mitre.org/data/definitions/63.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988311.72/warc/CC-MAIN-20150728002308-00154-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 38768762,
    "recordOffset": 38753131,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{77995=This Web site is sponsored and managed by The MITRE Corporation to enable stakeholder collaboration. Copyright \u00a9 2007 - 2015, The MITRE Corporation. CAPEC and the CAPEC logo are trademarks of The MITRE Corporation.}",
    "textBeforeTable": "Attack Motivation-Consequences Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this. Implementation: Session tokens for specific host Implementation: Perform output validation for all remote content. Implementation: Perform input validation for all remote content. Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification. Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from. Design: Utilize strict type, character, and encoding enforcement Design: Use browser technologies that do not allow client side scripting. Solutions and Mitigations Ability to deploy a custom hostile service for access by targeted clients. Ability to communicate synchronously or asynchronously with client machine",
    "textAfterTable": "Client browser, its component libraries, and client network (e.g. Intranet) Payload Activation Impact Enables attacker to execute scripts to launch attacks on remote client machine and environment. Intranet and local systems may not be patched to the same degree as \"externally\" facing systems, so simple attacks may identify more victims on an \"internal\" system such as a corporate Intranet Related Weaknesses CWE-ID Weakness Name Weakness Relationship Type 79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') Targeted 20 Improper Input Validation Targeted 184 Incomplete Blacklist Secondary 96 Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection') Targeted 113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting') Targeted",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}