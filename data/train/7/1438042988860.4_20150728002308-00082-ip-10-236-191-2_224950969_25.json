{
    "relation": [
        [
            "",
            "",
            "",
            ""
        ],
        [
            "thisContour",
            "nbThisContour",
            "points",
            "nbPoints"
        ],
        [
            "the vertices defining the contour.",
            "nb of vertice of the contour.",
            "the points to test.",
            "the number of points to test."
        ]
    ],
    "pageTitle": "Stellarium: SphericalConvexPolygon Class Reference",
    "title": "",
    "url": "http://stellarium.org/doc/0.10.5/classSphericalConvexPolygon.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988860.4/warc/CC-MAIN-20150728002308-00082-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 224959171,
    "recordOffset": 224950969,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Sat, 26 May 2012 15:04:14 GMT",
    "textBeforeTable": "Parameters: Set a single contour defining the SphericalPolygon. [inline] \u00a0)\u00a0 acontour const QVector< Vec3d > &\u00a0 ( void SphericalConvexPolygon::setContour Reimplemented in SphericalTexturedConvexPolygon. Implements SphericalRegion. Serialize the region. This method must allow as fast as possible serialization and work with deserialize(). const [inline, virtual] \u00a0)\u00a0 out QDataStream &\u00a0 ( virtual void SphericalConvexPolygon::serialize Reimplemented in SphericalTexturedConvexPolygon. Implements SphericalRegion.  {\"type\": \"CVXPOLYGON\", \"worldCoords\": [[[ra,dec], [ra,dec], [ra,dec], [ra,dec]], [[ra,dec], [ra,dec], [ra,dec]],[...]]}  The format is  Serialize the region into a QVariant map matching the JSON format.   worldCoords is a list of closed contours, with each points defined by ra dec in degree in the ICRS frame. const [virtual] \u00a0)\u00a0 ( virtual QVariantMap SphericalConvexPolygon::toQVariant",
    "textAfterTable": "\u00a0)\u00a0 const [inline] Get the single contour defining the SphericalConvexPolygon. bool SphericalConvexPolygon::checkValid ( \u00a0)\u00a0 const Check if the polygon is valid, i.e. it has no side >180. static bool SphericalConvexPolygon::checkValidContour ( const QVector< Vec3d > &\u00a0 contour \u00a0)\u00a0 [static] Check if the passed contour is convex and valid, i.e. it has no side >180. static SphericalRegionP SphericalConvexPolygon::deserialize ( QDataStream &\u00a0 in \u00a0)\u00a0 [static] Deserialize the region. This method must allow as fast as possible deserialization. void",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}