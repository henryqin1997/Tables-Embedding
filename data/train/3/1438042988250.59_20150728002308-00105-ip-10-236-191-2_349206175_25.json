{
    "relation": [
        [
            "Tag",
            "'82','83'",
            "'84','85'",
            "'86','87'"
        ],
        [
            "Value",
            "BER-TLV, including SM-related data objects",
            "BER-TLV, but not SM-related data objects",
            "Padding indicator byte (see table 23) followed by cryptogram (plain not coded in BER-TLV)"
        ]
    ],
    "pageTitle": "ISO 7816-4 (ISO7816 part 4 section 5) Smart card standard, Basic Organizations",
    "title": "",
    "url": "http://www.cardwerk.com/smartcards/smartcard_standard_ISO7816-4_5_basic_organizations.aspx",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988250.59/warc/CC-MAIN-20150728002308-00105-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 349226867,
    "recordOffset": 349206175,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{108358=[Home] | [Services] | [Solutions] | [Knowledge Base] | [Search] | [Contact] Copyright 1999-2015 Jacquinot Consulting, Inc. All rights reserved. Legal disclaimer Last modified 07-JAN-2015}",
    "textBeforeTable": "Figure 1 - Logical file organization (example) Figure 1 illustrates an example of the logical file organization in a card. Working EF - Those EFs are intended for storing data not interpreted by the card, i.e. data to be used by the outside world exclusively. Internal EF - Those EFs are intended for storing data interpreted by the card, i.e. data analyzed and used by the card for management and control purposes. The following two types of EFs are defined : The other DFs are optional. The DF at the root is called the master file (MF). The MF is mandatory. The logical organization of data in a card consists of following structural hierachy of dedicated files : Elementary file (EF) Dedicated file (DF) This part of ISO/IEC 7816 supports the following two categories of files : 5.1.1 File organization \u00a0 5.1.1 File organization 5.1.2 File referencing methods 5.1.3 Elementary file structures 5.1.4 Data referencing methods 5.1.4.1 Record referencing 5.1.4.2 Data unit referencing 5.1.4.3 Data object referencing 5.1.5 File control information This",
    "textAfterTable": "Transparent structure - The EF is seen at the interface as a sequence of data units. Record structure - The EF is seen at the interface as a sequence of individually identifiable records. The following attributes are defined for EFs structured in records : Size of the records: either fixed or variable Organization of the records: either as a sequence (linear structure) or as a ring (cyclic structure). The card shall support at least one of the following four methods for structuring EFs : Transparent EF. Linear EF with record of fixed size. Linear file with records of variable size. Cyclic EF with records of fixed size. Figure 2 shows those for EF structures. F I G U R E 2 Figure 2 - EF structures NOTE - The arrow on the figure references the most recently written record. 5.1.4 Data referencing methods Data may be referenced as records, as data units or as data objects. Data is considered to be stored in a single continuous sequence of records (within an EF of record structure) or of data units (within an EF of transparent structure). Reference to a record or",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}