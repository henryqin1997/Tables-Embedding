{
    "relation": [
        [
            "Tag",
            "?",
            "*",
            "[]"
        ],
        [
            "Description",
            "match any single character",
            "match any number of characters (including none)",
            "match any character in the range indicated within the brackets (example: [a-f], [0-9])."
        ]
    ],
    "pageTitle": "zip - Unix, Linux Command",
    "title": "",
    "url": "http://www.tutorialspoint.com/cgi-bin/printversion.cgi?tutorial=unix_commands&file=zip.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988250.59/warc/CC-MAIN-20150728002308-00336-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 805233097,
    "recordOffset": 805216703,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{937=The zip program puts one or more compressed files into a single zip archive, along with information about the files (name, path, date, time of last modification, protection, and check information to verify file integrity). An entire directory structure can be packed into a zip archive with a single command. Compression ratios of 2:1 to 3:1 are common for text files. zip has one compression method (deflation) and can also store files without compression. zip automatically chooses the better of the two for each file to be compressed.}",
    "TableContextTimeStampAfterTable": "{49006=Copyright (C) 1990-1997 Mark Adler, Richard B. Wales, Jean-loup Gailly, Onno van der Linden, Kai Uwe Rommel, Igor Mandrichenko, John Bush and Paul Kienitz. Permission is granted to any individual or institution to use, copy, or redistribute this software so long as all of the original files are included, that it is not sold for profit, and that this copyright notice is retained.}",
    "textBeforeTable": "When given the name of an existing zip archive, zip will replace identically named entries in the zip archive or add entries for new names. For example, if foo.zip exists and contains foo/file1 and foo/file2, and the directory foo contains the files foo/file1 and foo/file3, then: The zip program puts one or more compressed files into a single zip archive, along with information about the files (name, path, date, time of last modification, protection, and check information to verify file integrity). An entire directory structure can be packed into a zip archive with a single command. Compression ratios of 2:1 to 3:1 are common for text files. zip has one compression method (deflation) and can also store files without compression. zip automatically chooses the better of the two for each file to be compressed. The program is useful for packaging a set of files for distribution; for archiving files; and for saving disk space by temporarily compressing unused files or directories. For a brief help on zip and unzip, run each without specifying any parameters on the command line. A companion program (unzip(1L)), unpacks zip archives. The zip and unzip(1L) programs can work with archives produced by PKZIP, and PKZIP and PKUNZIP can work with archives produced by zip. zip version 2.31 is compatible with PKZIP 2.04. Note that PKUNZIP 1.10 cannot extract files produced by PKZIP 2.04 or zip 2.31. You must use PKUNZIP 2.04g or unzip 5.0p1 (or later",
    "textAfterTable": "find . -name \"*.[ch]\" -print | zip source -@ (note that the pattern must be quoted to keep the shell from expanding it). zip will also accept a single dash (\"-\") as the zip file name, in which case it will write the zip file to standard output, allowing the output to be piped to another program. For example: zip -r - . | dd of=/dev/nrst0 obs=16k would write the zip output directly to a tape with the specified block size for the purpose of backing up the current directory. zip also accepts a single dash (\"-\") as the name of a file to be compressed, in which case it will read the file from standard input, allowing zip to take input from another program. For example: tar cf - . | zip backup - would compress the output of the tar command for the purpose of backing up the current directory. This generally produces better compression than the previous example using the -r option, because zip can take advantage of redundancy between files. The backup can be restored using the command unzip -p backup",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}