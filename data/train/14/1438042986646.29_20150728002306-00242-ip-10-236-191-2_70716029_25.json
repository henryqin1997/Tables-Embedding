{
    "relation": [
        [
            "Constant Name",
            "KANA_FWKATAKANA",
            "KANA_HWKATAKANA",
            "KANA_HIRAGANA",
            "FWKATAKANA_HWKATAKANA",
            "FWKATAKANA_HIRAGANA",
            "HWKATAKANA_FWKATAKANA",
            "HWKATAKANA_HIRAGANA",
            "HIRAGANA_FWKATAKANA",
            "HIRAGANA_HWKATAKANA"
        ],
        [
            "Value",
            "'kana_fwkatakana'",
            "'kana_hwkatakana'",
            "'kana_hiragana'",
            "'fwkatakana_hwkatakana'",
            "'fwkatakana_hiragana'",
            "'hwkatakana_fwkatakana'",
            "'hwkatakana_hiragana'",
            "'hiragana_fwkatakana'",
            "'hiragana_hwkatakana'"
        ],
        [
            "Description",
            "Converts any type of Kana character to a fullwidth Katakana character.",
            "Converts any type of Kana character to a halfwidth Katakana character.",
            "Converts any type of Kana character to a fullwidth Hiragana character.",
            "Converts only fullwidth Katakana characters to halfwidth Katakana characters.",
            "Converts only fullwidth Katakana characters to fullwidth Hiragana characters.",
            "Converts only halfwidth Katakana characters to fullwidth Katakana characters.",
            "Converts only halfwidth Katakana characters to fullwidth Hiragana characters.",
            "Converts only fullwidth Hiragana characters to fullwidth Katakana characters.",
            "Converts only fullwidth Hiragana characters to halfwidth Katakana characters."
        ]
    ],
    "pageTitle": "UTL_I18N",
    "title": "",
    "url": "http://docs.oracle.com/cd/E18283_01/appdev.112/e16760/u_i18n.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986646.29/warc/CC-MAIN-20150728002306-00242-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 70732447,
    "recordOffset": 70716029,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{77578=Note: ISO 2022 character sets use escape sequences instead of shift characters to indicate the encoding method. shift_status cannot hold the encoding method information that is provided by the escape sequences for the next function call. As a result, this function cannot be used to reconstruct ISO 2022 character from raw data in a piecewise way unless each unit of input can be guaranteed to be a closed string. A closed string begins and ends in a 7-bit escape state.}",
    "lastModified": "Sat, 14 Aug 2010 15:00:23 GMT",
    "textBeforeTable": "Table 224-22 TRANSLITERATE Function Constants These options specify Japanese Kana conversions. Constants Specifies the transliteration name string. For a list of valid names, see Table 224-22. name Specifies the data to be converted. Either CHAR or NCHAR data type can be specified. data Description Parameter Table 224-21 TRANSLITERATE Function Parameters Parameters RETURN VARCHAR2 CHARACTER SET data%CHARSET; name IN VARCHAR2) data IN VARCHAR2 CHARACTER SET ANY_CS, UTL_I18N.TRANSLITERATE ( Syntax  This function performs script transliteration. In this release, the TRANSLITERATE function only supports Japanese Kana conversion. TRANSLITERATE Function    This returns a hex value of '616263646566C2AA'. / end; dbms_output.put_line(rawtohex(r)); r:=utl_i18n.string_to_raw(s,'utf8'); s:='abcdef'||chr(170); BEGIN s varchar2(20); r raw(50); DECLARE Examples  If the user specifies an invalid character set, a",
    "textAfterTable": "Usage Notes The function returns the converted string. Examples Given a table japanese_emp, containing an NVARCHAR2 column ename, the following statement can be used to normalize all the kana names in ename to hiragana: UPDATE japanese_emp SET ename = UTL_I18N.TRANSLITERATE (ename, 'kana_hiragana'); Figure shows how this output might look. Figure 224-1 Loading Locale-Specific Data to the Database Description of \"Figure 224-1 Loading Locale-Specific Data to the Database\" The following statement normalizes one kana name to hiragana: DECLARE Name japanese_emp.ename%TYPE; Eno CONSTANT NUMBER(4) := 1; BEGIN SELECT ename INTO name FROM japanese_emp WHERE enumber = eno; name := UTL_I18N.TRANSLITERATE(name, UTL_I18N.KANA_HIRAGANA); UPDATE japanese_emp SET ename = name WHERE enumber = eno; EXCEPTION WHEN UTL_I18N.UNSUPPORTED_TRANSLITERATION THEN DBMS_OUTPUT.PUT_LINE('transliteration not supported'); END; / UNESCAPE_REFERENCE Function This function returns a string from an input string that contains character references. It decodes each character reference to the corresponding character value. See Also: \"ESCAPE_REFERENCE Function\" for more information about escape sequences Syntax UTL_I18N.UNESCAPE_REFERENCE ( str IN VARCHAR2 CHARACTER SET ANY_CS) RETURN VARCHAR2 CHARACTER SET str%CHARSET;",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}