{
    "relation": [
        [
            "Date",
            "Feb 25, 2003",
            "Nov 26, 2008",
            "Jun 18, 2010",
            "Aug 24, 2012"
        ],
        [
            "Code",
            "AS",
            "AS",
            "AS",
            "FPAY"
        ],
        [
            "Event",
            "Assignment",
            "Assignment",
            "Assignment",
            "Fee payment"
        ],
        [
            "Description",
            "Owner name: SUSQUEHANNA INTERNATIONAL GROUP, LLP, PENNSYLVANIA Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ARNOLD, JOHN E.;GREENBERG, JOEL K.;MACOMBER, EDWARD W.;REEL/FRAME:013839/0373;SIGNING DATES FROM 20030213 TO 20030219",
            "Owner name: MERRILL LYNCH PROFESSIONAL CLEARING CORP., NEW YOR Free format text: SECURITY AGREEMENT;ASSIGNOR:SUSQUEHANNA INTERNATIONAL GROUP LLP;REEL/FRAME:021899/0948 Effective date: 20081124",
            "Owner name: SUSQUEHANNA INTERNATIONAL GROUP, LLP,PENNSYLVANIA Free format text: RELEASE BY SECURED PARTY;ASSIGNOR:MERRILL LYNCH PROFESSIONAL CLEARING CORP.;REEL/FRAME:024562/0127 Effective date: 20100408",
            "Year of fee payment: 4"
        ]
    ],
    "pageTitle": "Patent US7496628 - Electronic message filter - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US7496628?dq=6721967",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988860.88/warc/CC-MAIN-20150728002308-00086-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 474010223,
    "recordOffset": 473958020,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6268=FIG. 3 illustrates the preferred embodiment of system 1000 which implements a proxy service style of processing. The preferred implementation of system 1000 is deployed as a proxy service 400 that is inserted between the normal outbound message queue 140 on the mail server (e.g., SMTP/POP, IMAP, Microsoft Exchange\u2122 environments) and the MTA. For example, in an SMTP/POP environment, the proxy service 400 would replace the normal default port handler for SMTP and process each message with the system 1000 to decide whether to actually pass the message on for delivery to the intended recipients. The proxy service 400 may be implemented on a server.}",
    "TableContextTimeStampAfterTable": "{110891=The risk assessment modules 630, 640, 650, 660, 665 perform the primary scoring of risk for each unsent message. To meet the expected throughput demands, the architecture of the message analyzer 600 is decomposed into three subcomponents: a risk assessment distributor 620; risk assessment module(s) 630, 640, 650, 660, 665; and a risk assessment integrator 670. It is expected that deep analysis by the risk assessment modules 630, 640, 650, 660, 665 will consume significant time. Therefore, the work associated with the message analyzer 600 is partitioned such that the work may be divided into multiple operating systems processes. By having functionality encoded in different processes, the system 1000 will have the ability to use more computing resources and it is expected that it will have the ability to meet the high throughput and scalability demands that provides value to customers., 60498=The message transformer 520 prepares each message for processing by the message analyzer 600. The preparation consists of transforming the raw, native (MTA-specific) message format to the common MTA-neutral message representation used by the message analyzer 600. Examples of native message formats are the Internet standard SMTP format and the Microsoft Exchange\u2122 format. The common message representation used by system 1000 is based on industry standard XML (Extensible Markup Language\u2014see www.w3.org.)., 235596=First there is a configuration data store 1715 which persists information about users, features or options selected etc. This data store will function primarily as a read operation with a small number of write operations occurring. The configuration data store is expected to also contain statistics related to suspect senders including the number of messages from a sender that were blocked, etc., 268063=The system 1000 is configured so that a business may define and enable the set of actions suitable for their specific business needs. To achieve this, the system 1000 provides configuration subsystems 1100, 1710, 1715, 1720 with a series of user interfaces pages 1500, 1600 that will enable the appropriately privileged user to set those options., 81756=Not every enterprise will want to analyze messages according to the same criteria. Within an enterprise, circumstances may require that messages sent from one type of sender (or even a specific sender) is treated differently. The system 1000 accommodates this by allowing configuration settings and rules to apply different levels of scrutiny to messages sent by different users or different classes of users. Also, particular domain-specific risk assessment modules 640, 650, 660, 665 may be turned on and off as business policy warrants., 273501=The configuration data store 1715 will contain a series of data elements/data tables related to: users acting as senders and recipients; companies; message topics; features which have been enabled/disabled; or statistics. This information is used depending upon which configuration option(s) is/are turned on., 113280=Architecturally, the system 1000 may be designed or may function by assigning an operating system process to each risk assessment module 630, 640, 650, 660, 665 and to both the risk assessment distributor 620 and risk assessment integrator 670. However, there is overhead associated with inter-process communications and with having multiple processes. To minimize the overhead, one operating system process will share the risk assessment distributor 620, the domain-independent risk assessment module 630, and the risk assessment integrator 670., 40659=For more loosely coupled email environments that do not use a centralized, enterprise-wide email service (e.g., an enterprise where each employee uses a personal/home SMTP/POP mail account and the SMTP server is not controlled by the enterprise), the system 1000 would be deployed as add-ins to the email client (e.g., a COM add-in to the Microsoft Outlook\u2122 email client.) In this scenario, the proxy service 400 would be installed such that the proxy service 400 processed the message as it was being placed in the sender's outbox rather than when it is uploaded to the MTA. However, this deployment method may be less desirable because it requires installation on each email client and a cumbersome updating process as the rules guiding the processing of the message change., 270040=The domain-independent risk assessment module 630 may gain access to this same set of data through the configuration API 1100 to ensure that the appropriate communications management took place., 272838=High level Application Programming Interfaces (APIs) 1100, 1200, 1300 will be provided to give any of the subsystems access to the system 1000 data. By encapsulating the access to the data behind an API, the physical data schema may change without adversely affecting the larger system. This design pattern allows the location of databases on one or more physical computers while other components of the system 1000 reside on different computers or in an embedded device/appliance. Data access interface layers are used for access to the audit DB 895 and to the knowledge base 720., 48224=Running the entire system 1000 on the client machine would require a complete installation of the message accessor 500 and message analyzer 600 on the client machine. In practice, this is possible but may be cumbersome to install and keep up-to-date. In some cases, however, it may be desired since it would allow for accurate analysis on a machine that is completely disconnected from a network e.g., local area network (LAN) or virtual private network (VPN)., 262768=System 1000 may also be used to filter telephony communications. Examples of the system 1000 for telephony cover a wide range of possibilities. Some of which are more immediately attainable and some of which require advances in related technologies. For example, a use of telephony systems in the short-term would be to build an MTA-neutral message representation of information that is already available in common telephony applications: phone number placing the call, destination phone call, etc. Simple analysis and filtering may be performed to allow or disallow calls based on who's calling whom and the ramifications of what's known about the caller/callee using rules similar to those described earlier in this disclosure. More advanced applications would be possible in terms of telephone voicemail processing and post-processing of phone calls. This would become possible once technologies and regulations allow the recording of phone calls and transforming the conversation from voice into some kind of MTA-neutral text representation becomes sufficiently accurate and efficient., 236329=Lastly, the knowledge data store, or knowledge bases 720 will contain domain specific information for the knowledge bases in use in each content area covered by the system 1000 (e.g., collusion, harassment, intellectual property protection, explicit sexual content, antitrust etc.). Programmatic access to the data stores will be abstracted behind a data access interface, which will request the data from servlets 1500 embedded in a web server 1700., 272228=The user interface of the system 1000 may perform different actions including: enabling or disabling certain features such as auditing or the domain-independent risk assessment module; generating reports of suspect message(s); or updating the knowledge base 720 with new data by using the automatic subscription services provided by the knowledge base content vendor. It may also perform the compliance manager functions: including the ability to review/manually process suspect messages; or other screens as necessary by user interfaces 1500, 1600., 62111=In the following example, the system 1000 has received an SMTP message being sent from john.smith@tradingcompany.com to jane jones@clientcompany.com. John Smith is a financial planner for Trading Company who is letting Jane Jones (one of his clients) know that it is time to re-balance her portfolio and asking if she wants to sell some of her growth stocks to invest in some of her more conservative mutual funds. John has \u2018sent\u2019 the following message by connecting his email client's unsent message queue to the corporate SMTP process on smtp.tradingcompany.com. The salient parts of the unsent SMTP electronic message would appear as shown in Table 1 where the period (\u2018.\u2019) at the end of the message indicates that the end of the message body has been reached., 240880=A set of default algorithms looks across the content areas and computes the overall score. Values, variables, and ratios used in these scoring algorithms 637 are customizable through the configuration user interface 1400, 1500, 1600., 55991=After determining what action should be taken, the action manager 800 would invoke the appropriate action(s). Note that, in the normal case, of allowing a message to pass through unfettered, the action manager 800 takes on the role of passing the message to the underlying mail system's MTA such that the message is delivered as intended using the existing email system mechanisms. The system 1000, therefore, does not require replacing an existing email system to provide the benefits of the system., 116442=When a message first arrives for processing by the message analyzer 600, the system 1000 does not know whether the topic area defined in a particular risk assessment module 700 applies. Therefore, the general architecture of a risk assessment module 700 is designed as a two-pass analysis system in order to improve the overall performance and throughput of the risk assessment module 700. During the first pass, a broad analysis processor 712 looks broadly at the message contents to determine whether configuration information or domain-specific information applies to the message contents. In the second pass, a deep analysis knowledge processor 716 performs an in-depth analysis of the message contents., 150314=When a domain-specific risk assessment module 640, 650, 660, 665 is built, the vendor supplying the module must also provide a content threshold. The intention is to build system 1000 such that it may an open system, where multiple vendors may provide their own risk assessment modules that would plug into the invention architecture., 120618=In particular, the domain-independent risk assessment module 630 uses configuration information 1715 to determine the set of configuration options/features that have been enabled by a business. Computations based on the configured options will associate a risk score with the message. Analysis is performed in a series of steps. First it is determined whether the system is configured to block messages from the sender to anyone. Next it is determined whether the sender or any of the intended recipients was associated with earlier suspect messages. If the answer to any of these inquires is no, then the message content is given a score of zero. If the answer to either inquiry is yes, the MTA-neutral message representation is augmented with the new information, and the document is given a score., 266709=The detailed description of the present invention is directed to the handling and analyzing of outbound electronic messages. However, the present invention is also amenable to providing the same kind of processing on inbound messages (e.g., email, IM.) In this case, the message accessor 500 would run on messages that are received into an inbound electronic message store (for example, a POP protocol typically found on port 110 of a Unix/Linux system or an IMAP message store.) In an instant messaging (IM) sense, the system 1000 may act as both an inbound and outbound filter on a user's IM traffic because his/her connection through a system 1000 may run the message accessor 500 on both inbound and outbound messages. For example, if Company XYZ has installed a system 1000 on their corporate IM infrastructure and the user initiates a \u2018chat\u2019 with a user outside the corporate firewall, then (a) the \u2018outbound\u2019 system 1000 could receive messages typed and sent by the internal user and process them before passing them along to the \u2018real\u2019 IM message server to be sent to the outside user, and (b) messages received from the outside user, could be trapped and processed by the \u2018inbound\u2019 system 1000 before being forwarded along to the internal user's IM client., 256695=Once the action determination module 810 has determined a set of actions, the action orchestrator 820 is responsible for performing each action in the set. The mapping is accomplished by using the configuration component (implemented in 1710, 1715) to connect each possible action to an underlying application or tool that invokes the action. This is similar to the application mapper provided in Windows for mapping which applications are used to launch which file types., 47117=This mode would implement a message accessor 500 inside an authoring application (e.g., as a COM add-in to Microsoft Word\u2122 or Microsoft Outlook\u2122 or plug-in to other authoring tools such as Adobe In Design.) In this case, the implementation of the message accessor 500 would capture the current contents of the message in the MTA-neutral format as a snapshot at determined intervals of the authoring process\u2014such as every 3 minutes. The add-in/plug-in would include a mechanism to either (a) run the rest of the system 1000 on the client system where the authoring is occurring or (b) pass the MTA-neutral representation off to the system 1000 running on another accessible machine (on the local network, VPN, etc.) for processing. When processing is complete, the results are passed back to a calling add-in/plug-in in the same format as that is passed to the action manager 800. However, instead of actually taking those actions, the add-in/plug-in may report to the user the action that would likely be taken if those contents were sent., 121465=The example, in Table 4, illustrates a rule that may be implemented in a particular instance of a domain-independent risk assessment module 630. In this example, the business situation is that all of the company's financial planners are having their messages logged in response to an investigation about possible trading irregularities. Therefore, the rule states that any employee with a job code containing \u201cFP\u201d (the financial planning job code category) should have messages they send logged, with deep logging, to comply with the needs of the investigation. The sample rules in the example are shown in XML Stylesheet Transformation Language (XSLT.) These serve to demonstrate XSLT (and the XPath operations it includes) as one possible rule processing mechanism that the system 1000 can support., 271005=Domain experts in the knowledge base subscription service department 1840 will be responsible for staying current with changes in their areas of expertise (domains). These experts will update a central knowledge base with the evolving set of domain expertise. A customer's installation may then automatically update its installed knowledge bases such that the knowledge bases stay current with changes in laws and the supporting data., 269301=Consider the following example of programmatic access: the system 1000 may, in addition to filtering messages based on content, block messages between two particular parties or on a given topic. The system 1000 may determine that two parties are having a suspect communication. A compliance manager may then decide to block communications between these two parties. In this scenario, the compliance manager would use his/her web browser 1400 to access a specially designed input screen which would enable them to enter information about the two parties, and perhaps a topic of conversation it wants blocked. The data would then be entered into the configuration data store 1715., 81048=The message analyzer 600 is specifically designed to match the requirements needed for a successful communications management product. The system 1000 must have the ability to process messages fast enough such that \u2018good\u2019 messages are delivered in a timely manner and \u2018bad\u2019 messages are handled quickly enough that the enterprise gets the benefits of the communications management without any perception that communications are sluggish. The design accommodates this by providing a multi-level risk assessment process where not every message needs to be subjected to multi-step analysis in all risk domain modules 640, 650, 660, 665., 86568=Furthermore, the user/role knowledge base 612 may include information from databases and enterprise data sources that may pertain to the relationship between the message sender and recipients. For example, an enterprise's telephone billing/tracking/usage system may be queried to determine the duration and extent of recent telephone communication in a defined time period. Similarly, any auditing of email or instant messaging (whether performed inside the system 1000 or externally) may be queried to determine the duration and extent of email and/or instant messaging communications between the parties in a defined time period (e.g., the previous 30 days). The purpose for gathering this information and augmenting it in the current message's representation is that the upcoming risk assessment may judge/score the message contents differently depending on whether or not a pattern of communications has occurred or is emerging., 258423=A refer message to compliance action 826, 850 may be associated with a program that places the message in an \u2018action queue\u2019 (implemented in 827) that the enterprise's compliance group monitors. This program would know how to convert the MTA-neutral message representation into an understandable UI (implemented in 1400, 1500, 1600) that would show the reason(s) for referring the message to compliance and would allow the person reviewing the blocked message a simple user interface for blocking the message. The compliance group may return the message to the sender with reasons for blocking or rejecting the message and, optionally, logging the action that was taken.}",
    "textBeforeTable": "Patent Citations The present invention may be embodied in other specific forms without departing from the spirit or essential attributes of the invention. Accordingly, reference should be made to the appended claims, rather than the foregoing specification, as indicated the scope of the invention. The configuration data store 1715 will contain a series of data elements/data tables related to: users acting as senders and recipients; companies; message topics; features which have been enabled/disabled; or statistics. This information is used depending upon which configuration option(s) is/are turned on. High level Application Programming Interfaces (APIs) 1100, 1200, 1300 will be provided to give any of the subsystems access to the system 1000 data. By encapsulating the access to the data behind an API, the physical data schema may change without adversely affecting the larger system. This design pattern allows the location of databases on one or more physical computers while other components of the system 1000 reside on different computers or in an embedded device/appliance. Data access interface layers are used for access to the audit DB 895 and to the knowledge base 720. The user interface of the system 1000 may perform different actions including: enabling or disabling certain features such as auditing or the domain-independent risk assessment module; generating reports of suspect message(s); or updating the knowledge base 720 with new data by using the automatic subscription services provided by the knowledge base content",
    "textAfterTable": "Networks Associates Technology, Inc. Intelligent SPAM detection system using an updateable neural analysis engine US7136196 * Mar 25, 2002 Nov 14, 2006 Minolta Co., Ltd. E-mail non-arrival information notification method and data communication apparatus US7162738 * Sep 29, 2001 Jan 9, 2007 Tumbleweed Communications Corp. E-mail firewall with stored key encryption/decryption US20010027474 * Dec 26, 2000 Oct 4, 2001 Meny Nachman Method for clientless real time messaging between internet users, receipt of pushed content and transacting of secure e-commerce on the same web page US20020169954 * Jun 22, 2001 Nov 14, 2002 Bandini Jean-Christophe Denis Method and system for e-mail message transmission US20030023736 * Jul 9, 2002 Jan 30, 2003 Kurt Abkemeier Method and system for filtering messages US20030195933 * Apr 10, 2002 Oct 16, 2003 Curren Thomas Charles Web filter screen US20050188044 *",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}