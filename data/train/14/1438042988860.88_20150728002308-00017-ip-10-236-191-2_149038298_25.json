{
    "relation": [
        [
            "Property",
            "extend",
            "extendfrac",
            "extendrect",
            "spacing",
            "ticks",
            "format",
            "drawedges"
        ],
        [
            "Description",
            "[ \u2018neither\u2019 | \u2018both\u2019 | \u2018min\u2019 | \u2018max\u2019 ] If not \u2018neither\u2019, make pointed end(s) for out-of- range values. These are set for a given colormap using the colormap set_under and set_over methods.",
            "[ None | \u2018auto\u2019 | length | lengths ] If set to None, both the minimum and maximum triangular colorbar extensions with have a length of 5% of the interior colorbar length (this is the default setting). If set to \u2018auto\u2019, makes the triangular colorbar extensions the same lengths as the interior boxes (when spacing is set to \u2018uniform\u2019) or the same lengths as the respective adjacent interior boxes (when spacing is set to \u2018proportional\u2019). If a scalar, indicates the length of both the minimum and maximum triangular colorbar extensions as a fraction of the interior colorbar length. A two-element sequence of fractions may also be given, indicating the lengths of the minimum and maximum colorbar extensions respectively as a fraction of the interior colorbar length.",
            "[ False | True ] If False the minimum and maximum colorbar extensions will be triangular (the default). If True the extensions will be rectangular.",
            "[ \u2018uniform\u2019 | \u2018proportional\u2019 ] Uniform spacing gives each discrete color the same space; proportional makes the space proportional to the data interval.",
            "[ None | list of ticks | Locator object ] If None, ticks are determined automatically from the input.",
            "[ None | format string | Formatter object ] If None, the ScalarFormatter is used. If a format string is given, e.g., \u2018%.3f\u2019, that is used. An alternative Formatter object may be given instead.",
            "[ False | True ] If true, draw lines at color boundaries."
        ]
    ],
    "pageTitle": "pyplot \u2014 Matplotlib 1.4.3 documentation",
    "title": "",
    "url": "http://matplotlib.org/api/pyplot_api.html?highlight=subplots_adjust",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988860.88/warc/CC-MAIN-20150728002308-00017-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 149159535,
    "recordOffset": 149038298,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{112310=draw a gray rectangle from y = 0.25-0.75 that spans the horizontal extent of the axes:, 852226=x and/or y can be a sequence of dates represented as float days since 0001-01-01 UTC., 245930=Specifies whether to bootstrap the confidence intervals around the median for notched boxplots. If bootstrap==None, no bootstrapping is performed, and notches are calculated using a Gaussian-based asymptotic approximation (see McGill, R., Tukey, J.W., and Larsen, W.A., 1978, and Kendall and Stuart, 1967). Otherwise, bootstrap specifies the number of times to bootstrap the median to determine it\u2019s 95% confidence intervals. Values between 1000 and 10000 are recommended.}",
    "lastModified": "Fri, 24 Jul 2015 16:17:54 GMT",
    "textBeforeTable": "kwargs control the Line2D properties: The line created by this function Line2D instance line: a spectrum The frequencies corresponding to the elements in freqs: 1-D array The values for the angle spectrum in radians (real valued) spectrum: 1-D array Returns the tuple (spectrum, freqs, line): x (defaults to 0), which offsets the x extents of the plot to reflect the frequency range used when a signal is acquired and then filtered and downsampled to baseband. The center frequency of Fc: integer pad_to equal to the length of the input signal (i.e. no padding). n parameter in the call to fft(). The default is None, which sets The number of points to which the data segment is padded when performing the FFT. While not increasing the actual resolution of the spectrum (the minimum distance between resolvable peaks), this can give more points in the plot, allowing for more detail. This corresponds to the pad_to: integer Specifies which sides of the spectrum to return. Default gives the default behavior, which returns one-sided for real data and both for complex data. \u2018onesided\u2019 forces the return of a one-sided",
    "textAfterTable": "clip_path [ (Path, Transform) | Patch | None ] color or c any matplotlib color contains a callable function dash_capstyle [\u2018butt\u2019 | \u2018round\u2019 | \u2018projecting\u2019] dash_joinstyle [\u2018miter\u2019 | \u2018round\u2019 | \u2018bevel\u2019] dashes sequence of on/off ink in points drawstyle [\u2018default\u2019 | \u2018steps\u2019 | \u2018steps-pre\u2019 | \u2018steps-mid\u2019 | \u2018steps-post\u2019] figure a matplotlib.figure.Figure instance fillstyle [\u2018full\u2019 | \u2018left\u2019 | \u2018right\u2019 | \u2018bottom\u2019 | \u2018top\u2019 | \u2018none\u2019] gid an id string label string",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}