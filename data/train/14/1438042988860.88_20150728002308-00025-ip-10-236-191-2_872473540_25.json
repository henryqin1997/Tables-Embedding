{
    "relation": [
        [
            "Column",
            "Param",
            "tblOwner",
            "tblName",
            "Value"
        ],
        [
            "Type",
            "VARCHAR2(50)",
            "VARCHAR2(30)",
            "VARCHAR2(30)",
            "VARCHAR2(200)"
        ],
        [
            "Value",
            "Parameter name: AgentTimeout AgentFailoverTimeout AutoRefreshLogTblSpaceUsagePCT DeadDbRecovery TblSpaceFullRecovery",
            "Owner of the cached Oracle database table.",
            "Name of the cached Oracle database table. Using a synonym to specify a table name is not supported.",
            "Specifies the value set for Param. When Param is AgentTimeout, it specifies the number of seconds before a database is declared terminated if the cache agent cannot connect to the Oracle database server. When Param is AutoRefreshLogTblSpaceUsagePCT, the value can be 0 to 100. When Param is DeadDbRecovery, the value can be Normal or Manual. When Param is TblSpaceFullRecovery, the value can be Reload or None."
        ]
    ],
    "pageTitle": "Built-In Procedures",
    "title": "",
    "url": "https://docs.oracle.com/database/121/TTREF/proced.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988860.88/warc/CC-MAIN-20150728002308-00025-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 872574347,
    "recordOffset": 872473540,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{8292=For tables with aging ON, the aging cycle is reset to the time when ttAgingScheduleNow was called. For example, if you call this procedure at 12:00 p.m. and the aging cycle is 15 minutes, aging occurs immediately and again at 12:15, 12:30, 12:45, and so on., 98998=number - Denotes when to commit after a certain number of operations. For example, if the user specifies 1024, then autorefresh commits after every 1024 operations in the transaction. If you specify a negative number, an error is returned., 792862=1484 statements executed in a time frame that was greater than .00001562 seconds and less than or equal to .000125 seconds., 103137=To enable the transaction limit for incremental autorefresh read-only cache groups to commit after every 2000 operations, provide 2000 as the value as follows:, 299806=The results indicate that at approximately 1:48 pm on September 23, 2013 the database was optimized for concurrent write operations. The mode was not in transition., 792419=The following example of the ttSQLExecutionTimeHistogram built-in procedure shows that a total of 1919 statements executed. The total time for all 1919 statements to execute was 1.090751 seconds. This example shows that SQL statements ran in the following time frames:, 101688=number - Denotes when to commit after a certain number of operations. For example, if the user specifies 1024, then autorefresh commits after every 1024 operations in the transaction. If you specify a negative number, an error is returned., 89168='ON': Select at most 1000 rows at a time from the autorefresh change log table to apply for every autorefresh cycle., 93074=The following example set a select limit to 2000 rows for incremental autorefresh cache groups with an interval value of 7 seconds., 89340=number: Select at most a user specified number of rows from the autorefresh change log table during the autorefresh cycle. If the user specified a limit size of 2000 rows, then autorefresh selects at most 2000 rows at a time from the autorefresh change log table. If you specify a negative number, an error is returned., 792745=278 statements executed in a time frame that was less than or equal to .00001562 seconds.}",
    "lastModified": "Thu, 02 Jul 2015 09:42:52 GMT",
    "textBeforeTable": "ttCacheConfig returns no results when an application uses it to set parameter values. When it is used to return parameter settings, ttCacheConfig returns the following results. Result set XML - An XML file that contains the AWT error report and the associated DTD file. ASCII - A text file that contains the AWT error report. (Default) Or Specifies the value to be set by AwtErrorXmlOutput: When Param is TblSpaceFullRecovery, the value can be Reload or None. Reload specifies that rows are deleted from the change log table and a full automatic refresh is performed. None specifies that an Oracle database error is returned when the cached Oracle database table is updated. The default is None. When Param is DeadDbRecovery, the value can be Normal or Manual. Normal specifies a full automatic refresh. Manual specifies that REFRESH CACHE GROUP statement must be issued. The default is Normal. When Param is AutoRefreshLogTblSpaceUsagePCT, the value can be 0 to 100. The default is 0, which means no warning is returned regardless of the tablespace usage. When Param is AutoRefreshLogDeFragmentAction, the value can be Manual, CompactOnly or CompactandReclaim",
    "textAfterTable": "Examples To set the cache agent timeout to 600 seconds (10 minutes), enter:  CALL ttCacheConfig('AgentTimeout',,,'600'); To determine the current cache agent timeout setting, enter:  CALL ttCacheConfig('AgentTimeout'); < AgentTimeout, <NULL>, <NULL>, 600 > 1 row found. To set the recovery method to Manual for cache groups whose automatic refresh status is dead, enter:  CALL ttCacheconfig('DeadDbRecovery',,,'Manual'); Configure the TimesTen Cache to prevent an automatic full refresh and receive an Oracle database error when there is an update on a cached Oracle database table while the cache administration user's tablespace is full. The Oracle database table is terry.customer.  CALL ttCacheConfig('TblSpaceFullRecovery','terry','customer','None'); To determine the current setting for TblSpaceFullRecovery on the terry.customer cached Oracle database table, enter:  CALL ttCacheConfig('TblSpaceFullRecovery','terry','customer'); < TblSpaceFullRecovery, TERRY, CUSTOMER, none > 1 row found. To configure a warning to be returned when the cache administration user's tablespace is 85 percent full and an update operation occurs on the cached Oracle database table, enter:  CALL ttCacheConfig('AutoRefreshLogTblSpaceUsagePCT',,,'85'); When working in an Oracle RAC environment, the following shows how to retrieve the value of the failover timeout:  Command> call ttCacheConfig('AgentFailoverTimeout'); < AgentFailoverTimeout, <NULL>, <NULL>, 4 > 1 row found. . The following sets the failover timeout to 5 minutes:  Command> call ttCacheConfig('AgentFailoverTimeout',,,5); < AgentFailoverTimeout, <NULL>, <NULL>, 5 > 1 row found.",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}