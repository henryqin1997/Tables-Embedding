{
    "relation": [
        [
            "Date",
            "Dec 20, 2007",
            "Nov 30, 2009",
            "May 1, 2012"
        ],
        [
            "Code",
            "AS",
            "AS",
            "CC"
        ],
        [
            "Event",
            "Assignment",
            "Assignment",
            "Certificate of correction"
        ],
        [
            "Description",
            "Owner name: ATI INTERNATIONAL SRL, BARBADOS Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:YATES, JR., JOHN S.;STORCH, MATTHEW F.;NIJHAWAN, SANDEEP;AND OTHERS;SIGNING DATES FROM 20000830 TO 20040809;REEL/FRAME:020300/0278",
            "Owner name: ATI TECHNOLOGIES ULC,CANADA Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ATI INTERNATIONAL SRL;REEL/FRAME:023574/0593 Effective date: 20091118",
            ""
        ]
    ],
    "pageTitle": "Patent US8127121 - Apparatus for executing programs for a first computer architechture on a ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US8127121?dq=5,664,133",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989790.89/warc/CC-MAIN-20150728002309-00301-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 475307403,
    "recordOffset": 475121115,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6541=Another use of the \u201creuse event code\u201d feature of column 414 is illustrated by considering the case of a complex instruction, an instruction that is emulated in software, that does not affect any control flow, for instance a compare string instruction. When such a complex instruction is encountered, converter 136, non-event circuit 578, and MUX 580 of FIG. 5 b in section V.F, infra, will have made a preliminary decode of the instruction, and supplied a preliminary event code (582, 592 of FIG. 5 b): either the default event code 1.1110 406 or a new page event code 1.1111 408, depending on whether the instruction straddles a page break. (In some embodiments, converter 136 may in addition supply the event codes for far control transfers, far CALL, code 0.1000; far JMP, code 0.1001; far RET, code 0.0110; IRET, code 0.0111). This preliminary event code 582, 592 is latched into TAXi_State.Event_Code_Latch 486, 487 as part of trapping into X86 emulator 316. When X86 emulator 316 completes the complex instruction and RFE's back to converter 136, the RFE will have as its event code immediate field (588 of FIG. 5 b) the simple X86 instruction-complete event code 0.0001. Because event code 0.0001 has \u201creuse event code\u201d property 414, the event code from the RFE immediate field will simply be discarded, leaving intact the preliminary event code 582, 592 in TAXi_State.Event_Code_Latch 486, 487. On return from the exception, an event with the preliminary event code is then added to the profile packet.}",
    "TableContextTimeStampAfterTable": "{319210=In this alternative embodiment, the \u201c01\u201d case 370 of X86-to-Tapestry transition handler 320 may also save the X86 thread's privilege mode, and reset the privilege level to user, even if the X86 caller was running in privilege ring zero. The privilege mode is changed to protect system integrity, to disallow a Tapestry Trojan horse from subverting X86 security checks., 48099=This application is a continuation-in-part of U.S. application Ser. No. 09/239,194, filed Jan. 28, 1999 now U.S. Pat. No. 7,275,246 which is incorporated herein by reference in its entirety. This application is a continuation-in-part of U.S. application Ser. No. 09/672,424, filed Sep. 28, 2000 now abandoned which is a continuation of U.S. application Ser. No. 09/626,325, filed Jul. 26, 2000, now U.S. Pat. No. 7,065,0633 which is a continuation-in-part of PCT/US00/02239, filed Jan. 28, 2000 which claims benefit of provisional application 60/176,610 filed Jan. 18, 2000, which are incorporated herein by reference in their entirety., 368750=Events of event code 0.0110, 0.0111, 0.1000, 0.1001 are control-transfer instructions that are conveniently implemented in emulation software instead of hardware converter 134, 136 such as far CALL, far jump, far return, and X86 interrupt return. The event code taxonomy for these far transfers does not differentiate forward and backward jumps, in contrast to the taxonomy of IP-relative near jumps (event codes 1.0000-1.0101)., 370662=Event codes 0.1100, 0.1101, 0.1110, and 0.1111 provide two pairs of RFE event codes associated with delivery of X86 exceptions from X86 emulator 316. This allows software to group exceptions into different categories for TAXi usage. By classifying interrupts into two groups, and further into probeable and non-probeable events (see section VI, infra), these four event codes provide a control framework for software to build upon. This classification exploits the fact that the X86 funnels all exceptions, external interrupts, and traps through a single unified \u201cinterrupt\u201d mechanism., 381885=Bits <50:43>, special_opcode 434, are filled from TAXi_Control.special_opcode 474 whenever a Context_At_Point entry is generated. These bits are especially relevant to event code 0.1010., 362500=Event code 1.1110 406 indicates a simple sequential instruction with nothing of note. Event code 1.1111 408 denotes an instruction that either ends in the very last byte of a physical page or straddles a page boundary in virtual address space (and is likely separated into two distant portions in the physical address space)., 362418=Event code 1.1100 is discussed in section VIII.B., 423608=If the instruction is not a control transfer instruction, the two special \u201cnon-event\u201d event codes 1.1110 406 and 1.1111 408 (sequential flow or page straddle) are manufactured by circuit 578, using the \u201cstraddles a page boundary\u201d signal 563 to set the low-order bit., 785525=An appendix of 28 frames recorded on microfiche, which can be found in the file of U.S. application Ser. No. 09/239,194, filed Jan. 28, 1999, is incorporated herein by reference.}",
    "textBeforeTable": "Patent Citations A portion of the disclosure of this patent document contains material that is protected by copyright. The copyright owner has no objection to the facsimile reproduction of the patent document or the patent disclosure as it appears in the Patent and Trademark Office file or records, but otherwise reserves all copyright rights whatsoever. An appendix of 28 frames recorded on microfiche, which can be found in the file of U.S. application Ser. No. 09/239,194, filed Jan. 28, 1999, is incorporated herein by reference. REFERENCE TO MICROFICHE APPENDIX , McGraw-Hill (1980). ESIGN D ICROPROCESSOR M LICE -S IT , B RICK B AMES J ICK AND M OHN , Hemisphere Publ., McGraw Hill (1981); J OMPUTERS C IPELINED P RCHITECTURE OF A HE , T OGGE M. K ETER , Digital Equipment Corp. (1987); P ANUAL M REFERENCE RCHITECTURE ., VAX A EONARD, ED L IMOTHY , Morgan Kaufman Publ., San Mateo, Calif. (1990); T PPROACH A UANTITATIVE : A Q RCHITECTURE A OMPUTER , C ENNESSEY L. H OHN J ATTERSON AND A. P AVID 2d ed., Digital Press, Boston (1995); D ANUAL, M EFERENCE R RCHITECTURE AXP A LPHA A HE , T ITEK T. W ICHARD",
    "textAfterTable": "Oct 25, 1983 Burroughs Corporation Array processor architecture US4455602 May 22, 1981 Jun 19, 1984 Data General Corporation Digital data processing system having an I/O means using unique address providing and access priority control techniques US4514803 Apr 26, 1982 Apr 30, 1985 International Business Machines Corporation Methods for partitioning mainframe instruction sets to implement microprocessor based emulation thereof US4575797 May 22, 1981 Mar 11, 1986 Data General Corporation Digital data processing system incorporating object-based addressing and capable of executing instructions belonging to several instruction sets US4636940 Dec 20, 1985 Jan 13, 1987 Hewlett-Packard Company Logic analyzer using source program or other user defined symbols in the trace specification and the trace listing US4722050 Mar 27, 1986 Jan 26, 1988 Hewlett-Packard Company Method and apparatus for facilitating instruction processing of a digital computer US4750112 Oct 23, 1986 Jun 7, 1988 Prime Computer, Inc. Data processing apparatus and method employing instruction pipelining US4779187 Apr 10, 1985 Oct 18, 1988",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}