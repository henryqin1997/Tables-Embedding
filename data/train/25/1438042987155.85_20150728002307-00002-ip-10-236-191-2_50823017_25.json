{
    "relation": [
        [
            "Property Name",
            "flatten",
            "paths"
        ],
        [
            "Default",
            "true",
            "[]"
        ],
        [
            "Description",
            "Whether to collect the primitives in a subtree into a flat output list.",
            "Zero or more JSON path expressions."
        ]
    ],
    "pageTitle": "CDK Morphlines Parent -",
    "title": "",
    "url": "http://cloudera.github.io/cdk/docs/0.4.1/cdk-morphlines/morphlinesReferenceGuide.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987155.85/warc/CC-MAIN-20150728002307-00002-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 50848031,
    "recordOffset": 50823017,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{7101=For example, this can be used to parse log4j with stack traces. Also see https://gist.github.com/smougenot/3182192 and http://logstash.net/docs/1.1.13/filters/multiline., 20225=The decodeBase64 command converts a Base64 encoded String to a byte[] per Section 6.8. \"Base64 Content-Transfer-Encoding\" of RFC 2045. The command converts each value in the given field and replaces it with the decoded value.}",
    "lastModified": "Tue, 01 Jul 2014 13:21:37 GMT",
    "textBeforeTable": "The command provides the following configuration options: The readClob command converts bytes to strings. It emits one record for the entire input stream of the first attachment, interpreting the stream as a Character Large Object (CLOB). The line is put as a string into the message output field. readClob This module contains standard I/O commands for tasks such as acting on single-line records, multi-line records, CSV files, and for converting bytes to strings. cdk-morphlines-core-stdio readLine Indeed, none of the standard commands are special or intrinsically known per se. All commands are implemented like this, even including standard commands such as pipe, if, and tryRules. This means your custom commands can even replace any standard commands, if desired. toString Note that perhaps the most important property of the Morphlines framework is how easy it is to add new transformations and I/O commands and integrate existing functionality and third party systems. If none of the existing commands match your use case, you can easily write your own command and plug it in. Simply implement the Java interface Command or subclass AbstractCommand and add the resulting Java class to the classpath. No registration or other administrative action is required. Here are links to two sample command implementations: Cloudera Morphlines provides a set of frequently-used high-level transformation and I/O commands that can be combined in application specific ways.",
    "textAfterTable": "Example usage: readClob { charset : UTF-8 } readCSV The readCSV command extracts zero or more records from the input stream of the first attachment of the record, representing a Comma Separated Values (CSV) file. For the format see the wikipedia entry for Comma-separated values, the article on the Creativyst software website on The Comma Separated Value (CSV) File Format and the Ricebridge CSV Manager Demonstration. Some CSV files contain a header line that contains embedded column names. This command does not support reading and using such embedded column names as output field names because this is considered unreliable for production systems. If the first line of the CSV file is a header line, you must set the ignoreFirstLine option to true. You must explicitly define the columns configuration parameter in order to name the output fields. Note: A quoted field can span multiple lines in the input stream. The command provides the following configuration options: Property Name Default Description supportedMimeTypes null Optionally, require the input record to match one of the MIME types in this list. separator \",\" The character separating any two fields. columns n/a The name of",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}