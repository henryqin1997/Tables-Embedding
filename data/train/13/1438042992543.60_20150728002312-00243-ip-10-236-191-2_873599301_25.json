{
    "relation": [
        [
            "a",
            "117",
            "118",
            "119",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "126",
            "127",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "128"
        ],
        [
            "b",
            "117",
            "118",
            "119",
            "",
            "",
            "",
            "",
            "",
            "",
            "120",
            "121",
            "122",
            "123",
            "124",
            "125",
            "126",
            "127",
            "128",
            "",
            "129",
            "130",
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137",
            "138",
            "139"
        ],
        [
            "Init from sequence of tuples",
            ">>> d['person']['2']['firstname']",
            "['Adrian']",
            "",
            "### FileDict ################################################################",
            "",
            ">>> d = FileDict({'content': 'once upon a time...'})",
            ">>> repr(d)",
            "\"{'content': ''}\"",
            ">>> d = FileDict({'other-key': 'once upon a time...'})",
            "### ImmutableList ################################################################",
            ">>> d = ImmutableList(range(10))",
            ">>> d.sort()",
            "Traceback (most recent call last):",
            "File \"\", line 1, in",
            "File \"/var/lib/python-support/python2.5/django/utils/datastructures.py\", line 359, in complain",
            "raise AttributeError, self.warning",
            "AttributeError: ImmutableList object is immutable.",
            ">>> repr(d)",
            "\"{'other-key': 'once upon a time...'}\"",
            "'(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)'",
            ">>> d = ImmutableList(range(10), warning=\"Object is immutable!\")",
            ">>> d[1]",
            "1",
            ">>> d[1] = 'test'",
            "Traceback (most recent call last):",
            "File \"\", line 1, in",
            "File \"/var/lib/python-support/python2.5/django/utils/datastructures.py\", line 359, in complain",
            "raise AttributeError, self.warning",
            "AttributeError: Object is immutable!",
            "\"\"\""
        ]
    ],
    "pageTitle": "2070-r7695.patch on Ticket #2070 \u2013 Attachment \u2013 Django",
    "title": "",
    "url": "https://code.djangoproject.com/attachment/ticket/2070/2070-r7695.patch",
    "hasHeader": true,
    "headerPosition": "FIRST_COLUMN",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042992543.60/warc/CC-MAIN-20150728002312-00243-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 873651383,
    "recordOffset": 873599301,
    "tableOrientation": "VERTICAL",
    "TableContextTimeStampAfterTable": "{516861=\u00a9 2005-2015 Django Software Foundation unless otherwise noted. Django is a registered trademark of the Django Software Foundation.}",
    "textBeforeTable": "index 06e80e1..bed524e 100644 AUTHORS diff --git a/AUTHORS b/AUTHORS  Streaming uploads patch updated to [7695] and reviewed. File 2070-r7695.patch, 100.6 KB (added by jacob, 7 years ago) Ticket #2070: 2070-r7695.patch Back to Ticket #2070 Context Navigation Search Wiki Timeline Reports View Tickets API Preferences DjangoProject Login GitHub Login Code \u2665 Donate About Code Community News Documentation Download Overview The web framework for perfectionists with deadlines. Django",
    "textAfterTable": "\u00a0 \u00a0 'django.core.files.uploadhandler.TemporaryFileUploadHandler', \u00a0 236 ) \u00a0 237 \u00a0 238 # Maximum size, in bytes, of a request before it will be streamed to the \u00a0 239 # file system instead of into memory. \u00a0 240 FILE_UPLOAD_MAX_MEMORY_SIZE = 2621440 # i.e. 2.5 MB \u00a0 241 \u00a0 242 # Directory in which upload streamed files will be temporarily saved. A value of \u00a0 243 # `None` will make Django use the operating system's default temporary directory \u00a0 244 # (i.e. \"/tmp\" on *nix systems). \u00a0 245 FILE_UPLOAD_TEMP_DIR = None \u00a0 246 232 247 # Default formatting for date objects. See all available format strings here: 233 248 # http://www.djangoproject.com/documentation/templates/#now 234 249 DATE_FORMAT = 'N j, Y' new file django/core/files/__init__.py diff --git a/django/core/files/__init__.py b/django/core/files/__init__.py new file mode 100644 index 0000000..8b13789 - + \u00a0 \u00a0 1 new file django/core/files/locks.py diff --git a/django/core/files/locks.py b/django/core/files/locks.py new file mode 100644 index 0000000..212b51a",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}