{
    "relation": [
        [
            "Date",
            "Aug 16, 2001",
            "Aug 17, 2012",
            "Sep 28, 2014"
        ],
        [
            "Code",
            "AS",
            "AS",
            "FPAY"
        ],
        [
            "Event",
            "Assignment",
            "Assignment",
            "Fee payment"
        ],
        [
            "Description",
            "Owner name: WEBXCHANGE, INC., CALIFORNIA Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ARUNACHALAM, LAKSHMI;REEL/FRAME:012092/0964 Effective date: 20010719",
            "Owner name: ARUNACHALAM, LAKSHMI, CALIFORNIA Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:WEBXCHANGE, INC.;REEL/FRAME:028809/0905 Effective date: 20120814",
            "Year of fee payment: 4"
        ]
    ],
    "pageTitle": "Patent US7930340 - Network transaction portal to control multi-service provider transactions - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US7930340?dq=6,704,032",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042992543.60/warc/CC-MAIN-20150728002312-00236-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 485046451,
    "recordOffset": 484943272,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6442=Application service 1440 may contain application programs that provide customer services. For example, application service 1440 may include POSvc applications such as those discussed in FIG. 10 and elsewhere. Other exemplary application programs that may be provided by application service 1440 include multi-media messaging, archival/retrieval management, directory services, data staging, conferencing, financial services, home banking, risk management and a variety of other vertical services. The applications service 1440 may contain applications having design features that allow them to conform to standards related to performance, reliability, maintenance and ability to handle expected traffic volume. Depending on the type of service, the characteristics of the network elements may differ. Typically, application service 1440 will provide a number of functions including communications services for both management and end users of the network and control for the user over the user's environment.}",
    "TableContextTimeStampAfterTable": "{114037=The hub 1210 determines that the billing portion of the service transaction has been verified completed and controllably connects with service provider node 1235, which in this example is a FedEx node 1235 to arrange delivery of the model R100. The FedEx node 1235 interacts with a data source 1240, based on delivery preference data supplied by the client access device 1205, to arrange delivery. Completion of the delivery portion of the service transaction is indicated by arrow 1243, which is entirely filled., 171568=The hub 1904 includes a greeter 1915, which may be software or a dedicated server. In this case, the greeter 1906 contains a web page 1908 containing HTML code and an applet 1910. The web page 1908 presents a window 1912 in the browser client 1902 including text 1914 and a selection mechanism 1916 to indicate a particular transaction (e.g., in this case to purchase product 1)., 173155=In response to submission of a corresponding ID and PIN the object router 1920 routes to the bank object 1942 and an account object 1944 corresponding to the ID and PIN. The account object 1944 returns a window 1960 including account corresponding to the client of the ID and PIN including a balance of $4000 and an electronic payment option mechanism 1962., 195908=The interpreter 2650 may be a simple stack machine that receives input events and sends out actions. The stack machine 2650 contains a very limited set of instructions to perform the basic arithmetic and conditional chores at run time., 113355=The hub 1210 determines that the purchasing portion of the service transaction has been verified completed and controllably connects with service provider node 1225, which in this example is a Visa node to bill payment to a Visa credit card account indicated by the client access device 1205. The Visa node 1225 communicates with data source 1230 based on, for example, a credit card number, to perform billing processing. Status window 1232 shows the billing. Completion of the billing portion of the service transaction is indicated by the difference in shading between arrows 1224 and 1233., 148999=A stub object 1865 associated with the transaction data 1860 may be established at the computer system 1825 to perform transactions associated with the interactions 1862 and 1864. The user may then enter an amount into deposit interaction 1862, which then activates a deposit of said amount into Bob's account object 1845 via object 1865. Of course, in other implementations this could be handled differently. For example, such operations could be performed by a stub 1830, which also includes the functionality described for stub 1865., 117618=The application layer 1307 typically defines the language and syntax that applications use to communicate. Application layer 1307 may provide a means for application programs to access the OSI environment. By way of example, an application on one computer system in a network uses application-layer prescribed commands to access or request data from an application located on another computer system of the network. Often the application layer 1307 is responsible for functions such as file management (e.g., opening, closing, reading and writing files), transferring files, transferring messages (e.g., email messages), executing jobs remotely, obtaining directory information about network computer systems, and other distributed computing applications. Application layer 1307 may include services such as file transfer, access and management services (FTAM), electronic mail and virtual terminal (VT) services., 138213=The object model 1700 comprises base classes WxObject and WxRemoteObjectInt from which other classes and objects derive. The derived components are either object layer objects 1720 (e.g., Object, WxRemoteObject, WxReference, WxRemoteSkel, WxRemoteStub) or data model objects 1740 (e.g., WxName, WxNameStub, and WxNameSkel)., 114632=The hub 1210 determines that the purchasing, billing, and delivery portions of the service transaction are verified completed, as indicated in the status window 1245, and provides confirmation of the service transaction to the client access device 1205, as indicated in status window 1250. Advantageously, the transactional control provided by the hub 1210 has allowed a multi-service provider value-added service to be provided to the client access device 1205, including verification of multiple transactional portions of the service. According to one embodiment, the hub 1210 is financially compensated by the nodes 1215, 1225, and 1235 based on a visit or hop to the node, a purchase, a purchase amount, and according to other desired criteria., 138590=A programmer that is creating transactional objects is likely to work closely with the base class WxRemoteObject and/or WxRemoteObjectInt. WxRemoteObjectInt is an abstract base class that may contain all of the member methods and data access components as well as support functions to provide a uniform interface to behave as a WxRemoteObject. For example, this may include (a) WxStringExecution to execute any method using a simple ASCII string and object type data, (b) WxLock to provide a thread synchronization mechanism, (c) WxFlags to provide a simple and consistent Boolean flag variable, (d) reference counts to allow sharing and manage ownership concerns, (e) conversions between OBJECT, WxRemoteReference, WxRemoteStub and WxRemoteSkel types, and others as desired. As shown, both the object layer objects 1720 and the data model objects 1740 inherit an interface specification WxRemoteObjectInt., 112401=To perform a service transaction that may be requested or indicated in a communication with the client access device 1205, the hub 1210 controllably connects with service provider node 1215. In this example, service provider node 1215 is a supplier selling products over the service network. The client access device 1205 indicates to purchase one model r100 at a cost of $100. The supplier 1215 connects and communicates with data source 1220 to obtain inventory data and update the inventory to reflect the purchase of one model R100 unit at a cost of $100. Arrow 1221 is partly filled to indicate that the requested model 100 is in inventory and was purchased. Status window 1222 indicates the purchase. A verified degree of completion of the service transaction is indicated by the difference in shading between arrows 1211 and 1223., 147815=Via the stub 1830 a connection is made to a server 1835 containing a skeleton object 1840 associated with the bank transaction. Thus, once the stub is received, the user can then look up bank accounts as if local to the skeleton on the server side. The skeleton object 1840 presents transactional data 1850 to the user. Often, the transactional data 1850 will include a field for data entry, such as the ID and Pin fields shown. The user may enter data into these data fields and return the entries to the skeleton 1840 via the stub 1830. Based on these entries the skeleton 1840 may perform transaction processing. Transaction processing may include connecting with other local objects such as a user-specific Bob's account object 1845 and non-user specific Joe's account object 1846. In this case, user-specific data may be obtained from Bob's account object 1845 and returned to the browser 1805 via the skeleton 1840 and stub 1830 as transaction data 1860 including deposit interaction field 1862 and withdraw field 1864., 173587=An account stub 1964 may also be activated or transferred to the hub 1904 to correspond and interface to functions associated with the account object 1944. In response to selection of the payment option mechanism 1962 the account stub 1964, the account object 1944 and the supplier object 1924 may interact and process so that the purchase price of $100 for the product 1 is paid from an account of the client to an account of the supplier., 195513=The parser 2620 may take the input ASCII 2610, parse it for syntax and syntactical errors, and then create a stack machine instruction set 2630 for the resulting state machine 2650. The conversion of the state machine diagram into a stack machine saves time for the run time interpreter and does the preprocessing of the symbol table., 175210=The first computer system 2015 may have a WXREMOTECLIENT object 2020 to request access into the service network. The second computer system 2065 may have a WxRemoteConnectionServer object to receive the request and serve as the entry point into the service network. This is an object of the main class of the server side of the object router. The WxRemoteConnectionServer then connects the WxRemoteClient with the WxRemoteServer. Then, the WxRemoteClient and WxRemoteServer may communicate by a TCP socket 2040. By way of analogy, this is similar to a person (WxRemoteClient) dialing up a telephone operator (WxRemoteConnectionServer) and the operator directing the call to the correct person (WxRemoteServer)., 174116=Numerous variations and alternative embodiments are also contemplated for a multi-service provider transaction. For example, several single-directional arrows have been shown for purposes of clarity, however any or all of these arrows could represent bi-directional communication. Additionally, certain objects (e.g., supplier object 1924 and product object 1926) could be combined, or further subdivided into additional objects. Accordingly, the example is to be viewed in an illustrative rather than a restrictive sense., 119714=Boundary service 1410 may provide the interface between VAN switch 1400 and a facilities network and client access devices. Boundary service 1410 may also provide an interface to an on-line service provider. Using these interfaces, a client may use a client access device to connect to a local application, namely one accessible via a local VAN switch, or be routed or \u201cswitched\u201d to an application accessible via a remote VAN switch., 172775=In response to selection of the mechanism 1930 the router 1920 routes to a second node 1940 including a bank object 1942 associated with the bank. The bank object 1942 returns a window 1946 including an ID entry mechanism 1948 and a Personal Identification Number (PIN) entry mechanism 1950., 108492=The VAN switch 1070 and object router 1080 will be described elsewhere in the specification. Thus, according to one embodiment, the exchange 1030 and an operator agent 1040, described in more detail elsewhere together perform the switching, object routing, application and service management functions according to one embodiment of the present invention., 139543=WxName is a new data model object 1740 that contains one data member \u201cname\u201d which is a string. The meta compiler may automatically create two access components for this data member, namely Get_Name and Set_Name. The meta compiler may also create the server and client versions of this data object., 120201=Switching service 1420 may perform a number of tasks including routing user connections to remote VAN switches, flow control, prioritization of requests, and multiplexing. Switching service 1420 may also facilitate open systems' connectivity with both the Internet (a public switched network) and private networks including back office networks, such as banking networks. Often, the switching service represents a core of the VAN switch 1400. According to one embodiment, the switching service 1420 is implemented as an OSI application layer switch., 120811=Management service 1430 may contain tools that are used, such as by end users, to manage network resources including VAN switches like VAN switch 1400. For example, the tools may include Information Management Services (IMS) and application Network Management Services (NMS). Management service 1430 may also provide Operations, Administration, Maintenance & Provisioning (OAM&P) functions. For example, the functions may include security management, fault management, configuration management, performance management and billing management for the service network. Network management, such as provided by management service 1430, is another significant aspect of certain embodiments of the invention and may be used to add quality and value to the services provided., 147208=In response to the selection, the web server 1810 starts an applet 1820 that runs in the web browser 1805. The applet 1820 registers with the object router. The object router may determine the identification and network location of one or more objects associated with the transaction. The object router may assist with creating stub 1830 on a computer system 1825, which may be the computer system running the browser 1805 or another computer system. According to one embodiment, the computer system 1825 may be a hub., 187998=The following sections further discuss the DOLSIB, the language and grammar of the DOLSIB, and the CoreBusinessObject or management object. Specific examples, in this case banking examples, illustrate different service provider enterprise interfaces., 196190=The dump program 2660 is a debugging tool. The program 2660 may prints out the symbol table and the instructions for each stack op code., 116492=Physical layer 1301 may transmit unstructured bits across a link. Data link layer may transmit chunks across the link and may perform check-summing to detect data corruption, orderly coordination of the use of shared media, and addressing when multiple systems are reachable. Network bridges may operate within data link layer 1302. Network layer 1303 may enables any pair of systems in the network to communicate with each other. Network layer 1303 may contain hardware units such as routers to handle routing, packet fragmentation, and reassembly of packets. Transport layer 1304 may establish a reliable communication stream between a pair of systems and deal with errors such as lost packets, duplicate packets, packet reordering and fragmentation. Session layer 1305 may offer services above the simple communication stream provided by transport layer 1304. These services may include dialog control and chaining. Presentation layer 1306 may provide a means by which OSI compliant applications can agree on representations for data., 172057=In response to a selection of the mechanism 1916 the applet 1910 starts running in the client 1902 to present a transaction window 1918 and a VAN switch (not shown) may switch to a particular transactional application associated with the mechanism 1916. This may include registering with an object router 1920. The router 1920 may then route to a first node 1922 including a supplier object 1924 and a product object 1926 which may then return window 1928 including a cost $100 for product 1 and payment options including a mechanism 1930 to allow payment from a particular bank's bank account., 106035=Together, the web server 1020, the exchange 1030, and the operator agent 1040 provide a web page 1050, one or more point-of-service (POSvc) applications 1060, VAN switch 1070, and object router 1080. According to one embodiment, the exchange 1030 displays an web page 1050 in the web browser 1010 including the list of POSvc applications 1060 that are accessible to the exchange 1030. A POSvc application is an application that can execute the type of service or transaction that the user may be interested in performing. By way of example, the list of one or more POSvc applications may be displayed in an HyperText Markup Language (HTML) GUI, a Virtual Reality Markup Language (VRML) GUI, a Java GUI, or another GUI., 96958=Alternatively, the context owner may be another context owner, such as a network service operators (e.g., AT&T, Sprint, MCI), an Internet service provider (e.g., AOL, UUNet, Netcom, PSINet), a portals (e.g., AOL, Yahoo!, CNET, enterprise portals), a virtual malls (e.g., Priceline, Shop@aol, ToysRUs.com), an e-marketplaces (e.g., Commerce One, Ariba), a direct merchant service (e.g., Bank of America, Fidelity, Vanguard, LL Bean, Amazon.com), an ASP (e.g., MGM/Blockbuster), an Internet brokerage firm (e.g., E*trade, Fidelity Investments), an extranet context owner (e.g., insurance industry, underwriters), an intranet context owner (e.g., a payroll processing center for a Fortune 1000 company connecting multiple departments and banks for timecard input, payroll deductions/withholding adjustments), a search engine (e.g., Yahoo!), and others., 127594=A meta compiler 1680 may be provided for use with the layers 1660 and 1680 The meta compiler 1680 will be used broadly to refer to an automated mechanism to code features based on structured typically concise definitions. For example, the meta compiler 1680 may take a definition file and substantially automatically create the object identity, data serialization, data marshaling, string execution, abstract base class, and the stub/skeleton multiple inheritance. Advantageously, such automated coding may improve the efficiency of the implementation and may reduce errors. Of course, coding may be performed manually without such a meta compiler, although such implementations are expected to be more laborious, expensive, and prone to error., 51907=This application is a continuation in part of application Ser. No. 09/792,323 filed Feb. 23, 2001, now U.S. Pat. No. 7,340,506, which was a continuation-in-part of application Ser. No. 08/879,958 filed Jun. 20, 1997, now U.S. Pat. No. 5,987,500 which was a divisional of application Ser. No. 08/700,726 filed Aug. 5, 1996, now U.S. Pat. No. 5,778,178 which was related to and claimed priority from U.S. provisional patent application No. 60/006,634 filed Nov. 13, 1995. This application is related to and claims priority from U.S. provisional patent application No. 60/206,422 filed May 23, 2000, application Ser. Nos. 09/792,323;08/879,958; 08/700,726; 60/006,634; and 60/206,422 are hereby incorporated by reference. U.S. Pat. Nos. 5,987,500; 5,778,178, 7,340,506 and sister U.S. Pat. No. 6,212,556 are also hereby incorporated by reference., 118592=According to one embodiment, the invention uses software conforming to the application layer 1307 of the OSI model to provide the service network by providing communication, control, and management of distributed software. For example, according to one embodiment, the routing switch is implemented to function within the application layer 1307 of the OSI model. Application layer routing may create an open channel for the management and the selective flow of data from remote databases on a network., 106870=Depending on the particular implementation, although they are shown as separate entities, the VAN switch 1070 and the router 1080 may be combined to form a router to provide multi-protocol object routing. In one embodiment, this multi-protocol object routing is provided via TransWeb\u2122 Management Protocol (TMP), available from WebXchange Inc. of Scotts Valley Calif., which may incorporate traditional security features (e.g., RSA, SET1, SET2, etc.). Alternatively, routing may be done using Simple Network Management Protocol (SNMP)., 215429=According to one embodiment, the grammar may be specified similar to BNF form. For example, brackets \u201c[ ]\u201d may surround optional items, a vertical bar may be used to show alternatives, and bold symbols may be actual keywords. Consider the following exemplary form:, 128406=The meta compiler 1680 may use a Tool Command Language (TCL) program or a similar program or encoding. TCL is an interpreted script language that may be used to develop applications such as GUIs, prototypes, CGI scripts, and others. TCL may provide an interface into C, C++, and other compiled applications. The application is compiled with TCL functions, which provide a bi-directional path between TCL scripts and the executable programs. TCL provides a way to \u201cglue\u201d program modules together. TCL may also come as TCL/TookKit (TCL/Tk), which provides a GUI toolkit to create GUIs. Scheme, Perl, and Python have incorporated elements of TCL/Tk. According to one embodiment, the meta compiler 1680 is the rme2c meta compiler discussed elsewhere in the present application.}",
    "textBeforeTable": "Patent Citations In the foregoing specification, the invention has been described with reference to specific embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense. In conclusion, the present invention provides an approach for controlling a network transaction involving multiple service providers. The present invention includes various operations, as described above. The operations of the present invention may be performed by hardware components or may be embodied in machine-executable instructions, which may be used to cause a general-purpose or special-purpose processor or logic circuits programmed with the instructions to perform the operations. The present invention may be provided as a computer-program product that may include a machine-readable medium having stored thereon instructions that may be used to program a computer (or other electronic devices) to perform a process according to the present invention. The machine-readable medium may include, but is not limited to, floppy diskettes, optical disks, CD-ROMs, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, magnet or optical cards, flash memory, or other type of media or machine-readable medium suitable for storing electronic instructions. Moreover, the present invention may also be downloaded as a computer program product, wherein the program may be transferred from a remote computer to a requesting computer",
    "textAfterTable": "Shoppers Express Method and apparatus for producing a catalog US5239662 * Jun 26, 1992 Aug 24, 1993 Norand Corporation System including multiple device communications controller which coverts data received from two different customer transaction devices each using different communications protocols into a single communications protocol US5285383 Oct 15, 1991 Feb 8, 1994 Plains Cotton Cooperative Association Method for carrying out transactions of goods using electronic title US5297249 Oct 31, 1990 Mar 22, 1994 International Business Machines Corporation Hypermedia link marker abstract and search services US5329589 Jun 3, 1993 Jul 12, 1994 At&T Bell Laboratories Mediation of transactions by a communications system US5329619 * Oct 30, 1992 Jul 12, 1994 Software Ag Cooperative processing interface and communication broker for heterogeneous computing environments US5347632 Jul 28, 1989 Sep 13, 1994 Prodigy Services Company Reception system for an interactive computer network and method of operation US5367635 Aug 29, 1991 Nov 22, 1994",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}