{
    "relation": [
        [
            "Date",
            "Jul 16, 1997",
            "Feb 26, 2001",
            "Jul 30, 2004",
            "Feb 6, 2006",
            "May 30, 2006",
            "Jul 30, 2008",
            "Sep 25, 2009",
            "Feb 5, 2010",
            "Jul 5, 2012"
        ],
        [
            "Code",
            "AS",
            "AS",
            "FPAY",
            "AS",
            "AS",
            "FPAY",
            "AS",
            "AS",
            "FPAY"
        ],
        [
            "Event",
            "Assignment",
            "Assignment",
            "Fee payment",
            "Assignment",
            "Assignment",
            "Fee payment",
            "Assignment",
            "Assignment",
            "Fee payment"
        ],
        [
            "Description",
            "Owner name: TANISYS TECHNOLOGY, INC., TEXAS Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LAWRENCE, ARCHER RUSSELL;LITTLE, JACK C.;REEL/FRAME:008702/0901 Effective date: 19970716",
            "",
            "Year of fee payment: 4",
            "Owner name: SILICON VALLEY BANK, CALIFORNIA Free format text: SECURITY INTEREST;ASSIGNOR:TANISYS TECHNOLOGY, INC.;REEL/FRAME:017527/0556 Effective date: 20050729",
            "Owner name: SILICON VALLEY BANK, CALIFORNIA Free format text: SECURITY AGREEMENT;ASSIGNOR:TANISYS TECHNOLOGY, INC.;REEL/FRAME:017931/0462 Effective date: 20050729",
            "Year of fee payment: 8",
            "Owner name: NEOSEM, INC., KOREA, DEMOCRATIC PEOPLE S REPUBLIC Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:TANISYS TECHNOLOGY, INC.;REEL/FRAME:023282/0431 Effective date: 20090921 Owner name: TANISYS TECHNOLOGY, INC., TEXAS Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:TANISYS TECHNOLOGY, INC.;REEL/FRAME:023282/0431 Effective date: 20090921",
            "Owner name: TANISYS TECHNOLOGY INC,TEXAS Free format text: RELEASE;ASSIGNOR:SILICON VALLEY BANK;REEL/FRAME:023915/0058 Effective date: 20100204 Owner name: TANISYS TECHNOLOGY INC,TEXAS Free format text: RELEASE;ASSIGNOR:SILICON VALLEY BANK;REEL/FRAME:023937/0370 Effective date: 20100204 Owner name: TANISYS TECHNOLOGY INC,TEXAS Free format text: RELEASE BY SECURED PARTY;ASSIGNOR:SILICON VALLEY BANK;REEL/FRAME:023915/0062 Effective date: 20100204",
            "Year of fee payment: 12"
        ]
    ],
    "pageTitle": "Patent US6182253 - Method and system for automatic synchronous memory identification - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US6182253?dq=7565338",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989891.18/warc/CC-MAIN-20150728002309-00030-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 486444487,
    "recordOffset": 486380763,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{71020=PD memory 75 is a 256 word by 8 bit, non-volatile, electrically erasable, programmable read-only memory (EEPROM) typically having stored therein memory module parameters in accordance with JEDEC guidelines. The memory 75 operates electrically separate from SDRAM signals, and has a SCL clock line 77 input, and a bi-directional serial SDA data line 79. Lines 77 and 79 are used in accordance with industry-standard I2C bus specifications as described in \u201cPC Peripherals for Microcontrollers\u201d, a data book by Signetics Company, a division of Philips Semiconductors, 1992. The lines 77 and 79 provide a means for tester 10 to communicate with PD memory 75., 304464=After logic step 1134 of FIG. 19, the logic flow proceeds to logic step 1136 where the CS and DQMB lines of the current bank are flagged as used for subsequent reference, and the bank loop index is incremented. Logic step 136 is comprised of logic steps 816-818 of FIG. 12h., 303238=The logic flow process continues from logic step 1126 of FIG. 19 to logic step 1128 where the CE loop index is incremented. Logic step 1128 is comprised of logic step 804 of FIG. 12g., 271154=Referring to FIG. 16, a logic flow diagram illustrates the steps performed by the CPU 80 when the state machine logic of FIGS. 12a-12 l requires that information be written to a UUT. The logic flow process enters at logic step 1000 and proceeds to logic step 1001, where a virtual address created sequentially in the memory test system pursuant to the logic diagrams of FIGS. 12a-12 l, and 13-15, is converted by the logic of FIGS. 10 and 11 to a physical row and column of the memory array 444. From logic step 1001, the logic flow continues to logic step 1002 where a mode command from register 172 of FIG. 7 is written to the SDRAM devices of the UUT. The SDRAMs thereby are configured for a CAS latency of 3, sequential burst addressing, and a burst length of 1, as previously described at logic step 722. The logic flow continues to logic step 1003 where the row address generated at step 1001 is output by CPU 80 of FIG. 6 to row address register 191, and row activate latch 151 and precharge latch 153 internal to the state machine 150 are set., 79750=CPU 80 is comprised of a 32-bit RISC processor operating at 20 MHz, and associated peripherals including a reset circuit, an address latch, and an address decoder. The 32-bit RISC processor is identified by part number 79R3041-20J, and is available from Integrated Device Technology, Inc., 2975 Stender Way, Santa Clara, Calif. 95054., 291127=From logic step 1015, where both the lower 32 bits and the upper 8 bits of data to be transferred from the UUT is read, the logic flow proceeds to logic step 1016 where CPU 80 executes a write instruction to the address designated as the burst end command. This command is decoded inside memory test controller 116 by port address decoder 175 and sent over line 179 to state machine 150, where it is acted upon as detailed below., 302614=The logic flow thereafter proceeds from logic step 1122 to logic step 1124 of FIG. 19 where the CS loop index is incremented. Logic step 1124 is comprised of logic step 798 of FIG. 12f., 347151=From logic step 1229, the logic flow continues to logic step 1230, where a pattern 5500FFAA hexadecimal is written by CPU 80 into the internal mask register 1302 of the UUT being identified. The actual memory address is ignored, provided that it falls within the addressing range of the UUT. After logic step 1230, the logic flow continues to logic step 1231 where the constant \u201c0\u201d, is supplied by the CPU 80 to the Row Address Register 191 of FIG. 7 to trigger a Row Activate Command on line 190. The contents of the Row Address Register 191 thereupon are applied to the internal special register 1301 of the UUT as depicted in FIG. 27. The special register thereby is set to isolate the mask register 1302 from programming. The logic flow then continues from logic step 1331 to logic step 1232, where logic 0's are written by CPU 80 into the WPB & SP register 169 to configure the memory test controller 116 to suppress all DSF line 165 activity. The SGRAM UUT thereby is allowed to function like an SDRAM., 81333=Programmable delay line 114 is identified by part number AD9501JP, and is available from Analog Devices, One Technology Way, P.O. Box 9106, Norwood, Mass. 02062-9106., 311365=Synchronous Graphics RAMs (SGRAMs) have been proposed by JEDEC as an extension of SDRAMs. SGRAMs are distinguished from conventional SDRAMs by the inclusion of a mode set register 1301, a mask register 1302, and a color register 1303 as depicted in FIG. 27. The mode set register 1301 is accessible to the address bus when the signal DSF 31 is asserted. Asserting control signals DSF 31, CS 32, RE 35, CE 36, WE 37, and address bit A5 of bus 38 in the same cycle of a CLK 39 signal causes the mask register 1302 in the SGRAM to be loaded with the contents of the DQ lines of the data bus 40. The mask register 1302 provides bit granularity of control in writing a word to memory in the same manner as the DQMB lines 33 provide byte granularity. Similarly, by asserting control signals DSF 31, CS 32, RE 35, CE 36, WE 37, and address bit A6 of bus 38 in the same cycle of a CLK 39 signal causes the color register 1303 in the SGRAM to be loaded with the contents of the DQ lines of the data bus 40. During subsequent write cycles to SGRAM, the color register 1303 provides the data masked by the contents of the DQ lines of the data bus 40., 302856=After logic step 1124 of FIG. 19, the logic flow proceeds to logic step 1126 where the CS loop is tested for an end-of-table condition, and if the condition is not present, the logic flow loops to logic step 1108 for the next CS control line iteration. Logic step 1126 is comprised of steps 800-802 of FIG. 12g., 343545=Referring to FIGS. 30a-30 c, logic steps 1220-1238 are inserted between logic steps 822 and 824 of FIG. 12h to comprise an SGRAM check sequence that verifies that the extra circuitry internal and unique to an SGRAM responds when the define special function (DSF) line 165 of FIG. 9 is activated. A lack of response indicates that the SGRAM may have an erroneously or intentionally disabled DSF line. The operator of tester 10 is so notified with a warning message on display 12 of FIG. 1., 82615=Data latches 118 are comprised of three units, each of which is identified by part number IDT74FCT16543AT as a 16-bit, non-inverting, latched transceiver available from Integrated Device Technology, Inc., 2975 Stender Way, Santa Clara, Calif. 95054-3090., 305167=From logic step 1138 of FIG. 19, the logic flow proceeds to housekeeping functions necessary for ordering the parameters in the structure, and for performing access speed and serial PD bits identification functions in logic steps 822-896 of FIGS. 12h-12 l., 326279=If, at logic step 1207, the number of UUT sockets is determined to be equal to two, the logic flow branches to logic step 1209 where module sense lines 73 a and 73 b are sensed. The logic flow then continues to logic step 1210 to determine whether line 73 a is being asserted to indicate whether a module 20 has been inserted into UUT socket 11 a. If so, the logic flow branches to logic step 1208 where the message string corresponding to UUT1 of ADAPTER TABLE XII, as indexed by the adapter ID, is looked up. The logic flow then continues as before described. If no module has been inserted into UUT socket 11 a, the module sense line 73 b for UUT socket 11 b is sensed, and if asserted, the logic flow branches to logic step 1211 where the message string corresponding to UUT2 of ADAPTER TABLE XII, indexed by the adapter ID, is looked up. The logic flow then continues to logic step 1213 as before described. If neither of the module sense line 73 a and 73 b are asserted, the logic flow continues to logic step 1214 where the message \u201cSDRAM\u201d is used as the default message string. Alternatively, the message string \u201cNO MODULE DETECTED\u201d could be displayed. From logic step 1214, the logic flow process proceeds to logic step 1213 where the message \u201cCHECKING\u2014\u201d is displayed with the default message string being inserted in the blank space., 294474=From logic step 1053, the logic flow continues to logic step 1054, where memory test controller 116 of FIG. 6 is initialized using the elements in Table VI previously described in logic step 848 of FIG. 12j. The logic flow thereafter continues to logic step 1055 of FIG. 18a where a local variable BURST is initialized to the value 1 to serve as a loop counter. From logic step 1055, the logic flow continues to logic step 1056 where mode registers of the SDRAM ICs of the UUT are initialized concurrently to establish a burst size using the local variable BURST, to cause an address wrapping using the variable BURST_TYPE of the module parameter structure Table VI, and to establish a CAS latency using variable CAS_LATENCY of Table VI., 300701=The logic process thereafter proceeds from logic step 1110 to logic step 1112 of FIG. 19, where width and depth of the current bank under test are checked, and if wider and/or deeper than all previously found banks, the logic flow proceeds to logic step 1114. Logic step 1112 comprises steps 766-782 of FIGS. 12d and 12 e. If, conversely, the width or depth is not greater than all previously found banks, the logic flow proceeds to logic step 1116 of FIG. 19 where the part loop index is decremented at logic step 784 of FIG. 12f., 272386=From logic step 1003, the logic flow continues to logic step 1004, where CPU 80 first writes to data latches 118 the upper 8 bits of 40 bits of data generated during execution of the function represented by one of logic diagrams 13, 14 a-14 b and 15., 346194=The logic flow thereafter continues to logic step 1228 where logic 1's are written by the CPU 80 to the WPB & SP register 169 of FIG. 7 to prepare the memory test controller 116 to assert DSF line 165 during the appropriate states of the state machine 150. The SGRAM internal special register 1301 as depicted in FIG. 27 thereby is loaded with the contents of the Row Address Register of FIG. 7. After logic step 1228 of FIG. 30b, the logic flow continues to logic step 1229 where the constant 0020 hexadecimal (representing a logic \u201c1\u201d in bit A5) is written by the CPU 80 into the Row Address Register 191 to trigger a Row Activate Command on line 190. As a result, the contents of the Row Address Register 191 are supplied to the internal special register 1301 of the SGRAM UUT as depicted in FIG. 27., 348867=For a better understanding of the bit-wise logic operations of logic steps 1227-1235, Table XIV has been constructed to list the values generated by the SGRAM check routine, and possible values that could be returned by the UUT. The FIRST WRITE WORD entry having a value of 0055AAFF hexadecimal provides a known bit pattern in a known location, (address[0]) of the UUT. The entry SGRAM MASK having a value of 5500FFAA provides a second known bit pattern that may be loaded into the internal mask register 1302 of the SGRAM UUT. The mask register 1302 has the property of allowing a write or alteration of those bits in a 32-bit memory word which correspond to like bits in the mask register which contain a logic \u201c1\u201d. Conversely, writes are disallowed for bits in a 32-bit memory word that correspond to like bits in the mask register that contain a logic \u201c0\u201d., 298932=The logic flow proceeds from logic step 1100 of FIG. 19 to logic step 1102 where initialization of the RE control line loop is performed at logic steps 728-730 of FIG. 12b., 344137=From the YES branch of logic step 822 of FIG. 30a, the logic flow proceeds to logic step 1220 where the variable PART_INX is retrieved from the PART_INDEX entry of the Per-Bank Structure Table VII for bank 0. From logic step 1220, the logic flow continues to logic step 1221 where the Type G flag entry of the PARTS_LIST Table XI as indexed by the variable PARTS_INX is sensed by CPU 80. If the TYPE G flag was not set, the logic flow continues at logic step 1333 where the logic flow branches via node FF to logic step 824 of FIG. 12h to bypass checking. Otherwise, the logic flow proceeds from logic step 1222 of FIG. 30a to logic step 1223 where the PRECH entry of the PARTS_LIST Table XI as indexed by the variable PARTS_INX is supplied by CPU 80 to the Precharge Bit Register 1300 of memory test controller 116 of FIG. 6a, thus programming the correct precharge bit for the UUT being identified., 274133=Referring to FIGS. 9 and 20, and concurrently with the writing of data to the upper 8 bits of data Latches 118, state machine 150 exits idle state 00 at 350 a, and upon the next cycle of the memory clock on line 121 enters state 10 at 367 a. Upon the next cycle of the memory clock on line 121, state machine 150 remains in state 10 at 367 b and asserts a CPU acknowledge signal on line 203. Upon the next cycle of the memory clock on line 121, state machine 150 de-asserts the CPU acknowledge signal on line 203, and waits in state 10 at 367 c until CPU 80 has completed the write cycle. State machine 150 then advances to state 11 at 368. Upon the next cycle of the memory clock on line 121, state machine 150 re-enters idle state 00 at 350 b to await the next command. The sequence of states 00-10-11-00 exists solely for providing acknowledgment over line 203 to CPU 80, and causes no change in state of the UUT control signals CS 156, CKE 160, RE 162, CE 164, WE 166, or the selection of the address multiplexer 196 of FIG. 7., 295294=From logic step 1056, the logic flow continues to logic step 1057 where the variable BURST_LENGTH of Table VI is set to the contents of local variable BURST to represent the current length of burst under test. The logic flow thereafter continues to logic step 1058 where a WRITE BLOCK operation is performed using a local variable SIZE as the number of words to write, and all bits 0 at logic as the pattern to write. From logic step 1058, the logic flow continues to logic step 1059, where the identical block previously written at logic step 1058 is read and compared using local variable MASK with a pattern of all logic 0's, and the local variable ERROR is set to TRUE if the operation was successful. Otherwise, ERROR is set to FALSE., 80622=The tester system electronics and power supply 106 are energized by a 12-volt DC power supply. Controlled power supply 106 provides a +3.3 volt source which is required by SDRAM module 20, and includes an I/O port for control signals. Power supply 106 is comprised of key components identified by part number DS 1267-10 (dual digital potentiometer chip available from Dallas Semiconductor Corp., 4401 South Beltwood Parkway, Dallas, Tex. 75244-3292), and part number TL594C, and includes a pulse-width modulation control IC available from Texas Instruments, P.O. Box 655303, Dallas, Tex. 75265-5303; for which many application notes are available in the industry., 281296=Whenever it is desired to read a memory location from the UUT, the logic flow enters the READ_WORD logic flow diagram at logic step 1010 of FIG. 17. From logic step 1010, the logic flow proceeds to logic step 1011 where the contents of the CPU 80 cache controller configuration are first saved in a local temporary variable before being reconfigured to disable the cache controller. The cache controller is disabled to guarantee that the CPU performs an operation from the physical memory of the UUT, rather than from internal CPU cache memory., 296102=From logic step 1059, the logic flow continues through node BB to logic step 1060 of FIG. 18b, where contents of local variable ERROR are examined. If TRUE, the logic flow branches to logic step 1064 to return the last setting of local variable MAX_BURST to the logic step of FIGS. 12a-12 j which required that the DETECT_BURST function be executed. Conversely, if the variable ERROR is FALSE, there was no error, and the logic flow continues to logic step 1061 where local variable MAX_BURST is set to the contents of the local variable BURST to represent the highest successfully tested burst length. From logic step 1061, the logic flow continues to step 1062 where the contents of local variable BURST are shifted left by 1 bit to effectively double its value. The logic flow thereafter proceeds to logic step 1063 where the contents of local variable BURST are compared to 8, and if less than or equal to 8, the logic flow loops back through node CC to logic step 1056 for the next iteration. If, however, the local variable BURST is greater than 8, the logic flow exits the loop to logic step 1064 where local variable MAX_BURST is returned to the calling logic step., 281895=From logic step 1011, the logic flow proceeds to logic step 1012 where the virtual address is translated to a physical row address and physical column address as before described in a connection with the description of logic step 1001 of FIG. 16. The logic flow proceeds from logic step 1012 to logic step 1013, where the mode registers of the SDRAM ICs of the UUT are initialized simultaneously to establish a burst size of one (1), sequential address wrapping, and a CAS latency of three (3) as previously described in step 722., 82094=Communications interface 92 and refresh timer 140 are identified by part number SCN2681, as a dual asynchronous receiver/transmitter IC available from Philips Semiconductors, Signetics Company, 811 East Arques Avenue, Sunnyvale, Calif. 94088-3409. Line 96 is identified as an electrical interface having part number MAX238 RS-232, and is available as a level translator IC that may be purchased from Maxim Integrated Products, Inc., 120 San Gabriel Drive, Sunnyvale, Calif. 94086., 302222=After logic step 1120 of FIG. 19, the logic flow proceeds to logic step 1122 where the DQMB loop is tested for an end-of-table condition, and if the condition is not present, the logic flow loops to logic step 1110 for the next DQMB control line iteration. Logic step 1122 is comprised of logic steps 794-796 of FIG. 12f., 284347=When the next cycle of the memory clock signal on line 121 occurs, state machine 150 enters state 03 at 352 of FIG. 9 to maintain the same address selection, and assert signals CS 156, RE 162, and WE 166 in accordance with SDRAM requirements for performing a precharge operation. Upon the next cycle of the memory clock signal on line 121, state machine 150 enters state 04 at 353 of FIGS. 9 and 24, and returns all outputs of state decoder 154 to their idle states. When the next cycle of the memory clock signal on line 121 occurs, state machine 150 enters state 07 at 366 of FIG. 9 with all outputs remaining as in state 04. Upon the next cycle of the memory clock signal on line 121, state machine 150: enters state 0A at 362 a of FIGS. 9 and 24; increments the latency counter and comparator 170 of FIG. 7 from count 0 to count 1; and asserts CS 156 and RE 162, and sets the address multiplexer control line 168 to select row address register 191. Address bus 122 thereby is driven in accordance with SDRAM requirements for loading the row address. Subsequent clock cycles provide a latency between the loading of row address and the loading of column address in accordance with SDRAM addressing requirements. Upon the next cycle of the memory clock signal on line 121, state machine 150 remains in state 0A at 362 b of FIGS. 9 and 24, increments latency counter and comparator 170 from count 1 to count 2, de-asserts CS 156 and RE 162, and sets the address multiplexor control line 168 to select the column address line 198. Upon the next cycle of the memory clock signal on line 121, state machine 150 remains in state 0A at 362 c of FIGS. 9 and 24; increments the latency counter and comparator 170 from count 2 to count 3 where the count value equals the CAS latency value previously programmed into the Mode & LC register 172 at logic step 1013 of FIG. 17; and causes latency counter and comparator 170 of FIG. 7 to assert an LC equality signal on line 138 back to state machine 150., 333917=The output of the precharge bit register 1300 is applied by way of lines 197 and 199 to data inputs of the address multiplexer 196 to replace the A10=1 data input for SDRAMs., 342710=The logic step 1215 was added to configure the memory controller 94 for precharge bits on a part by part basis before any access is made to UUT adapter 14., 299469=From step 1104, the logic flow proceeds to logic step 1106 where the CPU outputs the current setting for the CE control lines to the memory test controller 116, and initializes the CS control line loop. These functions are performed at logic steps 736-738 of FIGS. 12b and 12 c., 280456=From logic step 1006, the logic flow proceeds to step 1007 where control returns to the logic step of FIGS. 12a-12 l which required a write to the UUT. When the Mode & LC Register 172 is programmed for a burst count greater than 1, software executes the necessary sequences of writing the high 8 bits followed by writing the low 32 bits to data latches 118 to satisfy the requirements of the programmed burst count. Referring to FIGS. 7 and 21, state machine 150 remains in state 0F at 359 and issues a CPU acknowledgment over line 203 during the write of the high 8 bits to data latches 118, and traverses the sequence of states 0F-0E-1B-0F once for each of the aforementioned writes of the low 32 bits., 325529=The adapter ID is assumed to be valid if it is found in ADAPTER TABLE XII, and it is not equal to FF hexadecimal. In that event the adapter ID is used as an index to the SOCKETS column of ADAPTER TABLE XII. If the SOCKETS entry is equal to zero, the logic flow branches to logic step 1206 where message \u201cADAPTER NOT DETECTED\u201d is displayed and the logic flow continues as before described. If the SOCKETS entry is equal to one, however, the corresponding UUT1 entry is accessed at logic step 1208 and is used as a message string. The logic flow thereafter continues to logic step 1213 where the message \u201cCHECKING\u2014\u201d is displayed with the aforementioned message string being inserted into the blank space., 345176=From logic step 1223, the logic flow continues to logic step 1224 where the memory test controller hardware is setup as previously described at logic step 846 of FIG. 12j. The logic flow process proceeds from logic step 1224 to logic step 1225 of FIG. 30a where Bank 0 of the UUT is initialized by using the Module Parameter Structure Table VI as previously described at logic step 848 of FIG. 12j. From logic step 1225 of FIG. 30a, the logic flow continues to logic step 1226 where all logic 0's are written by the CPU 80 to the DQMBEN Enable Register 252 of FIG. 8, thus disabling all byte-level masking of the UUT. After logic step 1226, the logic flow continues by way of node GG to logic step 1227 of FIG. 30b, where a value 0055AAFF hexadecimal is written by the CPU 80 to address [0] of the UUT, thus initializing a known address with a known pattern., 303852=After logic step 1130 of FIG. 19, the logic flow proceeds to logic step 1132 where an RE loop index is incremented. Logic step 1132 is comprised of logic step 810 of FIG. 12g., 304802=Following logic step 1136, the logic flow proceeds to logic step 1138 of FIG. 19 where the bank loop is tested for an end-of-table condition, and if the condition is not present, the logic flow loops to logic step 1102 for the next bank iteration. Logic step 1138 is comprised of step 820 of FIG. 12h., 333398=When it is desired to program the precharge bit register 1300, the CPU 80 applies the precharge bit register address and control signals to bus 120 and bus 202, and the data of the PRECH column of the PARTS_LIST TABLE VIII as indexed by PART_INX to bus 193. The port address decoder 175 recognizes the address of the precharge bit register on bus 202, and sends a strobe signal on line 204 to load the data on bus 193 into the register., 349782=The entry SECOND WRITE WORD having a value FAA5500 hexadecimal represents a value that is the complement of FIRST WRITE WORD, which will change every bit of the word stored at address [0] of the UUT if there is no mask register present in the UUT. The entry READ IF SGRAM has a value 55555555 hexadecimal if the UUT is an SGRAM with a properly operating mask register. The entry READ IF SDRAM has the value FFAA5500 hexadecimal if the UUT is an SDRAM, or an SGRAM with a disabled mask register. That is, the last value written to the UUT will be reflected. The entry POST-XOR IF SGRAM has the value FFFFFFFF hexadecimal when READ IF SGRAM having the value 55555555 is exclusive-ORed with the constant AAAAAAAA at logic step 1235. Otherwise, POST-XOR IF SDRAM has the value 5500FFAA when READ IF SDRAM having the value FFAA5500 is exclusive-ORed with the constant AAAAAAAA at logic step 1235., 332222=A change to the logic flow diagrams of FIGS. 12a-12 l which is required to accommodate SGRAMs is the inclusion of a logic step 1215 between logic steps 766 and 768 of FIG. 12d., 292380=From logic step 1016, the logic flow continues to logic step 1017 where the previously saved contents of the CPU cache controller configuration are restored. Normal data cache operations thereby are enabled. From logic step 1017, the logic flow process proceeds to logic step 1018, where control returns to the logic step requiring a read of the UUT such as occurs at logic steps 904, 934, 944 or 986. Due to the similarity of state machine operation between burst write and burst read operations, either operation may reference the sequence of states including state 0F at 359, state 0E at 364, state 1B at 365, and state 0F at 359 of FIG. 9. In the write cycle timing diagram of FIG. 21 the same sequence is illustrated as state 0F at 359 a, 359 b, and 359 c, state 0E at 364, state 1B at 365 a, 365 b, and 365 c, and state 0F at 359 d., 283531=Referring to the state diagram in FIG. 9 and the read cycle timing diagram of FIG. 24, state machine 150 begins in idle state 00 at 350 with CKE 160 asserted. Upon the next cycle of the memory clock signal on line 121, the state machine branches to state 02 at 351 in response to the precharge latch 153 within state machine 150 having been set by the previous writing to the row address register 191 at logic step 1014 of FIG. 17 During state 02, state decoder 154 sets the address multiplexer control line 168 to drive the address bus 124 with bit A10 to a logic 1, and to drive all remaining address bits to a logic 0 to signify a precharge command to the SDRAMs of the UUT., 363310=The SGRAM modules differ from a typical SDRAM module in that SGRAM modules include a DSF line 31 to enable the selection of the mode set register 1301 in the SGRAM IC, and have fewer CS control lines since SGRAM ICs are 32 bits wide. Further, fewer SGRAM ICs are required to make a typical 64-bit-wide SGRAM memory module than SDRAM ICs required to make an SDRAM module of identical width., 282494=From logic step 1013, the logic flow continues to logic step 1014 where the row address generated at logic step 1012 is output to row address register 191 of FIG. 7, and the row activate 151 and precharge 153 latches internal to the state machine 150 are set as previously described. From logic step 1014, the logic flow proceeds to logic step 1015, where the lower 32 bits of the 40 bits of data latches 118 are read to cause CPU 80 to generate an address over address control line 202 within the range of the UUT. The state machine 150 thereby is triggered to perform a read cycle as described in detail below. However, before CPU 80 can complete the read of the lower 32 bits, memory test controller 116 withholds its acknowledgment to CPU 80 and performs a multi-step operation to load all 40 bits of data latches 118 before transmitting an acknowledgment over line 203 to CPU 80., 230364=Logic step 766 establishes how, using a combination of software and hardware, a virtual memory word address may be generated and partitioned into variable-width row and variable-width column constituents to address SDRAMs with differing address dimensions. Referring to FIG. 11, the previously obtained number of row address bits and number of column address bits are stored into RA register 652 and CA register 654, respectively. The contents of the variable CA register 654, representing the number of column address bits, are operated upon by a bit mask processor 656, where a value is created with as many logic 1's starting from the least-significant bit (1 sb) as the incoming value. For example, if the value stored in CA register 654 is a binary 9, then the output of the bit mask processor 656 is binary 0000000111111111 or hexadecimal 01FF. At logic AND 658, the contents of virtual column address register 650 are bit-wise AND'ed with the mask produced by the processor 656 to extract a first column address from register 660. The number of column address bits defined by variable CA register 654 are removed from the virtual column address register 650 by shift register 662. More particularly, the bits in the virtual address are shifted right by the number of places defined by the variable CA register 654, and logic 0's are shifted into the vacated positions to form a row address 664., 325028=If the adapter ID were found at logic step 1203, the flow would continue to logic step 1205 where the adapter ID is compared to a constant hexadecimal FF. If equal, the logic flow branches to logic step 1206 where a message \u201cADAPTER NOT DETECTED\u201d is displayed. A UUT adapter 14 would not detected, for example, if the adapter was left unplugged. From logic step 1206, the logic flow continues to logic step 708 to exit as before described., 94251=Software recognition of a UUT adapter's identification is provided by CPU 80 upon reading the state of eight adapter ID lines 85 by way of I/O interface 101. On UUT adapter 14, adapter ID lines 85 are normally in the high or logic \u201c1\u201d state, and are selectively grounded with straps 86 wherever it is desired to read a logic \u201c0\u201d in some bit position. Thus, one adapter may be strapped for a code of 01010001 or hexadecimal 51, and comprise UUT sockets for memory modules with 144 pin SO DIMM and 168 pin DIMM packages. Another adapter may be strapped for a code of 01010011 or hexadecimal 53, and comprise one or more sockets for synchronous graphics RAM, and so forth. Further, reading a code of 11111111 or hexadecimal FF signifies that no UUT adapter is installed., 304084=The logic flow proceeds from logic step 1132 of FIG. 19 to logic step 1134 where the RE loop is tested for an end-of-table condition, and if the condition is not present, the logic flow loops to logic step 1104 for the next RE control line iteration. Logic step 1134 is comprised of steps 812-814 of FIG. 12g., 300233=From logic step 1108, the logic flow proceeds to logic step 1110 where a scan of all previously tested banks is performed to ensure that the CS and DQMB control lines are not reused, that the CPU outputs the current setting for the DQMB control lines to the memory test controller 116, and that the initialization for the part loop is performed at logic steps 744-764 of FIGS. 12c and 12 d., 348316=From logic step 1232, the logic flow continues to logic step 1233 where a pattern FFAA5500 hexadecimal is written to address [0] of the UUT. After logic step 1233, the logic flow proceeds to logic step 1234 where the contents of UUT address [0] are read into the local variable DATA0. The logic flow thereafter continues to logic step 1235 where the contents of local variable DATA0 undergo a bit-wise exclusive-OR logic function with the constant AAAAAAA hexadecimal., 293494=From logic step 850 of FIG. 12j of the auto-ID logic flow diagrams, the logic flow process jumps to logic step 1050 of the DETECT_BURST logic flow diagram of FIG. 18a. The logic flow then proceeds from logic step 1050 to logic step 1051, where local variable MAX_BURST is initialized to a logic 1 to represent the smallest possible burst length value. From logic step 1051, the logic flow continues to logic step 1052, where the variable WIDTH of Per-Bank Structure Table VII is used to create a local variable MASK with logic 1's in the bit positions corresponding to working bits of a functioning memory module. From logic step 1052, the logic flow continues to logic step 1053 where a local variable SIZE is set to 1/32nd of the value of the element DEPTH in Table VII indexed by [0]. A representative fraction of the bank depth is used to make the identification time reasonable., 279930=From logic step 1004, the logic flow proceeds to logic step 1005, where CPU 80 performs an output or write instruction to the address designated as the burst-end command, as will be described in more detail in the description of FIG. 17. From logic step 1005, the logic flow proceeds to logic step 1006, where the CPU 80's data cache is flushed to ensure that any subsequent read of the same location in the UUT will not be from the CPU's data cache memory., 323790=In order to accommodate the identification of SGRAMs revisions are required to be made to the logic flow diagrams of FIGS. 12a-12 l. For example, logic step 716 of FIG. 12a is deleted, and the logic steps occurring between logic step 704 and logic step 718, and between logic step 704 and logic step 708, become that illustrated in FIG. 28. Thus, at logic step 1200, the adapter ID code indicated by UUT adapter 14 supplied by way of buses 85 and 86 of FIG. 6b is I/O interface 101 to CPU 80, which in turn stores the code into the ADAPTER_ID location of VARIABLE TABLE VIII. The logic flow then proceeds to logic step 1202 where the adapter ID is looked up in ADAPTER TABLE XII below. At logic step 1203, if the adapter ID was not found, the logic flow branches to logic step 1204 where a message \u201cADAPTER NOT SUPPORTED\u201d is displayed. An adapter ID may not be found, by way of example, if tester software was not updated to support newly developed UUT adapter hardware. From logic step 1204, the logic flow continues to logic step 708 to exit the auto-ID process., 277237=With the next cycle of the memory clock on line 121, state machine 150 remains in state 0A at 362 b, and increments the latency counter and comparator 170 from count 1 to count 2. State decoder 154 de-asserts CS 156, and RE 162, and directs the address multiplexer 196 to resume routing of the column address on 202 to the multiplexed output address bus 124. Upon the next cycle of the memory clock on line 121, state machine 150 again remains in state 0A at 362 c, increments the latency counter and comparator 170 from count 2 to count 3, and leaves the UUT control lines in the idle state. When the next cycle of the memory clock signal occurs, the latency counter and comparator 170 has reached the setting previously programmed into the Mode & LC register 192 at step 1002, the latency counter and comparator 170 has issued an equality signal on line 138, and the state machine 150 has entered state 0B at 363 a. The state decoder 154 thereupon asserts CS 156, CE 164, and WE 166, and de-asserts CKE 160, thus stalling the UUT until the next memory write transfer from CPU 80 to the UUT. Simultaneously, the column address of the multiplexed address bus is loaded into the address multiplexer 196, and 40 bits of write data in data latches 18 is loaded into the UUT., 299825=After logic step 1106, the logic flow proceeds to logic step 1108 where the CPU outputs the current setting for the CS control lines to the memory test controller 116, and initializes the DQMB control line loop at logic steps 740-742 of FIG. 12c. The CS and DQMB loops are inner loops because their arrangements vary the most among SDRAM modules., 303478=From logic step 1128 of FIG. 19, the logic flow proceeds to logic step 1130 where CE loop is tested for end-of-table condition, and if the condition is not present, the logic flow loops to logic step 1106 for the next CE control line iteration. Logic step 1128 is comprised of steps 806-808 of FIG. 12g., 342906=From logic step 1215, the logic flow of FIG. 12d continues to logic step 768 to proceed as before described., 81781=Voltage level translators 110, 111, 112, and 113, are identified by part number 74LVX2425WM, and are supplied as an 8-bit, dual supply, translating transceiver IC available from National Semiconductor Corp., 2900 Semiconductor Drive, Santa Clara, Calif. 95052-8090., 332469=At logic step 1215, the PARTS_INX value in VARIABLE TABLE VIII is used as an index into the PARTS_LIST TABLE XIII below. The indexed entry in the PRECH column of the Table thereupon is loaded into a precharge bit register 1300 as illustrated in FIG. 29. FIG. 29 is identical to FIG. 7, with the exception that the precharge bit register 1300 has been added., 332874=Referring to FIG. 29, precharge bit register 1300 is added to the memory test controller 116 to provide a means for selecting the correct precharge bit in accordance with SDRAM specifications and various manufacturer specifications. The precharge bit register 1300 functions to substitute its A8, A9, A10, or (in anticipation of larger synchronous memory IC designs) A11 bit outputs for the before described A10 constant output., 275485=Continuing at logic step 1004 of FIG. 16, CPU 80 next writes to the UUT the lower 32 bits of the 40 bits of data in data latches 118. Referring to FIGS. 9 and 21, because a row address operation was performed at logic step 1003, the row activate latch 151 and precharge latch 153 within state machine 150 are already set, thus causing the state machine 150 to enter state 02 at 351 and the address multiplexer 196 to outputs precharge address pattern with bit A10=1. Upon the next cycle of the memory clock on line 121, the state machine 150 enters state 03 at 352 to effect a precharge operation on the UUT. Further, state decoder 154 asserts CS 156, RE 162, and WE 166. Upon the next cycle of the memory clock on line 121, the state machine 150 enters state 04 at 353 and UUT control lines resume their states in idle state 00 at 350. Upon the next cycle of the memory clock on line 121, the state machine enters state 07 at 366 where the UUT control lines remain unchanged from state 04 at 353., 301338=After logic step 1116, the logic flow proceeds to logic step 1118 where the part loop is tested for an end-of-table condition), and if the condition is not present, the logic flow loops to logic step 1112 for the next part loop iteration. Logic step 1118 comprises logic step 786 of FIG. 12f. Logic step 1114 of FIG. 19 saves the new maximum values for width and depth, and all parameters necessary for describing the most recently identified bank. Logic step 1114 comprises logic steps 788-790 of FIG. 12f. From either the terminal count exit of logic step 1118 or from logic step 1114, the logic flow proceeds to logic step 1120 of FIG. 19 where the DQMB loop index is incremented. Logic step 1120 is comprised of logic step 792 of FIG. 12f., 289485=Referring again to logic step 1015 of FIG. 17, the upper 8 bits of the UUT are read. State machine 150 recognizes read and write data operations in the upper 8 bits of a UUT word whenever physical address bit A2 at 692 of FIG. 11 is a logic 1. However, data operations to the upper 8 bits cause no UUT control signals to be generated. Only an acknowledgment is returned over line 203 to CPU 80, and data bits [7 . . . 0] of the data bus 126 are transferred to bits [39 . . . 32] of data latches 118 of FIG. 6., 298698=Following initialization of the tester hardware, the flow proceeds to logic step 1100 of FIG. 19 where initialization for the bank loop is performed at logic steps 724-726 of FIG. 12b., 359683=After logic step 1235, the logic flow continues by way of node HH to logic step 1236 of FIG. 30c where the number of logic 1's in the local variable DATA0 are counted and saved in a local variable COUNT. The logic flow then continues to logic step 1237 where the contents of the local variable COUNT are compared to the value \u201c24.\u201d If the COUNT is greater than or equal to the constant 24, the logic flow branches to logic step 824 of FIG. 12h to indicate a successful identification of an SGRAM UUT. Otherwise, the logic flow proceeds to logic step 1238 where the message \u201cSGRAM NOT RESPONDING\u201d is displayed. In the event that the internal SGRAM mask register contains a random, unalterable value, it is statistically unlikely that 75% of the bits following the exclusive-OR logic function would be logic 1's. Following logic step 1238, the logic flow continues to logic step 824 of FIG. 12h where the process is continued as before described., 299161=After logic step 1102 of FIG. 19, the logic flow proceeds to logic step 1104 where the CPU outputs the current setting for the RE control lines to the memory test controller, and initializes the CE control line loop at logic steps 732-734 of FIG. 12b., 82896=Referring to FIG. 6b UUT adapter 14 is detachable from tester 10 and comprises a 144 pin SO DIMM UUT socket 11 a and a 168 pin DIMM UUT socket 11 b. The module clock signal 130 is independently buffered by clock buffers 71 a and 71 b to provide second module clock signals CLK 39 a and 39 b, respectively, to UUT sockets 11 a and 11 b. The clock buffers 71 a and 71 b may be identified by part number PI49FCT3805S, and is available from Pericom Semiconductor Corp., 2380 Bering Drive, San Jose, Calif. 95131. Module sense lines 73 a and 73 b are respectively grounded when a memory module 20 is inserted into either of the UUT sockets 11 a or 11 b, thereby providing hardware means for auto-ID software to sense package type, the (SO DIMM 144 or DIMM 168) and enable clock buffers 71 a and 71 b to drive the clock signals 39 a and 39 b. Thus, for minimum electromagnetic radiation, the clock signal lines 39 a and 39 b, are not driven when there is no memory module in either UUT socket 11 a or UUT socket 11 b.}",
    "textBeforeTable": "Patent Citations It further will be realized by those skilled in the art that seven instead of six nested loops may be employed in the auto-ID process to accommodate variations in clock enable (CKE) control lines which are being contemplated in further synchronous memories including SGRAMs. It should be apparent to one skilled in the art that from the memory tester disclosures above, that the SGRAM also may be identified by selectively driving the DSF signal during the state machine 150 states 01 and 0A of FIG. 9 to set the special mode register bits A6 and A5 of the SGRAM. During state 07 of FIG. 9, the internal GRAM write-per-bit register may be set during row activation in accordance with SGRAM specifications. In the alternative, hardware may be included on the UUT test fixture to allow the CPU 80 to sense the SGRAMSs unique test fixture, and software may be included that exercises the SGRAM special mode, mask, and color registers. With the exception of the DSF line, operation of the control lines for an SGRAM is identical to that for an SDRAM. The SGRAM modules differ from a typical SDRAM module in that SGRAM modules include a DSF line 31 to enable the selection of the mode set register 1301 in the SGRAM IC, and have fewer CS control lines since SGRAM ICs are 32 bits wide. Further, fewer SGRAM ICs are required to make a",
    "textAfterTable": "Jul 27, 2005 Aug 12, 2008 Intel Corporation Method and apparatus for providing debug functionality in a buffered memory channel US7590016 * Apr 19, 2007 Sep 15, 2009 Fujitsu Microelectronics Limited Integrated circuit US7908530 * Mar 16, 2009 Mar 15, 2011 Faraday Technology Corp. Memory module and on-line build-in self-test method thereof for enhancing memory system reliability US8089817 * Jun 23, 2009 Jan 3, 2012 Elpida Memory, Inc. Precise tRCD measurement in a semiconductor memory device US8127152 * Nov 19, 2004 Feb 28, 2012 Rambus Inc. Method of operation of a memory device and system including initialization at a first frequency and operation at a second frequency and a power down exit mode US8171121 Sep 23, 2008 May 1, 2012 Intel Corporation Method, system, and apparatus for dynamic reconfiguration of resources US8312334 * Jan 7, 2011 Nov 13, 2012 Yokogawa Electric Corporation Semiconductor test",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}