{
    "relation": [
        [
            "XML Symbol",
            "",
            "",
            "",
            ""
        ],
        [
            "XML Example",
            "bcd",
            "\u00e0\u00e1\u00e2\u00e3",
            "P\uff50\uff30",
            "VwW"
        ],
        [
            "Equivalent",
            "bcd",
            "\u00e0\u00e1\u00e2\u00e3",
            "P\uff50\uff30",
            "<i>V</i> <i>w</i> <i>W</i>"
        ]
    ],
    "pageTitle": "UTS #35: Unicode Locale Data Markup Language",
    "title": "Abbreviating Ordering Specifications",
    "url": "http://unicode.org/reports/tr35/tr35-9.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986646.29/warc/CC-MAIN-20150728002306-00244-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 246958151,
    "recordOffset": 246836776,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{93376=<mapping registry=\"iana\" type=\"iso-2022-jp utf-8\" alt=\"email\" />, 13835=Locale data is not cast in stone: the data used on someone's machine generally may reflect the US format, for example, but preferences can typically set to override particular items, such as setting the date format for 2002.03.15, or using metric or Imperial measurement units. In the abstract, locales are simply one of many sets of preferences that, say, a website may want to remember for a particular user. Depending on the application, it may want to also remember the user's timezone, preferred currency, preferred character set, smoker/non-smoker preference, meal preference (vegetarian, kosher, etc.), music preference, religion, party affiliation, favorite charity, etc., 115440=These formats allow for date and time formats to be composed in various ways. The dateTimeFormat element works like the dateFormats and timeFormats, except that the pattern is of the form \"{1} {0}\", where {0} is replaced by the time format, and {1} is replaced by the date format, with results such as \"8/27/06 7:31 AM\"., 274347=HPG-8:35, 318108=<ldml version=\"1.1\"> \u00a0<identity> \u00a0 <version number=\"1.1\" /> \u00a0 <generation date=\"2004-06-04\" /> \u00a0 <language type=\"de\" /> \u00a0 <territory type=\"AT\" /> \u00a0</identity> </ldml>, 277754=Values calculated for the Week of Year field range from 1 to 53 for the Gregorian calendar (they may have different ranges for other calendars). Week 1 for a year is the first week that contains at least the specified minimum number of days from that year. Weeks between week 1 of one year and week 1 of the following year are numbered sequentially from 2 to 52 or 53 (if needed). For example, January 1, 1998 was a Thursday. If the first day of the week is MONDAY and the minimum days in a week is 4 (these are the values reflecting ISO 8601 and many national standards), then week 1 of 1998 starts on December 29, 1997, and ends on January 4, 1998. However, if the first day of the week is SUNDAY, then week 1 of 1998 starts on January 4, 1998, and ends on January 10, 1998. The first three days of 1998 are then part of week 53 of 1997., 298982=Patterns support padding the result to a specific width. In a pattern the pad escape character, followed by a single pad character, causes padding to be parsed and formatted. The pad escape character is '*'. For example, \"$*x#,##0.00\" formats 123 to \"$xx123.00\", and 1234 to \"$1,234.00\"., 69754=That is, Friday at 24:00:00 is the same time as Saturday at 00:00:00. Thus when the hour is missing, the from and to are interpreted inclusively: the range includes all of the day mentioned., 392240=User input is frequently messy. Attempting to parse it by matching it exactly against a pattern is likely to be unsuccessful, even when the meaning of the input is clear to a human being. For example, for a date pattern of \"MM/dd/yy\", the input \"June 1, 2006\" will fail., 303373=Single quotes, ('), enclose bits of the pattern that should be treated literally. Inside a quoted string, two single quotes ('') are replaced with a single one ('). For example: 'X '#' Q ' -> X 1939 Q (Literal strings underlined.), 275207=HPG-8:35, 119287=The dateRangePattern allows the specification of a date range, such as \"May 7 - Aug. 3\". For example, here is the format for English:, 330772=fallbackFormat: a formatting string such as \"{1} ({0})\", which is used to combine two pieces of zone information. May use constructed pieces, such as where the {1} is produced from the regionFormat., 72890=<generation date=\"$Date: 2007/07/17 23:41:16 $\" />, 433828=Copyright \u00a9 2001-2007 Unicode, Inc. All Rights Reserved. The Unicode Consortium makes no expressed or implied warranty of any kind, and assumes no liability for errors or omissions. No liability is assumed for incidental and consequential damages in connection with or arising out of the use of the information or programs contained or accompanying this technical report. The Unicode Terms of Use apply., 274364=GMT-08:35, 271926=GMT-08:00, 326506=<timezone type=\"America/Cambridge_Bay\"> \u00a0 <usesMetazone to=\"1999-10-31 08:00\" mzone=\"America_Mountain\"/> \u00a0 <usesMetazone to=\"2000-10-29 07:00\" from=\"1999-10-31 08:00\" mzone=\"America_Central\"/> \u00a0 <usesMetazone to=\"2000-11-05 05:00\" from=\"2000-10-29 07:00\" mzone=\"America_Eastern\"/> \u00a0 <usesMetazone to=\"2001-04-01 09:00\" from=\"2000-11-05 05:00\" mzone=\"America_Central\"/> \u00a0 <usesMetazone from=\"2001-04-01 09:00\" mzone=\"America_Mountain\"/> </timezone>, 123484=Each region that has a different timezone or daylight savings time rules, either now or at any time back to 1970, is given a unique internal ID, such as Europe/Paris. (Some IDs are also distinguished on the basis of differences before 1970.) As with currency codes, these are internal codes. A localized string associated with these is provided for users (such as in the Windows Control Panels>Date/Time>Time Zone)., 398652=The input can be separated into tokens: numbers, symbols, and literal strings. Some care must be taken due to ambiguity, e.g. in the Japanese locale the symbol for March is \"3 \u6708\", which looks like a number followed by a literal. To avoid these problems, symbols should be checked first, and spaces should be ignored (except to delimit the tokens of the input string)., 127546=A metazone's display fields become a secondary fallback if an appropriate data field cannot be found in the explicit time zone data. The usesMetazone field indicates that the target metazone is active for a particular time. This also provides a mechanism to effectively deal with situations where the time zone in use has changed for some reason. For example, consider the TZID \"America/Indiana/Knox\", which observed Central time (GMT-6:00) prior to October 27, 1991, and has currently observed Central time since April 2, 2006, but has observed Eastern time ( GMT-5:00 ) between these two dates. This is denoted as follows (in the supplemental data file metazoneInfo.xml -- in previous versions they were in root.xml)., 318720=<ldml version=\"1.1\" validSubLocales=\"de_AT de_CH de_DE\"> \u00a0<identity> \u00a0 <version number=\"1.1\" /> \u00a0 <generation date=\"2004-06-04\" /> \u00a0 <language type=\"de\" /> \u00a0</identity> ... </ldml>, 99144=Month, day, and quarter names may vary along two axes: the width and the context. The context is either format (the default), the form used within a date format string (such as \"Saturday, November 12th\", or stand-alone, the form used independently, such as in Calendar headers. The width can be wide (the default), abbreviated, or narrow. The format values must be distinct; that is, \"S\" could not be used both for Saturday and for Sunday. The same is not true for stand-alone values; they might only be distinguished by context, especially in the narrow format. That format is typically used in calendar headers; it must be the shortest possible width, no more than one character (or grapheme cluster) in stand-alone values, and the shortest possible widths (in terms of grapheme clusters) in format values., 292721=Numbers in scientific notation are expressed as the product of a mantissa and a power of ten, for example, 1234 can be expressed as 1.234 x 103. The mantissa is typically in the half-open interval [1.0, 10.0) or sometimes [0.0, 1.0), but it need not be. In a pattern, the exponent character immediately followed by one or more digit characters indicates scientific notation. Example: \"0.###E0\" formats the number 1234 as \"1.234E3\"., 300648=Patterns support rounding to a specific increment. For example, 1230 rounded to the nearest 50 is 1250. Mathematically, rounding to specific increments is performed by multiplying by the increment, rounding to an integer, then dividing by the increment. To take a more bizarre example, 1.234 rounded to the nearest 0.65 is 1.3, as follows:, 279728=The NumberElements resource affects how these patterns are interpreted in a localized context. Here are some examples, based on the French locale. The \".\" shows where the decimal point should go. The \",\" shows where the thousands separator should go. A \"0\" indicates zero-padding: if the number is too short, a zero (in the locale's numeric set) will go there. A \"#\" indicates no padding: if the number is too short, nothing goes there. A \"\u00a4\" shows where the currency sign will go. The following illustrates the effects of different patterns for the French locale, with the number \"1234.567\". Notice how the pattern characters ',' and '.' are replaced by the characters appropriate for the locale., 63768=\"proposed\" should only be present if the draft status is not \"approved\". It indicates that the data is proposed replacement data that has been added provisionally until the differences between it and the other data can be vetted. For example, suppose that the translation for September for some language is \"Settembru\", and a bug report is filed that that should be \"Settembro\". The new data can be entered in, but marked as alt=\"proposed\" until it is vetted., 315545=<ldml version=\"1.1\" draft=\"unconfirmed\"> \u00a0<identity> \u00a0 <version number=\"1.1\" /> \u00a0 <generation date=\"2004-06-04\" /> \u00a0 <language type=\"af\" /> \u00a0</identity> \u00a0<characters>...</characters> \u00a0<localeDisplayNames>...</localeDisplayNames> </ldml>, 316397=<ldml version=\"1.1\" draft=\"unconfirmed\"> \u00a0<identity> \u00a0 <version number=\"1.1\" /> \u00a0 <generation date=\"2004-06-04\" /> \u00a0 <language type=\"af\" /> \u00a0</identity> \u00a0<characters draft=\"approved\">...</characters> \u00a0<localeDisplayNames>...</localeDisplayNames> \u00a0<dates/> \u00a0<numbers/> \u00a0<collations/> </ldml>, 123049=\"During the period commencing at 2 o'clock antemeridian on the first Sunday of April of each year and ending at 2 o'clock antemeridian on the last Sunday of October of each year, the standard time of each zone established by sections 261 to 264 of this title, as modified by section 265 of this title, shall be advanced one hour...\" (United States Law - 15 U.S.C. \u00a76(IX)(260-7))., 130261=When formatting a date and time value using this data, an application can properly be able to display \"Eastern Time\" for dates between 1991-10-27 and 2006-04-02, but display \"Central Time\" for current dates. \u00a0(See also Section 5.2.1 Dates and Date Ranges).}",
    "lastModified": "Tue, 06 May 2008 20:31:27 GMT",
    "textBeforeTable": "Note that some private use field values may be given specific values when used with LDML. The field values are given in the following table. All field values are case-insensitive, except for the type, which is case-sensitive. However, customarily the language code is lowercase, the territory and variant codes are uppercase, the script code is titlecase (that is, first character uppercase and other characters lowercase), and variants are uppercase. This convention is used in the file names, which may be case-sensitive depending on the operating system. Customarily the currency IDs are uppercase and timezone IDs are titlecase by field (as defined in the timezone database); other key and type codes are lowercase. The type may also be referred to as a key-value, for clarity. language_code (\"_\" script_code)? (\"_\" territory_code)? (\"_\" variant_code)* A locale ID is an extension of a language ID, and thus the structure and field values are based on [BCP47]. The registry of data for that successor is now being maintained by IANA. The canonical form of a locale ID uses \"_\" instead of the \"-\" used in [BCP47]; however, implementations providing APIs for CLDR locale IDs should treat \"-\" as equivalent to \"_\" on input. The most common format for the base_locale_id is a series of one or more fields of the form: For historical reasons, this is called a locale ID. However, it really functions (with few exceptions) as a language ID, and accesses language-based data. There used to be some",
    "textAfterTable": "Users should however be aware that if these codes are not accepted into [BCP47], that they will be replaced by whatever codes are used, or by private use codes. The private use codes from qfz..qtz will never be used by CLDR, and are thus safe for use for other purposes by applications using CLDR data. script_code ASCII letters [BCP47] subtag values marked as Type: script In most cases the script is not necessary, since the language is only customarily written in a single script. Examples of cases where it is used are: az_Arab Azerbaijani in Arabic script az_Cyrl Azerbaijani in Cyrillic script az_Latn Azerbaijani in Latin script zh_Hans Chinese, in simplified script zh_Hant Chinese, in traditional script CLDR allows for the use of the Unicode Script values [UAX24]: Common Zyyy Inherited Qaai Unknown Zzzz The private use codes from Qaaq..Qabx will never be used by CLDR, and are thus safe for use for other purposes by applications using CLDR data. territory_code ASCII letters, numbers [BCP47] subtag values marked as Type: region, or any UN M.49 code that doesn't correspond to a [BCP47] region subtag. There are three private use codes defined in LDML:",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}