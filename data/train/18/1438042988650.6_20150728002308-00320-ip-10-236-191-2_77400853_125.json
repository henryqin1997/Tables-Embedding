{
    "relation": [
        [
            "Module",
            "AMQP",
            "Events",
            "Feed",
            "File",
            "FTP(S)",
            "Gemfire",
            "HTTP",
            "JDBC",
            "JMS",
            "JMX",
            "JPA",
            "Mail",
            "MongoDB",
            "MQTT",
            "Redis",
            "Resource",
            "RMI",
            "SFTP",
            "Stream",
            "Syslog",
            "TCP",
            "Twitter",
            "UDP",
            "Web Services",
            "XMPP"
        ],
        [
            "Inbound Adapter",
            "Section 10.2, \u201cInbound Channel Adapter\u201d",
            "Section 11.1, \u201cReceiving Spring ApplicationEvents\u201d",
            "Section 12.2, \u201cFeed Inbound Channel Adapter\u201d",
            "Section 13.2, \u201cReading Files\u201d and Section 13.2.1, \u201c'Tail'ing Files\u201d",
            "Section 14.3, \u201cFTP Inbound Channel Adapter\u201d",
            "Section 15.2, \u201cInbound Channel Adapter\u201d and Section 15.3, \u201cContinuous Query Inbound Channel Adapter\u201d",
            "Section 16.4, \u201cHTTP Namespace Support\u201d",
            "Section 17.1, \u201cInbound Channel Adapter\u201d and Section 17.5.6, \u201cStored Procedure Inbound Channel Adapter\u201d",
            "Section 19.1, \u201cInbound Channel Adapter\u201d and Section 19.2, \u201cMessage-Driven Channel Adapter\u201d",
            "Section 8.1.1, \u201cNotification Listening Channel Adapter\u201d and Section 8.1.3, \u201cAttribute Polling Channel Adapter\u201d and Section 8.1.4, \u201cTree Polling Channel Adapter\u201d",
            "Section 18.4, \u201cInbound Channel Adapter\u201d",
            "Section 20.2, \u201cMail-Receiving Channel Adapter\u201d",
            "Section 21.4, \u201cMongoDB Inbound Channel Adapter\u201d",
            "Section 22.2, \u201cInbound (message-driven) Channel Adapter\u201d",
            "Section 23.3.2, \u201cRedis Inbound Channel Adapter\u201d and Section 23.3.4, \u201cRedis Queue Inbound Channel Adapter\u201d and Section 23.6, \u201cRedisStore Inbound Channel Adapter\u201d",
            "Section 24.2, \u201cResource Inbound Channel Adapter\u201d",
            "N",
            "Section 26.5, \u201cSFTP Inbound Channel Adapter\u201d",
            "Section 27.2, \u201cReading from streams\u201d",
            "Section 28.2, \u201cSyslog \u201d",
            "Section 29.6, \u201cTCP Adapters\u201d",
            "Section 30.4, \u201cTwitter Inbound Adapters\u201d",
            "Section 29.2, \u201cUDP Adapters\u201d",
            "N",
            "Section 33.3, \u201cXMPP Messages\u201d and Section 33.4, \u201cXMPP Presence\u201d"
        ],
        [
            "Outbound Adapter",
            "Section 10.5, \u201cOutbound Channel Adapter\u201d",
            "Section 11.2, \u201cSending Spring ApplicationEvents\u201d",
            "N",
            "Section 13.3, \u201cWriting files\u201d",
            "Section 14.4, \u201cFTP Outbound Channel Adapter\u201d",
            "Section 15.4, \u201cOutbound Channel Adapter\u201d",
            "Section 16.4, \u201cHTTP Namespace Support\u201d",
            "Section 17.2, \u201cOutbound Channel Adapter\u201d and Section 17.5.7, \u201cStored Procedure Outbound Channel Adapter\u201d",
            "Section 19.3, \u201cOutbound Channel Adapter\u201d",
            "Section 8.1.2, \u201cNotification Publishing Channel Adapter\u201d and Section 8.1.5, \u201cOperation Invoking Channel Adapter\u201d",
            "Section 18.5, \u201cOutbound Channel Adapter\u201d",
            "Section 20.1, \u201cMail-Sending Channel Adapter\u201d",
            "Section 21.5, \u201cMongoDB Outbound Channel Adapter\u201d",
            "Section 22.3, \u201cOutbound Channel Adapter\u201d",
            "Section 23.3.3, \u201cRedis Outbound Channel Adapter\u201d and Section 23.3.5, \u201cRedis Queue Outbound Channel Adapter\u201d and Section 23.7, \u201cRedisStore Outbound Channel Adapter\u201d",
            "N",
            "N",
            "Section 26.6, \u201cSFTP Outbound Channel Adapter\u201d",
            "Section 27.3, \u201cWriting to streams\u201d",
            "N",
            "Section 29.6, \u201cTCP Adapters\u201d",
            "Section 30.5, \u201cTwitter Outbound Adapter\u201d",
            "Section 29.2, \u201cUDP Adapters\u201d",
            "N",
            "Section 33.3, \u201cXMPP Messages\u201d and Section 33.4, \u201cXMPP Presence\u201d"
        ],
        [
            "Inbound Gateway",
            "Section 10.3, \u201cInbound Gateway\u201d",
            "N",
            "N",
            "N",
            "N",
            "N",
            "Section 16.2, \u201cHttp Inbound Gateway\u201d",
            "N",
            "Section 19.4, \u201cInbound Gateway\u201d",
            "N",
            "N",
            "N",
            "N",
            "N",
            "N",
            "N",
            "Section 25.3, \u201cInbound RMI\u201d",
            "N",
            "N",
            "N",
            "Section 29.7, \u201cTCP Gateways\u201d",
            "N",
            "N",
            "Section 31.2, \u201cInbound Web Service Gateways\u201d",
            "N"
        ],
        [
            "Outbound Gateway",
            "Section 10.6, \u201cOutbound Gateway\u201d",
            "N",
            "N",
            "Section 13.3, \u201cWriting files\u201d",
            "Section 14.5, \u201cFTP Outbound Gateway\u201d",
            "N",
            "Section 16.3, \u201cHttp Outbound Gateway\u201d",
            "Section 17.3, \u201cOutbound Gateway\u201d and Section 17.5.8, \u201cStored Procedure Outbound Gateway\u201d",
            "Section 19.5, \u201cOutbound Gateway\u201d",
            "Section 8.1.6, \u201cOperation Invoking Outbound Gateway\u201d",
            "Section 18.6.2, \u201cUpdating Outbound Gateway\u201d and Section 18.6.3, \u201cRetrieving Outbound Gateway\u201d",
            "N",
            "N",
            "N",
            "Section 23.8, \u201cRedis Outbound Command Gateway\u201d",
            "N",
            "Section 25.2, \u201cOutbound RMI\u201d",
            "Section 26.7, \u201cSFTP Outbound Gateway\u201d",
            "N",
            "N",
            "Section 29.7, \u201cTCP Gateways\u201d",
            "Section 30.6, \u201cTwitter Search Outbound Gateway\u201d",
            "N",
            "Section 31.1, \u201cOutbound Web Service Gateways\u201d",
            "N"
        ]
    ],
    "pageTitle": "Spring Integration Reference Manual",
    "title": "",
    "url": "http://docs.spring.io/spring-integration/docs/4.0.0.BUILD-SNAPSHOT/reference/htmlsingle/",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 125,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988650.6/warc/CC-MAIN-20150728002308-00320-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 77603451,
    "recordOffset": 77400853,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{641017=Value is set on the underlying class PollerMetadata Optional. If not specified it defaults to 1000 (milliseconds)., 722966=* reply-timeout is unbounded for <gateway/> elements (created by the GatewayProxyFactoryBean). Inbound gateways for external integration (ws, http, etc.) share many characteristics and attributes with these gateways. However, for those inbound gateways, the default reply-timeout is 1000 milliseconds (1 second). If a downstream async handoff is made to another thread, you may need to increase this attribute to allow enough time for the flow to complete before the gateway times out., 1795=Copyright \u00a9 2009, 2010, 2011, 2012, 2013, 2014 GoPivotal, Inc. All Rights Reserved., 808434=The RequestHandlerCircuitBreakerAdvice has two properties: threshold and halfOpenAfter. The threshold property represents the number of consecutive failures that need to occur before the breaker goes open. It defaults to 5. The halfOpenAfter property represents the time after the last failure that the breaker will wait before attempting another request. Default is 1000 milliseconds.}",
    "textBeforeTable": "Table\u00a09.1.\u00a0 To recap, Inbound Channel Adapters are used for one-way integration bringing data into the messagng application. Outbound Channel Adapters are used for one-way integration to send data out of the messaging application. Inbound Gateways are used for a bidirectional integration flow where some other system invokes the messaging application and receives a reply. Outbound Gateways are used for a bidirectional integration flow where the messaging application invokes some external service or entity, expecting a result. As discussed in the sections above, Spring Integration provides a number of endpoints used to interface with external systems, file systems etc. The following is a summary of the various endpoints with quick links to the appropriate chapter. 9.\u00a0Endpoint Quick Reference Table This section covers the various Channel Adapters and Messaging Gateways provided by Spring Integration to support Message-based communication with external systems. Part\u00a0IV.\u00a0Integration Endpoints Finally, the operation can be invoked using the <control-bus>; see the monitoring Spring Integration sample application for details. For this reason, if you wish to invoke the method programmatically, it is recommended that you provide the exporter with an id attribute so it can easily be accessed in",
    "textAfterTable": "In addition, as discussed in Part\u00a0III, \u201cCore Messaging\u201d, endpoints are provided for interfacing with Plain Old Java Objects (POJOs). As discussed in Section\u00a03.3, \u201cChannel Adapter\u201d, the <int:inbound-channel-adapter> allows polling a java method for data; the <int:outbound-channel-adapter> allows sending data to a void method, and as discussed in Section\u00a07.2, \u201cMessaging Gateways\u201d, the <int:gateway> allows any Java program to invoke a messaging flow. Each of these without requiring any source level dependencies on Spring Integration. The equivalent of an outbound gateway in this context would be to use a Section\u00a07.3, \u201cService Activator\u201d to invoke a method that returns an Object of some kind. 10.\u00a0AMQP Support 10.1\u00a0Introduction Spring Integration provides Channel Adapters for receiving and sending messages using the Advanced Message Queuing Protocol (AMQP). The following adapters are available: Inbound Channel Adapter Outbound Channel Adapter Inbound Gateway Outbound Gateway Spring Integration also provides a point-to-point Message Channel as well as a publish/subscribe Message Channel backed by AMQP Exchanges and Queues. In order to provide AMQP support, Spring Integration relies on Spring AMQP (http://www.springsource.org/spring-amqp) which \"applies core",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}