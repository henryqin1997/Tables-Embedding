{
    "relation": [
        [
            "Field 1",
            "Container Type",
            "Override Default Class",
            "Key Method"
        ],
        [
            "Description",
            "Specify the type of Collection class to use: List\u2013use a java.util.List Set\u2013use a java.util.Set Collection\u2013use a java.util.Collection Map\u2013use a java.util.Map",
            "Specify to use a custom class as the mapping's container policy. Click Browse to select a different class. The container class must implement (directly or indirectly) the java.util.Collection interface.",
            "If you configure Container Type as Map, use this option to specify the name of the zero argument method whose result, when called on the target object, is used as the key in the Hashtable or Map. This method must return an object that is a valid key in the Hashtable or Map."
        ]
    ],
    "pageTitle": "Configuring a Mapping (ELUG) - Eclipsepedia",
    "title": "",
    "url": "http://wiki.eclipse.org/Configuring_a_Mapping_(ELUG)",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989142.82/warc/CC-MAIN-20150728002309-00093-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 261171367,
    "recordOffset": 261134165,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{336149=Copyright \u00a9 2014 The Eclipse Foundation. All Rights Reserved., 331902=This page was last modified 15:43, 14 July 2010 by . Based on work by Rick Sapir, Liza Rekadze and Himanshu Marathe.}",
    "lastModified": "Tue, 30 Dec 2014 14:52:36 GMT",
    "textBeforeTable": "Use the following Advanced Container Options fields on the General tab to specify the container options: Complete Advanced Container Options on the tab. Click the Advanced button. The Advanced Container Options appear on the General tab. General Tab, Advanced Container Options Click the General tab. The General tab appears. Select the mapped attribute in the Navigator. Its properties appear in the Editor. To specify a mapping's container policy, use this procedure: How to Configure Container Policy Using Workbench XML Collection Reference Mapping",
    "textAfterTable": "1 Not all mappings support all options. For more information, see the Mapping Support for Container Policy table. How to Configure Container Policy Using Java Classes that implement the org.eclipse.persistence.mappings.ContainerMapping interface provide the following methods to set the container policy: useCollectionClass(java.lang.Class concreteClass)\u2013Configure the mapping to use an instance of the specified java.util.Collection container class to hold the target objects. useMapClass(java.lang.Class concreteClass, java.lang.String methodName)\u2013Configure the mapping to use an instance of the specified java.util.Map container class to hold the target objects. The key used to index a value in the Map is the value returned by a call to the specified zero-argument method. The method must be implemented by the class (or a superclass) of any value to be inserted into the Map. Classes that extend org.eclipse.persistence.mappings.CollectionMapping (which implements the ContainerMapping interface) also provide the following methods to set the container policy: useSortedSetClass(java.lang.Class concreteClass, java.util.Comparator comparator)\u2013Configure the mapping to use an instance of the specified java.util.SortedSet container class. Specify the Comparator to use to sort the target objects. The following example shows how to configure a DirectCollectionMapping to use a java.util.ArrayList container class. Direct Collection Mapping // Create a new mapping and register it with the source descriptor DirectCollectionMapping phonesMapping = new DirectCollectionMapping(); phonesMapping.setAttributeName(\"phones\"); phonesMapping.setGetMethodName(\"getPhones\"); phonesMapping.setSetMethodName(\"setPhones\"); phonesMapping.setReferenceTableName(\"PHONES_TB\"); phonesMapping.setDirectFieldName(\"PHONES\"); phonesMapping.useCollectionClass(ArrayList.class); // set container policy descriptor.addMapping(phonesMapping); Configuring Attribute Transformer A",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}