{
    "relation": [
        [
            "Attribute Name",
            "name",
            "dialogid",
            "connectionid",
            "conferenceid",
            "namelist",
            "values.*",
            "eventsource",
            "eventsourcetype"
        ],
        [
            "Required",
            "true",
            "true",
            "false",
            "false",
            "false",
            "false",
            "true",
            "true"
        ],
        [
            "Type",
            "string",
            "string",
            "string",
            "string",
            "string valued array",
            "ECMAScript Object",
            "string",
            "string"
        ],
        [
            "Details",
            "dialog.disconnect",
            "The ID of the dialog.",
            "The identifier of the connection to which the dialog connection is bridged (usually the connectionid that was specified in the dialogstart). If the dialog is bridged to a conference the value must be undefined.",
            "The identifier of the conference to which the dialog connection is bridged (usually the conferenceid that was specified in the dialogstart). If the dialog is bridged to a connection the value must be undefined.",
            "If the namelist attribute was specified in the Dialog's disconnect element, this property must be a string valued array of the names in the list. The length of the property must be equal to the number of names in the list. The actual values are stored in the \"values\" sub-object.",
            "Each name in the namelist is a property whose value must be the value of the name at the time the Dialog's disconnect element was executed.",
            "The unique identifier of the event source. This identifies the DIALOG Event I/O Processor that sent this event.",
            "The name of the Event I/O Processor that sent this event. This must be set to dialog as this is an event generated by the Dialog Session Event processor."
        ]
    ],
    "pageTitle": "Voice Browser Call Control: CCXML Version 1.0",
    "title": "",
    "url": "http://www.w3.org/TR/2005/WD-ccxml-20050629/",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989043.35/warc/CC-MAIN-20150728002309-00221-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 828337283,
    "recordOffset": 828238232,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{45400=This document was produced under the 5 February 2004 W3C Patent Policy. The Working Group maintains a public list of patent disclosures relevant to this document; that page also includes instructions for disclosing [and excluding] a patent. An individual who has actual knowledge of a patent which the individual believes contains Essential Claim(s) with respect to this specification should disclose the information in accordance with section 6 of the W3C Patent Policy., 47261=This is a W3C Last Call Working Draft for review by W3C Members and other interested parties. Last Call means that the Working Group believes that this specification is technically sound and therefore wishes this to be the Last Call for comments. If the feedback is positive, the Working Group plans to submit it for consideration as a W3C Candidate Recommendation. Comments can be sent until 29 July 2005., 50475=Copyright \u00a92005 W3C\u00ae (MIT, ERCIM, Keio), All Rights Reserved. W3C liability, trademark and document use rules apply.}",
    "TableContextTimeStampAfterTable": "{5978=The <ccxml> can designate the CCXML namespace. This can be achieved by declaring an xmlns attribute or an attribute with an \" xmlns \" prefix. See [XMLNS] for details. Note that when the xmlns attribute is used alone, it sets the default namespace for the element on which it appears and for any child elements. The namespace URI for CCXML is \"http://www.w3.org/2002/09/ccxml\"., 501867=It is recommended that the <ccxml> element indicate the location of the CCXML schema (see Appendix C) via the xsi:schemaLocation attribute from [SCHEMA2]: xsi:schemaLocation=\"http://www.w3.org/2002/09/ccxml http://www.w3.org/TR/ccxml/ccxml.xsd\" There may be a DOCTYPE declaration in the document prior to the root element. If present, the public identifier included in the DOCTYPE declaration must reference the CCXML DTD (Appendix B) using its Formal Public Identifier: <!DOCTYPE ccxml PUBLIC \"-//W3C//DTD CCXML 1.0//EN\" \"http://www.w3.org/TR/ccxml/ccxml.dtd\">, 482551=This W3C specification is based upon a former CCXML specification, contributed to the Voice Browser Working Group in April 2001. The CCXML authors were:, 497886=Several CCXML instructions may cause arbitrary URIs to be referenced. In this case, the security issues of RFC1738, section 6, should be considered., 180408=During the processing of an event by the EHIA, the state of any ECMAScript objects exposed by a platform, such as the Connection object, must reflect the state of the CCXML session immediately following the occurrence of the event. For instance, if a 'connection.alerting' event is being processed against a connection with ID 1234, then session.connections['1234'].state would have a value of 'ALERTING'. This is true even if the actual connection has already been terminated, with a 'connection.disconnected' event queued (but not yet processed) against the session. It is required that the ECMAScript state for the session is updated prior to the selection of a matching <transition>, since the <transition> might contain an ECMAScript conditional expression the value of which depends on the state changes caused by the event., 441185=The VoiceXML interpreter is responsible for throwing this event when a \"hotword\" grammar is matched while performing a bridged transfer.}",
    "lastModified": "Tue, 28 Jun 2005 21:29:00 GMT",
    "textBeforeTable": "The fields of this event are: This event is generated when a fetch request completes. It is delivered to the document which issued the request. 6.3.2: fetch.done - Fetch Completion Event CCXML allows operations such as document fetching, startup and shutdown to execute independently. CCXML events that describe these operations are defined below: 6.3.1: Overview 6.3: Events An ECMAScript expression evaluating to a string to be logged. none ECMAScript Expression true expr An ECMAScript expression which returns a character string which must be used, for example, to indicate the purpose of the log. none ECMAScript Expression false label Description Valid Values Default Value Type Attribute Constraints Required Name 6.2.11.2 <log> Attribute Details <log> allows an application to generate a logging or debug message which a developer can use to help in application development or post-execution analysis of application performance. The manner in which the message is displayed or logged is platform-dependent. The usage of label is platform-dependent. The use of <log> SHOULD have no other side-effects on interpretation. <log>is an empty element. 6.2.11.1: Overview 6.2.11: <log> A CCXML document executing the <exit> will generate a ccxml.exit event to the parent session. The exiting document will be identified on the exit event by its session ID.",
    "textAfterTable": "fetchid true string The internally generated unique fetch identifier reason true string A string description of the fetch error. Content of this field is platform-specific. uri true string The URI of the fetch request eventsource true string The unique identifier of the event source. This identifies the CCXML Event I/O Processor that sent this event. eventsourcetype true string The name of the Event I/O Processor that sent this event. This must be set to ccxml as this is an event generated by the CCXML Session Event processor. 6.3.4: ccxml.exit - CCXML Document Exit Event This event is generated when a CCXML document executes an <exit>. This event is only generated when the session executing the <exit/> has a parent session. This event is sent to the parent session and not the session executing the <exit/>. The fields of this event are: Attribute Name Required Type Details name true string ccxml.exit sessionid true string The identifier of the exiting session. This must be the same value that was returned to the sessionid attribute of the createccxml which created this session. expr true string",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}