{
    "relation": [
        [
            "Parameter",
            "handle",
            "table",
            "keys",
            "result",
            "maxsize",
            "retsize"
        ],
        [
            "Type",
            "ttXlaHandle_h",
            "ttXlaTblDesc_t*",
            "void*",
            "out void*",
            "SQLINTEGER",
            "out SQLINTEGER*"
        ],
        [
            "Description",
            "The transaction log handle for the data store.",
            "The table to search.",
            "A record in the defined structure for the table. Only those columns of the keys record that are part of the primary key for the table are examined.",
            "The located record is copied into the result. If no record exists with the matching key columns, an error is returned.",
            "The size of the largest record that can fit into the result buffer.",
            "The actual size of the record."
        ]
    ],
    "pageTitle": "XLA Reference",
    "title": "",
    "url": "http://docs.oracle.com/cd/E18283_01/timesten.112/e13066/xla_ref.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987127.36/warc/CC-MAIN-20150728002307-00284-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 76092107,
    "recordOffset": 76050532,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{117661=Note: The largest effective value is 1000 records.}",
    "lastModified": "Sat, 14 Aug 2010 15:01:20 GMT",
    "textBeforeTable": "Parameters out SQLINTEGER* retsize) SQLINTEGER maxsize, out void* result, void* keys, ttXlaTableDesc_t* table, SQLRETURN ttXlaLookup(ttXlaHandle_h handle, Syntax  Requires the system privilege XLA. Required privilege  This function looks for a record in the given table with the key values specified in the keys parameter. The formats of the keys and result record are the same as for ordinary rows. This function requires a primary key on the underlying table. Description  ttXlaLookup    ttXlaSetVersion  ttXlaVersionCompare  See also  rc = ttXlaGetVersion(xlahandle, &configured, &actual); To determine the current version configuration, use the call: ttXlaVersion_t configured, actual; Assume the following directions for this example: Example  SQL_SUCCESS if call is successful. Otherwise, use ttXlaError to report the error. Returns   The actual version of XLA. out ttXlaVersion_t* actualVersion The configured version of XLA. out ttXlaVersion_t* configuredVersion The transaction log handle for the data store.",
    "textAfterTable": "Returns SQL_SUCCESS if call is successful. Otherwise, use ttXlaError to report the error. Example This example looks up a record given a pair of integer key values. Before this call, table should describe the desired table and keybuffer contains a record with the key columns set. char keybuffer[100]; char recbuffer[2000]; ttXlaTableDesc_t table; SQLINTEGER recordSize; rc = ttXlaLookup(xlahandle, &table, keybuffer, recbuffer, sizeof (recbuffer), &recordSize); See also ttXlaApply ttXlaCommit ttXlaRollback ttXlaTableCheck ttXlaGenerateSQL ttXlaNextUpdate Description This function fetches up to maxrecords update records from the transaction log and returns the records associated with committed transactions to the records buffer. The actual number of returned records is reported in the nreturned output parameter. This function requires a bookmark to be present in the data store and to be associated with the connection used by the function. When operating the transaction log in persistent mode, each call to ttXlaNextUpdate resets the bookmark to the last record read to enable the next call to ttXlaNextUpdate to return the next list of records. See \"Retrieving update records from the transaction log\" for a discussion about using this function. Required privilege",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}