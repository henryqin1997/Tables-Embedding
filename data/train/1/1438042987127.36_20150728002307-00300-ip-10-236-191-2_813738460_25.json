{
    "relation": [
        [
            "If AllDecl(G) contains this declaration...",
            "Declaration( Class( *:x ) )",
            "Declaration( Datatype( *:x ) )",
            "Declaration( ObjectProperty( *:x ) )",
            "Declaration( DataProperty( *:x ) )",
            "Declaration( AnnotationProperty( *:x ) )"
        ],
        [
            "...then perform this assignment.",
            "CE(*:x) := a class variable with name *:x",
            "DR(*:x) := a datatype variable with name *:x",
            "OPE(*:x) := an object property variable with name *:x",
            "DPE(*:x) := a data property variable with name *:x",
            "AP(*:x) := an annotation property with name *:x"
        ]
    ],
    "pageTitle": "SPARQL 1.1 Entailment Regimes",
    "title": "",
    "url": "http://www.w3.org/TR/2010/WD-sparql11-entailment-20101014/",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987127.36/warc/CC-MAIN-20150728002307-00300-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 813788123,
    "recordOffset": 813738460,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{15186=1 Introduction \u00a0\u00a0\u00a0\u00a01.1 Document Conventions \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01.1.1 Graph Syntax \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01.1.2 Namespaces \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01.1.3 Preliminary Definitions \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01.1.4 Result Descriptions \u00a0\u00a0\u00a0\u00a01.2 Effects of Different Entailment Regimes \u00a0\u00a0\u00a0\u00a01.3 Extensions to Basic Graph Pattern Matching \u00a0\u00a0\u00a0\u00a01.4 Parts of an Entailment Regime 2 RDF Entailment Regime \u00a0\u00a0\u00a0\u00a02.1 Blank Nodes in the Queried Graph (Informative) \u00a0\u00a0\u00a0\u00a02.2 Answers from Axiomatic Triples (Informative) \u00a0\u00a0\u00a0\u00a02.3 Literals in the Subject Position (Informative) \u00a0\u00a0\u00a0\u00a02.4 Boolean Queries (Informative) 3 RDFS Entailment Regime \u00a0\u00a0\u00a0\u00a03.1 Inconsistencies (Informative) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a03.1.1 Effects of Unchecked Inconsistencies \u00a0\u00a0\u00a0\u00a03.2 Aggregates and Blank Nodes (Informative) 4 D-Entailment Regime \u00a0\u00a0\u00a0\u00a04.1 Canonical Lexical Representations (Informative) 5 OWL 2 RDF-Based Semantics Entailment Regime \u00a0\u00a0\u00a0\u00a05.1 Entailments under the OWL 2 RDF-Based Semantics (Informative) \u00a0\u00a0\u00a0\u00a05.2 Restriction on Solutions \u00a0\u00a0\u00a0\u00a05.3 Computing Query Answers under the RDF-Based Semantics (Informative) \u00a0\u00a0\u00a0\u00a05.4 The OWL 2 RL Profile \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05.4.1 Computing Query Answers for the OWL 2 RL Profile with RDF-Based Semantics (Informative) 6 OWL 2 Direct Semantics Entailment Regime \u00a0\u00a0\u00a0\u00a06.1 Introduction \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a06.1.1 OWL Import Directives \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a06.1.2 Extended Grammar for OWL 2 Direct Semantics BGPs \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a06.1.3 Variable Typing \u00a0\u00a0\u00a0\u00a06.2 The OWL 2 Direct Semantics Entailment Regime \u00a0\u00a0\u00a0\u00a06.3 Restrictions on Solutions (Informative) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a06.3.1 BGP Constraints for OWL 2 DL \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a06.3.2 Queries with Variables in Literal Positions \u00a0\u00a0\u00a0\u00a06.4 Higher Order Queries (Informative) \u00a0\u00a0\u00a0\u00a06.5 OWL 2 Profiles for Direct Semantics \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a06.5.1 OWL 2 DL \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a06.5.2 The OWL 2 EL Profile \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a06.5.3 The OWL 2 QL Profile \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a06.5.4 The OWL 2 RL Profile 7 RIF Core Entailment \u00a0\u00a0\u00a0\u00a07.1 Referencing a RIF Core document \u00a0\u00a0\u00a0\u00a07.2 (Simple) RIF Core Entailment Regime \u00a0\u00a0\u00a0\u00a07.3 Custom Rulesets for Common Vocabulary Interpretations (Informative) \u00a0\u00a0\u00a0\u00a07.4 Finite Answer Set Conditions (Informative) 8 Entailment Regimes and Data Sets (Informative) 9 Entailment Regimes and Updates (Informative), 16055=This document was produced by a group operating under the 5 February 2004 W3C Patent Policy. W3C maintains a public list of any patent disclosures made in connection with the deliverables of the group; that page also includes instructions for disclosing a patent. An individual who has actual knowledge of a patent which the individual believes contains Essential Claim(s) must disclose the information in accordance with section 6 of the W3C Patent Policy., 20064=The third working draft also includes entailment regimes for D-entailment, OWL with RDF-Based Semantics including the OWL 2 RL Profile, and an entailment regime for the (safe) core dialect of the rule interchange format RIF. All regimes now take answers from the vocabulary of the queried graph and a vocabulary for the regime. As a consequence, very few entailed triples are omitted from the answers, while finiteness is preserved even under inconsistencies. The OWL Direct Semantics regime has been revised to make the mapping from triples in the basic graph pattern to OWL objects more precise. A grammar is used to define well-formed queries for the regime, which simplifies the conditions on answers. The OWL RL profile has also been added for the OWL 2 Direct Semantics entailment regimes. The previous modifications to the OWL Direct Semantics entailment relation have been removed. Queries for annotations might be added in a future version of the specification in a regime that extends the OWL 2 Direct Semantics regime.}",
    "TableContextTimeStampAfterTable": "{131807=The functions CE(x), DR(x), OPE(x), and DPE(x) extend the respective functions in the section Mapping to RDF graphs [OWL 2 Mapping to RDF Graphs] to map into instances of the extended grammar for OWL 2 Direct Semantics BGPs, i.e., the functions also take variables as input and they map to objects that correspond to the extended structural specification for BGPs. The functions are initialized as in Table 9 of [OWL 2 Mapping to RDF Graphs] for non-variable declarations (*:x is not a variable) and extended for the case where *:x is a variable as follows:, 78515=Since the OWL 2 Direct Semantics is defined in terms of OWL objects, it is necessary to map from the triple-based BGP representation into an OWL object representation that additionally allows for variables. The appendix precisely specifies how the OWL 2 mapping from RDF graphs [OWL 2 Mapping to RDF Graphs] can be extended to basic graph patterns. The result of this mapping is an instance of an extended OWL 2 DL grammar, where the productions for Class, ObjectProperty, DataProperty, Individual, and Literal of the OWL 2 functional-style syntax grammar [OWL 2 Structural Specification] are extended to alternatively produce variables, i.e., instances of the Var production from the SPARQL grammar.}",
    "lastModified": "Thu, 14 Oct 2010 12:05:42 GMT",
    "textBeforeTable": "The functions CE(x), DR(x), OPE(x), and DPE(x) extend the respective functions in the section Mapping to RDF graphs [OWL 2 Mapping to RDF Graphs] to map into instances of the extended grammar for OWL 2 Direct Semantics BGPs, i.e., the functions also take variables as input and they map to objects that correspond to the extended structural specification for BGPs. The functions are initialized as in Table 9 of [OWL 2 Mapping to RDF Graphs] for non-variable declarations (*:x is not a variable) and extended for the case where *:x is a variable as follows: Note that as for the OWL 2 mapping, variations of the above scheme are also taken to be defined as above, e.g., *:y or *:xi instead of *:x also denote an IRIs or a variables. Further, _:x remains unchanged and does not represent a variable. xlt denotes a blank node, an IRI, a literal, or a variable. lt denotes a literal or a variable; and x denotes a blank node, an IRI or a variable; _:x denotes a blank node; *:x denotes an IRI or a variable; Parsing BGPs into OWL objects as required in CP\u00a04 follows closely the parsing process described in Section 3.2 of [OWL 2 Mapping to RDF Graphs]. This document only states where the parsing differs from the mapping as defined by OWL 2. The main difference is that IRIs, anonymous individuals, and literals can also be",
    "textAfterTable": "Parsing then continues as described in [OWL 2 Mapping to RDF Graphs] with the modification that objects can contain variables. Variables are not allowed in the mapping for facet restrictions in the last column of Table 12 for *:wi and the n that denotes a non-negative integer in cardinality restrictions is not redefined, i.e., it cannot be replaced by a variable. C Appendix: Proofs The SPARQL Query specification [SPARQL 1.1 Query] lists four conditions that entailment regimes that extend the standard simple entailment must satisfy. The different conditions are considered below for all entailment regimes in this document. 1 -- The scoping graph, SG, corresponding to any consistent active graph AG is uniquely specified up to RDF graph equivalence and is E-equivalent to AG. All entailment regimes use the same definition of scoping graph as simple entailment, i.e., the scoping graph is graph-equivalent to the active graph AG of the data set DS for the query but shares no blank nodes with DS or with the basic graph pattern of the query. The same scoping graph is used for all solutions to a single query. Thus, E-equivalence to AG up to RDF graph equivalence is immediate. In case AG is inconsistent, it is not required that a scoping graph is defined and although most of the regimes define SG also in the presence of an inconsistency, it is not required that the above condition is satisfied.",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}