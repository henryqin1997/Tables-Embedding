{
    "relation": [
        [
            "Attribute",
            "SSLCACertificateFile",
            "SSLCACertificatePath",
            "SSLCARevocationFile",
            "SSLCARevocationPath",
            "SSLCertificateChainFile",
            "SSLCACertificateFile",
            "SSLCACertificatePath",
            "SSLCARevocationFile",
            "SSLCARevocationPath",
            "SSLCertificateChainFile",
            "SSLCertificateFile",
            "SSLCertificateKeyFile",
            "SSLCipherSuite",
            "SSLDisableCompression",
            "SSLHonorCipherOrder",
            "SSLPassword",
            "SSLProtocol",
            "SSLVerifyClient",
            "SSLVerifyDepth"
        ],
        [
            "Description",
            "See the mod_ssl documentation.",
            "See the mod_ssl documentation.",
            "See the mod_ssl documentation.",
            "See the mod_ssl documentation.",
            "See the mod_ssl documentation.",
            "Name of the file that contains the concatenated certificates for the trusted certificate authorities. The format is PEM-encoded.",
            "Name of the directory that contains the certificates for the trusted certificate authorities. The format is PEM-encoded.",
            "Name of the file that contains the concatenated certificate revocation lists for the certificate authorities. The format is PEM-encoded.",
            "Name of the directory that contains the certificate revocation lists for the certificate authorities. The format is PEM-encoded.",
            "Name of the file that contains concatenated certifcates for the certificate authorities which form the certifcate chain for the server certificate. The format is PEM-encoded.",
            "Name of the file that contains the server certificate. The format is PEM-encoded.",
            "Name of the file that contains the server private key. The format is PEM-encoded. The default value is the value of \"SSLCertificateFile\" and in this case both certificate and private key have to be in this file (NOT RECOMMENDED).",
            "Ciphers which may be used for communicating with clients. The default is \"ALL\", with other acceptable values being a list of ciphers, with \":\" used as the delimiter (see OpenSSL documentation for the list of ciphers supported).",
            "Disables compression if set to true and OpenSSL supports disabling compression. Default is false which inherits the default compression setting in OpenSSL.",
            "Set to true to enforce the server's cipher order (from the SSLCipherSuite setting) instead of allowing the client to choose the cipher (which is the default).",
            "Pass phrase for the encrypted private key. If \"SSLPassword\" is not provided, the callback function should prompt for the pass phrase.",
            "The names of the protocols to support when communicating with clients. This should be a list of any combination of the following: SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2 all Each token in the list can be prefixed with a plus sign (\"+\") or a minus sign (\"-\"). A plus sign adds the protocol, a minus sign removes it form the current list. The list is built starting from an empty list. The token all is an alias for TLSv1+TLSv1.1+TLSv1.2. If more than one protocol is specified for an OpenSSL based secure connector it will always support SSLv2Hello. If a single protocol is specified it will not support SSLv2Hello. Note that SSLv2 and SSLv3 are inherently unsafe. If not specified, the default value of all will be used.",
            "Ask client for certificate. The default is \"none\", meaning the client will not have the opportunity to submit a certificate. Other acceptable values include \"optional\", \"require\" and \"optionalNoCA\".",
            "Maximum verification depth for client certificates. The default is \"10\"."
        ]
    ],
    "pageTitle": "Apache Tomcat 7 Configuration Reference (7.0.63) - The HTTP Connector",
    "title": "",
    "url": "https://tomcat.apache.org/tomcat-7.0-doc/config/http.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990112.50/warc/CC-MAIN-20150728002310-00154-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 878482291,
    "recordOffset": 878461205,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{68506=Is unsafe legacy TLS renegotiation allowed which is likely to expose users to CVE-2009-3555, a man-in-the-middle vulnerability in the TLS protocol that allows an attacker to inject arbitrary data into the user's request. If not specified, a default of false is used. This attribute only has an effect if the JVM does not support RFC 5746 as indicated by the presence of the pseudo-ciphersuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV. This is available JRE/JDK 6 update 22 onwards. Where RFC 5746 is supported the renegotiation - including support for unsafe legacy renegotiation - is controlled by the JVM configuration., 60464=Amount of sockets that the poller responsible for sending static files asynchronously can hold at a given time. Extra connections will be closed right away without any data being sent (resulting in a zero length file on the client side). Note that in most cases, sendfile is a call that will return right away (being taken care of \"synchronously\" by the kernel), and the sendfile poller will not be used, so the amount of static files which can be sent concurrently is much larger than the specified amount. The default value is 1024., 63630=This Connector supports all of the required features of the HTTP/1.1 protocol, as described in RFC 2616, including persistent connections, pipelining, expectations and chunked encoding. If the client (typically a browser) supports only HTTP/1.0, the Connector will gracefully fall back to supporting this protocol as well. No special configuration is required to enable this support. The Connector also supports HTTP/1.0 keep-alive., 60021=Duration of a poll call in microseconds. Lowering this value will slightly decrease latency of connections being kept alive in some cases, but will use more CPU as more poll calls are being made. The default value is 2000 (2ms)., 49885=(int)The time in milliseconds to timeout on a select() for the poller. This value is important, since connection clean up is done on the same thread, so do not set this value to an extremely high one. The default value is 1000 milliseconds., 48544=(int)The number of threads to be used to run for the polling events. Default value is 1 per processor up to and including version 7.0.27. Default value as of version 7.0.28 is 1 per processor but not more than 2. When accepting a socket, the operating system holds a global lock. So the benefit of going above 2 threads diminishes rapidly. Having more than one thread is for system that need to accept connections very rapidly. However usually just increasing acceptCount will solve that problem. Increasing this value may also be beneficial when a large amount of send file operations are going on., 64137=RFC 2616 requires that HTTP servers always begin their responses with the highest HTTP version that they claim to support. Therefore, this Connector will always return HTTP/1.1 at the beginning of its responses., 30714=Note that for APR/native on Windows, the configured value will be reduced to the highest multiple of 1024 that is less than or equal to maxConnections. This is done for performance reasons. If set to a value of -1, the maxConnections feature is disabled and connections are not counted.}",
    "lastModified": "Tue, 07 Jul 2015 09:19:05 GMT",
    "textBeforeTable": "All implementations of Connector support the following attributes: Common Attributes Attributes Each incoming request requires a thread for the duration of that request. If more simultaneous requests are received than can be handled by the currently available request processing threads, additional threads will be created up to the configured maximum (the value of the maxThreads attribute). If still more simultaneous requests are received, they are stacked up inside the server socket created by the Connector, up to the configured maximum (the value of the acceptCount attribute). Any further simultaneous requests will receive \"connection refused\" errors, until resources are available to process them. If you wish to configure the Connector that is used for connections to web servers using the AJP protocol (such as the mod_jk 1.2.x connector for Apache 1.3), please refer to the AJP Connector documentation. The HTTP Connector element represents a Connector component that supports the HTTP/1.1 protocol. It enables Catalina to function as a stand-alone web server, in addition to its ability to execute servlets and JSP pages. A particular instance of this component listens for connections on a specific TCP port number on the server. One or more such Connectors can be configured as part of a single Service, each forwarding to the associated Engine to perform request",
    "textAfterTable": "Standard Implementation The standard HTTP connectors (BIO, NIO and APR/native) all support the following attributes in addition to the common Connector attributes listed above. Attribute Description acceptCount The maximum queue length for incoming connection requests when all possible request processing threads are in use. Any requests received when the queue is full will be refused. The default value is 100. acceptorThreadCount The number of threads to be used to accept connections. Increase this value on a multi CPU machine, although you would never really need more than 2. Also, with a lot of non keep alive connections, you might want to increase this value as well. Default value is 1. acceptorThreadPriority The priority of the acceptor threads. The threads used to accept new connections. The default value is 5 (the value of the java.lang.Thread.NORM_PRIORITY constant). See the JavaDoc for the java.lang.Thread class for more details on what this priority means. address For servers with more than one IP address, this attribute specifies which address will be used for listening on the specified port. By default, this port will be used on all IP addresses associated with the server.",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}