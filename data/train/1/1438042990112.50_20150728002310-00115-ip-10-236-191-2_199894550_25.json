{
    "relation": [
        [
            "Retrieve",
            "Cached",
            "Compile"
        ],
        [
            "Time",
            "51 ns",
            "27,560 ns"
        ],
        [
            "Rate (per second)",
            "19,680,762",
            "36,285"
        ]
    ],
    "pageTitle": "RegexKitLite",
    "title": "",
    "url": "http://regexkit.sourceforge.net/RegexKitLite/",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990112.50/warc/CC-MAIN-20150728002310-00115-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 200023599,
    "recordOffset": 199894550,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{636051=The UTF-16 conversion cache now uses the same 4-way set associative cache system as the compiled regular expression cache. For strings that required a UTF-16 conversion, RegexKitLite versions < 4.0 used two buffers for caching UTF-16 conversions\u2014 a small, fixed sized buffer for 'small' strings (\u2264 2048 characters by default), and a dynamically sized buffer for 'large' strings. RegexKitLite 4.0 keeps the same fixed and dynamic size dichotomy, but now each type contains four buffers which are reused on a least recently used basis., 13610=RegexKitLite has two conversion cache types. Each conversion cache type contains four buffers each, and buffers are re-used on a least recently used basis. If the selected cache type does not contain the contents of the NSString that is currently being searched in any of its buffers, the least recently used buffer is cleared and the current NSString takes it place. The first conversion cache type is fixed in size and set by the C pre-processor define RKL_FIXED_LENGTH, which defaults to 2048. Any string whose length is less than RKL_FIXED_LENGTH will use the fixed size conversion cache type. The second conversion cache type, for strings whose length is longer than RKL_FIXED_LENGTH, will use a dynamically sized conversion buffer. The memory allocation for the dynamically sized conversion buffer is resized for each conversion with realloc() to the size needed to hold the entire contents of the UTF-16 converted string., 654965=Copyright \u00a9 2008-2010, John Engelhart, 181985=The variable matchedDouble now contains the value of 101048.9.}",
    "lastModified": "Sun, 18 Apr 2010 14:28:20 GMT",
    "textBeforeTable": "RegexKit.framework and RegexKitLite are two different projects. In retrospect, RegexKitLite should have been given a more distinctive name. Below is a table summarizing some of the key differences between the two: The Difference Between RegexKit.framework and RegexKitLite At this time, the author is not aware of a single iPhone application that has been rejected due to the use of RegexKitLite. If your application is rejected due to the use of RegexKitLite, please let the author know by emailing regexkitlite@gmail.com. As always, CAVEAT EMPTOR. It is widely speculated that the motivation for the change to 3.3.1 was to prevent the development of Flash applications for the iPhone. The author believes that most reasonable people would consider the application of compatibility layer in this context to mean something entirely different than what it means when applied to RegexKitLite. There is considerable speculation as to what is covered by this change, but at the time of this writing, there is no empirical evidence or official guidelines from Apple to make any kind of an informed decision as to whether or not the use of RegexKitLite would violate 3.3.1. It is the authors opinion that RegexKitLite could be considered as a compatibility layer between NSString and the now Documented APIs for regular expressions in the ICU library. Will the use of RegexKitLite in an iPhone OS application be grounds for rejection under 3.3.1? Does 3.3.1 apply to",
    "textAfterTable": "Library Linked As Statically linked into framework. Dynamically linked to /usr/lib/libicucore.dylib. Compiled Size Approximately 371KB\u2020 per architecture. Very small, approximately 16KB\u201420KB\u2021 per architecture. Style External, linked to framework. Compiled directly in to final executable. Feature Set Large, with additions to many classes. Minimal, NSString only. \u2020 - Version 0.6.0. About half of the 371KB is the PCRE library. The default distribution framework shared library file is 1.4MB in size and includes the ppc, ppc64, i386, and x86_64 architectures. If 64-bit support is removed, the framework shared library file size drops to 664KB. \u2021 - Since the ICU library is part of Mac OS X, it does not add to the final size. Compiled Regular Expression Cache The NSString that contains the regular expression must be compiled in to an ICU URegularExpression. This can be an expensive, time consuming step, and the compiled regular expression can be reused again in another search, even if the strings to be searched are different. Therefore RegexKitLite keeps a small cache of recently compiled regular expressions. The cache is organized as a 4-way set associative cache, and the size of",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}