{
    "relation": [
        [
            "Symptom",
            "Notifications are not being sent from BPEL or Human Workflow components in SOA.",
            "Email notification is not being sent.",
            "",
            "Notifications are not being sent because of error message: No matching drivers found for sender address =",
            "The email client inconsistently receives notifications.",
            "SOA Human Workflow notifications are sent, but are not actionable.",
            "",
            "SOA Human Workflow actionable notifications are sent, but no action is taken after responding.",
            "",
            "",
            "",
            "",
            "SOA BPEL User Notification or Human Workflow notifications are sent to the correct delivery type (email, sms, and so on) but to the wrong address."
        ],
        [
            "Possible Causes",
            "Notification Mode is set to NONE in SOA Workflow Notification configuration.",
            "The Outgoing (SMTP) Mail Server settings in the UMS Email Driver are incorrect.",
            "The SMTP server requires authentication or a secure connection (TLS or SSL).",
            "The UMS Driver for the appropriate channel is configured with a specific list of SenderAddresses, and the message sent by the application has set a non-matching Sender Address. Note: UMS Server matches the outbound message's sender address, if set, against the available drivers' SenderAddresses to find a matching driver to use for delivering the message. If a driver has set one or more SenderAddresses, then the UMS Server will only send messages with the matching sender address to it.",
            "The Incoming Mail Server settings in the UMS Email Driver are configured with the same email account to which notifications are being sent. If the notification is sent to the same account, the UMS Email Driver may download and process the email before the email client can display it.",
            "The Actionable Email Address is not configured in SOA Workflow Notification Properties.",
            "The Human Workflow task is not set to send actionable notifications.",
            "The Incoming Mail Server settings in the UMS Email Driver are incorrect.",
            "The mail access protocol is incorrect.",
            "The email server is SSL-enabled.",
            "The receive folder name is incorrect.",
            "A non-default email client is configured for receiving notifications. When the user clicks the approval link, the default mail client page opens, which may send emails to a different email server.",
            "A self-provisioned messaging channel was created by the user in User Messaging Preferences for use in BPEL User Notification or Human Workflow use cases. Note: The User Messaging Preferences UI allows the end user to create his or her own messaging channel for various use cases, but these are not to be used for BPEL User Notification and Human Workflow."
        ],
        [
            "Solutions",
            "Change the Notification Mode setting to EMAIL or ALL using Oracle Fusion Middleware Control.",
            "Check the following settings in the UMS Email Driver using Oracle Fusion Middleware Control: OutgoingMailServer OutgoingMailServerPort Note: Validate the values by using them in any e-mail client for connecting to the SMTP server.",
            "Check the following settings in the UMS Email Driver using Oracle Fusion Middleware Control: OutgoingUsername OutgoingPassword OutgoingMailServerSecurity",
            "Check the following settings in the appropriate UMS Driver using Oracle Fusion Middleware Control: SenderAddresses Note: The format for SenderAddresses is a comma-separated list of :. For example: EMAIL:sender@example.com, EMAIL:sender@example2.com Leave this property blank, if you want this driver to service outbound messages for all sender addresses for this channel (delivery type). If there are multiple driver instances deployed for the same channel (delivery type) with different configurations, use the SenderAddresses to differentiate the driver instances. For example, one instance can be set with a specific value in SenderAddresses to only service outbound messages with that matching sender address, while the other instance can keep the SenderAddresses blank in order to service all outbound messages that do not specify any sender address or one that does not match that of the first driver instance. SenderAddresses that are configured with the incorrect syntax (such as missing :) are ignored by the UMS Server for the purpose of driver selection.",
            "Use an exclusive e-mail account for Incoming Mail Server settings. Check the following settings in the UMS Email Driver using Oracle Fusion Middleware Control: IncomingMailIDs IncomingUserIDs",
            "Set the Actionable Email Address in SOA Workflow Notification Properties with the address of the email account configured in the UMS Email Driver.",
            "Set the actionable attribute for the Human Workflow task in JDeveloper and redeploy the SOA composite application.",
            "Check the following settings in the UMS Email Driver using Oracle Fusion Middleware Control: MailAccessProtocol (IMAP or POP3, in uppercase) ReceiveFolder IncomingMailServer IncomingMailServerPort IncomingMailServerSSL IncomingMailServerSSL IncomingUserIDs IncomingUserPasswords ImapAuthPlainDisable Note: Validate the values by using them in any e-mail client for connecting to an IMAP or POP3 server.",
            "Check the following settings in the UMS Email Driver using Oracle Fusion Middleware Control: MailAccessProtocol (IMAP or POP3, in uppercase)",
            "Check the following settings in the UMS Email Driver using Oracle Fusion Middleware Control: IncomingMailServerSS",
            "Check the following settings in the UMS Email Driver using Oracle Fusion Middleware Control: ReceiveFolder Note: Some email servers may expect the value INBOX to be inbox or Inbox (that is, case-sensitive). Based on your email server, use an appropriate value.",
            "Configure the default email client to receive actionable notifications.",
            "Do not use a self-provisioned messaging channel for BPEL User Notification or Human Workflow use cases (that is, do not set as Default channel, and do not use in a messaging filter for such use cases). BPEL User Notification and Human Workflow utilize User Messaging Preferences only for the delivery type preference, and the actual address is retrieved from the user profile in the identity management system. Note: Addresses from the user profile in the identity management system are available through User Messaging Preferences using pre-defined channel names, such as Business Email, Business Mobile, Business Phone, Instant Messaging. Use these pre-defined messaging channels instead for BPEL User Notification and Human Workflow use cases."
        ]
    ],
    "pageTitle": "Configuring Oracle User Messaging Service",
    "title": "",
    "url": "http://docs.oracle.com/cd/E12839_01/doc.1111/e13806/ns_config.htm",
    "hasHeader": true,
    "headerPosition": "MIXED",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990114.79/warc/CC-MAIN-20150728002310-00244-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 72085455,
    "recordOffset": 72057624,
    "tableOrientation": "VERTICAL",
    "TableContextTimeStampAfterTable": "{12474=2003}",
    "lastModified": "Wed, 13 May 2015 05:12:05 GMT",
    "textBeforeTable": "Table 11-26 Troubleshooting UMS To debug User Messaging Service, first check the server diagnostic logs. The logs may contain exception, error, or warning messages that provide details about incorrect behavior along with actions to remedy the problem. The following table describes additional methods for debugging common User Messaging Service problems. 11.6 Troubleshooting Oracle User Messaging Service The other web service client will similarly need to override the keystore alias, but the exact mechanism may differ. For example if using a JAX-WS client stub directly, then you can add the override property to the JAX-WS request context. See \"Policy Configuration Overrides for the Web Service Client\" in Oracle Fusion Middleware Securing WebLogic Web Services for Oracle WebLogic Server for more details. SendMessageClient sendClient = new SendMessageClient(config); config.put(oracle.wsm.security.util.SecurityConstants.Config.KEYSTORE_RECIPIENT_ALIAS_PROPERTY, \"ums_public_key\") config.put(javax.xml.ws.BindingProvider.USERNAME_PROPERTY, \"test.user1\"); config.put(oracle.sdp.parlayx.ParlayXConstants.POLICIES, new String[] {\"oracle/wss11_saml_token_with_message_protection_client_policy\"}); config.put(javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY, ums_url); Map<String, Object> config = new HashMap<String, Object>(); ... import oracle.sdp.parlayx.multimedia_messaging.send.SendMessageClient  Example 11-2 Client Aliases  When creating an UMS web service client, specify the recipient keystore alias parameter, setting the key to oracle.wsm.security.util.SecurityConstants.Config.KEYSTORE_RECIPIENT_ALIAS_PROPERTY and the value to \"ums_public_key\" as shown in Example 11-2. Import (for example) the UMS public key with alias \"ums_public_key\", and the other public key with alias \"other_public_key\".  For example, if you have a domain in which application \"A\"",
    "textAfterTable": "Scripting on this page enhances content navigation, but does not change the content in any way.",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}