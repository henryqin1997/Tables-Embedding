{
    "relation": [
        [
            "",
            "2",
            "3",
            "4",
            "",
            "5",
            "6",
            "7",
            "\u2026",
            "23",
            "24",
            "25",
            "26",
            "",
            "",
            "27",
            "28",
            "29",
            "\u2026",
            "58",
            "59",
            "60",
            "61",
            "",
            "62",
            "63",
            "64",
            "65",
            "",
            "66",
            "67",
            "",
            "68",
            "69",
            "70",
            "\u2026",
            "72",
            "73",
            "74",
            "75",
            "",
            "76",
            "77",
            "78",
            "\u2026",
            "129",
            "130",
            "131",
            "132",
            "",
            "133",
            "134",
            "135"
        ],
        [
            "",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "\u2026",
            "24",
            "25",
            "26",
            "",
            "27",
            "28",
            "29",
            "30",
            "31",
            "\u2026",
            "60",
            "61",
            "62",
            "",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "",
            "70",
            "71",
            "72",
            "73",
            "\u2026",
            "75",
            "76",
            "77",
            "",
            "78",
            "79",
            "80",
            "81",
            "\u2026",
            "132",
            "133",
            "134",
            "",
            "135",
            "136",
            "137",
            "138"
        ],
        [
            "",
            "",
            "import os, sys, traceback",
            "import unittest",
            "from django.conf import app, get_installed_app_paths",
            "",
            "import django.contrib as contrib",
            "",
            "",
            "",
            "ALWAYS_INSTALLED_APPS = [",
            "'django.contrib.contenttypes',",
            "'django.contrib.auth',",
            "#We need to use the same app label, otherwise fixtures will break...",
            "app('django.contrib.auth', 'auth', 'Authentication'),",
            "'django.contrib.sites',",
            "'django.contrib.flatpages',",
            "'django.contrib.redirects',",
            "",
            "",
            "def runTest(self):",
            "from django.core.management.validation import get_validation_errors",
            "from django.db.models.loading import load_app",
            "from django.db.models.loading import load_app , find_app",
            "from cStringIO import StringIO",
            "",
            "try:",
            "module = load_app(self.model_label)",
            "app = find_app(self.model_label)",
            "except Exception, e:",
            "self.fail('Unable to load invalid model module')",
            "self.fail('Unable to load invalid application %s: %s' % (self.model_label, e))",
            "",
            "# Make sure sys.stdout is not a tty so that we get errors without",
            "# coloring attached (makes matching the results easier). We restore",
            "",
            "orig_stdout = sys.stdout",
            "s = StringIO()",
            "sys.stdout = s",
            "count = get_validation_errors(s, module)",
            "count = get_validation_errors(s, app)",
            "sys.stdout = orig_stdout",
            "s.seek(0)",
            "error_log = s.read()",
            "",
            "print \"Importing model %s\" % model_name",
            "mod = load_app(model_label)",
            "if mod:",
            "if model_label not in settings.INSTALLED_APPS:",
            "if model_label not in get_installed_app_paths():",
            "settings.INSTALLED_APPS.append(model_label)",
            "except Exception, e:",
            "sys.stderr.write(\"Error while importing %s:\" % model_name + ''.join(traceback.format_exception(*sys.exc_info())[1:]))"
        ]
    ],
    "pageTitle": "app_labels.8.diff on Ticket #3591 \u2013 Attachment \u2013 Django",
    "title": "",
    "url": "https://code.djangoproject.com/attachment/ticket/3591/app_labels.8.diff",
    "hasHeader": true,
    "headerPosition": "FIRST_COLUMN",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990114.79/warc/CC-MAIN-20150728002310-00046-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 861686383,
    "recordOffset": 861662079,
    "tableOrientation": "VERTICAL",
    "TableContextTimeStampAfterTable": "{172687=\u00a9 2005-2015 Django Software Foundation unless otherwise noted. Django is a registered trademark of the Django Software Foundation.}",
    "textBeforeTable": "django/test/simple.py updated to apply cleanly against r6635 File app_labels.8.diff, 35.1 KB (added by brosner, 8 years ago) Ticket #3591: app_labels.8.diff Back to Ticket #3591 Context Navigation Search Wiki Timeline Reports View Tickets API Preferences DjangoProject Login GitHub Login Code \u2665 Donate About Code Community News Documentation Download Overview The web framework for perfectionists with deadlines. Django",
    "textAfterTable": "251 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Create a fake request to store login details django/db/models/base.py \u00a0 8 8 from django.db.models.options import Options, AdminOptions 9 9 from django.db import connection, transaction 10 10 from django.db.models import signals 11 \u00a0 from django.db.models.loading import register_models, get_model \u00a0 11 from django.db.models.loading import register_models, get_model , get_app_label 12 12 from django.dispatch import dispatcher 13 13 from django.utils.datastructures import SortedDict 14 14 from django.utils.functional import curry \u2026 \u2026 \u00a0 43 43 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new_class._meta.parents.append(base) 44 44 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 new_class._meta.parents.extend(base._meta.parents) 45 45 46 \u00a0 47 46 \u00a0 \u00a0 \u00a0 \u00a0 if getattr(new_class._meta, 'app_label', None) is None: 48 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Figure out the app_label by looking one level up. 49 \u00a0",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}