{
    "relation": [
        [
            "Level",
            "0",
            "1",
            "2"
        ],
        [
            "Level type",
            "TRIGGER",
            "None",
            "None"
        ],
        [
            "Permissions required to add or drop an extended property",
            "ALTER ANY TRIGGER on DATABASE",
            "",
            ""
        ],
        [
            "Permissions required to view an extended property",
            "ALTER ANY TRIGGER on DATABASE",
            "",
            ""
        ],
        [
            "Comments",
            "Applies to DDL triggers only.",
            "",
            ""
        ]
    ],
    "pageTitle": "Using Extended Properties on Database Objects",
    "title": "",
    "url": "https://technet.microsoft.com/en-us/library/ms190243(v=sql.105).aspx",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981460.12/warc/CC-MAIN-20150728002301-00148-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 888537471,
    "recordOffset": 888517216,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{68560=Provided for backward compatibility. For more information, see Deprecated Database Engine Features in SQL Server 2008 R2., 39266=Provided for backward compatibility only. For more information, see Deprecated Database Engine Features in SQL Server 2008 R2.}",
    "textBeforeTable": "Specifying the size and window location at which a column should be displayed. Recording a description of specific database objects that applications can display to users. For example, the descriptions may be used in a data dictionary application or report. Specifying formatting rules for displaying the data in a column. Specifying an input mask for a column so that applications can validate data before running a Transact-SQL statement. For example, the required format for a postal code or telephone number column can be specified in the extended property. Specifying a caption for a table, view, or column. Applications can then use the same caption in a user interface that displays information from that table, view, or column. Extended properties can be used for the following: In using extended properties, you can add text, such as descriptive or instructional content, add input masks, and add formatting rules as properties of objects in a database or of the database itself. For example, you can add an extended property to a schema, a schema's view, or to a column in the view. Because extended properties are stored in the database, all applications reading the properties can evaluate the object in the same way. This helps enforce consistency in the way data is treated by all the programs in the system. SQL Server 2005 SQL Server 2008",
    "textAfterTable": "Copy  USE AdventureWorks2008R2; GO EXEC sys.sp_addextendedproperty @name = N'MS_DescriptionExample', @value = N'Minimum inventory quantity.', @level0type = N'SCHEMA', @level0name = Production, @level1type = N'TABLE', @level1name = Product, @level2type = N'COLUMN', @level2name = SafetyStockLevel; GO Adding Extended Properties to Objects The following tables list objects to which you can add extended properties. Their valid level 0, level 1, and level 2 object types are listed and also the permissions required to add, drop, or view the extended properties. Aggregate Level Level type Permissions required to add or drop an extended property Permissions required to view an extended property Comments 0 SCHEMA or USER \u00a0 \u00a0 SCHEMA should be used instead of USER. See \"Schema vs. User\" later in this topic. 1 AGGREGATE ALTER on aggregate OBJECT Any on OBJECT Applies to user-defined CLR aggregate functions. Asymmetric Key",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}