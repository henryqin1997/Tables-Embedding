{
    "relation": [
        [
            "Statistic",
            "countconnections",
            "counttimeouts",
            "secondstimeouts",
            "maxrequests",
            "countflushes",
            "counthits",
            "countrefusals"
        ],
        [
            "Data Type",
            "CountStatistic",
            "CountStatistic",
            "CountStatistic",
            "CountStatistic",
            "CountStatistic",
            "CountStatistic",
            "CountStatistic"
        ],
        [
            "Description",
            "Number of connections in keep-alive mode.",
            "Number of keep-alive connections that timed out.",
            "Keep-alive timeout value in seconds.",
            "Maximum number of requests allowed on a single keep-alive connection.",
            "Number of keep-alive connections that were closed.",
            "Number of requests received by connections in keep-alive mode.",
            "Number of keep-alive connections that were rejected."
        ]
    ],
    "pageTitle": "Viewing Comprehensive Monitoring Data (Oracle GlassFish Server 3.0.1 Administration Guide)",
    "title": "",
    "url": "http://docs.oracle.com/cd/E19798-01/821-1751/ghmct/index.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981460.12/warc/CC-MAIN-20150728002301-00079-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 73460038,
    "recordOffset": 73444081,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{5882=For detailed information on dotted names, see the dotted-names(5ASC) help page.}",
    "lastModified": "Thu, 24 Feb 2011 15:26:26 GMT",
    "textBeforeTable": "Table\u00a08\u20134 Example Resources Level Dotted Names For example, the following table explains the output of the list and get subcommands used with the dotted name for the resources node. A get subcommand followed by a .* or a * gets the set of attributes and their values that belong to the node specified. A list subcommand that specifies a dotted name preceded or followed by a wildcard of the form *dottedname or dotted * name or dottedname * lists all nodes and their children that match the regular expression created by the specified matching pattern. A list subcommand that specifies a dotted name followed by a wildcard of the form .* lists a hierarchical tree of child nodes from the specified node. For example, the following subcommand lists all children of the applications node, their subsequent child nodes, and so on: list --monitor server.applications.* A list subcommand that specifies a dotted name that is not followed by a wildcard (*) lists the current node\u2019s immediate children. For example, the following subcommand lists all immediate children belonging to the server node: list --monitor server The underlying assumptions for using the list and get subcommands with dotted names are: Guidelines for Using the list and get Subcommands for Monitoring Comprehensive Monitoring Statistics To View Comprehensive Monitoring",
    "textAfterTable": "asadmin> list --monitor \"*\" server.web server.connector-service server.orb server.jms-serviceserver.jvm server.applications server.http-service server.thread-pools Get data for a monitored component or service by using the get(1) subcommand. Example\u00a08\u20138 Viewing Attributes for a Specific Type This example gets information about all the attributes for object type jvm on instance server. asadmin> get --monitor server.jvm.* server.jvm.class-loading-system.loadedclasscount = 3715 server.jvm.class-loading-system.totalloadedclasscount = 3731 server.jvm.class-loading-system.unloadedclasscount = 16 server.jvm.compilation-system.name-current = HotSpot Client Compiler server.jvm.compilation-system.totalcompilationtime = 769 server.jvm.garbage-collectors.Copy.collectioncount = 285 server.jvm.garbage-collectors.Copy.collectiontime = 980 server.jvm.garbage-collectors.MarkSweepCompact.collectioncount = 2 server.jvm.garbage-collectors.MarkSweepCompact.collectiontime = 383 server.jvm.memory.committedheapsize = 23498752 server.jvm.memory.committednonheapsize = 13598720 server.jvm.memory.initheapsize = 0 server.jvm.memory.initnonheapsize = 8585216 server.jvm.memory.maxheapsize = 66650112 server.jvm.memory.maxnonheapsize = 100663296 server.jvm.memory.objectpendingfinalizationcount = 0 server.jvm.memory.usedheapsize = 19741184 server.jvm.memory.usednonheapsize = 13398352 server.jvm.operating-system.arch-current = x86 server.jvm.operating-system.availableprocessors = 2 server.jvm.operating-system.name-current = Windows XP server.jvm.operating-system.version-current = 5.1 server.jvm.runtime.classpath-current = glassfish.jar server.jvm.runtime.inputarguments-current = [] server.jvm.runtime.managementspecversion-current = 1.0 server.jvm.runtime.name-current = 4372@ABBAGANI_WORK server.jvm.runtime.specname-current = Java Virtual Machine Specification server.jvm.runtime.specvendor-current = Sun Microsystems Inc. server.jvm.runtime.specversion-current = 1.0 server.jvm.runtime.uptime = 84813 server.jvm.runtime.vmname-current = Java HotSpot(TM) Client VM server.jvm.runtime.vmvendor-current = Sun Microsystems Inc. server.jvm.runtime.vmversion-current = 1.5.0_11-b03 Example\u00a08\u20139 Viewing Monitorable Applications This example lists all the monitorable applications for instance server. asadmin> list --monitor server.applications.* server.applications.app1 server.applications.app2 server.applications.app1.virtual-server1 server.applications.app2.virtual-server1",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}