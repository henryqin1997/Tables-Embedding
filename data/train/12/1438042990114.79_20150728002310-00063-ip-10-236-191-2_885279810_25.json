{
    "relation": [
        [
            "Scope of backup",
            "Whole database",
            "Partial database",
            "File or filegroup"
        ],
        [
            "Backup types",
            "Database backups cover the whole database. Optionally, each database backup can serve as the base of a series of one or more differential database backups.",
            "Partial backups cover read/-write filegroups and, possibly, one or more read-only files or filegroups. Optionally, each partial backup can serve as the base of a series of one or more differential partial backups.",
            "File backups cover one or more files or filegroups, and are relevant only for databases that contain multiple filegroups. Under the simple recovery model, file backups are essentially restricted to read-only secondary filegroups. Optionally, each file backup can serve as the base of a series of one or more differential file backups."
        ]
    ],
    "pageTitle": "BACKUP (Transact-SQL)",
    "title": "",
    "url": "https://msdn.microsoft.com/en-US/library/ms186865(v=sql.120).aspx",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990114.79/warc/CC-MAIN-20150728002310-00063-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 885309039,
    "recordOffset": 885279810,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{86276=The following example writes a backup of the AdventureWorks2012 database to a new striped media set that uses three disk files., 37658=URL: Applies to: SQL Server (SQL Server 2012 SP1 CU2 through current version)., 19514=Applies to: SQL Server (SQL Server 2008 through current version)., 68607=Beginning with SQL Server 2008, has no effect. This option is accepted by the version for compatibility with previous versions of SQL Server., 121723=The following example formats the media, creating a new media set, and perform a compressed full backup of the AdventureWorks2012 database., 62429=Specifies the physical block size, in bytes. The supported sizes are 512, 1024, 2048, 4096, 8192, 16384, 32768, and 65536 (64 KB) bytes. The default is 65536 for tape devices and 512 otherwise. Typically, this option is unnecessary because BACKUP automatically selects a block size that is appropriate to the device. Explicitly stating a block size overrides the automatic selection of block size., 42365=Applies to: SQL Server (SQL Server 2012 SP1 CU2 through current version)., 110880=The following example backups up the AdventureWorks2012 sample database, which uses the simple recovery model by default. To support log backups, the AdventureWorks2012 database is modified to use the full recovery model., 105873=Beginning with SQL Server 2012, the PASSWORD and MEDIAPASSWORD options are discontinued for creating backups. It is still possible to restore backups created with passwords., 53041='Dec 31, 2020 11:59 PM', 109616=The following example backs up the AdventureWorks2012 \u00a0database to a disk file., 48333=In SQL Server 2008 Enterprise\u00a0and later versions only, specifies whether backup compression is performed on this backup, overriding the server-level default., 116861=The following example creates a mirrored media set containing a single media family and four mirrors and backs up the AdventureWorks2012 database to them., 118331=The following example creates a mirrored media set in which each mirror consists of two media families. The example then backs up the AdventureWorks2012 database to both mirrors., 62849=If you are taking a backup that you plan to copy onto and restore from a CD-ROM, specify BLOCKSIZE=2048.}",
    "textBeforeTable": "Backs up a complete SQL Server\u00a0database to create a database backup, or one or more files or filegroups of the database to create a file backup (BACKUP DATABASE). Also, under the full recovery model or bulk-logged recovery model, backs up the transaction log of the database to create a log backup (BACKUP LOG). SQL Server 2005 SQL Server 2008 SQL Server 2008 R2 SQL Server 2012 Other Versions BACKUP (Transact-SQL) Windows Desktop App Development Web Development Speech Technologies Servers and Enterprise Development patterns & practices",
    "textAfterTable": "Copy  Backing\u00a0Up\u00a0a\u00a0Whole\u00a0Database\u00a0 BACKUP DATABASE { database_name | @database_name_var } \u00a0\u00a0TO <backup_device> [ ,...n ] \u00a0\u00a0[ <MIRROR TO clause>\u00a0]\u00a0[ next-mirror-to ] \u00a0\u00a0[ WITH { DIFFERENTIAL | <general_WITH_options> [ ,...n ] }\u00a0] [;] Backing\u00a0Up\u00a0Specific\u00a0Files\u00a0or\u00a0Filegroups BACKUP DATABASE { database_name | @database_name_var } \u00a0<file_or_filegroup> [ ,...n ] \u00a0\u00a0TO <backup_device> [ ,...n ] \u00a0\u00a0[ <MIRROR TO clause>\u00a0]\u00a0[ next-mirror-to ] \u00a0\u00a0[ WITH { DIFFERENTIAL | <general_WITH_options> [ ,...n ] }\u00a0] [;] Creating a Partial Backup BACKUP DATABASE { database_name | @database_name_var } \u00a0READ_WRITE_FILEGROUPS [ , <read_only_filegroup> [ ,...n ] ] \u00a0\u00a0TO <backup_device> [ ,...n ] \u00a0\u00a0[ <MIRROR TO clause>\u00a0]\u00a0[ next-mirror-to ] \u00a0\u00a0[ WITH { DIFFERENTIAL | <general_WITH_options> [ ,...n ] } ] [;] Backing Up the Transaction Log (full and bulk-logged recovery models) BACKUP LOG { database_name | @database_name_var } \u00a0\u00a0TO <backup_device> [ ,...n ] \u00a0\u00a0[ <MIRROR TO clause>\u00a0]\u00a0[ next-mirror-to ] \u00a0\u00a0[ WITH { <general_WITH_options> | <log-specific_optionspec> } [ ,...n ]\u00a0] [;] <backup_device>::= \u00a0{ \u00a0\u00a0\u00a0{ logical_device_name | @logical_device_name_var } \u00a0|\u00a0{ DISK | TAPE | URL} = \u00a0\u00a0\u00a0\u00a0\u00a0{ 'physical_device_name' | @physical_device_name_var } \u00a0} Note: URL is the format used to specify the location and the file name for the Windows Azure Blob. Although Windows Azure storage is a service, the implementation is similar to disk and tape to allow for a consistent and seemless backup experince for all the three devices. This option requires",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}