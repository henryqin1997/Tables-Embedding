{
    "relation": [
        [
            "Date",
            "Jun 6, 1997",
            "Dec 9, 2005",
            "Oct 30, 2007",
            "Jan 16, 2008",
            "Dec 22, 2009",
            "Dec 30, 2013"
        ],
        [
            "Code",
            "AS",
            "FPAY",
            "AS",
            "AS",
            "FPAY",
            "FPAY"
        ],
        [
            "Event",
            "Assignment",
            "Fee payment",
            "Assignment",
            "Assignment",
            "Fee payment",
            "Fee payment"
        ],
        [
            "Description",
            "Owner name: MICROSOFT CORPORATION, WASHINGTON Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CASTILLO, LEONARDO DEL;RANDELL, SCOTT;REEL/FRAME:008636/0523 Effective date: 19970529",
            "Year of fee payment: 4",
            "Owner name: MICROSOFT CORPORATION, WASHINGTON Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:DEL CASTILLO, LEONARDO;RANDELL, SCOTT;REEL/FRAME:020035/0670;SIGNING DATES FROM 20071012 TO 20071023",
            "Owner name: BURESIFT DATA LTD. LLC, DELAWARE Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MICROSOFT CORPORATION;REEL/FRAME:020371/0043 Effective date: 20071030",
            "Year of fee payment: 8",
            "Year of fee payment: 12"
        ]
    ],
    "pageTitle": "Patent US6415439 - Protocol for a wireless control system - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US6415439?dq=6,952,563",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987174.71/warc/CC-MAIN-20150728002307-00103-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 472456539,
    "recordOffset": 472412972,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{180899=In step 1420, the controller determines whether to quit the wireless communication session. If the answer to the inquiry of step 1420 is no, the \u201cNO\u201d branch is followed to step 1412, in which the controller determines whether to acquire a different set of controlled devices. If the answer to the inquiry of step 1420 is yes, the \u201cYES\u201d branch is followed to step 1422, in which the controller transmits link termination messages to the acquired devices. Step 1422 is followed by the \u201cEND\u201d step 1424, which preferably returns to step 1402, and routine 1400 is concluded., 180333=If the answer to the inquiry of step 1412 is no, the \u201cNO\u201d branch is followed from step 1412 to step 1414, in which the controller receives message information, such as control data, for the acquired devices. Step 1414 is followed by routine 1416, in which the controller transmits a message packet, such as the control data packet 1304 a shown on FIG. 13, to the acquired devices. In step 1418, the acquired devices that are locked to the transmitted subchannel respond to the message data., 178844=FIG. 14 is a logic flow diagram illustrating routine 1400 for a message protocol in a simplex wireless control environment, such as the environment illustrated in FIG. 4. Routine 1400 begins in step 1402, and in step 1404 the controller receives data defining controlled devices to be acquired. This information may be generated by a computer system, or it may be extracted from an Encoded video data stream, as described previously with reference to FIG. 4. In step 1406, the controller transmits link termination messages to any acquired devices that are to be dropped from control. In step 1408, the controller transmits a link broadcast request including a device code and a subchannel address to acquire one or more controlled devices, such as a genus of devices. In step 1410, the controlled devices corresponding to the device code lock to the assigned subchannel. In step 1412, the controller determines whether to acquire controlled devices of another genus. If the answer to the inquiry of step 1412 is yes, the \u201cYES\u201d branch is followed back to step 1404, and the controller acquires one or more controlled devices of another genus. The controller may thus acquire controlled devices until all of the available subchannels have been assigned. Steps 1404-1412 correspond to the representative device acquisition step 1302 a shown on FIG. 13., 173673=Referring again to step 1208, if the message is a not link control message, the \u201cNO\u201d branch is followed to step 1212, in which the controlled device compares the transmitted subchannel address to the device's assigned subchannel address, which the device locked to in step 1014 shown on FIG. 10, to determine whether the message packet was transmitted on the subchannel address assigned to the device. If the answer to the inquiry of step 1212 is no, the \u201cNO\u201d branch is followed to the \u201cEND\u201d step 1222, which returns to step 916 shown on FIG. 9, and routine 914 is concluded. In other words, the controlled device ignores all message packets that are not on the subchannel assigned to the controlled device., 163789=FIG. 10 is a logic flow diagram illustrating routine 906, in which a controller acquires controlled devices in a duplex wireless control environment. Routine 906 begins at step 1002, which follows step 904 shown on FIG. 9. In step 1004, the controller transmits link termination messages to any acquired devices that are to be dropped from control. In step 1006, the controller transmits a link acquisition request, such as the link acquisition request 112 shown on FIG. 8, including a 16-bit device code that corresponds to a genus of devices. In step 1008, each controlled device of the genus corresponding to the device code in the transmitted link acquisition message responds by generating and transmitting a response message, such as the response message 114 shown on FIG. 8, back to the controller., 177673=The representative device acquisition segment 1302 a includes one or more device link broadcast requests 1310 a-n. The representative link broadcast requests 1310 a includes a device code 118 and a checksum parameter 120, which are described above with reference to FIG. 8. The representative control data segment 1304 a includes a sync symbol 130, a message header 132, control data 134, and a modulo 256 checksum parameter 120, which are also described above with reference to FIG. 8. The message header 132 may be an 8-bit word including a 3-bit subchannel address 138 and a 5-bit message type 140. The 3-bit subchannel address 138 allows the protocol to define 8 subchannels, typically numbered 0-7. The 5-bit message type 140 allows the protocol to define up to 32 different message types for each controlled device. Thus, the message stream 1300 is a simplified version of the message stream 100 described with reference to FIG. 8 that may be employed in a simplex environment., 172752=FIG. 12 is a logic flow diagram illustrating routine 914, in which acquired devices respond to message packets in a duplex wireless control environment. Routine 914 begins at step 1202, which follows step 912 shown on FIG. 9. In step 1204, the controlled device receives a message packet from the controller. In step 1206, the controlled device gets the message header from the transmitted message packet. In step 1208, the controlled device determines from the message type whether the received message packet is a link control message. If the message is a link control message, the \u201cYES\u201d branch is followed to step 1210, in which the controlled device responds to the link control message. Step 1210 is followed by the \u201cEND\u201d step 1222, which returns to step 916 shown on FIG. 9, and routine 914 is concluded., 176910=The message stream 1300 includes a device acquisition segment 1302 a, in which the controller acquires one or more controlled devices, followed by one or more control data segment 1204 a-n, in which the controller transmits control data to one or more controlled devices. The controller may later acquire another set of devices in the acquisition segment 1302 n, which is followed by one or more control data segments 1306 a-n. The controller may therefore control a plurality of devices, represented by the controlled device 60, so that they behave as characters in scenes of an audio/visual presentation displayed on the display device 47, as described previously., 176091=FIG. 13 is a logic flow diagram illustrating a message protocol in a simplex wireless control environment, such as the environment illustrated in FIG. 4. The simplex wireless control environment includes a controller, such as the wireless modulator 90, and a controlled device, such as the controlled device 60. The message stream 1300 is specifically adapted for controlling a controlled device, such as a dinosaur \u201cBARNEY\u201d toy, in a learning and entertainment system for a child. Those skilled in the art will understand that the specific messages and message components described below define this exemplary embodiment of the invention, and that other message formats and message components may be defined to perform the similar functions for other controlled devices., 175243=If the checksum is verified in step 1216, the \u201cYES\u201d branch is followed to step 1218, in which the controlled device gets the message type from the message header of the message packet. Step 1218 is followed by step 1220, in which the controlled device responds to the control data, typically by routing the control data to an end effector identified by the message type. For example, motor movement coefficients are routed to one or more of the motion servo motors 69, voice synthesis coefficients are routed to the elastic queue data buffer 62 where they are temporarily stored until they are fed to the speech synthesizer 61, etc. Step 1220 is followed by the \u201cEND\u201d step 1220, which returns to step 916 shown on FIG. 9, and routine 914 is concluded., 165457=Step 1008 is followed by step 1010, in which the controller selects a responding device to acquire. In step 1012, the controller transmits a verification message, such as the verification message 116 shown on FIG. 8, to the controlled devices. The verification message includes a selected device identifier and an assigned subchannel address. The selected device identifier corresponds to the device identifier received by a particular one of the responding controlled devices that the controller has selected for acquisition. The assigned subchannel address corresponds to a subchannel that the controller and the acquired device use until the controller transmits a link termination message for the assigned subchannel. As noted previously, the subchannel address is a number, such as a number from 0 to 7 that may be defined by a 3-bit field in a message header, that signifies the intended controlled device for subsequently transmitted message packets. The controller may therefore control up to eight groups of controlled devices simultaneously, one group for each subchannel. The use of the subchannels allows the controller to direct message packets to the acquired controlled device using a 3-bit identifier (i.e., the subchannel address) rather than the 16-bit device code. Thus, subchannels reduce the bandwidth required to direct the message packets to the intended controlled device. In addition, the use of the subchannels allows the controller to distinguish among controlled devices of the same genus., 171625=Steps 1112 (for link control messages) and 1118 (for control data messages) are followed by step 1120, in which the controller computes the modulo 256 checksum parameter for the message packet. The message packet is then transmitted to the controlled device in step 1122. In step 1124, the controller determines whether to transmit another message packet to the acquired devices. In making the decision of step 1124, the controller determines whether there is sufficient time in the data transmission period of the half-duplex communication loop 950 shown on FIG. 9 to transmit another data control packet as well as a request for response message. If the answer to the inquiry of step 1124 is yes, the \u201cYES\u201d branch is followed back to step 1106, in which the controller determines a target acquired device for the next message packet. If the answer to the inquiry of step 1124 is no, the \u201cNO\u201d branch is followed to the \u201cEND\u201d step 1106, which returns to step 914 shown on FIG. 9, and routine 912 is concluded., 167922=FIG. 11 is a logic flow diagram illustrating routine 912, in which the controller transmits message packets to controlled devices in a duplex wireless control environment. Routine 912 begins at step 1102, which follows step 910 shown on FIG. 9. In step 1104, the controller transmits sync symbols during the transmitter warm-up period, typically about 10 ms. In step 1106, the controller determines a target acquired device for a message packet. In step 1108, the controller determines which subchannel is assigned to the target acquired device. If more than one acquired device is assigned to that subchannel, they will all behave in the same manner. In step 1110, the controller determines whether the message is a link control message., 168743=If the message is a link control message, the \u201cYES\u201d branch is followed from step 1110 to step 1112, in which the controller determines which type of link control message to transmit. Referring to FIG. 8, an individual message type 140 in the message header 132 is typically assigned to each type of link control message. Link control messages, which do not precede control data, include the link acquisition request message, the verification response message, and the request for response data message, which are described above with respect to FIG. 8., 167022=Step 1012 is followed by step 1014, in which the selected device locks to the assigned subchannel, typically by storing the assigned subchannel address in a predefined memory location. In step 1016, the controller determines whether to acquire another device in the same genus. If the answer to the inquiry of step 1016 is yes, the \u201cYES\u201d branch is followed back to step 1006, in which the controller selects another device of the genus to acquire. Routine 906 thus loops through steps 1006-1016 until all of the desired devices of the genus are acquired or until all of the available subchannels have been assigned. When the answer to the inquiry of step 1016 is no, the \u201cNO\u201d branch is followed to step the \u201cEND\u201d step 1018, which returns to step 908 shown on FIG. 9, and Routine 906 is concluded., 174449=If the answer to the inquiry of step 1212 is yes, the \u201cYES\u201d branch is followed to step 1214, in which the controller gets the remainder of the message packet. In step 1216, the controlled device determines whether the checksum is verified. That is, the controlled device determines whether the arithmetic sum of all bytes in the data packet, inclusive of the message identification header, the data, and the transmitted checksum parameter, is equal to an integer multiple of 256. If the checksum is not verified, the \u201cNO\u201d branch is followed to the \u201cEND\u201d step 1220, which returns to step 916 shown on FIG. 9, and routine 914 is concluded. The controlled device thus ignores all message packets that do not include verified checksums., 84265=This application is related to U.S. application Ser. No. 08/794,921, filed Feb. 4, 1997, now U.S. Pat. No. 6,317,714 issued Nov. 13, 2001; U.S. Application Ser. No. 08/795,698, filed Feb. 4, 1997, now U.S. Pat. No. 5,977,951 issued Nov. 2, 1999; and U.S. Application Ser. No. 08/795,711, filed Feb. 4, 1997, now U.S. Pat. No. 6,067,095, issued May 23, 2000, all assigned to the same assignee as the present application., 170530=If the message is a not link control message, the \u201cNO\u201d branch is followed from step 1110 to step 1114, in which the controller determines which end effector to control. In step 1116, the controller determines the message type for the end effector to be controlled. In step 1118, the controller determines the format for the control data for the end effector to be controlled. The message type is typically a 5-bit address, which allows the controller to define up to 32 different message types. Although several of the message types may be assigned to link control messages, most are available to control end effectors in each controlled device. A set of message types can be unassigned so that many new end effectors may be included in controlled devices deployed in the future. In addition, the format of the control data for new and existing end effectors may be defined or redefined on a case-by-case basis. This advantageously makes the protocol forwardly compatible with a wide range yet-to-be-developed end effectors and controlled devices.}",
    "textBeforeTable": "Patent Citations It should be understood that the foregoing relates only to specific embodiments of the invention, and that numerous changes may be made therein without departing from the spirit and scope of the invention as defined by the following claims. The invention thus provides a wireless communication protocol that enables unidirectional communications in a simplex environment, or bidirectional communications in a duplex environment, between a controller and one or more controlled devices. The controller receives or generates video data and control data that may include voice synthesis coefficients and motor movement coefficients for the controlled devices. The video data drives a display device to depict a scene, and the control data drives the controlled device(s) so that the controlled device(s) behave as characters in the scene depicted on the display device. Each controlled device is operable for recognizing messages directed to the device and for parsing these messages into control signals for a number of end effectors, such as speech synthesizers, servo motors, etc. The content of messages for, and the set of end effectors in, any particular controlled device may be changed so that the system is forwardly compatible for new controlled devices using the protocol. checksum 1 Response Request",
    "textAfterTable": "Feb 21, 1989 Interactive Systems, Incorporated Interactive video method and apparatus US4840602 Dec 2, 1987 Jun 20, 1989 Coleco Industries, Inc. Talking doll responsive to external signal US4846693 Dec 1, 1988 Jul 11, 1989 Smith Engineering Video based instructional and entertainment system using animated figure US4847699 Jul 16, 1987 Jul 11, 1989 Actv, Inc. Method for providing an interactive full motion synched compatible audio/visual television display US4847700 Jul 16, 1987 Jul 11, 1989 Actv, Inc. Interactive television system for providing full motion synched compatible audio/visual displays from transmitted television signals US4864607 Jan 25, 1988 Sep 5, 1989 Tomy Kogyo Co., Inc. Animated annunciator apparatus US4930019 * Nov 29, 1988 May 29, 1990 Chi Wai Chu Multiple-user interactive audio/video apparatus with automatic response units US4949327 Dec 15, 1988 Aug 14, 1990 Gray Ventures, Inc. Method and apparatus for the recording and playback of animation control signals",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}