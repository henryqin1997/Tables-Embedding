{
    "relation": [
        [
            "",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "",
            "",
            "",
            "",
            "31",
            "32",
            "33",
            "",
            "",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "",
            "",
            "",
            "",
            "44",
            "45",
            "46",
            "47",
            "48",
            "",
            "",
            "",
            "",
            "49",
            "50",
            "51",
            "52",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "53",
            "54",
            "",
            "",
            "55",
            "56",
            "57",
            "",
            "58",
            "59",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "60",
            "61",
            "62",
            "\u2026",
            "68",
            "69",
            "70",
            "71",
            "",
            "72",
            "",
            "",
            "",
            "",
            "73",
            "74",
            "75",
            "\u2026",
            "107",
            "108",
            "109",
            "110",
            "",
            "111",
            "112",
            "113",
            "\u2026",
            "123",
            "124",
            "125",
            "126",
            "",
            "127",
            "128",
            "129",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "130",
            "131",
            "132",
            "\u2026",
            "139",
            "140",
            "141",
            "142",
            "",
            "143",
            "144",
            "145",
            "\u2026",
            "190",
            "191",
            "192",
            "",
            "",
            "",
            "",
            "193",
            "194",
            "",
            "",
            "195",
            "196",
            "197",
            "\u2026",
            "235",
            "236",
            "237",
            "238",
            "",
            "",
            "239",
            "240",
            "241",
            "\u2026",
            "270",
            "271",
            "272",
            "",
            "",
            "",
            "",
            "273",
            "274",
            "",
            "",
            "275",
            "276",
            "",
            "",
            "",
            "277",
            "278",
            "279"
        ],
        [
            "",
            "18",
            "19",
            "20",
            "",
            "",
            "",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "",
            "",
            "",
            "",
            "",
            "",
            "34",
            "35",
            "36",
            "37",
            "38",
            "",
            "",
            "39",
            "40",
            "41",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "42",
            "43",
            "44",
            "45",
            "46",
            "47",
            "",
            "",
            "",
            "48",
            "49",
            "50",
            "51",
            "52",
            "",
            "",
            "",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58",
            "59",
            "60",
            "61",
            "62",
            "63",
            "64",
            "65",
            "66",
            "67",
            "68",
            "69",
            "70",
            "71",
            "72",
            "73",
            "",
            "74",
            "75",
            "76",
            "",
            "",
            "77",
            "78",
            "79",
            "80",
            "81",
            "82",
            "83",
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91",
            "92",
            "\u2026",
            "98",
            "99",
            "100",
            "",
            "101",
            "102",
            "103",
            "104",
            "105",
            "106",
            "107",
            "108",
            "109",
            "\u2026",
            "141",
            "142",
            "143",
            "",
            "144",
            "145",
            "146",
            "147",
            "\u2026",
            "157",
            "158",
            "159",
            "",
            "160",
            "161",
            "162",
            "163",
            "164",
            "165",
            "166",
            "167",
            "168",
            "169",
            "170",
            "171",
            "172",
            "173",
            "174",
            "175",
            "176",
            "\u2026",
            "183",
            "184",
            "185",
            "",
            "186",
            "187",
            "188",
            "189",
            "\u2026",
            "234",
            "235",
            "236",
            "237",
            "238",
            "239",
            "240",
            "241",
            "",
            "242",
            "243",
            "244",
            "245",
            "246",
            "\u2026",
            "284",
            "285",
            "286",
            "",
            "287",
            "288",
            "289",
            "290",
            "291",
            "\u2026",
            "320",
            "321",
            "322",
            "323",
            "324",
            "325",
            "326",
            "327",
            "",
            "328",
            "329",
            "330",
            "331",
            "332",
            "333",
            "334",
            "335",
            "336",
            "337"
        ],
        [
            "",
            "}",
            "",
            "// Handle bulk actions",
            "if ( isset($_GET['action']) && ( -1 != $_GET['action'] || -1 != $_GET['action2'] ) ) {",
            "$doaction = ( -1 != $_GET['action'] ) ? $_GET['action'] : $_GET['action2'];",
            "",
            "if ( isset($_GET['doaction']) || isset($_GET['doaction2']) || isset($_GET['delete_all']) || isset($_GET['delete_all2']) ) {",
            "check_admin_referer('bulk-posts');",
            "",
            "if (isset($_GET['delete_all']) || isset($_GET['delete_all2'])) {",
            "$post_status = $wpdb->escape($_GET['post_status']);",
            "$post_ids = $wpdb->get_col( \"SELECT ID FROM $wpdb->posts WHERE post_type='post' AND post_status = '$post_status'\" );",
            "$doaction = 'delete';",
            "} elseif (($_GET['action'] != -1 || $_GET['action2'] != -1) && isset($_GET['post'])) {",
            "$post_ids = $_GET['post'];",
            "$doaction = ($_GET['action'] != -1) ? $_GET['action'] : $_GET['action2'];",
            "} else wp_redirect($_SERVER['HTTP_REFERER']);",
            "",
            "switch ( $doaction ) {",
            "case 'delete':",
            "if ( isset($_GET['post']) && ! isset($_GET['bulk_edit']) && (isset($_GET['doaction']) || isset($_GET['doaction2'])) ) {",
            "check_admin_referer('bulk-posts');",
            "$deleted = 0;",
            "foreach( (array) $_GET['post'] as $post_id_del ) {",
            "$post_del = & get_post($post_id_del);",
            "case 'trash':",
            "$trashed = 0;",
            "foreach( (array) $post_ids as $post_id ) {",
            "$post_del = & get_post($post_id);",
            "",
            "if ( !current_user_can('delete_post', $post_id_del) )",
            "wp_die( __('You are not allowed to delete this post.') );",
            "if ( !current_user_can('delete_post', $post_id_del) )",
            "wp_die( __('You are not allowed to move this post to the trash.') );",
            "",
            "if ( $post_del->post_type == 'attachment' ) {",
            "if ( ! wp_delete_attachment($post_id_del) )",
            "wp_die( __('Error in deleting...') );",
            "} else {",
            "if ( !wp_delete_post($post_id_del) )",
            "wp_die( __('Error in deleting...') );",
            "}",
            "$deleted++;",
            "}",
            "if ( !wp_trash_post($post_id) )",
            "wp_die( __('Error in moving to trash...') );",
            "",
            "$trashed++;",
            "}",
            "break;",
            "case 'edit':",
            "if ( isset($_GET['post']) && isset($_GET['bulk_edit']) ) {",
            "check_admin_referer('bulk-posts');",
            "case 'untrash':",
            "$untrashed = 0;",
            "foreach( (array) $post_ids as $post_id ) {",
            "$post_del = & get_post($post_id);",
            "",
            "if ( -1 == $_GET['_status'] ) {",
            "$_GET['post_status'] = null;",
            "unset($_GET['_status'], $_GET['post_status']);",
            "if ( !current_user_can('delete_post', $post_id_del) )",
            "wp_die( __('You are not allowed to remove this post from the trash.') );",
            "",
            "if ( !wp_untrash_post($post_id) )",
            "wp_die( __('Error in removing from trash...') );",
            "",
            "$untrashed++;",
            "}",
            "break;",
            "case 'delete':",
            "$deleted = 0;",
            "foreach( (array) $post_ids as $post_id_del ) {",
            "$post_del = & get_post($post_id_del);",
            "",
            "if ( !current_user_can('delete_post', $post_id_del) )",
            "wp_die( __('You are not allowed to delete this post.') );",
            "",
            "if ( $post_del->post_type == 'attachment' ) {",
            "if ( ! wp_delete_attachment($post_id_del) )",
            "wp_die( __('Error in deleting...') );",
            "} else {",
            "$_GET['post_status'] = $_GET['_status'];",
            "if ( !wp_delete_post($post_id_del) )",
            "wp_die( __('Error in deleting...') );",
            "}",
            "",
            "$done = bulk_edit_posts($_GET);",
            "$deleted++;",
            "}",
            "break;",
            "case 'edit':",
            "if ( -1 == $_GET['_status'] ) {",
            "$_GET['post_status'] = null;",
            "unset($_GET['_status'], $_GET['post_status']);",
            "} else {",
            "$_GET['post_status'] = $_GET['_status'];",
            "}",
            "",
            "$done = bulk_edit_posts($_GET);",
            "break;",
            "}",
            "",
            "$sendback = wp_get_referer();",
            "",
            "$done['locked'] = count( $done['locked'] );",
            "$sendback = add_query_arg( $done, $sendback );",
            "}",
            "if ( isset($deleted) )",
            "if ( isset($deleted))",
            "$sendback = add_query_arg('deleted', $deleted, $sendback);",
            "elseif (isset($trashed))",
            "$sendback = add_query_arg('trashed', $trashed, $sendback);",
            "elseif (isset($untrashed))",
            "$sendback = add_query_arg('untrashed', $untrashed, $sendback);",
            "wp_redirect($sendback);",
            "exit();",
            "} elseif ( isset($_GET['_wp_http_referer']) && ! empty($_GET['_wp_http_referer']) ) {",
            "",
            "",
            "endif; ?>",
            "",
            "",
            "",
            "",
            "",
            "printf( _n( '%s post updated.', '%s posts updated.', $_GET['updated'] ), number_format_i18n( $_GET['updated'] ) );",
            "",
            "}",
            "",
            "if ( isset($_GET['deleted']) && (int) $_GET['deleted'] ) {",
            "printf( _n( 'Post deleted.', '%s posts deleted.', $_GET['deleted'] ), number_format_i18n( $_GET['deleted'] ) );",
            "printf( _n( 'Post permanently deleted.', '%s posts permanently deleted.', $_GET['deleted'] ), number_format_i18n( $_GET['deleted'] ) );",
            "unset($_GET['deleted']);",
            "}",
            "",
            "if ( isset($_GET['trashed']) && (int) $_GET['trashed'] ) {",
            "printf( _n( 'Post moved to the trash.', '%s posts moved to the trash.', $_GET['trashed'] ), number_format_i18n( $_GET['trashed'] ) );",
            "unset($_GET['deleted']);",
            "}",
            "",
            "if ( isset($_GET['untrashed']) && (int) $_GET['untrashed'] ) {",
            "printf( _n( 'Post removed from the trash.', '%s posts removed from the trash.', $_GET['untrashed'] ), number_format_i18n( $_GET['untrashed'] ) );",
            "unset($_GET['undeleted']);",
            "}",
            "",
            "$_SERVER['REQUEST_URI'] = remove_query_arg( array('locked', 'skipped', 'updated', 'deleted'), $_SERVER['REQUEST_URI'] );",
            "?>",
            "",
            "",
            "if ( empty($locked_post_status) ) :",
            "$status_links = array();",
            "$num_posts = wp_count_posts( 'post', 'readable' );",
            "$total_posts = array_sum( (array) $num_posts ) ;",
            "$total_posts = array_sum( (array) $num_posts ) - $num_posts->trash;",
            "$class = empty( $_GET['post_status'] ) ? ' class=\"current\"' : '';",
            "$status_links[] = \"\" . sprintf( _nx( 'All (%s)', 'All (%s)', $total_posts, 'posts' ), number_format_i18n( $total_posts ) ) . '';",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "do_action('restrict_manage_posts');",
            "?>",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ]
    ],
    "pageTitle": "trash.diff on Ticket #4529 \u2013 Attachment \u2013 WordPress Trac",
    "title": "",
    "url": "https://core.trac.wordpress.org/attachment/ticket/4529/trash.diff",
    "hasHeader": true,
    "headerPosition": "FIRST_COLUMN",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989234.2/warc/CC-MAIN-20150728002309-00117-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 863379575,
    "recordOffset": 863331035,
    "tableOrientation": "VERTICAL",
    "textBeforeTable": "wp-app.php Many tweaks and refinements to all parts of the trash system, including remembering previous status and better separation of trash from ordinary deletion. File trash.diff, 90.2 KB (added by caesarsgrunt, 6 years ago) Ticket #4529: trash.diff Back to Ticket #4529 Context Navigation Notifications Login Search: Create a New Ticket Trac Timeline Browse Source Components Tickets Handbook Blog Make WordPress Core Download WordPress Hosting Blog About Get Involved Documentation",
    "textAfterTable": "\u2026 \u2026 \u00a0 769 775 }\u00a0 770 776 \u00a0 771 777 /**\u00a0 \u00a0 778 \u00a0* Moves a comment to the Trash\u00a0 \u00a0 779 \u00a0*\u00a0 \u00a0 780 \u00a0* @since 2.9.0\u00a0 \u00a0 781 \u00a0* @uses do_action() on 'trash_comment' before trashing\u00a0 \u00a0 782 \u00a0* @uses do_action() on 'trashed_comment' after trashing\u00a0 \u00a0 783 \u00a0*\u00a0 \u00a0 784 \u00a0* @param int $comment_id Comment ID.\u00a0 \u00a0 785 \u00a0* @return mixed False on failure\u00a0 \u00a0 786 \u00a0*/\u00a0 \u00a0 787 function wp_trash_comment($comment_id = 0) {\u00a0 \u00a0 788 \u00a0 \u00a0 \u00a0 \u00a0 if (EMPTY_TRASH_DAYS == 0)\u00a0 \u00a0 789 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return wp_delete_comment($comment_id);\u00a0 \u00a0 790 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 791 \u00a0 \u00a0 \u00a0 \u00a0 if (!$comment = get_comment($comment_id))\u00a0 \u00a0 792 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return false;\u00a0 \u00a0 793 \u00a0 \u00a0 794 \u00a0 \u00a0 \u00a0 \u00a0 do_action('trash_comment', $comment_id);\u00a0 \u00a0 795 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 796 \u00a0 \u00a0 \u00a0 \u00a0 $trash_meta = get_option('wp_trash_meta', array());\u00a0 \u00a0 797 \u00a0 \u00a0 \u00a0 \u00a0 $trash_meta['comments'][$comment_id]['status'] = $comment->comment_approved;\u00a0 \u00a0 798 \u00a0 \u00a0",
    "hasKeyColumn": true,
    "keyColumnIndex": 3,
    "headerRowIndex": 0
}