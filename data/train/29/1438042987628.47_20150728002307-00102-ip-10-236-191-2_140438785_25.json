{
    "relation": [
        [
            "RasterizerName ::",
            "Organizationld ::",
            "Rasterizer ::",
            "Space ::"
        ],
        [
            "=",
            "=",
            "=",
            "="
        ],
        [
            "Organizationld Space Rasterizer",
            "STRING8-the X Registry ORGANIZATION name of the rasterizer implementor or maintainer.",
            "the case-sensitive, human-understandable product name of the rasterizer. Words within this name should be separated by a single SPACE.",
            "OCTET-\" \" (SPACE)"
        ]
    ],
    "pageTitle": "X Window System Programmer's Guide Chapter 5",
    "title": "",
    "url": "http://lesstif.sourceforge.net/doc/super-ux/g1ae04e/chap5.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987628.47/warc/CC-MAIN-20150728002307-00102-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 140464751,
    "recordOffset": 140438785,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{1=All font properties that represent horizontal widths or displacements have as their value the x component of the transformed width or displacement All font properties that represent vertical heights or displacement have as their value the y component of the transformed height or displacement. Each such property will be accompanied by a new property, named as the original except prefixed with \"RAW_\", that gives the value of the width, height, or displacement in 1000 pixel metrics.}",
    "TableContextTimeStampAfterTable": "{79213=For a font with a transformation matrix, RAW_DESCENT is the font descent in 1000 pixel metrics. See Section 5.3.1., 25518=RESOLUTION_X and RESOLUTION_Y are unsigned integer-strings that give the horizontal and vertical resolution, measured in pixels or dots per inch (dpi), for which the font was designed. Zero is used to indicate a scalable font; see Section 5.4. Horizontal and vertical values are required because a separate bitmap font must be designed for displays with very different aspect ratios (for example, 1:1, 4:3, 2:1, and so on)., 69776=Calculated WEIGHT is an unsigned integer value (of type CARD32) that gives the calculated weight of the font, computed as the ratio of capital stem width to CAP_HEIGHT, in the range 0 to 1000, where 0 is the lightest weight., 87319=In this section, the phrase \" 1000 pixel metrics\" means the metrics that would be obtained if the rasterizer took the base untransformed design used to generate the transformed font and scaled it linearly to a height of 1000 pixels, with no rotation component. Note that there may be no way for the application to actually request this font since the rasterizer may use different outlines or rasterization techniques at that size than the ones used to generate the transformed font., 2363=Copyright \ufffd 1988, 1994 x Consortium, 89062=There will always be 2 new font properties defined, RAW_ASCENT and RAW_DESCENT, that hold the ascent and descent in 1000 pixel metrics., 79004=For a font with a transformation matrix, RAW_ASCENT is the font ascent in 1000 pixel metrics. See Section 5.3.1.}",
    "lastModified": "Tue, 18 Jun 2002 09:32:07 GMT",
    "textBeforeTable": "The FontName is a structured, parsable string (of type STRING8) whose Backus-Naur Form syntax description is as follows: 5.2.1.1 FontNameSyntax In the X protocol specification, the FontName is required to be a string; hence, numeric field values are represented in the name as string equivalents. All FontNameSuffix fields are also defined as FontProperties; numeric property values are represented as signed or unsigned integers, as appropriate. All font names that conform to this specification are to use a FontNameRegistry prefix, which is defined to be the string \"-\" (HYPHEN). All FontNameRegistry prefixes of the form: +version-, where the specified version indicates some future XLFD specification, are reserved by the X Consortium for future extensions to XLFD font names. If required, extensions to the current XLFD font name shall be constructed by appending new fields to the current structure, each delimited by the existing field delimiter. The availability of other FontNameRegistry prefixes or fonts that support other registries is server implementation dependent. Each FontName is logically composed of two string: a FontNameRegistry prefix that is followed by a FontName Suffix. The FontName uses the ISO 8859-l encoding. The FontNameRegistry is an xregistered-name (a name that has been registered with the X Consortium) that identifies the registration authority that owns the specified FontNameSuffix syntax and semantics. 5.2.1 FontName The FontProperties are supplied on a font-by-font basis and are returned as data in certain X protocol requests as part of the XFontStruct data structure. The names",
    "textAfterTable": "STYLE_NAME XFNDelim PIXEL_SIZE XFNDelim POINT_SIZE XFNDelim RESOLUTION_X XFNDelim RESOLUTION_Y XFNDelim SPACING XFNDelim AVERAGE_WIDTH XFNDelim CHARSET_REGISTRY XFNDelim CHARSET_ENCODING Version :: = STRING8 - the XLFD version that defines an extension to the font name syntax (for example, \" 1.4\") XFNExtPrefix :: = OCTET - \"+\" (PLUS) XFNDelim :: = OCTET - \"_\" (HYPHEN) PrivFontNameRegistry :: = STRING8 - other than those strings reserved by XLFD PrivFontNameSuffix :: = STRING8 Field values are constructed as strings of IS08859-1 graphic characters, excluding the following: \"_\" (HYPHEN), the XLFD font name delimiter character \"?\" (QUESTIONMARK) and \"*\" (ASTERISK), the X protocol fontname wildcard characters \",\" (COMMA), used by Xlib to separate XLFD font names in a font set \"\"\" (QUOTATION MARKS), used by some commercial products to quote a font name Alphabetic case distinctions are allowed but are for human readability concerns only. Conforming X servers will perform matching on font name query or open requests independent of case. The entire font name string must have no more than 255 characters. It is recommended that clients construct font name query patterns by explicitly including all field delimiters to avoid unexpected results. Note that SPACE is a valid character of",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}