{
    "relation": [
        [
            "Brevet citant",
            "US7809809 *",
            "US8028047 *",
            "US8036703 *",
            "US8046550 *",
            "US8060476",
            "US8135930",
            "US8166265",
            "US8335902",
            "US8375003",
            "US8429649",
            "US8607018 *",
            "US8843825",
            "US8856790",
            "US8898114",
            "US8996468",
            "US9066039 *",
            "US20110141360 *",
            "US20130073829 *",
            "US20140297731 *",
            "US20140304321 *"
        ],
        [
            "Date de d\ufffdp\ufffdt",
            "13 janv. 2004",
            "13 nov. 2009",
            "29 d\ufffdc. 2006",
            "30 juil. 2008",
            "13 juil. 2009",
            "13 juil. 2009",
            "23 sept. 2011",
            "16 avr. 2012",
            "23 sept. 2011",
            "24 sept. 2009",
            "8 nov. 2012",
            "27 juil. 2012",
            "25 mars 2013",
            "25 ao\ufffdt 2011",
            "16 avr. 2010",
            "19 oct. 2010",
            "",
            "8 nov. 2012",
            "17 juin 2014",
            "8 avr. 2013"
        ],
        [
            "Date de publication",
            "5 oct. 2010",
            "27 sept. 2011",
            "11 oct. 2011",
            "25 oct. 2011",
            "15 nov. 2011",
            "13 mars 2012",
            "24 avr. 2012",
            "18 d\ufffdc. 2012",
            "12 f\ufffdvr. 2013",
            "23 avr. 2013",
            "10 d\ufffdc. 2013",
            "23 sept. 2014",
            "7 oct. 2014",
            "25 nov. 2014",
            "31 mars 2015",
            "23 juin 2015",
            "16 juin 2011",
            "21 mars 2013",
            "2 oct. 2014",
            "9 oct. 2014"
        ],
        [
            "D\ufffdposant",
            "Nokia Corporation",
            "Hong Fu Jin Precision Industry (Shenzhen) Co., Ltd.",
            "Texas Instruments Incorporated",
            "Quest Software, Inc.",
            "Quest Software, Inc.",
            "Vizioncore, Inc.",
            "Vizioncore, Inc.",
            "Vizioncore, Inc.",
            "Vizioncore, Inc.",
            "Quest Software, Inc.",
            "Concurix Corporation",
            "Photo Mambo Inc.",
            "Dell Software Inc.",
            "Dell Software Inc.",
            "Dell Software Inc.",
            "Samsung Electronics Co., Ltd.",
            "Samsung Electronics Co., Ltd.",
            "Concurix Corporation",
            "Google Inc.",
            "Navteq B.V."
        ],
        [
            "Titre",
            "Client provisioning using application characteristics template with flag parameters",
            "Communication device and method for determining function unit of communication device to be compatible with a computer",
            "Image capture reporting based on content-associated wireless identification",
            "Systems and methods for performing backup operations of virtual machine files",
            "Backup systems and methods for a virtual computing environment",
            "Replication systems and methods for a virtual computing environment",
            "Systems and methods for performing backup operations of virtual machine files",
            "Systems and methods for performing backup operations of virtual machine files",
            "Backup systems and methods for a virtual computing environment",
            "Systems and methods for data management in a virtual computing environment",
            "Memory usage configuration based on observations",
            "Media sharing and display system with persistent display",
            "Systems and methods for data management in a virtual computing environment",
            "Multitier deduplication systems and methods",
            "Block status mapping system for reducing virtual machine backup storage",
            "Selective booting method and broadcast receiving apparatus using the same",
            "Selective booting method and broadcast receiving apparatus using the same",
            "Memory Usage Configuration Based on Observations",
            "Full-Duplex Bi-Directional Communication Over a Remote Procedure Call Based Communications Protocol, And Applications Thereof",
            "Desktop Application Synchronization to Process Data Captured on a Mobile Device"
        ]
    ],
    "pageTitle": "Brevet US7610331 - System and method for dynamic uploading and execution of applications and ... - Google\ufffdBrevets",
    "title": "",
    "url": "http://www.google.fr/patents/US7610331",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042985140.15/warc/CC-MAIN-20150728002305-00326-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 489267823,
    "recordOffset": 489221115,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6206=The present application is related to commonly-owned application Ser. No. 09/537,001, filed Mar. 28, 2000, titled IMPROVED DIGITAL CAMERA DEVICE AND METHODOLOGY FOR WIRELESS PROGRESSIVE TRANSMISSION OF DIGITAL IMAGES, now pending, the disclosure of which is hereby incorporated by reference.}",
    "TableContextTimeStampAfterTable": "{136898=The PHY manager 321 is also responsible for ensuring that any other low-level connectivity is met such that a state of TCP/IP communication is reached. This is required because TCP/IP may not in fact be operating at the point when the client device first initiates communication. For instance, in normal RS-232 serial communication and USB communication, TCP/IP will not yet be running. Although TCP/IP configuration may not be yet running at the outset, Point-to-Point Protocol (PPP) may be employed to ensure TCP/IP connectivity, in a manner similar to that commonly done with dial-up Internet connections. PPP (Point-to-Point Protocol), as described above, is a protocol defined in RFC 1661 for communication between two computers using a serial interface, such as a personal computer connected by phone line to a server. For example, Internet Server Providers typically provide their users with a PPP connection so that the provider's server can respond to user requests, pass them on to the Internet, and forward requested Internet responses back to the users., 36432=The following description will focus on the presently-preferred embodiment of the present invention, which operates in an environment typically including a variety of computing or information-storing devices (e.g., desktop computers, server computers, and portable computing devices), that are occasionally or permanently connected to one another where device-specific driver support is desired. In particular, the following description focuses on an embodiment of the present invention in a digital camera device, the currently-preferred embodiment, which may be occasionally connected to a multitude of different \u201chost\u201d devices, such as a Palm\u2122 handheld computer or a cellular phone. However, those skilled in the art will appreciate that the present invention may be embodied in practically any device that is intended to be connected to another device (or devices). Further, the description focuses on implementation of portions of the invention in a connected environment including computers, such as an IBM-compatible computer running under Microsoft\ufffd Windows 2000, with Internet support. The present invention, however, is not limited to any particular one application or any particular environment. Instead, those skilled in the art will find that the system and methods of the present invention may be advantageously embodied on a variety of different platforms, including Macintosh, Linux, BeOS, Solaris, UNIX, NextStep, and the like, as well as special-purpose operating systems (e.g., digital camera operating systems). Therefore, the description of the exemplary embodiments which follows is for purposes of illustration and not limitation., 141189=The final step of the process is to actually invoke execution of the injected application or driver. In this particular injection scenario, therefore, the injected object is an executable file (or capable of triggering execution of a corresponding executable file). Therefore, it includes program code, for instance, machine instructions for a particular target processor or byte code instructions for a virtual machine (e.g., Java byte code instructions for executing a Java virtual machine at the host). Java is a well-known programming language specification, available from Sun Microsystems of Mountain View, Calif. Further description of the Java Language environment can be found in the technical, trade, and patent literature; see e.g., Gosling, J. et al., The Java Language Environment: A White Paper, Sun Microsystems Computer Company, October 1995, the disclosure of which is hereby incorporated by reference., 27203=Despite the multitude of approaches available for automating driver installation and startup loading, current approaches have significant shortcomings when attempting to connect two devices together. Many different types of devices exist and, expectedly, have disparate characteristics as to how they initially respond to a communication (between devices). In particular, many devices today \u201cspeak differently\u201d (i.e., employ different communication protocols), thus preventing several of these devices from communicating with one another for purposes of device identification and driver-loading. For instance, the above plug-in approach basically assumes that all devices speak the same language, such as using HTTP commands over TCP/IP (Transmission Control Protocol/Internet Protocol, the suite of communications protocols used to connect hosts on the Internet). However, even the underlying communication infrastructure\u2014TCP/IP\u2014may not even be running initially on a particular target or host device of interest. Thus, one may not even rely on TCP/IP being available, at least initially, on a particular target device. (For an introduction to TCP/IP, see e.g., RFC 1180: A TCP/IP Tutorial, the disclosure of which is hereby incorporated by reference. A copy of RFC 1180 is currently available at ftp://ftp.isi.edu/in-notes/rfc1180.txt)., 69821=Software system 200 includes a graphical user interface (GUI) 215, for receiving user commands and data in a graphical (e.g., \u201cpoint-and-click\u201d) fashion. These inputs, in turn, may be acted upon by the system 150 in accordance with instructions from operating system 210, and/or client application module(s) 201. The GUI 215 also serves to display the results of operation from the OS 210 and application(s) 201, whereupon the user may supply additional inputs or terminate the session. Typically, the OS 210 operates in conjunction with device drivers 220 (e.g., \u201cWinsock\u201d driver) and the system BIOS microcode 230 (i.e., ROM-based microcode), particularly when interfacing with peripheral devices. OS 210 can be provided by a conventional operating system, such as Microsoft\ufffd Windows 9x, Microsoft\ufffd Windows NT, or Microsoft\ufffd Windows 2000, all available from Microsoft Corporation of Redmond, Wash. Alternatively, OS 210 can also be an alternative operating system, such as IBM OS/2 (available from IBM of Armonk, N.Y.) or Macintosh OS (available from Apple Computer of Cupertino, Calif.)., 136703=The next step is to negotiate a PPP session with the internal PPP Server. Refer to the above-mentioned RFC 1661 for more information on negotiating a PPP session., 39583=The system 100 employs the Sensor 101 for basic image capture. The Sensor 101 operates, in essence, by capturing light and transforming that into electrical voltage levels. A suitable sensor is available from a variety of vendors, including VLSI Vision, Motorola, and Toshiba. In a preferred embodiment, the Sensor 101 includes, for example, a 1280\ufffd1024 color CMOS sensor, such as a VLSI Vision VVL 6801 CMOS sensor. However, other sensor technology is suitable, including CCD sensors., 135648=Now, the process may negotiate a PPP connection with the Windows NT Server. PPP refers to Point-to-Point Protocol, a well-known method for transmission of IP packets over serial lines; see. e.g., RFC 1661: The Point-to-Point Protocol (PPP), available from the Network Working Group, the disclosure of which is hereby incorporated by reference. RFC 1661 is currently available via the Internet at: http://www.freesoft.org/CIE/RFC/1661/index.htm.}",
    "textBeforeTable": "Citations de brevets While the invention is described in some detail with specific reference to a single-preferred embodiment and certain alternatives, there is no intent to limit the invention to that particular embodiment or those specific alternatives. For instance, those skilled in the art will appreciate that modifications may be made to the preferred embodiment without departing from the teachings of the present invention. At this point, the method is now ready to trigger execution of the just-injected application or driver at the host device. Using the host-side file handle, the method instructs the host to now execute the just-injected application or driver, as indicated by step 409. As previously described, host-side execution may require host-specific operations. In the straightforward case, the host is simply instructed to begin execution of the application or driver. If the host device does not support that functionality, however, execution of the application or driver may be accomplished through indirect means, such as instructing the host to \u201crestart\u201d itself and thereupon execute the application or driver (e.g., by placing the application or driver in a location where the host will automatically load it for execution upon startup). Thereafter, as indicated by step 410, operation between the client and host devices continues as specified in the now-executing application or driver, which itself in turn may unpackage other drivers for execution. In typical operation, the application or driver would issue particular commands to",
    "textAfterTable": "US6344875 10 avr. 2000 5 f\ufffdvr. 2002 Ricoh Company, Ltd. Digital camera which detects a connection to an external device US6389464 * 27 juin 1997 14 mai 2002 Cornet Technology, Inc. Device management system for managing standards-compliant and non-compliant network elements using standard management protocols and a universal site server which is configurable from remote locations via internet browser technology US6392697 19 f\ufffdvr. 1998 21 mai 2002 Samsung Techwin Co., Ltd Digital still camera US6393470 5 janv. 1999 21 mai 2002 International Business Machines Corp. Non intrusive automatic remote support for freeing overloaded storage in portable devices US6400903 22 d\ufffdc. 2000 4 juin 2002 Paul Conoval Remote camera relay controller method and apparatus US6417913 21 d\ufffdc. 2000 9 juil. 2002 Fuji Photo Film Co., Ltd. Method and apparatus for ordering photographic prints and printing apparatus for producing the same US6423892 29 janv. 2001 23 juil. 2002 Koninklijke Philips Electronics N.V. Method, wireless MP3 player and system for",
    "hasKeyColumn": true,
    "keyColumnIndex": 3,
    "headerRowIndex": 0
}