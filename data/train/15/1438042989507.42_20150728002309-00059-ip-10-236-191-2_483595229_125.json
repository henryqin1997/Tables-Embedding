{
    "relation": [
        [
            "Return Value",
            "A single-element array containing the current instance.",
            "A multi-element String array, each element of which is a substring of the current instance that was delimited by one or more characters in separator.",
            "A multi-element String array, each element of which is a substring of the current instance that was delimited by white space characters."
        ],
        [
            "Description",
            "None of the elements of separator are contained in the current instance.",
            "At least one element of separator is contained in the current instance.",
            "The current instance contains white space characters and separator is a null reference or an empty array."
        ]
    ],
    "pageTitle": "System.String Class",
    "title": "",
    "url": "http://www.gnu.org/software/dotgnu/pnetlib-doc/System/String.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 125,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989507.42/warc/CC-MAIN-20150728002309-00059-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 483619451,
    "recordOffset": 483595229,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{2962=The following characters are considered white space when present in a String instance: 0x9, 0xA, 0xB, 0xC, 0xD, 0x20, 0xA0, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x200B, 0x3000, and 0xFEFF. The null character is defined as hexadecimal 0x00.}",
    "textBeforeTable": "Exceptions c. Int32 containing the number of occurrences of A count Char . A c Parameters String . Constructs and initializes a new instance of Summary public String(char c, int count); String(char, int) Constructor String.Chars Property String.Length Property String Properties String.Empty Field String Fields String.Clone Method String.Compare(System.String, int, System.String, int, int, bool) Method String.Compare(System.String, int, System.String, int, int) Method String.Compare(System.String, System.String, bool) Method String.Compare(System.String, System.String) Method String.CompareOrdinal(System.String, System.String) Method String.CompareOrdinal(System.String, int, System.String, int, int) Method String.CompareTo(System.Object) Method String.CompareTo(System.String) Method String.Concat(System.Object, System.Object) Method String.Concat(System.Object, System.Object, System.Object) Method String.Concat(System.Object[]) Method String.Concat(System.String, System.String) Method String.Concat(System.String, System.String, System.String) Method String.Concat(System.String[]) Method String.Copy Method String.CopyTo Method String.EndsWith Method String.Equals(System.Object) Method String.Equals(System.String) Method String.Equals(System.String, System.String) Method String.Format(System.String, System.Object[]) Method String.Format(System.String, System.Object) Method String.Format(System.String, System.Object, System.Object) Method",
    "textAfterTable": "The following example demonstrates using this constructor. using System; public class StringExample { public static void Main() { string s = new String('a', 10); Console.WriteLine(s); } } The output is aaaaaaaaaa See Also System.String Class, System Namespace String(char*) Constructor unsafe public String(char* value); Summary Constructs and initializes a new instance of String using a specified pointer to a sequence of Unicode characters. Parameters value A pointer to a null-terminated array of Unicode characters. If value is a null pointer, System.String.Empty is created. Description This member is not CLS-compliant. For a CLS-compliant alternative, use the String( Char[] ) constructor. This constructor copies the sequence of Unicode characters at the specified pointer until a null character (hexadecimal 0x00) is reached. If the specified array is not null-terminated, the behavior of this constructor is system dependent. For example, such a situation might cause an access violation. [Note: In C# this constructor is defined only in the context of unmanaged code.] Attributes CLSCompliantAttribute(false) See Also System.String Class, System Namespace String(char[]) Constructor public String(char[] value);",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}