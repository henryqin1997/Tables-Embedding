{
    "relation": [
        [
            "Parameter",
            "interval",
            "next_date",
            "reset",
            "purge_method",
            "rollback_segment",
            "startup_seconds",
            "execution_seconds",
            "delay_seconds",
            "transaction_count",
            "write_trace"
        ],
        [
            "Description",
            "Allows you to provide a function to calculate the next time to purge. This value is stored in the interval field of the DEFSCHEDULE view and calculates the next_date field of this view. If you use the default value for this parameter, NULL, then the value of this field remains unchanged. If the field had no previous value, it is created with a value of NULL. If you do not supply a value for this field, you must supply a value for next_date.",
            "Allows you to specify a time to purge pushed transactions from the site's queue. This value is stored in the next_date field of the DEFSCHEDULE view. If you use the default value for this parameter, NULL, then the value of this field remains unchanged. If this field had no previous value, it is created with a value of NULL. If you do not supply a value for this field, then you must supply a value for interval.",
            "Set to true to reset LAST_TXN_COUNT, LAST_ERROR, and LAST_MSG to NULL.",
            "Controls how to purge the deferred transaction queue: purge_method_quick costs less, while purge_method_precise offers better precision. Specify the following for this parameter to use purge_method_quick: dbms_defer_sys.purge_method_quick Specify the following for this parameter to user purge_method_precise: dbms_defer_sys.purge_method_precise If you use purge_method_quick, deferred transactions and deferred procedure calls that have been successfully pushed can remain in the DEFTRAN and DEFCALL data dictionary views for longer than expected before they are purged. For more information, see \"Usage Notes\". These usage notes are for the DBMS_DEFER_SYS.PURGE function, but they also apply to the DBMS_DEFER_SYS.SCHEDULE_PURGE procedure.",
            "Name of rollback segment to use for the purge, or NULL for default.",
            "Maximum number of seconds to wait for a previous purge of the same deferred transaction queue.",
            "If >0, then stop purge cleanly after the specified number of seconds of real time.",
            "Stop purge cleanly after the deferred transaction queue has no transactions to purge for delay_seconds.",
            "If > 0, then shut down cleanly after purging transaction_count number of transactions.",
            "When set to true, Oracle records the result value returned by the PURGE function in the server's trace file."
        ]
    ],
    "pageTitle": "DBMS_DEFER_SYS",
    "title": "",
    "url": "http://docs.oracle.com/cd/B19306_01/server.102/b14227/rardefsyspac.htm",
    "hasHeader": true,
    "headerPosition": "MIXED",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987552.57/warc/CC-MAIN-20150728002307-00091-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 71071915,
    "recordOffset": 71056291,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Wed, 13 May 2015 05:08:23 GMT",
    "textBeforeTable": "Table 14-26 SCHEDULE_PURGE Procedure Parameters Parameters write_trace IN BOOLEAN := NULL); transaction_count IN BINARY_INTEGER := NULL, delay_seconds IN BINARY_INTEGER := NULL, execution_seconds IN BINARY_INTEGER := NULL, startup_seconds IN BINARY_INTEGER := NULL, rollback_segment IN VARCHAR2 := NULL, purge_method IN BINARY_INTEGER := NULL, reset IN BOOLEAN := NULL, next_date IN DATE, interval IN VARCHAR2, DBMS_DEFER_SYS.SCHEDULE_PURGE (  Syntax Oracle Database Advanced Replication for information about using this procedure to schedule continuous or periodic purge of your deferred transaction queue See Also: This procedure schedules a job to purge pushed transactions from the deferred transaction queue at your current master site or materialized view site. You should schedule one purge job. SCHEDULE_PURGE Procedure There is already a different propagator. duplicatepropagator     Specified user is already the propagator.  alreadypropagator     Specified user does not exist.  missinguser      Description Exception   Table 14-25 REGISTER_PROPAGATOR Procedure Exceptions",
    "textAfterTable": "SCHEDULE_PUSH Procedure This procedure schedules a job to push the deferred transaction queue to a remote site. This procedure performs a COMMIT. See Also: Oracle Database Advanced Replication for information about using this procedure to schedule continuous or periodic push of your deferred transaction queue Syntax   DBMS_DEFER_SYS.SCHEDULE_PUSH ( destination IN VARCHAR2, interval IN VARCHAR2, next_date IN DATE, reset IN BOOLEAN := false, parallelism IN BINARY_INTEGER := NULL, heap_size IN BINARY_INTEGER := NULL, stop_on_error IN BOOLEAN := NULL, write_trace IN BOOLEAN := NULL, startup_seconds IN BINARY_INTEGER := NULL, execution_seconds IN BINARY_INTEGER := NULL, delay_seconds IN BINARY_INTEGER := NULL, transaction_count IN BINARY_INTEGER := NULL); Parameters Table 14-27 SCHEDULE_PUSH Procedure Parameters Parameter Description  destination The fully qualified database name of the master site or master materialized view site to which you are forwarding changes.  interval Allows you to provide a function to calculate the next time to push. This value is stored in the interval field of the DEFSCHEDULE view",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}