{
    "relation": [
        [
            "ATTRIBUTE TYPE",
            "Availability",
            "Interface Stability"
        ],
        [
            "ATTRIBUTE VALUE",
            "SUNWcsu",
            "Uncommitted"
        ]
    ],
    "pageTitle": "idmap(1M) (man pages section 1M: System Administration Commands)",
    "title": "",
    "url": "http://docs.oracle.com/cd/E19082-01/819-2240/6n4htdn7d/index.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989301.17/warc/CC-MAIN-20150728002309-00064-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 71755375,
    "recordOffset": 71744539,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Wed, 28 Aug 2013 19:43:10 GMT",
    "textBeforeTable": "See attributes(5) for descriptions of the following attributes: Attributes An error occurred. A diagnostic message is written to standard error. >0 Successful completion. 0 Exit Status # idmap unset-namemap winuser:joe@example.com unixuser   The following command removes the UNIX username unixuser from the AD object representing joe@example.com. Example\u00a012 Removing Directory-based Name Mapping from AD User Object           # idmap set-namemap unixuser:foo foobar@example.com   The following command maps UNIX user foo to Windows user foobar@example.com by adding the Windows name to native LDAP object for foo. Example\u00a011 Adding Directory-based Name Mapping to Native LDAP User Object           # idmap set-namemap winuser:joe@example.com joes   The following command maps Windows user joe@example.com to UNIX user joe by adding the UNIX name to AD object for joe@example.com. Example\u00a010 Adding Directory-based Name Mapping to AD User Object           EOF *@example.com => nobody *@example.com == * administrator@* => nobody jane.doe@example.com == janed",
    "textAfterTable": "See Also svcs(1), idmapd(1M), ldapaddent(1M), svcadm(1M), svccfg(1M), attributes(5), smf(5) Notes The idmapd service is managed by the service management facility, smf(5). The service identifier for the idmapd service is svc:/system/idmap. Use the svcadm command to perform administrative actions on this service, such as enabling, disabling, or restarting the service. These actions require the solaris.smf.manage.idmap authorization. Use the svcs command to query the service's status. Windows user names are case-insensitive, while UNIX user names are case-sensitive. The case of Windows names as they appear in idmap name-rules and idmap show command lines is irrelevant. Because common practice in UNIX environments is to use all-lowercase user names, wildcard name-rules map Windows names to UNIX user/group names as follows: first, the canonical Windows name (that is, in the case as it appears in the directory) is used as a UNIX user or group name. If there is no such UNIX entity, then the Windows name's case is folded to lowercase and the result is used as the UNIX user or group name. As a result of this differing treatment of case, user names that appear to be alike might not be recognized as matches. You must create rules to handle such pairings of strings that differ only in case. For example, to map the Windows user sam@example to the Solaris user Sam, you",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}