{
    "relation": [
        [
            "Parameter",
            "XIDUSN",
            "XIDSLT",
            "XIDSQN"
        ],
        [
            "Description",
            "Transaction ID undo segment number of the transaction being skipped",
            "Transaction ID slot number of the transaction being skipped",
            "Transaction ID sequence number of the transaction being skipped"
        ]
    ],
    "pageTitle": "DBMS_LOGSTDBY",
    "title": "",
    "url": "http://docs.oracle.com/cd/E18283_01/appdev.112/e16760/d_lsbydb.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989301.17/warc/CC-MAIN-20150728002309-00042-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 70107331,
    "recordOffset": 70083774,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{20014=This parameter setting is only meaningful if LOG_AUTO_DELETE has been set to TRUE. The value you supply for this parameter controls how long (in minutes) a remote archived log that is received from the primary database will be retained at the logical standby database once all redo records contained in the log have been applied at the logical standby database. The default value is 1440 minutes., 88826=ORA-01031, 53772=ORA-01309, 21612=Number of processes that SQL Apply uses to read and apply redo. The default value is 9. The maximum number allowed is 2048., 18855=For example, if SQL Apply receives an ORA-1403 error, the whole event is recorded in the DBA_LOGSTDBY_EVENTS view. Whereas, the alert log records only that SQL Apply stopped because of ORA-1403. No information regarding the user table or offending statement is logged in the alert log. However, if you stop the SQL Apply engine, it gets recorded in both the DBA_LOGSTDBY_EVENTS view and in the alert log., 17957=Controls the number of APPLIER processes used to apply changes. The maximum number allowed is 1024, provided the MAX_SERVERS parameter is set to accommodate this., 22413=Controls the number of PREPARER processes used to prepare changes. The maximum number allowed is 1024, provided the MAX_SERVERS parameter is set to accommodate this.}",
    "lastModified": "Sat, 14 Aug 2010 15:00:21 GMT",
    "textBeforeTable": "Table 85-22 UNSKIP_TRANSACTION Procedure Parameters Parameters xidsqn_p IN NUMBER); xidslt_p IN NUMBER, xidusn_p IN NUMBER, DBMS_LOGSTDBY.UNSKIP_TRANSACTION ( Syntax  Use the UNSKIP_TRANSACTION procedure to delete rules specified earlier with the SKIP_TRANSACTION procedure. The parameters specified in the UNSKIP_TRANSACTION procedure must match exactly for the procedure to delete an already-specified rule. UNSKIP_TRANSACTION Procedure    object_name => NULL); schema_name => NULL, - statement => 'NON_SCHEMA_DDL', - DBMS_LOGSTDBY.UNSKIP_ERROR ( - To remove a handler that was previously registered with SQL Apply from getting called on encountering an error, you can issue the following statement: Example   In fact, the UNSKIP procedure will match neither of the rules, because the wildcard character in the OBJECT_NAME parameter will not be expanded. OBJECT_NAME => 'EMP%'); SCHEMA_NAME => 'HR', - In this case, the following UNSKIP procedure cannot be used to delete the rules that you have specified: SQL> EXECUTE DBMS_LOGSTDBY.UNSKIP_ERROR (STMT => 'DML',- PROC_NAME => 'hr_tempemp_handler'); OBJECT_NAME => 'EMPTEMP', - SCHEMA_NAME => 'HR', - SQL> EXECUTE DBMS_LOGSTDBY.SKIP_ERROR (STMT => 'DML',- PROC_NAME => 'hr_employee_handler'); OBJECT_NAME => 'EMPLOYEE', - SCHEMA_NAME => 'HR', -  Wildcards passed in the schema_name or the object_name parameters are not expanded. Instead, the wildcard character is treated as any other character and an exact match is made. Thus, you",
    "textAfterTable": "Exceptions Table 85-23 UNSKIP_TRANSACTION Procedure Exceptions Exception Description ORA-01031 need DBA privileges to execute this procedure ORA-16103 Logical Standby apply must be stopped to allow this operation ORA-16104 invalid Logical Standby option requested Usage Notes This procedure requires DBA privileges to execute. Query the DBA_LOGSTDBY_SKIP_TRANSACTION view to list the transactions that are going to be skipped by SQL Apply. Examples To remove a rule that was originally specified to skip the application of a transaction with (XIDUSN, XIDSLT, XIDSQN) of (1.13.1726) issue the following statement: SQL> DBMS_LOGSTDBY.UNSKIP_TRANSACTION (XIDUSN => 1, XIDSLT => 13, XIDSQN => 1726);",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}