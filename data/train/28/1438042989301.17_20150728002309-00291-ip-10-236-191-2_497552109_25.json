{
    "relation": [
        [
            "Date",
            "Sep 30, 2004",
            "Oct 25, 2010",
            "Oct 15, 2014"
        ],
        [
            "Code",
            "AS",
            "FPAY",
            "FPAY"
        ],
        [
            "Event",
            "Assignment",
            "Fee payment",
            "Fee payment"
        ],
        [
            "Description",
            "Owner name: ARM LIMITED, UNITED KINGDOM Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:FORD, SIMON ANDREW;SYMES, DOMINIC HUGO;ROSE, ANDREW CHRISTOPHER;AND OTHERS;REEL/FRAME:015847/0839;SIGNING DATES FROM 20040701 TO 20040713",
            "Year of fee payment: 4",
            "Year of fee payment: 8"
        ]
    ],
    "pageTitle": "Patent US7219215 - Data processing apparatus and method for moving data elements between ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US7219215?dq=oakley+D523,461",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989301.17/warc/CC-MAIN-20150728002309-00291-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 497621187,
    "recordOffset": 497552109,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6692=FIG. 64 schematically shows an example of constant generation logic operable to generate a constant from a data portion 1210 and a control portion 1200 associated with an instruction according to the present technique. In the example shown, the control portion 1200 controls the control generation logic 1220, which comprises gates 1230 to output either a portion of the data value 1210, or a one or a zero to each bit within the constant 1240 to be generated.}",
    "TableContextTimeStampAfterTable": "{365888=The LSU 22 is also arranged to communicate with a memory management unit (MMU) 1005, which typically incorporates a Translation Lookaside Buffer (TLB) 1015. As will be appreciated by those skilled in the art, an MMU is used to perform certain access control functions, for example conversion of virtual to physical addresses, determination of access permissions (i.e. whether the access can take place), etc. To do this, the MMU stores within the TLB 1015 descriptors obtained from page tables in memory. Each descriptor defines for a corresponding page of memory the necessary access control information relevant to that page of memory., 262892=Saturation is a process that can be used to restrict a data element to a certain range by choosing the closest allowable value. For example if two unsigned 8-bit integers are multiplied using 8 bit registers, the result may overflow. In this case the most accurate result that could be given is binary 11111111, and thus, the number will be saturated to give this value. A similar problem may arise when shifting and narrowing, whereby a number that is narrowed cannot fit into the narrower space. In this case in the case of an unsigned number, when any of the bits that are discarded in the shift step are not zero then the number is saturated to the maximum allowable value. In the case of a signed number the problem is more complicated. In this case the number must be saturated to the maximum allowable positive number or maximum allowable negative number when the most Significant bit is different from any of the discarded bits.}",
    "textBeforeTable": "Patent Citations Although a particular embodiment has been described herein, it will be appreciated that the invention is not limited thereto and that many modifications and additions thereto may be made within the scope of the invention. For example, various combinations of the features of the following dependent claims could be made with the features of the independent claims without departing from the scope of the present invention. ). FIG. 63 VAND Dd,#0b00001000, 0b1100 Wherein the <mode> value 1100 refers to a generated constant comprising an expanded data portion (see shows how embodiments of the present technique can be used to generate a bit mask to extract a certain bit or bits from a number of data elements in a vector. In the example shown the fourth bit of each data element from a source vector is extracted. Initially the immediate 8 is expanded by repeating it and then this is followed by a logical AND instruction which ANDs the generated constant with a source vector to extract the desired bit from each data element. These operations are performed in response to the instruction FIG. 67 The ability to perform further data processing operations on the generated constants can have a variety of uses. For example, <generated",
    "textAfterTable": "US5761103 Mar 8, 1995 Jun 2, 1998 Texas Instruments Incorporated Left and right justification of single precision mantissa in a double precision rounding unit US5808875 Sep 29, 1997 Sep 15, 1998 Intel Corporation Integrated circuit solder-rack interconnect module US5822619 May 14, 1996 Oct 13, 1998 Sgs-Thomson Microelectronics Ltd. System and method for restructuring data strings US5826096 May 19, 1995 Oct 20, 1998 Apple Computer, Inc. Minimal instruction set computer architecture and multiple instruction issue method US5838984 Aug 19, 1996 Nov 17, 1998 Samsung Electronics Co., Ltd. Single-instruction-multiple-data processing using multiple banks of vector registers US5859789 Jul 10, 1996 Jan 12, 1999 Sgs-Thomson Microelectronics Limited Arithmetic unit US5859790 May 17, 1996 Jan 12, 1999 Sgs-Thomson Microelectronics Limited Replication of data US5864703 Oct 9, 1997 Jan 26, 1999 Mips Technologies, Inc. Method for providing extended precision in SIMD vector arithmetic operations US5870618",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}