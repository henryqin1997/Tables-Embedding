{
    "relation": [
        [
            "Parameter",
            "user",
            "group",
            "chroot",
            "dir",
            "rlimit_as",
            "rlimit_core",
            "rlimit_nofile",
            "nice",
            "type",
            "method",
            "query",
            "UseOutputStreamSize",
            "flushTimer",
            "ChunkedRequestBufferSize",
            "ChunkedRequestTimeout",
            "bucket"
        ],
        [
            "Description",
            "(UNIX only) Specifies the name of the user to execute CGI programs as.",
            "(UNIX only) Specifies the name of the group to execute CGI programs as.",
            "(UNIX only) Specifies the directory to chroot to before execution begins.",
            "(UNIX only) Specifies the directory to chdir to after chroot, but before execution begins.",
            "(UNIX only) Specifies the maximum CGI program address space in bytes. You can supply both current (soft) and maximum (hard) limits, separated by a comma. The soft limit must be listed first. If only one limit is specified, both limits are set to this value.",
            "(UNIX only) Specifies the maximum CGI program core file size. A value of 0 disables writing cores. You can supply both current (soft) and maximum (hard) limits, separated by a comma. The soft limit must be listed first. If only one limit is specified, both limits are set to this value.",
            "(UNIX only) Specifies the maximum number of file descriptors for the CGI program. You can supply both current (soft) and maximum (hard) limits, separated by a comma. The soft limit must be listed first. If only one limit is specified, both limits are set to this value.",
            "(UNIX only) Accepts an increment that determines the CGI program's priority relative to the server. Typically, the server is running with a nice value of 0 and the nice increment would be between 0 (the CGI program runs at same priority as server) and 19 (the CGI program runs at much lower priority than server). While it is possible to increase the priority of the CGI program above that of the server by specifying a nice increment of -1, this is not recommended.",
            "(Optional) Common to all Service-class functions.",
            "(Optional) Common to all Service-class functions.",
            "(Optional) Common to all Service-class functions.",
            "(Optional) Common to all Service-class functions.",
            "(Optional) Common to all Service-class functions.",
            "(Optional) Common to all Service-class functions.",
            "(Optional) Common to all Service-class functions.",
            "(Optional) Common to all obj.conf functions."
        ]
    ],
    "pageTitle": "Service (Sun Java System Web Server 6.1 SP11 Administrator's Configuration File Reference)",
    "title": "",
    "url": "http://docs.oracle.com/cd/E19857-01/820-7650/6nit5hjnr/index.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989043.35/warc/CC-MAIN-20150728002309-00036-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 73939919,
    "recordOffset": 73920357,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{42046=The mtime field is the numerical representation of the date of last modification of the file. The number is the number of seconds since the epoch (Jan 1, 1970 00:00 UTC) since the last modification of the file.}",
    "lastModified": "Wed, 26 Jan 2011 17:11:06 GMT",
    "textBeforeTable": "Table\u00a04\u201344 add-footer Parameters The following table describes parameters for the add-footer function. Parameters This function appends a footer to an HTML file that is sent to the client. The footer is specified either as a file name or a URI, thus the footer can be dynamically generated. To specify static text as a footer, use the append-trailer function. Applicable in Service-class directives. add-footer upload-file uploads and saves a file. stats-xml creates a performance report in XML format. shtml_send parses an HTML file for server-parsed HTML commands. set-variable enables you to change server settings based upon conditional information in a request, and to manipulate variables in parameter blocks by using specific commands. service-trace services TRACE requests. service-j2ee services requests made to Java web applications. service-dump creates a performance report based on collected performance bucket data. service-dav services static content and restarts the request with the sourceuri for dynamic content. send-wincgi sets up environment variables, launches a WinCGI program, and sends the response to the client. send-shellcgi sets up environment variables, launches a shell CGI program, and sends the response to the client. send-range sends a range of bytes of a file to the client.",
    "textAfterTable": "Parameter \u00a0 Description \u00a0 file (Optional) Path name to the file containing the header. Specify either file or uri. By default, the path name is relative. If the path name is absolute, pass the NSIntAbsFilePath parameter as yes. uri (Optional) URI pointing to the resource containing the header. Specify either file or uri. NSIntAbsFilePath (Optional) If the file parameter is specified, the NSIntAbsFilePath parameter determines whether the file name is absolute or relative. The default is relative. Set the value to yes to indicate an absolute file path. type (Optional) Common to all Service-class functions. method (Optional) Common to all Service-class functions. query (Optional) Common to all Service-class functions. UseOutputStreamSize (Optional) Common to all Service-class functions. flushTimer (Optional) Common to all Service-class functions.",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}