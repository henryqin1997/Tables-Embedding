{
    "relation": [
        [
            "Property",
            "String accessKey",
            "String charset",
            "String coords",
            "String hreflang",
            "String name",
            "String rel",
            "String rev",
            "String shape",
            "long tabIndex",
            "String target",
            "String type"
        ],
        [
            "Attribute",
            "accesskey",
            "charset",
            "coords",
            "hreflang",
            "name",
            "rel",
            "rev",
            "shape",
            "tabindex",
            "target",
            "type"
        ],
        [
            "Description",
            "Keyboard shortcut",
            "Encoding of the destination document",
            "For tags",
            "Language of the linked document",
            "Anchor name; see Anchor",
            "Link type",
            "Reverse link type",
            "For tags",
            "Link's position in tabbing order",
            "Name of the frame or window in which the destination document is to be displayed",
            "Content type of the destination document"
        ]
    ],
    "pageTitle": "Client-Side JavaScript Reference: Chapter 25 - JavaScript: The Definitive Guide - O'Reilly Media",
    "title": "",
    "url": "http://archive.oreilly.com/pub/a/javascript/excerpts/javascript-tdg/client-side-javascript-reference.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989043.35/warc/CC-MAIN-20150728002309-00041-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 14434399,
    "recordOffset": 14272186,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{5167=This excerpt is from JavaScript: The Definitive Guide. The indispensable reference for JavaScript programmers since 1996, JavaScript: The Definitive Guide, 5th Edition is completely revised and expanded to cover JavaScript as it is used in today's Web 2.0 applications., 20004=The XML grammar allows XML documents to have attributes that consist of Text nodes and EntityReference nodes, which is why an attribute value cannot be fully represented by a string. In practice, however, web browsers expand any entity references in XML attribute values and do not implement the EntityReference interface (which is not documented in this book). Therefore, in client-side JavaScript, the value property is all that is needed to read and write attribute values.}",
    "textBeforeTable": "Specifies how the image is tiled. The possible values are the following: repetitionStyle The image to be tiled. This argument is typically an Image object, but you may also use a Canvas element. image Arguments String repetitionStyle) CanvasPattern createPattern(Imageimage,  Synopsis    CanvasRenderingContext2D.createPattern( ): create a pattern of tiled images Name         CanvasGradient.addColorStop( ), CanvasRenderingContext2D.createRadialGradient( ) See Also    This method creates and returns a new CanvasGradient object that linearly interpolates colors between the specified start point and end point. Note that this method does not specify any colors for the gradient. Use the addColorStop( ) method of the returned object to do that. To stroke lines or fill areas using a gradient, assign a CanvasGradient object to the strokeStyle or fillStyle properties. Description    A CanvasGradient object representing a linear color gradient. Returns The coordinates of the gradient's end point. xEnd, yEnd The coordinates of the gradient's start point. xStart, yStart",
    "textAfterTable": "float xEnd, float yEnd, float radiusEnd) Arguments xStart, yStart The coordinates of the center of the starting circle. radiusStart The radius of the starting circle. xEnd, yEnd The coordinates of the center of the ending circle. radiusEnd The radius of the ending circle. Returns A CanvasGradient object representing a radial color gradient. Description This method creates and returns a new CanvasGradient object that radially interpolates colors between the circumferences of the two specified circles. Note that this method does not specify any colors for the gradient. Use the addColorStop( ) method of the returned object to do that. To stroke lines or fill areas using a gradient, assign a CanvasGradient object to the strokeStyle or fillStyle properties. Radial gradients are rendered by using the color at offset 0 for the circumference of the first circle, the color at offset 1 for the second circle, and interpolated color values (red, green, blue, and alpha) at circles between the two. See Also CanvasGradient.addColorStop( ), CanvasRenderingContext2D.createLinearGradient( )",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}