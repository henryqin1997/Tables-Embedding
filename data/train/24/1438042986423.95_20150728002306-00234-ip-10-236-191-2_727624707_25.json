{
    "relation": [
        [
            "Option",
            "reportable",
            "rebuild",
            "runlist",
            "section_specifier_fatal"
        ],
        [
            "Use In",
            "H",
            "H",
            "H",
            "H"
        ],
        [
            "Default",
            "0",
            "0",
            "none",
            "1"
        ],
        [
            "Meaning",
            "Strictly follow reporting rules, to the extent that it is practical to enforce them by automated means. The tester remains responsible for ensuring that the runs are rule compliant. You must set reportable to generate a valid run suitable for publication and/or submission to SPEC.",
            "Rebuild binaries even if they exist.",
            "What benchmarks to run. Names can be abbreviated, just as on the command line. See the long discussion of run order in runspec.html.",
            "While parsing the config file, if a section specifier is found that refers to an unknown benchmark or benchset, an error is output and the run stops. Set section_specifier_fatal=0 in the header section of your config file to convert this error into a warning and allow the run to continue. The ability to convert section specifier errors into warnings is probably of use only for benchmark developers."
        ]
    ],
    "pageTitle": "SPEC Config files",
    "title": "",
    "url": "http://www.spec.org/omp2012/Docs/config.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986423.95/warc/CC-MAIN-20150728002306-00234-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 727712519,
    "recordOffset": 727624707,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{279139=(To check for possible updates to this document, please see http://www.spec.org/omp2012/Docs/ ), 76703=The following applies to SPEC CPU2006. It is provided for more information about submit., 1020=$SPEC/result (Unix) or %SPEC%\\result (Windows) contains reports and log files. When you are doing a build, you will probably find that you want to pay close attention to the log files such as OMP2012.001.log. Depending on the verbosity level that you have selected, it will contain detailed information about how your build went., 252372=Are source code changes ever allowed? Normally, no. But if you discover a reason why you believe such a change is essential, SPEC wants to hear about it, and will consider such requests for a future revision of the suite. SPEC will normally not publish OMP2012 results using modified source code, unless such modifications are unavoidable for the target environment, are reviewed by SPEC, are made available to all users of the suite, and are formally approved by a vote., 252733=SPEC has chosen not to allow source code changes for the OMP2012 suite, except under very limited circumstances., 111675=It is possible that SPEC may update the example from time to time; if so, updates will be posted at http://www.spec.org/omp2012/Docs/sysinfo. (Note: the link goes to an executable file. If your web browser objects to opening it, try saving it instead.), 246390=If a SPEC OMP2012 result is published (for example, at http://www.spec.org/), it is expected to contain all the information needed for a reader to understand exactly what was tested. Fields that are informative for readers are listed in the table of contents for section V., 245815=In addition, for results published by SPEC, the config file itself is available to readers at http://www.spec.org/omp2012/. The config file is presented as you wrote it, with three exceptions (protected comments, the MD5 section, and rawfile corrections for reader fields). The config file is made available because it is so important to reproducing results, as described in the Introduction. The config file is saved on every run, as a compressed portion of the rawfile, and can be accessed with runspec --rawformat --output_format=config <rawfile>., 157082=OMP2012.nnn.log.debug in your result directory ($SPEC/result, %SPEC%\\result, or the corresponding location under your output_root)., 77347=Consider the following SPEC CPU2006 example. This config file runs 2 copies of 401.bzip2 in SPECrate mode, assigning them to processors with the Linux taskset command:, 250631=The config file is one of the key ingredients in making results reproducible. For example, if a customer would like to run the OMP2012 suite on her own SuperHero Model 4 and discover how close results are in her environment to the environment used when the vendor published a OMP2012 result, she should be able to do that using only 3 ingredients:, 210719=Perhaps the most useful variable is the one for the top of the SPEC OMP2012 tree, $[top], often found in contexts such as:, 120524=Warning: it is possible that SPEC may decide to require use of a sysinfo utility at a future time. If that occurs, the online copy of this document at www.spec.org/omp2012/Docs/config.html will be updated to so indicate., 78233=The config file feature submit allows you to enter commands that will be run in conjuction with the benchmark commands. This capability is very useful for the SPEC CPU2006 rate benchmarks as well as SPEC MPI2007 benchmarks. See those benchmarks for further examples of how it may be used. The following description will discuss items beyond the needs of SPEC OMP2012., 232533=You can also mention the \"bsets\" found in $SPEC/benchspec/OMP2012 or %SPEC%\\benchspec\\OMP2012. For example, you could reference all the C++ benchmarks by saying:, 279294=Last updated: $Date: 2012-10-10 19:57:10 -0400 (Wed, 10 Oct 2012) $ by $Author: BrianWhitney $, 156649=If tmp is not usable, you might find temporaries under tmp.omp2012 or, possibly, tmp.omp2012.n, where n may range from 1 to 15., 75935=You might also want to search published results at www.spec.org/cpu2006 for systems that are similar to your system. If you see SPECrate runs for such systems, the config files associated with them may have examples that combine the features in ways that are useful on your architecture., 75394=The following example is again taken from SPEC CPU2006. It is provided for more information about submit., 140499=This feature can be used to easily allow multiple people to access a single benchmark installation to which (with one exception) they do not need write access. The exception is $SPEC/config. Because the setting for the location comes from the config file, the config files still live under $SPEC. On Unix systems, you might choose to set the permissions on the config subdirectory to 1777 (which is the same as /tmp on many systems)., 36788=In the text report, you can see that when fan.jpg and power.jpg were copied into the result directory, they were given names to show which result they correspond to: OMPG2012.011.test.jpg and OMPG2012.011.test.1.jpg. Note that since the text report spells the name of the attachment out, the text line is wider than in HTML, PS, and PDF reports. When deciding where to break your notes lines, you'll have to decide whether to plan line widths for text (which may result in thin-looking lines elsewhere) or plan your line widths for HTML/PS/PDF (which may result in lines that fall off the right edge with text). The feature notes_wrap_columns won't help you here, since it is applied before the attachment name is spelled out., 279341=Normally, this option should be left at the default. If a reportable run for OMP2012 uses this feature, an explanation should be provided as to why it was used., 109005=Warning: it is possible that, at a future time, SPEC may decide to require use of a sysinfo utility for reportable results. If that occurs, the online copy of this document at www.spec.org/omp2012/Docs/config.html will be updated to so indicate., 42949=Start your notes with the name of the notes section where you want the note to appear, and then add numbers to define the order of the lines. Within a section, notes are sorted by line number. The NNN above is not intended to indicate that you are restricted to 3 digits; you can use a smaller or larger number of digits as you wish, and you can skip around as you like: for example, ex-BASIC programmers might naturally use line numbers 100, 110, 120... But note that if you say notes_plat782348320742972403 you just might encounter the dreaded (and highly unusual) \"out of memory\" error, so don't do that., 214424=A dollar sign and square brackets cause runspec to do substitution immediately after reading the config file. This is useful for variables that don't change during a run, for example $[top] to refer to the directory where SPEC OMP2012 has been installed., 151318=Config files as posted at www.spec.org/omp2012 will not include whatever you put on this line (thus, spambots will not see the contents of this field).}",
    "TableContextTimeStampAfterTable": "{910=There are also temporary debug logs, such as OMP2012.001.log.debug. A debug log contains very detailed debugging output from the SPEC tools, as if --verbose 99 had been specified., 20927=In any case, the tester who employs the SPEC OMP2012 suite does not have to come up with his or her own training workloads, and, indeed, is not allowed to do so under the run rules., 30508=If it were a real src.alt, one would download it from www.spec.org/omp2012/src.alt, and then apply it per the instructions (found in the same README from which the above paragraphs were excerpted):, 36475=Copyright 1999-2012 Standard Performance Evaluation Corporation All Rights Reserved, 26940=In such cases, the 0000 will be incremented until a name is generated that is available. You can find locked directories by searching for lock=1 in the file $SPEC/benchspec/OMP2012/<nnn.benchmark>/run/list (Unix) or %SPEC%\\benchspec\\OMP2012\\<nnn.benchmark>\\run\\list (Windows)., 25133=The build directories for a benchmark are located underneath that benchmarks' top-level directory, typically $SPEC/benchspec/OMP2012/nnn.benchmark/build (Unix) or %SPEC%\\benchspec\\OMP2012\\nnn.benchmark\\build (Windows)., 29971=This example shows the effect of a src.alt, 372.smithwa.no_line.omp2012.v1.0.tar.xz, which is an example src.alt. There are not yet any approved for SPEC OMP2012; this is just an example. A src.alt must have a README, which for this example says, in part:}",
    "textBeforeTable": "Use base binary and/or base result for peak. If applied to the whole suite (in the header section), then only base is run, and its results are reported for both the base and peak metrics. If applied to a single benchmark, the same binary will be used for both base and peak runs, and the median of the base run will be reported for both. 0 H,N basepeak When updating the MD5 hashes in the config file, make a backup copy first. Highly recommended to defend against full-file-system errors, system crashes, or other unfortunate events. 1 H backup_config If allow_extension_override is 1 (or yes or true), then the tools will attempt to build (or run) the same binary they would have built by default, but will name the binary with specified extension. See the example above. If allow_extension_override is 0 (or no or false), the tools will print an error message and exit. The runspec command can use --extension to select among different options in a config file, as mentioned above. But what if the extension mentioned on the runspec command does not occur in any section marker? What should be done then? 0 H allow_extension_override What to do. validate H",
    "textAfterTable": "Like notes, the indices are not important and are used for ordering only. If there are more copies than bind values, they will be re-used in a circular fashion. If there are more bind values specified than copies, then only as many as needed will be used. (History: The bind feature was added with SPEC CPU2006 V1.0. The ability to change bind on a per-benchmark basis was added in SPEC CPU2006 V1.1.) --> Option Use\u00a0In Default Meaning build_in_build_dir H 1 When set, put build directories in a subdirectory named benchspec/OMP2012/nnn.benchmark/build/build... (Unix) or benchspec\\OMP2012\\nnn.benchmark\\build\\build... (Windows) Specifying '0' will cause the build directories to be the run tree: benchspec/OMP2012/nnn.benchmark/run/build... (Unix) benchspec\\OMP2012\\nnn.benchmark\\run\\build... (Windows) Why are build directories separated? Benchmarks are now built in directories named nnn.benchmark/build rather than under the benchmark's run subdirectory in order to make it easier to copy, backup, or delete build and run directories separately from each other. It may also make problem diagnosis easier in some situations, since your habit of removing all the run directories will no longer destroy essential evidence 10 minutes before the compiler developer says \"Wait - what exactly happened at build time?\".",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}