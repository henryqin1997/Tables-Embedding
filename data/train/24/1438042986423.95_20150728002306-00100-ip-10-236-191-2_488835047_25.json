{
    "relation": [
        [
            "Citing Patent",
            "US7325045 *",
            "US7478278 *",
            "US7487393 *",
            "US7610397 *",
            "US7627783",
            "US7673242",
            "US7765320 *",
            "US7774476",
            "US8078971 *",
            "US8117331",
            "US8180864",
            "US8219620",
            "US8301636 *",
            "US8307073",
            "US8392878 *",
            "US8407789 *",
            "US8438279",
            "US8458227",
            "US8572495 *",
            "US8601160 *",
            "US8838714",
            "US8898137",
            "US8965981 *",
            "US20090113322 *",
            "US20110087991 *",
            "US20110126136 *",
            "US20120109913 *",
            "US20120158987 *",
            "US20140280126 *"
        ],
        [
            "Filing date",
            "Aug 5, 2003",
            "Apr 14, 2005",
            "Apr 16, 2008",
            "Feb 28, 2005",
            "Apr 16, 2008",
            "Mar 21, 2006",
            "Mar 1, 2005",
            "Apr 1, 2005",
            "Jan 24, 2006",
            "Jun 30, 2008",
            "Sep 10, 2004",
            "Feb 20, 2001",
            "Dec 15, 2005",
            "Jun 24, 2010",
            "Oct 31, 2007",
            "Nov 16, 2009",
            "Sep 15, 2012",
            "Jun 24, 2010",
            "Dec 15, 2005",
            "Feb 9, 2006",
            "Mar 24, 2012",
            "Jun 24, 2010",
            "Nov 25, 2009",
            "Oct 31, 2007",
            "Oct 13, 2009",
            "",
            "",
            "Dec 19, 2011",
            "Mar 14, 2013"
        ],
        [
            "Publication date",
            "Jan 29, 2008",
            "Jan 13, 2009",
            "Feb 3, 2009",
            "Oct 27, 2009",
            "Dec 1, 2009",
            "Mar 2, 2010",
            "Jul 27, 2010",
            "Aug 10, 2010",
            "Dec 13, 2011",
            "Feb 14, 2012",
            "May 15, 2012",
            "Jul 10, 2012",
            "Oct 30, 2012",
            "Nov 6, 2012",
            "Mar 5, 2013",
            "Mar 26, 2013",
            "May 7, 2013",
            "Jun 4, 2013",
            "Oct 29, 2013",
            "Dec 3, 2013",
            "Sep 16, 2014",
            "Nov 25, 2014",
            "Feb 24, 2015",
            "Apr 30, 2009",
            "Apr 14, 2011",
            "May 26, 2011",
            "May 3, 2012",
            "Jun 21, 2012",
            "Sep 18, 2014"
        ],
        [
            "Applicant",
            "A9.Com, Inc.",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "Mcafee, Inc.",
            "Tektronix, Inc.",
            "Sap Aktiengesellschaft",
            "Oracle International Corporation",
            "International Business Machines Corporation",
            "Oracle International Corporation",
            "Mcafee, Inc.",
            "Microsoft Corporation",
            "Amazon Technologies, Inc.",
            "National Instruments Corporation",
            "Symantec Corporation",
            "Amazon Technologies, Inc.",
            "Amazon Technologies, Inc.",
            "Microsoft Corporation",
            "Mcafee, Inc.",
            "Mcafee, Inc.",
            "Amazon Technologies, Inc.",
            "At&T Intellectual Property I, L.P.",
            "Rogers Steven W",
            "Fluke Corporation",
            "At&T Intellectual Property I, L.P.",
            "Rajure Abhay C",
            "Borland Software Corporation",
            "Facebook, Inc."
        ],
        [
            "Title",
            "Error processing methods for providing responsive content to a user when a page load error occurs",
            "Template based parallel checkpointing in a massively parallel computer system",
            "Template based parallel checkpointing in a massively parallel computer system",
            "Method and apparatus for adaptive load shedding",
            "Template based parallel checkpointing in a massively parallel computer system",
            "Sliding window packet management systems",
            "Configuration of filter for data stream organized in frames",
            "Methods and systems for exchanging data using one communication channel between a server and a client to display content in multiple windows on a client",
            "System and method for scripting explorer for server configuration",
            "Method and apparatus for adaptive load shedding",
            "System and method for scripting tool for server configuration",
            "Unwanted e-mail filtering system including voting feedback",
            "Providing schedulable calendars electronically",
            "URL rescue by correction of encoding errors",
            "In-place structure in a graphical program",
            "Method and system for dynamically optimizing multiple filter/stage security systems",
            "Identifying content that is responsive to a request for an invalid URL",
            "URL rescue by identifying information related to an item referenced in an invalid URL",
            "Providing electronic distribution of filtered calendars",
            "System, method and computer program product for gathering information relating to electronic content utilizing a DNS server",
            "Unwanted e-mail filtering system including voting feedback",
            "URL rescue by execution of search using information extracted from invalid URL",
            "Method and apparatus for botnet analysis and visualization",
            "Global Variable Structure in a Graphical Program",
            "Methods and Apparatus for Reliable Entry and Enhanced Presentation of IPv6 Addresses",
            "Method and Apparatus for Botnet Analysis and Visualization",
            "Method and system for caching regular expression results",
            "Method of non-intrusive analysis of secure and non-secure web application traffic in real-time",
            "Caching sliding window data"
        ]
    ],
    "pageTitle": "Patent US7162698 - Sliding window packet management systems - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US7162698?ie=ISO-8859-1&dq=5,371,548",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986423.95/warc/CC-MAIN-20150728002306-00100-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 488889463,
    "recordOffset": 488835047,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6468=In other systems of the invention, a simulation engine is used to reconstruct web sessions and communicate these to a client, such as a web browser. Referring to FIG. 23, a capture data source 2300 provides capture data to a control engine 2302. Control engine 2302 reviews the incoming data to determine or filter portions that are compliant request or reply packets. The control engine 2302 parses the packets for HTTP requests and responses and organizes the incoming packets into a sorted list, as described above. Note that although HTTP request and response packets are spoken of and illustrated here, other request and response packet types or Internet protocols may be used, such as the HTTPS and FTP protocols. As the packets are being sorted into a packet sorted list, the packets can also be sent in parallel to a simulation engine 2304, either after a pre-specified number have been added to the packet sorted list, or once the end of the capture data stream is reached.}",
    "TableContextTimeStampAfterTable": "{210625=A matching expression entry is displayed including and expression selector 1206, an offset selector 1208, a qualifier entry 1210, a relational operator entry 1214, a value entry box 1216, and a format entry 1218. A drop down list of qualifiers 1212 is shown, as appears when a user clicks on the arrow of the qualifier entry 1210. The shown qualifiers are representative of symbolic offsets that might be used; others may be used without departing from the invention. An expression selector 1206 may be checked by default when a matching expression is created in the user interface. The expression selector 1206 enables application of the particular matching expression by the filter, whereby the particular matching expression is used when filtering packets. If the selector is not checked, the matching expression is ignored. If an unselected expression is combined through a logical operator with a selected matching expression, the filter may consider the unselected expression to be true, or other value that will not reduce the set of matching packets by the filter. The offset selector specifies the origin to where the qualifier offset is referenced, for example an ethernet MAC header or an IP header. A qualifier combo box 1210 is used to specify a literal or symbolic offset into packets, or a symbolic metadata identifier. The relational operator entry 1214 specifies the relational operator to apply for the matching expression. The value entry 1216 specifies a value to apply. The format entry 1218 may direct the filter to consider the value and the referenced value of the qualifier to be of a specific format., 263144=Execution continues from step 1728 to step 1730, in which a determination is made as to whether or not a file of the first response packet is a script file. If yes, the name, and location if necessary, of the file is recorded to a script list. The recording of the name of the file may be an append operation to retain the script list in chronological order. Execution continues from either of steps 1730 or 1732 to step 1734, in which a determination is made as to whether or not the file or files of the response are being cached. If yes, execution is bypassed to step 1736 in which file data contained in the response packet is appended to a cache file created in step 1726. Execution proceeds from steps 1734 or 1736 to step 1738, in which files of the responses are appended to files created in step 1728. Step 1740 is then executed, in which a determination is made as to whether or not the current packet being processed is the last packet of a response. If yes, execution proceeds to steps 1742, 1744, and 1746 which close the cache entries and data files created in steps 1726 and 1728. Execution then repeats at step 1702, getting the next available packet., 274340=After displaying a web page, a delay is asserted to wait for either user input or a timeout, or a new request sent to control engine 2302. The user may be given options to proceed to a next page, to return to a previous page, to begin or end a timer, to playback a web page sequence automatically with fixed time, to playback a web session based on capture time, to show in real time, and other options as desired. If it is desired to show a web session based on capture time, control engine 2302 may use the packet timestamps to determine when to send the next request and response session to simulation engine 2304. If operation is desired to display web sessions in real time, packets are passed to simulation engine 2304 as soon as they are processed by capture engine 2302., 261740=If the determination of step 1720 indicates the response includes a file needing to be saved, step 1722 is executed, in which a determination is made as to whether or not the received packet is the first packet of a response. If no, execution continues at step 1734. Otherwise, a determination is made as to whether or not the file or files associated with the response should be cached in step 1724. If a cache entry is appropriate it is created in step 1726. In either case, step 1728 is executed in which a file is created using the saved request and the first response packet. This file may be based on the location in the request packet or in the first response packet. A directory structure specified in the request or response packet may be recreated, if necessary, in storage. Data included in the first packet is included in the file, which is appended to as successive packets are processed. In illustration of one example of data file and directory creation, a request packet requests an image from a directory on a web server at /files/images/image.gif. A corresponding directory of X:/optional_directories/files/images would be created, where X: is the drive letter and optional_directories is a root directory for the storage of recreated files and directories. The file image.gif would be placed in that directory., 66853=A preferred network recording machine of the invention uses a 2.0 GHz Pentium III or Pentium IV processor with 2 gigabytes of provided RAM. A dual processor system is preferred, although not required. The RAM is preferably dual gated or dual ported to provide improved memory throughput. An operating system, such as Linux, is provided in the form of a flash IDE solid-state disk. An Intel Pro-1000 series 10/100/1000 network card is provided for a network capture device, in either optical or wire physical network versions, having a PCI bus speed of 133 MHz. As fixed storage, a series of ATA-133 IDE disks are provided which are interfaced to the processor through a 3-Ware Escalade 7850 IDE RAID card. For removable storage one or more Exabyte 430M SCSI tape drive are provided. It is envisioned that writable CDs may be used for removable storage in an automated CD jukebox, although it appears that such systems have not yet developed to maturity. A preferred network recording machine performs only capture operations, and not data mining operations, to maximize the capture bandwidth., 175480=Systems of the invention may implement multi-processor systems with shared memory to provide additional bandwidth to and from storage. In some systems of the invention a SAN is provided over a Scalable Coherent Interface (SCI) mesh, with multiple processors providing bus communication to storage devices. Those systems permit the concurrent storage of high-bandwidth network traffic, such as over 100 Mbps or 1000 Mbps network segments, and retrieval of that network traffic for analysis. Other types of high speed backbones and backplanes may be used without departing from the scope of the invention., 50959=This application claims the benefit of U.S. Provisional Application No. 60/306,107 filed Jul. 17, 2001, the benefit of U.S. Provisional Application No. 60/306,056 filed Jul. 17, 2001, the benefit of U.S. Provisional Application No. 60/306,106 filed Jul. 17, 2001, the benefit of U.S. Provisional Application No. 60/306,792 filed Jul. 20, 2001, and the benefit of U.S. Provisional Application No. 60/311,142 filed Aug. 9, 2001., 273335=The simulation engine 2304 determines whether a packet is a request or a response. If it is a request packet the packet is saved and sent to a customized web browser 2306 that treats the packet as if the web browser 2306 itself had made the request. The simulation engine then sends a message back to the control engine 2302 asking it to send response packets. As an alternative, the control engine may send the response packets without waiting for a request from the simulation engine. In either case, control engine 2302 sends all response packets associated with the request packet sent earlier. The control engine 2302 uses the packet sorted list to locate the response packets to send. Simulation engine 2304 receives the response packets, and redirects them to the customized web browser 2306. Customized web browser 2306 processes the response packets as if the responses came from the original source.}",
    "textBeforeTable": "Patent Citations The present invention may be embodied in other specific forms without departing from their spirit or characteristics. The described embodiments are to be considered in all respects as only illustrative, and not restrictive. The scope of the invention is, therefore, indicated by the appended claims, rather than the foregoing description. All changes that come within the meaning and range of equivalency of the claims are to be embraced within their scope. While the present invention has been described and illustrated in conjunction with a number of specific embodiments, those skilled in the art will appreciate that variations and modifications may be made without departing from the principles of the inventions as herein illustrated, described and claimed. The methods and structures described in the drawings are illustrative in nature only. depicts a procedure by flowchart whereby TCP packets may be provided to a simulation engine. At step 2502 the next packet is retrieved. If no further packets are available for retrieval execution may stop, or wait for new packets to become available. Execution proceeds to step 2504 in which a decision is made determining if the newly retrieved packet is the next in a sequence. If not, execution proceeds to step 2506 in which the newly retrieved packet is saved to a stack. Afterward, in step 2508 a test for stack overflow is performed, and if there is no problem the loop repeats at",
    "textAfterTable": "Citing Patent Filing date Publication date Applicant Title US7325045 * Aug 5, 2003 Jan 29, 2008 A9.Com, Inc. Error processing methods for providing responsive content to a user when a page load error occurs US7478278 * Apr 14, 2005 Jan 13, 2009 International Business Machines Corporation Template based parallel checkpointing in a massively parallel computer system US7487393 * Apr 16, 2008 Feb 3, 2009 International Business Machines Corporation Template based parallel checkpointing in a massively parallel computer system US7610397 * Feb 28, 2005 Oct 27, 2009 International Business Machines Corporation Method and apparatus for adaptive load shedding US7627783 Apr 16, 2008 Dec 1, 2009 International Business Machines Corporation Template based parallel checkpointing in a massively parallel computer system US7673242 Mar 21, 2006 Mar 2, 2010 Mcafee, Inc. Sliding window packet management systems US7765320 * Mar 1, 2005",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}