{
    "relation": [
        [
            "Parameter",
            "name",
            "public_id",
            "sysem_id"
        ],
        [
            "Description",
            "notations's name",
            "notation's public Id",
            "notation's system Id"
        ]
    ],
    "pageTitle": "Package Parser APIs for C++",
    "title": "",
    "url": "http://docs.oracle.com/cd/E18283_01/appdev.112/e10771/parser.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989790.89/warc/CC-MAIN-20150728002309-00193-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 70292091,
    "recordOffset": 70276874,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Sat, 14 Aug 2010 15:00:10 GMT",
    "textBeforeTable": "throw (ParserException) = 0; DOMImplementation< Node>* impl_ptr = NULL) boolean no_mod = FALSE, DocumentTypeRef< Node>* dtd_ptr = NULL, boolean DTDvalidate = FALSE, InputSource* isrc_ptr, virtual DocumentRef< Node>* parse( Syntax  Parses the document and returns the tree root node parse()    (DOMParserIdType) Parser Id Returns  virtual DOMParserIdType getParserId() const = 0; Syntax  getParserId()    (Context*) pointer to parser's context Returns  virtual Context* getContext() const = 0; Syntax  Each parser object is allocated and executed in a particular Oracle XML context. This member function returns a pointer to this context. getContext()     Set the validator for this parser. setValidator() Parse and validate the document. parseSchVal() Parse DTD document. parseDTD() Parse the document. parse()",
    "textAfterTable": "no_mod TRUE if no modifications allowed impl_ptr optional DomImplementation pointer Returns (DocumentRef) document tree parseDTD() Parse DTD document. Syntax virtual DocumentRef< Node>* parseDTD( InputSource* isrc_ptr, boolean no_mod = FALSE, DOMImplementation< Node>* impl_ptr = NULL) throw (ParserException) = 0; Parameter Description isrc_ptr input source no_mod TRUE if no modifications allowed impl_ptr optional DomImplementation pointer Returns (DocumentRef) DTD document tree parseSchVal() Parses and validates the document. Sets the validator if the corresponding parameter is not NULL. Syntax",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}