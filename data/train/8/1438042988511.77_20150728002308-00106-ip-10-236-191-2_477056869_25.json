{
    "relation": [
        [
            "Date",
            "Jan 10, 2002",
            "Mar 6, 2009",
            "Mar 27, 2009",
            "Feb 27, 2013"
        ],
        [
            "Code",
            "AS",
            "AS",
            "FPAY",
            "FPAY"
        ],
        [
            "Event",
            "Assignment",
            "Assignment",
            "Fee payment",
            "Fee payment"
        ],
        [
            "Description",
            "Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW Y Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ROSS, STEVEN I.;MACALLISTER, JEFFREY G.;ALWEIS, JULIE F.;REEL/FRAME:012489/0276 Effective date: 20020108",
            "Owner name: NUANCE COMMUNICATIONS, INC., MASSACHUSETTS Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:022354/0566 Effective date: 20081231",
            "Year of fee payment: 4",
            "Year of fee payment: 8"
        ]
    ],
    "pageTitle": "Patent US6950793 - System and method for deriving natural language representation of formal ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US6950793?dq=7,346,539",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988511.77/warc/CC-MAIN-20150728002308-00106-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 477096055,
    "recordOffset": 477056869,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{83052=For example, after having said, \u201cCreate an appointment with Mark at 3 o'clock tomorrow\u201d, a user might say \u201cChange that to 4 o'clock.\u201d The speech center system 20 establishes that a time attribute of something is changing, but needs to refer back to the conversational record 60 to find the appointment object whose time attribute is changing. Usually, the most recently mentioned object that fits the requirements will be chosen, but in some cases the selection of the proper referent is more complex, and involves the goal structure of the conversation., 71277=The conversation manager 28 converts the utterance 15 into an intermediate form that is more amenable to processing. The translation process initially converts recognized utterances 15 into sequences of script calls to frame-building functions via a recursive substitution translation facility. One example of such a facility is described in U.S. patent application Ser. No. 09/342,937, filed Jun. 29, 1999, entitled \u201cMethod and Apparatus for Translation of Common Language Utterances into Computer Application Program Commands,\u201d the entire teachings of which are incorporated herein by reference. When these functions are executed, they build frames within the semantic analysis module 50 which serve as an initial semantic representation of the utterance 15. The frames are then processed into a series of attribute-object-value triples, which are termed \u201cpropositions\u201d. Frame to attribute-object-value triple translation is mostly a matter of filling in references to containing frames. These triples are stored in memory, and provide the raw material upon which the reasoning facility 52 operates. A sentence such as \u201cmake this column green\u201d would be translated to a frame structure by a series of calls like these:, 64427=The syntax manager 62 uses the grammatical specifications to define the language that the speech center 20 understands. The foundation domain model 70 contains a set of grammatical specifications that defines base classes such as numbers, dates, assertions, commands and questions. These specifications are preferably in an annotated form of Backus Naur Form (BNF), that are further processed by the syntax manager 62 rather than being passed on directly to the speech engine interface 30. For example, a goal is to support a grammatic specification for asserting a property for an object in the base grammar. In conventional Backus Naur Form (BNF), the grammatic specification might take the form:, 31612=The present invention provides for consistency between the input and output, without requiring the user to conform to a limited set of fixed phrases, as in conventional approaches. This provides for a \u201csay what you hear\u201d consistency. The best way to train a user how to speak to the system is to use the same language used by the user when speaking to the user. When the recognition vocabulary or grammar is changed, a conventional, fixed spoken phrase implementation requires that the fixed phrases be changed. In any conventional system using fixed phrases, the spoken phrases rapidly drift apart from the recognition vocabulary, due to the difficulty of manually maintaining this correspondence., 50952=The context manager module 58 keeps track of the targets of previous commands, factors in changes in the desktop environment, and uses this information to determine the target of new commands. One example of a context manager 58 suitable for use with the invention is described in copending, commonly assigned U.S. patent application Ser. No. 09/931,505, filed Aug. 16, 2001, entitled \u201cSystem and Method for Determining Utterance Context in a Multi-Context Speech Application.\u201d, 58889=Based on the ontology definitions of actions and their patients (the thing acted upon by an action) and on the definition of the thing and manner templates, the small piece of grammar specification shown above would cover a wide range of commands such as \u201cmove down\u201d and \u201csend this file to Kathy\u201d., 26905=This application claims the benefit of U.S. Provisional Application No. 60/261,372, filed Jan. 12, 2001. This application is related to U.S. application Ser. No. 09/931,505, filed Aug. 16, 2001, U.S. application Ser. No. 10/044,289 filed Oct. 25, 2001 entitled \u201cSystem and Method for Relating Syntax and Semantics for a Conversational Speech Application,\u201d concurrently filed U.S. application Ser. No. 10/044,760 entitled \u201cMethod and Apparatus for Converting Utterance Representations into Actions in a Conversational System,\u201d and concurrently filed U.S. application Ser. No. 10/044,647 entitled \u201cMethod and Apparatus for Performing Dialog Management in a Computer Conversational Interface.\u201d The entire teachings of the above applications are incorporated herein by reference., 66245=This would allow the user to create sentences like \u201cThe color of A1 is red\u201d or \u201cThe age of Tom is 35\u201d. The sample conventional BNF does not quite capture the desired meaning, however, because it doesn't relate the set of legal attributes to specific type of the object, and it doesn't relate the set of legal values to the particular attribute in question. The grammatic specification should not validate a statement such as \u201cThe age of Tom is red\u201d, for example. Likewise, the grammatic specification disallows sentences that specify attributes of objects that do not possess those attributes. To capture this distinction in BNF format in the grammatic specification would require separate definitions for each type of attribute, and separate sets of attributes for each type of object. Rather than force the person who specifies the grammar to do this, the speech center system 20 accepts more general specifications in the form of syntax templates 72, which will then be processed by the syntax manager module 62, and the more specific BNF definitions are created automatically. The syntax template version, in one example, of the above statement is as follows:, 29746=The present invention provides a language generation method that performs its work in the context of a domain model for a particular application. A domain model consists of several types of information. The most basic of these is the ontology, in which a developer specifies the entities, classes, and attributes that define the domain of discourse for a particular application. A lexicon provides information about the vocabulary used to talk about the domain. With the addition of syntax templates expressed in terms of the ontology definitions, a grammar can be automatically generated for the domain, and output questions and responses in the domain can also be generated. Rules allow some simple automated reasoning within the domain, which provides an approach for the appropriate syntax template to be chosen for generating the output in response to the user. One example of the ontology, lexicon and syntax templates suitable for use with the present invention is described in copending U.S. Patent Application \u201cSystem and Method for Relating Syntax and Semantics for a Conversational Speech Application,\u201d filed Oct. 25, 2001.}",
    "textBeforeTable": "Patent Citations While this invention has been particularly shown and described with references to preferred embodiments thereof, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the scope of the invention encompassed by the appended claims. In step 110, the speech center 20, through the speech engine 22, generates an audio output 16 for the user based on the response output 78. For example, the speech engine 22 generates and plays the audio output 16 to the user through a speaker associated with the computer system 10. In one embodiment, the dialog manager 56 controls the timing of the conversion of the response output 78 to the audio output 16 and thus the timing of the delivery of the audio output 16 to the user of the computer system 10. In step 108, the language generation module 54 produces the response output 78 (e.g., text string) based on the selected syntax template 94, the response representation 76, and the domain model 70. The language generation module 54 uses the selected syntax template 94 to process the formal structure (propositions) of the response representation 76. Where appropriate, the language generation module 54 uses other syntax templates 72 from the domain model 70 that are referenced in the syntax template 94. The language generations module 54 thus produces a natural language assertion",
    "textAfterTable": "US5390279 Dec 31, 1992 Feb 14, 1995 Apple Computer, Inc. Partitioning speech rules by context for speech recognition US5642519 Apr 29, 1994 Jun 24, 1997 Sun Microsystems, Inc. Speech interpreter with a unified grammer compiler US5677835 * Dec 22, 1994 Oct 14, 1997 Caterpillar Inc. Integrated authoring and translation system US5678052 Jan 19, 1995 Oct 14, 1997 International Business Machines Corporation Methods and system for converting a text-based grammar to a compressed syntax diagram US5748841 Apr 10, 1997 May 5, 1998 Morin; Philippe Supervised contextual language acquisition system US5812977 Aug 13, 1996 Sep 22, 1998 Applied Voice Recognition L.P. Voice control computer interface enabling implementation of common subroutines US5867817 Aug 19, 1996 Feb 2, 1999 Virtual Vision, Inc. Speech recognition manager US5873064 Nov 8, 1996 Feb 16, 1999 International Business Machines Corporation Multi-action voice macro method US5918222",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}