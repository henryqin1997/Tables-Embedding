{
    "relation": [
        [
            "Name",
            "if_name",
            "if_description",
            "if_IPv4addr",
            "if_IPv6addr",
            "if_MACaddr",
            "if_EUIaddr",
            "if_speed",
            "if_tsresol",
            "if_tzone",
            "if_filter",
            "if_os",
            "if_fcslen",
            "if_tsoffset"
        ],
        [
            "Code",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14"
        ],
        [
            "Length",
            "Variable",
            "Variable",
            "8",
            "17",
            "6",
            "8",
            "8",
            "1",
            "4",
            "variable",
            "variable",
            "1",
            "8"
        ],
        [
            "Description",
            "A UTF-8 string containing the name of the device used to capture data.",
            "A UTF-8 string containing the description of the device used to capture data.",
            "Interface network address and netmask. This option can be repeated multiple times within the same Interface Description Block when multiple IPv4 addresses are assigned to the interface.",
            "Interface network address and prefix length (stored in the last byte). This option can be repeated multiple times within the same Interface Description Block when multiple IPv6 addresses are assigned to the interface.",
            "Interface Hardware MAC address (48 bits).",
            "Interface Hardware EUI address (64 bits), if available.",
            "Interface speed (in bps).",
            "Resolution of timestamps. If the Most Significant Bit is equal to zero, the remaining bits indicates the resolution of the timestamp as as a negative power of 10 (e.g. 6 means microsecond resolution, timestamps are the number of microseconds since 1/1/1970). If the Most Significant Bit is equal to one, the remaining bits indicates the resolution as as negative power of 2 (e.g. 10 means 1/1024 of second). If this option is not present, a resolution of 10^-6 is assumed (i.e. timestamps have the same resolution of the standard 'libpcap' timestamps).",
            "Time zone for GMT support (TODO: specify better).",
            "The filter (e.g. \"capture only TCP traffic\") used to capture traffic. The first byte of the Option Data keeps a code of the filter used (e.g. if this is a libpcap string, or BPF bytecode, and more). More details about this format will be presented in Appendix XXX (TODO). (TODO: better use different options for different fields? e.g. if_filter_pcap, if_filter_bpf, ...)",
            "A UTF-8 string containing the name of the operating system of the machine in which this interface is installed. This can be different from the same information that can be contained by the Section Header Block (Section 3.1 (Section Header Block (mandatory))) because the capture can have been done on a remote machine.",
            "An integer value that specified the length of the Frame Check Sequence (in bits) for this interface. For link layers whose FCS length can change during time, the Packet Block Flags Word can be used (see Appendix A (Packet Block Flags Word)).",
            "A 64 bits integer value that specifies an offset (in seconds) that must be added to the timestamp of each packet to obtain the absolute timestamp of a packet. If the option is missing, the timestamps stored in the packet must be considered absolute timestamps. The time zone of the offset can be specified with the option if_tzone. TODO: won't a if_tsoffset_low for fractional second offsets be useful for highly syncronized capture systems?"
        ],
        [
            "Example(s)",
            "\"eth0\" / \"\\Device\\NPF_{AD1CE675-96D0-47C5-ADD0-2504B9126B68}\" / ...",
            "\"Broadcom NetXtreme\" / \"First Ethernet Interface\" / ...",
            "192 168 1 1 255 255 255 0",
            "2001:0db8:85a3:08d3:1319:8a2e:0370:7344/64 is written (in hex) as \"20 01 0d b8 85 a3 08 d3 13 19 8a 2e 03 70 73 44 40\"",
            "00 01 02 03 04 05",
            "TODO: give a good example",
            "100000000 for 100Mbps",
            "6",
            "TODO: give a good example",
            "00 \"tcp port 23 and host 10.0.0.5\"",
            "\"Windows XP SP2\" / \"openSUSE 10.2\" / ...",
            "4",
            "1234"
        ]
    ],
    "pageTitle": "PCAP Next Generation Dump File Format",
    "title": "",
    "url": "http://www.winpcap.org/ntar/draft/PCAP-DumpFileFormat.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986022.41/warc/CC-MAIN-20150728002306-00334-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 846391047,
    "recordOffset": 846361919,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{2338=This Internet-Draft will expire on September 2, 2004., 1408=This document is an Internet-Draft and is in full conformance with all provisions of Section\u00a010 of RFC\u00a02026.}",
    "textBeforeTable": "The following codes can always be present in any optional field: \u00a0Figure\u00a07: Options format.\u00a0      The format of the optional fields is shown in Figure\u00a07 (Options format.).  Options may be repeated several times (e.g. an interface that has several IP addresses associated to it) TODO: mention for each option, if it can/shouldn't appear more than one time. The option list is terminated by a Option which uses the special 'End of Option' code (opt_endofopt).   Option Value (variable length): it contains the value of the given option, aligned to a 32-bit boundary. The actual length of this field (i.e. without the padding bytes) is specified by the Option Length field.  Option Length (2 bytes): it contains the actual +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Option Code == opt_endofopt | Option Length == 0 | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ / / / . . . other options . . . / / / +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ / /* variable length, aligned to 32 bits */ / / Option Value / +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Option Code | Option Length | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 0 1 2 3",
    "textAfterTable": "\u00a0Figure\u00a08: Section Header Block format.\u00a0 The meaning of the fields is: Block Type: The block type of the Section Header Block is the integer corresponding to the 4-char string \"\\r\\n\\n\\r\" (0x0A0D0D0A). This particular value is used for 2 reasons: This number is used to detect if a file has been transferred via FTP or HTTP from a machine to another with an inappropriate ASCII conversion. In this case, the value of this field will differ from the standard one (\"\\r\\n\\n\\r\") and the reader can detect a possibly corrupted file. This value is palindromic, so that the reader is able to recognize the Section Header Block regardless of the endianess of the section. The endianess is recognized by reading the Byte Order Magic, that is located 8 bytes after the Block Type. Block Total Length: total size of this block, as described in Section\u00a02.1 (General Block Structure). Byte-Order Magic: magic number, whose value is the hexadecimal number 0x1A2B3C4D. This number can be used to distinguish sections that have been saved on little-endian machines from the ones saved on big-endian machines. Major Version: number of the current mayor version of the format. Current value is 1. This value should change if the format changes in such a way that tools that can read the new format could not",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}