{
    "relation": [
        [
            "SQL Statement",
            "CREATE DATABASE LINK sales.us.americas.acme_auto.com USING 'sales_us';",
            "CREATE DATABASE LINK foo CONNECT TO CURRENT_USER USING 'am_sls';",
            "CREATE DATABASE LINK sales.us.americas.acme_auto.com CONNECT TO scott IDENTIFIED BY tiger USING 'sales_us';",
            "CREATE PUBLIC DATABASE LINK sales CONNECT TO scott IDENTIFIED BY tiger USING 'rev';",
            "CREATE SHARED PUBLIC DATABASE LINK sales.us.americas.acme_auto.com CONNECT TO scott IDENTIFIED BY tiger AUTHENTICATED BY anupam IDENTIFIED BY bhide USING 'sales';"
        ],
        [
            "Connects To Database",
            "sales using net service name sales_us",
            "sales using service name am_sls",
            "sales using net service name sales_us",
            "sales using net service name rev",
            "sales using net service name sales"
        ],
        [
            "Connects As",
            "Connected user",
            "Current global user",
            "scott using password tiger",
            "scott using password tiger",
            "scott using password tiger, authenticated as anupam using password bhide"
        ],
        [
            "Link Type",
            "Private connected user",
            "Private current user",
            "Private fixed user",
            "Public fixed user",
            "Shared public fixed user"
        ]
    ],
    "pageTitle": "29 Distributed Database Concepts",
    "title": "",
    "url": "http://docs.oracle.com/cd/B13789_01/server.101/b10739/ds_concepts.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986022.41/warc/CC-MAIN-20150728002306-00067-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 80554487,
    "recordOffset": 80517324,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Mon, 22 Mar 2004 19:57:00 GMT",
    "textBeforeTable": "Create database links using the CREATE DATABASE LINK statement. The table gives examples of SQL statements that create database links in a local database to the remote sales.us.americas.acme_auto.com database: Creation of Database Links: Examples PL/SQL User's Guide and Reference for more information about invoker-rights functions, procedures, or packages. Oracle Advanced Security Administrator's Guide \"Distributed Database Security\" for more information about security issues relating to database links See Also: You cannot connect to a database as an enterprise user and then use a current user link in a stored procedure that exists in a shared, global schema. For example, if user jane accesses a stored procedure in the shared schema guest on database hq, she cannot use a current user link in this schema to log on to a remote database. If the stored object is an invoker-rights function, procedure, or package, then the invoker's authorization ID is used to connect as a remote user. For example, if user jane calls procedure scott.p (an",
    "textAfterTable": "See Also: \"Creating Database Links\" to learn how to create link Oracle Database SQL Reference for information about the CREATE DATABASE LINK statement syntax Schema Objects and Database Links After you have created a database link, you can execute SQL statements that access objects on the remote database. For example, to access remote object emp using database link foo, you can issue: SELECT * FROM emp@foo; You must also be authorized in the remote database to access specific remote objects. Constructing properly formed object names using database links is an essential aspect of data manipulation in distributed systems. Naming of Schema Objects Using Database Links Oracle Database uses the global database name to name the schema objects globally using the following scheme: schema.schema_object@global_database_name where: schema is a collection of logical structures of data, or schema objects. A schema is owned by a database user and has the same name as that user. Each user owns a single schema.",
    "hasKeyColumn": true,
    "keyColumnIndex": 3,
    "headerRowIndex": 0
}