{
    "relation": [
        [
            "Control",
            "Label",
            "ComboBox"
        ],
        [
            "Name",
            "",
            "cboCategories"
        ],
        [
            "Text",
            "Category:",
            "Miscellaneous"
        ],
        [
            "Other Properties",
            "",
            "Modifiers: Public Items: Babies, Teens, Women, Men, Miscellaneous"
        ]
    ],
    "pageTitle": ".NET Controls: The List View",
    "title": "",
    "url": "http://www.functionx.com/vbnet/controls/listview.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990177.43/warc/CC-MAIN-20150728002310-00303-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 449830523,
    "recordOffset": 449805212,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Sun, 05 Apr 2015 03:19:27 GMT",
    "textBeforeTable": "Design the form as follows: \u00a0 To add a new form to the application, on the main menu, click Project -> Add Windows Forms ... Set the name to NewStoreItem and press Enter Practical Learning: Creating List View Items Public Sub New(ByVal text As String) Alternatively, you can create an array of strings and pass it to the following constructor of the ListViewItem class: \u00a0 End Sub lvwCountries.Items.AddRange(lviCountries) New ListViewItem(\"Venezuela\")} New ListViewItem(\"Sweden\"), _ New ListViewItem(\"Mali\"), _ Dim lviCountries() As ListViewItem = {New ListViewItem(\"Australia\"), _ lvwCountries.Items.Add(lviPortugal) Dim lviPortugal As ListViewItem = New ListViewItem(\"Portugal\") Controls.Add(lvwCountries) lvwCountries.Height = 160 lvwCountries.Width = 420 lvwCountries.Location = New Point(10, 40) Dim lvwCountries As ListView = New ListView ByVal e As System.EventArgs) Handles btnCreate.Click Private Sub btnCreate_Click(ByVal sender As System.Object, _         You can use any of these techniques to create as many items as necessary. Alternatively, if you have many items to create, you can first store them in an array of ListViewItem values, then call the ListView.ListViewItemCollection.AddRange() method. The syntax of this method is: Public Sub AddRange(ByVal values() As ListViewItem)",
    "textAfterTable": "Button btnOK OK DialogResult: OK Button btnCancel Cancel DialogResult: Cancel Form \u00a0 New Make AcceptButton: btnOK CancelButton: btnCancel FormBorderStyle: FixedDialog MaximizeBox: False MinimizeBox: False ShowInTaskbar: False StartPosition: CenterScreen Display the first form (Form1.vb (Design)). Add a Button to it and change its properties as follows: (Name): btnNewItem Text: New Item Anchor: Bottom, Left Double-click the button To create a new item, implement the event as follows: \u00a0 Private Sub btnNewItem_Click(ByVal sender As System.Object, _ ByVal e As System.EventArgs) Handles btnNewItem.Click Dim frmItem As NewStoreItem = New NewStoreItem Dim rndNumber As Random = New Random(DateTime.Now.Millisecond) Dim number1 As Integer = rndNumber.Next(100, 999) Dim number2 As Integer = rndNumber.Next(100, 999) Dim itemNumber As String = CStr(number1) & \"-\" & CStr(number2) frmItem.txtItemNumber.Text = itemNumber If frmItem.ShowDialog() = DialogResult.OK Then Dim lviStoreItem As ListViewItem = New ListViewItem(frmItem.txtItemNumber.Text) Me.lvwStoreItems.Items.Add(lviStoreItem) End If End Sub Return to the first form (Form1.vb (Design)). In the Windows Forms section of the Toolbox, click ContextMenu and click the form On the form, click ContextMenu and click Type Here. Create the following menu items: \u00a0 Text (Name) Shortcut New Item mnuNewItem CtrlN Edit",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}