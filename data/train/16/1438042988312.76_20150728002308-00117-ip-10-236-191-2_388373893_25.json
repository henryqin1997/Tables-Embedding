{
    "relation": [
        [
            "INFORMATION_SCHEMA Name",
            "VARIABLE_NAME",
            "VARIABLE_VALUE"
        ],
        [
            "SHOW Name",
            "Variable_name",
            "Value"
        ],
        [
            "Remarks",
            "",
            ""
        ]
    ],
    "pageTitle": "Chapter\u00a022.\u00a0The INFORMATION_SCHEMA Database",
    "title": "",
    "url": "http://www.cs.duke.edu/csl/docs/mysql-refman/information-schema.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988312.76/warc/CC-MAIN-20150728002308-00117-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 388398043,
    "recordOffset": 388373893,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{11649=The implementation for the INFORMATION_SCHEMA table structures in MySQL follows the ANSI/ISO SQL:2003 standard Part 11 Schemata. Our intent is approximate compliance with SQL:2003 core feature F021 Basic information schema., 98965=This column was added in MySQL 5.1.12. It is not to be confused with the column of the same name (now named EVENT_DEFINITION) that existed in earlier MySQL versions., 74897=See also Section\u00a013.5.4.29, \u201cSHOW TRIGGERS Syntax\u201d., 22848=For tables using the NDBCLUSTER storage engine, beginning with MySQL 5.1.12, the DATA_LENGTH column reflects the true amount of storage for variable-width columns. (See Bug#18413.), 130795=The GLOBAL_STATUS and SESSION_STATUS tables provide information about server status variables. Their contents correspond to the information produced by the SHOW GLOBAL STATUS and SHOW SESSION STATUS statements (see Section\u00a013.5.4.26, \u201cSHOW STATUS Syntax\u201d)., 132944=The GLOBAL_VARIABLES and SESSION_VARIABLES tables provide information about server status variables. Their contents correspond to the information produced by the SHOW GLOBAL VARIABLES and SHOW SESSION VARIABLES statements (see Section\u00a013.5.4.30, \u201cSHOW VARIABLES Syntax\u201d)., 99384=Note: Prior to MySQL 5.1.12, this column was named EVENT_BODY., 11967=Users of SQL Server 2000 (which also follows the standard) may notice a strong similarity. However, MySQL has omitted many columns that are not relevant for our implementation, and added columns that are MySQL-specific. One such column is the ENGINE column in the INFORMATION_SCHEMA.TABLES table., 132102=The GLOBAL_STATUS and SESSION_STATUS tables were added in MySQL 5.1.12., 108445=See also Section\u00a013.5.4.15, \u201cSHOW EVENTS\u201d., 129266=The REFERENTIAL_CONSTRAINTS table was added in MySQL 5.1.10., 134272=The GLOBAL_VARIABLES and SESSION_VARIABLES tables were added in MySQL 5.1.12., 77611=See also Section\u00a013.5.4.20, \u201cSHOW PLUGINS Syntax\u201d., 125803=For an extensive description of the table columns, see Section\u00a013.5.4.24, \u201cSHOW PROCESSLIST Syntax\u201d., 92244=Important: If any partitioned tables created in a MySQL version prior to MySQL 5.1.6 are present following an upgrade to MySQL 5.1.6 or later, it is not possible to SELECT from, SHOW, or DESCRIBE the PARTITIONS table. See Section\u00a0E.1.10, \u201cChanges in release 5.1.6 (01 February 2006)\u201d before upgrading from MySQL 5.1.5 or earlier to MySQL 5.1.6 or later., 79929=See also Section\u00a013.5.4.13, \u201cSHOW ENGINES Syntax\u201d., 33022=There is no standard table for indexes. The preceding list is similar to what SQL Server 2000 returns for sp_statistics, except that we replaced the name QUALIFIER with CATALOG and we replaced the name OWNER with SCHEMA., 99709=EXECUTE_AT: For a one-time event, this is the DATETIME value specified in the AT clause of the CREATE EVENT statement used to create the event, or of the last ALTER EVENT statement that modified the event. The value shown in this column reflects the addition or subtraction of any INTERVAL value included in the event's AT clause. For example, if an event is created using ON SCHEDULE AT CURRENT_TIMESTAMP + '1:6' DAY_HOUR, and the event was created at 2006-02-09 14:05:30, the value shown in this column would be '2006-02-10 20:05:30'., 119918=Currently, the values of these columns are as reported by the operating system, and are not supplied by the NDB storage engine. Where no value is provided by the operating system, these columns display 0000-00-00 00:00:00., 107380=For example, the e_daily event shown previously was created on a computer in Brisbane, Australia, at 14:35:35 on the 9th of February, 2006, Eastern Australia Standard Time, which can also be expressed as the GMT+10.00 time zone. The event definition was updated (using ALTER EVENT as shown earlier in this section) a few minutes later, at 14:41:23. These are the values displayed for CREATED and LAST_ALTERED. The event is scheduled to begin executing 6 hours later \u2014 that is, at 20:41:23 on the same date, local time. Subtracting 10 hours from this to obtain Universal Time yields 10:41:23, and it is this value that is shown for STARTS.}",
    "textBeforeTable": "A schema is a database, so the SCHEMATA table provides information about databases. 22.1.\u00a0The INFORMATION_SCHEMA SCHEMATA Table For answers to questions that are often asked concerning the INFORMATION_SCHEMA database, see Section\u00a0A.8, \u201cMySQL 5.0 FAQ \u2014 INFORMATION_SCHEMA\u201d. Note: At present, there are some missing columns and some columns out of order. We are working on this and updating the documentation as changes are made. Each section indicates what SHOW statement is equivalent to a SELECT that retrieves information from INFORMATION_SCHEMA, if there is such a statement. The definition for character columns (for example, TABLES.TABLE_NAME) is generally VARCHAR(N) CHARACTER SET utf8 where N is at least 64. To avoid using any name that is reserved in the standard or in DB2, SQL Server, or Oracle, we changed the names of some columns marked \u201cMySQL extension\u201d. (For example, we changed COLLATION to TABLE_COLLATION in the TABLES table.) See the list of reserved words near the end of this article: http://www.dbazine.com/gulutzan5.shtml. \u201cRemarks\u201d provides additional information where applicable. If this field is NULL, it means that the value of the column is always NULL. If this field says \u201cMySQL extension,\u201d the column is",
    "textAfterTable": "DEFAULT_CHARACTER_SET_NAME \u00a0 \u00a0 DEFAULT_COLLATION_NAME \u00a0 \u00a0 SQL_PATH \u00a0 NULL The following statements are equivalent: SELECT SCHEMA_NAME AS `Database` FROM INFORMATION_SCHEMA.SCHEMATA [WHERE SCHEMA_NAME LIKE 'wild'] SHOW DATABASES [LIKE 'wild'] 22.2.\u00a0The INFORMATION_SCHEMA TABLES Table The TABLES table provides information about tables in databases. INFORMATION_SCHEMA Name SHOW Name Remarks TABLE_CATALOG \u00a0 NULL TABLE_SCHEMA Table_... \u00a0 TABLE_NAME Table_... \u00a0 TABLE_TYPE \u00a0 \u00a0 ENGINE Engine MySQL extension VERSION Version MySQL extension ROW_FORMAT Row_format MySQL extension TABLE_ROWS Rows MySQL extension AVG_ROW_LENGTH Avg_row_length MySQL extension DATA_LENGTH Data_length MySQL extension MAX_DATA_LENGTH Max_data_length MySQL extension INDEX_LENGTH Index_length MySQL extension DATA_FREE Data_free MySQL extension AUTO_INCREMENT Auto_increment MySQL extension CREATE_TIME Create_time MySQL extension UPDATE_TIME Update_time MySQL extension CHECK_TIME Check_time MySQL extension TABLE_COLLATION Collation MySQL extension CHECKSUM Checksum",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}