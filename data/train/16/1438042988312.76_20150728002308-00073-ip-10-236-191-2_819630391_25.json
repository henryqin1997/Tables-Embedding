{
    "relation": [
        [
            "Attribute specification",
            "a=\" xyz\"",
            "a=\"&d;&d;A&a; &a;B&da;\"",
            "a= \" A B \""
        ],
        [
            "a is NMTOKENS",
            "x y z",
            "A #x20 B",
            "#xD #xD A #xA #xA B #xD #xA"
        ],
        [
            "a is CDATA",
            "#x20 #x20 x y z",
            "#x20 #x20 A #x20 #x20 #x20 B #x20 #x20",
            "#xD #xD A #xA #xA B #xD #xA"
        ]
    ],
    "pageTitle": "Extensible Markup Language (XML) 1.0 (Fourth Edition)",
    "title": "",
    "url": "http://www.w3.org/TR/2006/REC-xml-20060816/",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988312.76/warc/CC-MAIN-20150728002308-00073-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 819691331,
    "recordOffset": 819630391,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{21266=This document is a W3C Recommendation. This fourth edition is not a new version of XML. As a convenience to readers, it incorporates the changes dictated by the accumulated errata (available at http://www.w3.org/XML/xml-V10-3e-errata) to the Third Edition of XML 1.0, dated 4 February 2004. In addition, the markup introduced in the third edition, to clarify when prescriptive keywords are used in the formal sense defined in [IETF RFC 2119], has been modified to better match the intent of [IETF RFC 2119]. This edition supersedes the previous W3C Recommendation of 4 February 2004., 21545=The English version of this specification is the only normative version. However, for translations of this document, see http://www.w3.org/2003/03/Translations/byTechnology?technology=xml., 19599=An implementation report is available at http://www.w3.org/XML/2006/06/xml10-4e-implementation.html. A Test Suite is maintained to help assessing conformance to this specification., 21676=On 29 September 2006 this document was edited in place to remove a number of spurious and potentially misleading spaces., 10366=XML was developed by an XML Working Group (originally known as the SGML Editorial Review Board) formed under the auspices of the World Wide Web Consortium (W3C) in 1996. It was chaired by Jon Bosak of Sun Microsystems with the active participation of an XML Special Interest Group (previously known as the SGML Working Group) also organized by the W3C. The membership of the XML Working Group is given in an appendix. Dan Connolly served as the Working Group's contact with the W3C.}",
    "TableContextTimeStampAfterTable": "{164413=The formal grammar of XML is given in this specification using a simple Extended Backus-Naur Form (EBNF) notation. Each rule in the grammar defines one symbol, in the form, 194269=Algorithms exist which allow many but not all non-deterministic content models to be reduced automatically to equivalent deterministic models; see Br\u00fcggemann-Klein 1991 [Br\u00fcggemann-Klein]., 34566=The replacement text of a parameter entity reference in a DeclSep MUST match the production extSubsetDecl., 5022=This section defines some symbols used widely in the grammar., 133515=In an encoding declaration, the values \"UTF-8\", \"UTF-16\", \"ISO-10646-UCS-2\", and \"ISO-10646-UCS-4\" SHOULD be used for the various encodings and transformations of Unicode / ISO/IEC 10646, the values \"ISO-8859-1\", \"ISO-8859-2\", ... \"ISO-8859-n\" (where n is the part number) SHOULD be used for the parts of ISO 8859, and the values \"ISO-2022-JP\", \"Shift_JIS\", and \"EUC-JP\" SHOULD be used for the various encoded forms of JIS X-0208-1997. It is RECOMMENDED that character encodings registered (as charsets) with the Internet Assigned Numbers Authority [IANA-CHARSETS], other than those just listed, be referred to using their registered names; other encodings SHOULD use names starting with an \"x-\" prefix. XML processors SHOULD match character encoding names in a case-insensitive way and SHOULD either interpret an IANA-registered name as the encoding registered at IANA for that name or treat it as unknown (processors are, of course, not required to support all IANA-registered encodings)., 18550=Note that the grammar does not allow a comment ending in --->. The following example is not well-formed., 34814=Like the internal subset, the external subset and any external parameter entities referenced in a DeclSep MUST consist of a series of complete markup declarations of the types allowed by the non-terminal symbol markupdecl, interspersed with white space or parameter-entity references. However, portions of the contents of the external subset or of these external parameter entities may conditionally be ignored by using the conditional section construct; this is not allowed in the internal subset but is allowed in external parameter entities referenced in the internal subset., 27311=[Definition: The XML document type declaration contains or points to markup declarations that provide a grammar for a class of documents. This grammar is known as a document type definition, or DTD. The document type declaration can point to an external subset (a special kind of external entity) containing markup declarations, or can contain the markup declarations directly in an internal subset, or can do both. The DTD for a document consists of both subsets taken together.], 1835=[Definition: A parsed entity contains text, a sequence of characters, which may represent markup or character data.] [Definition: A character is an atomic unit of text as specified by ISO/IEC 10646:2000 [ISO/IEC 10646]. Legal characters are tab, carriage return, line feed, and the legal characters of Unicode and ISO/IEC 10646. The versions of these standards cited in A.1 Normative References were current at the time this document was prepared. New characters may be added to these standards by amendments or new editions. Consequently, XML processors MUST accept any character in the range specified for Char. ], 65062=[Definition: An element type has element content when elements of that type MUST contain only child elements (no character data), optionally separated by white space (characters matching the nonterminal S).] [Definition: In this case, the constraint includes a content model, a simple grammar governing the allowed types of the child elements and the order in which they are allowed to appear.] The grammar is built on content particles (cps), which consist of names, choice lists of content particles, or sequence lists of content particles:, 77236=XML attribute types are of three kinds: a string type, a set of tokenized types, and enumerated types. The string type may take any literal string as a value; the tokenized types are more constrained. The validity constraints noted in the grammar are applied after the attribute value has been normalized as described in 3.3.3 Attribute-Value Normalization., 16970=[Definition: Comments may appear anywhere in a document outside other markup; in addition, they may appear within the document type declaration at places allowed by the grammar. They are not part of the document's character data; an XML processor MAY, but need not, make it possible for an application to retrieve the text of comments. For compatibility, the string \"--\" (double-hyphen) MUST NOT occur within comments.] Parameter entity references MUST NOT be recognized within comments.}",
    "lastModified": "Fri, 29 Sep 2006 19:08:13 GMT",
    "textBeforeTable": "the attribute specifications in the left column below would be normalized to the character sequences of the middle column if the attribute a is declared NMTOKENS and to those of the right columns if a is declared CDATA. <!ENTITY da \"&#xD;&#xA;\"> <!ENTITY a \"&#xA;\"> <!ENTITY d \"&#xD;\">  Following are examples of attribute normalization. Given the following declarations: It is an error if an attribute value contains a reference to an entity for which no declaration has been read. All attributes for which no declaration has been read SHOULD be treated by a non-validating processor as if declared CDATA. Note that if the unnormalized attribute value contains a character reference to a white space character other than space (#x20), the normalized value contains the referenced character itself (#xD, #xA or #x9). This contrasts with the case where the unnormalized value contains a white space character (not a reference), which is replaced with a space character (#x20) in the normalized value and also contrasts with the case where the unnormalized value contains an entity reference whose replacement text contains a white space character; being recursively processed, the white space character is replaced with a space character (#x20) in the normalized value. If the attribute type is not CDATA, then the XML processor MUST further process the normalized attribute value by discarding any leading and trailing space (#x20) characters, and by replacing",
    "textAfterTable": "Note that the last example is invalid (but well-formed) if a is declared to be of type NMTOKENS. 3.4 Conditional Sections [Definition: Conditional sections are portions of the document type declaration external subset or of external parameter entities which are included in, or excluded from, the logical structure of the DTD based on the keyword which governs them.] Conditional Section [61]\u00a0\u00a0\u00a0 conditionalSect \u00a0\u00a0\u00a0::=\u00a0\u00a0\u00a0 includeSect | ignoreSect [62]\u00a0\u00a0\u00a0 includeSect \u00a0\u00a0\u00a0::=\u00a0\u00a0\u00a0 '<![' S? 'INCLUDE' S? '[' extSubsetDecl ']]>' [VC: Proper Conditional Section/PE Nesting] [63]\u00a0\u00a0\u00a0 ignoreSect \u00a0\u00a0\u00a0::=\u00a0\u00a0\u00a0 '<![' S? 'IGNORE' S? '[' ignoreSectContents* ']]>' [VC: Proper Conditional Section/PE Nesting] [64]\u00a0\u00a0\u00a0 ignoreSectContents \u00a0\u00a0\u00a0::=\u00a0\u00a0\u00a0 Ignore ('<![' ignoreSectContents ']]>' Ignore)* [65]\u00a0\u00a0\u00a0 Ignore \u00a0\u00a0\u00a0::=\u00a0\u00a0\u00a0 Char* - (Char* ('<![' | ']]>') Char*) Validity constraint: Proper Conditional Section/PE Nesting If any of the \"<![\", \"[\", or \"]]>\" of a conditional section is contained in the replacement text for a parameter-entity reference, all of them MUST be contained in the same replacement text. Like the internal and external DTD subsets, a conditional section may contain one",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}