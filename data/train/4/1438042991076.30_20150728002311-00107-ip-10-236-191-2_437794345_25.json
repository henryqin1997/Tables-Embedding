{
    "relation": [
        [
            "[in]",
            "[in,out]",
            "[in,out]"
        ],
        [
            "str",
            "width_ptr",
            "height_ptr"
        ],
        [
            "the string to parse: it has to be a string in the format x or a valid video frame size abbreviation.",
            "pointer to the variable which will contain the detected frame width value",
            "pointer to the variable which will contain the detected frame height value"
        ]
    ],
    "pageTitle": "FFmpeg: libavcodec/utils.c File Reference",
    "title": "",
    "url": "http://www.ffmpeg.org/doxygen/0.6/libavcodec_2utils_8c.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042991076.30/warc/CC-MAIN-20150728002311-00107-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 437822799,
    "recordOffset": 437794345,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{37721=#include \"libavutil/avstring.h\" #include \"libavutil/integer.h\" #include \"libavutil/crc.h\" #include \"libavutil/pixdesc.h\" #include \"avcodec.h\" #include \"dsputil.h\" #include \"opt.h\" #include \"imgconvert.h\" #include \"audioconvert.h\" #include \"libxvid_internal.h\" #include \"internal.h\" #include <stdlib.h> #include <stdarg.h> #include <limits.h> #include <float.h> #include <fcntl.h>}",
    "TableContextTimeStampAfterTable": "{118174=Register the codec codec and initialize libavcodec., 21943=This function is intended to be used internally by FFmpeg (libavcodec, libavformat, etc.) only, and would normally not be used by applications., 139432=Definition at line 1113 of file utils.c., 127330=Returns the hardware accelerated codec for codec codec_id and pixel format pix_fmt., 52204=Returns the libavcodec build-time configuration., 18641=Definition at line 1268 of file utils.c., 20792=Definition at line 1285 of file utils.c., 33450=Definition at line 1259 of file utils.c., 34534=Definition at line 1072 of file utils.c., 38480=May only be used if a codec with CODEC_CAP_DR1 has been opened. If CODEC_FLAG_EMU_EDGE is not set, the dimensions must have been increased according to avcodec_get_edge_width() before., 14846=Definition at line 1030 of file utils.c., 110030=Initializes libavcodec., 38315=Modifies width and height values so that they will result in a memory buffer that is acceptable for the codec if you do not use any horizontal padding., 3695=If c is NULL, returns the first registered codec, if c is non-NULL, returns the next registered codec after c, or NULL if c is the last one., 32259=Definition at line 1164 of file utils.c., 26161=Definition at line 1236 of file utils.c., 36614=Definition at line 1053 of file utils.c., 40399=Modifies width and height values so that they will result in a memory buffer that is acceptable for the codec if you also ensure that all line sizes are a multiple of the respective linesize_align[i]., 112481=Initializes the AVCodecContext to use the given AVCodec., 99993=Finds a registered encoder with a matching codec ID., 112774=The functions avcodec_find_decoder_by_name(), avcodec_find_encoder_by_name(), avcodec_find_decoder() and avcodec_find_encoder() provide an easy way for retrieving a codec., 137053=Definition at line 1257 of file utils.c., 22858=Definition at line 1248 of file utils.c., 111220=Returns the libavcodec license., 10967=Returns codec bits per sample., 29475=Definition at line 1192 of file utils.c., 130067=Definition at line 1230 of file utils.c., 95910=Finds a registered decoder with a matching codec ID., 125176=Definition at line 1047 of file utils.c., 128132=Definition at line 1273 of file utils.c., 138610=Definition at line 1153 of file utils.c.}",
    "lastModified": "Fri, 26 Oct 2012 00:36:53 GMT",
    "textBeforeTable": "Parameters: Contrary to av_fast_realloc the current buffer contents might not be preserved and on error the old buffer is freed, thus no special handling to avoid memleaks is necessary. Allocates a buffer, reusing the given one if large enough. ) \u00a0 min_size unsigned int\u00a0 size, unsigned int *\u00a0 ptr, void *\u00a0 ( void av_fast_malloc Referenced by show_codecs(). Definition at line 82 of file utils.c. If c is NULL, returns the first registered codec, if c is non-NULL, returns the next registered codec after c, or NULL if c is the last one. \u00a0)\u00a0 c AVCodec *\u00a0 ( AVCodec* av_codec_next Function Documentation Referenced by avcodec_open(). #define SANE_NB_CHANNELS\u00a0\u00a0\u00a0128U",
    "textAfterTable": "Definition at line 68 of file utils.c. Referenced by decode_frame(), decode_i_frame(), decode_p_frame(), do_audio_out(), ff_h263_decode_frame(), ff_h264_decode_nal(), ljpeg_decode_rgb_scan(), mimic_decode_frame(), mp_decode_frame(), parse_picture_segment(), spdif_write_packet(), and tqi_decode_frame(). void* av_fast_realloc ( void *\u00a0 ptr, unsigned int *\u00a0 size, unsigned int\u00a0 min_size \u00a0 ) Reallocates the given block if it is not large enough, otherwise it does nothing. See also: av_realloc Definition at line 54 of file utils.c. Referenced by allocate_buffers(), av_add_index_entry(), avcodec_default_get_buffer(), commit_slices(), decode_frame(), dirac_combine_frame(), ff_combine_frame(), ff_vaapi_alloc_slice(), ff_vdpau_add_data_chunk(), flac_decode_frame(), get_stats(), read_frame(), read_header(), and shorten_decode_frame(). int",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}