{
    "relation": [
        [
            "Fecha",
            "15 Jun 2001",
            "8 Oct 2004",
            "4 Jun 2007",
            "2 Jun 2011",
            "10 Jul 2015"
        ],
        [
            "C\ufffddigo",
            "AS",
            "AS",
            "FPAY",
            "FPAY",
            "REMI"
        ],
        [
            "Evento",
            "Assignment",
            "Assignment",
            "Fee payment",
            "Fee payment",
            "Maintenance fee reminder mailed"
        ],
        [
            "Descripci\ufffdn",
            "",
            "",
            "Year of fee payment: 4",
            "Year of fee payment: 8",
            ""
        ]
    ],
    "pageTitle": "Patente US6657998 - Conditionally nonblocking switch of the unimodal-circular type - Google Patentes",
    "title": "",
    "url": "http://www.google.es/patents/US6657998?hl=es&dq=flatulence",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988317.67/warc/CC-MAIN-20150728002308-00007-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 480251047,
    "recordOffset": 480157662,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6649=1000<1001<1010<1011<0000<1111<1110<1101<1100}",
    "TableContextTimeStampAfterTable": "{175156=Definition B3: \u201cX2 interconnection network\u201d. The \u201c(x, y) system\u201d of external I/O order of the 2Stg(m, n) follows the (x, y) lexicographic order of both stage-1 input addresses and stage-2 output addresses. This system differs from the default system only in the external input order. The external input order in the (x, y) system, since being different from the default external input order, induces an input exchange. This input exchange converts from the (y, x) lexicographic order on stage-1 inputs to the (x, y) lexicographic order on external inputs, thus it is again the inverse coordinate interchange, that is, an mirror image of the interstage exchange. The same construction procedure as the plain 2-stage interconnection, but with the inverse coordinate interchange prepended as the input exchange, is referred to as the 2-stage interconnection with an input exchange, or simply as the \u201cX2 interconnection\u201d. A network so constructed is called an \u201cX2 interconnection network\u201d. The X2 version of a 2Stg(m, n), that is, the X2 interconnection network with parameter m and n, is denoted as X2(m, n). Data signal progresses through a generic X2 interconnection network along the path specified by path diagram 1110 in FIG. 11B., 213280=Alternatively, a graphical manner for determining the trace and guide is now described with reference to line diagram 2700 in FIG. 27., 251519=The 16\ufffd16 banyan-type network 2900 as shown in FIG. 29 is [id:(3 4):(1 4):(2 4):(4 3 2 1)]4. Its trace is the sequence 4, 3, 1, 2 and its guide is the sequence 2, 4, 1, 3. Thus the trace is induced by \u03c4=(1 4 2 3) and the guide by \u03b3=(1 2 4 3)., 417026=The illustrated scenario is when the packet 6751 starting with the bits 1d1p1p2d2 . . . (=11011 . . . ) and packet 6752 starting with the bits 1d1p1p2d2 . . . (=11011 . . . ) are ready to enter inputs 0 and 1, respectively. Then the frame clock signal (6721) arrives and resets the CLOCK_COUNT to 0 and the latch status register 6703 to UNLATCHED. The value of the connection state register 6702, which happens to be BAR in this case, remains unchanged., 96140=FIG. 29 depicts a route through a 16\ufffd16 banyan-type network [id:(3 4):(1 4): (2 4):(4 3 2 1)]4 from the origination address 1100 to the destination address 1110;, 220608=FIG. 29 illustrates a route, shown by the \u201cdark-line path\u201d, through the 16\ufffd16 banyan-type network 2900 [id:(3 4):(1 4):(2 4):(4 3 2 1)]4 from the origination address binary(I1I2I3I4)=1100 to the destination address binary(O1O2O3O4)=1110. Along this route the stage-by-stage I/O address progresses as follows in Table 1:, 196129=Another example is one wherein the permutation (3 1) induces 8\ufffd8 exchange 2103 shown in FIG. 21C. Under this exchange, the value of the 1st, 2nd and 3rd bit of the bit pattern before the exchange gives the value of the 3rd, 2nd and 1st bit of the bit pattern after the exchange, respectively., 189972=Example 6. FIGS. 16-19 show how 8\ufffd8 3-stage network 1600 is built as a recursive X2 interconnection network of cells. While Example 5 shows the recursion from bottom to top, that is, from building smaller network then larger network, this example shows the reverse way. So starting from building larger network, the 8\ufffd8 network 1600 can be constructed as an X2 tensor product of 2\ufffd2 network 1601 and 4\ufffd4 network 1602 as shown in FIG. 16. Then, as shown in FIG. 17, each 4\ufffd4 network 1611 can recursively be an X2 tensor product of 2\ufffd2 networks (or cells) 1612. Then ungrouping the nodes and lines inside every 4\ufffd4 node 1611 so that they become elements directly belonging to the whole construction 1621 as shown in FIG. 18. Now each node 1622 in the construction is a cell so the resulting 8\ufffd8 network 1600 is a recursive X2 interconnection network of cells. Usually, it will be redrawn into an equivalent version with better appearance, as the network 1600 shown in FIG. 19. The reason is that, unlike recursive plain 2-stage construction, in a recursive 2X or X2 construction, the stack of either the input exchanges or the output exchanges of the smaller networks will concatenated with the large exchange in the tensor product. As a common practice, the successive exchanges will be replaced by the single exchange which is the product of these exchanges, that is, graphically, each zigzag line is straightened into a straight line. Therefore, in this example, the resulting 8\ufffd8 exchange 1631 in FIG. 19 is the product of the 8\ufffd8 exchange 1623 of FIG. 18, which results from stacking the 4\ufffd4 input exchange 1624 from the upper 4\ufffd4 network and the 4\ufffd4 input exchange 1625 from the lower 4\ufffd4 network, and the 8\ufffd8 interstage exchange 1626. The binary tree associated with this recursive X2 interconnection network of cells are shown as the tree 2000 in FIG. 20., 215089=(c) in the fourth row, locate the column of where the integer n=4 appears, which is the second column labeled 2712 From the top of column 2712, note the sequence of numbers in going from the top to the location of integer 4. In this case, the sequence is 2-to-2-to-2-to-4 or 2, 2, 2, 4. The path in this sequence is shown by dashed lines 2724, 2725, and 2726., 409051=Recall that such a routing cell always routes 0-bound signal (with control bits 10) to output 0 and 1-bound signal (with control bits 11) to output-1 when there is no output contention. Therefore, assuming no output contention occurs at each of the nodes along the path, upon entering the first stage at routing cell 2910, the two leading control bits, namely, 11, are used to set the connection state of the cell 2910 to \u201ccross\u201d in this case since the signal enters the routing cell from its upper input, resulting in routing the packet to the lower output of the cell, that is, to the output address 1101 at that stage. Meanwhile the second bit of the in-band control signal, namely 1, is consumed by the appended 1\ufffd1 device (omitted in the drawing) and thus the new in-band control signal to the next stage becomes 10. Next, exchange X(3 4) leads the packet from the output address 1101 of stage 1 to the input address 1110 of stage 2. Then the new in-band control signal, namely 10, is used to set the stage-2 cell 2920 to the \u201cbar\u201d state, resulting in routing to output address 1110. Meanwhile the second bit of the in-band control signal, namely 0, is again consumed and thus the new in-band control signal to the next stage (stage 3) becomes 11. Next, exchange X(1 4) leads the packet from the output address 1110 of stage 2 to the input address 0111 of stage 3. Then the new 2-bit control sequence, namely 11, are used to set cell 2930 to the bar state, resulting in routing the packet to the output address 0111. Then the second bit of the in-band control signal, namely 1, is again consumed before entering stage 4. Finally, exchange X(2 4) leads the packet from the output address 0111 of stage 3 to the input address 0111 of stage 4. The remaining two control bits, namely 11, is used to set the cell 2940 to the bar state, then the packet is routed to the output address 0111, and finally led to its desired destination address 1110 through the output exchange X(4 3 2 1)., 218179=(d) construct \u201ctriangle-like\u201d diagram 2760 in the lower right-hand side of FIG. 27, as follows:, 216178=GUIDE: The sequence of the original set of n=4 integers in this banyan-type network appears in the first row 2701 in order 1, 2, 3, 4. Second row 2702 is obtained by applying the cycle (3 4) to the integers in row 2701; the cycle (3 4) appears on the left-hand side between rows 2701 and 2702 for reference. Next, third row 2703 is produced by applying the cycle (1 4) to the integers of row 2702; the cycle (1 4) appears between rows 2702 and 2703 on the left-hand side for reference. Finally, fourth row 2704 is generated by applying the cycle (2 4) to the integers of row 2703; the cycle (2 4) appears between rows 2703 and 2704 on the left-hand side for reference., 195866=This is called the 2n\ufffd2n \u201cshuffle exchange\u201d, which means the left-rotation of every n-bit number by one bit. The 8\ufffd8 exchange 2101 shown in FIG. 21A is the exchange X(3 2 1), or the 8\ufffd8 shuffle exchange., 218714=(e) guide 2764 is read as the sequence from top-to-bottom on the right-hand side of diagram 2760, namely, 3, 1, 2, 4., 453952=A generic binary address of a 26\ufffd26 banyan-type network is b1b2b3b4b5b6. The entirety of 26 output addresses is a 6-dimensional binary cube S1\ufffdS2\ufffd . . . \ufffdS6, where each Sj={0, 1} corresponds to the two possible values of bj. One of the rectangles of this 6-dimensional binary cube can be the subset in the form of {0, 1}\ufffd{0}\ufffd{0, 1}\ufffd{1}\ufffd{0, 1}\ufffd{1}, which contains 23 output addresses, namely, 000101, 000111, 001101, 001111, 100101, 100111, 101101, and 101111, so this is a 2-dimensional rectangle. The number of 3-dimensional rectangles in the 6-dimensional binary cube is 26\u22123*6C3=8*(6*5*4)/(3*2)=160., 166827=For example, as shown in FIG. 7, the line connecting from the output port 701 labeled with the address 0110 to the input port 702 in the next stage labeled with the address 1100 corresponds to a bit-permutation which, in particular, is an 1-bit left-rotation (or equivalently 3-bit right-rotation) of the address 0110 to give the address 1100. For another example, the line connecting from the output port 703 labeled with the address 1010 to the input port 704 in the next stage labeled with the address 1001 can be regarded as a bit permutation of the binary address defined as: the 1st bit is shifted to the 4th place, the 4th bit to 2nd place, the 2nd bit to 3rd place, and the 3rd bit to 1st place., 219932=Recall FIG. 19 in section B. The 8\ufffd8 banyan-type network 1630 is a recursive X2 interconnection network of cells. The network is expressed as [(3 2 1):(3 1):(3 2):]. The trace is calculated to be the sequence 1, 2, 3, and the guide is also the sequence 1, 2, 3. Both sequences are monotonically increasing., 204617=Despite its appearance, the 16\ufffd16 4-stage network 2400 in FIG. 24, denoted as [:(3 4):(1 4):(4 3 2 1):]4, is not routable. Every external input in it can access only half of the external outputs. In fact, the network 2400 is the overlay of two logically disjoint copies of the 8\ufffd8 4-stage network [:(2 3):(1 3):(3 2 1):]3. Cells in the network 2500 in FIG. 25 constitute one copy of [:(2 3):(1 3):(3 2 1):]3, and cells in the network 2600 in FIG. 26 constitute the other copy., 77340=This application is a non-provisional application of provisional application Ser. No. 60/212,333 filed Jun. 16, 2000., 198251=For example, the 8\ufffd8 exchanges 2101 as in FIG. 21A, 2102 as in FIG. 21B, 2103 as in FIG. 21C, and the 16\ufffd16 exchanges 2104 as in FIG. 21D show the graph representations of SHUF(3)(=X(3 2 1)), (SHUF(3))\u22121 (=X(1 2 3)), BANY(3) (=X(1 3)), and SWAP(4) (=X(1 4)(2 3)), respectively. Note that SWAP(3) (=X(1 3)) happens to be identical with BANY(3). Therefore, the 8\ufffd8 exchange 2103 in FIG. 21C also represents SWAP(3)., 176488=An X2 version of 2Stg(3,5) is the network 1300 as shown in FIG. 13. The input exchange (1302), which is the inverse of the coordinate interchange (1301), is prepended to the 2Stg(3,5) (1000) in FIG. 10., 465866=FIG. 14 in Section B depicts a 30\ufffd18 3-stage network 1400 from such a recursive 2-stage construction. Sometimes the method of statistical line grouping may be applied so that a switching fabric is actually based on a multi-line version of a recursive 2-stage interconnection network. FIG. 69 depicts the example of the 8-line version of the 16\ufffd16 divide-and-conquer network (6900), which constructs a 128\ufffd128 switch when every node in it is filled by an appropriate 16\ufffd16 switching element., 456401=A quaternary symbol can be encoded by two bits. A natural coding scheme here is \u20180-bound\u2019=10, \u20181-bound\u2019=11, \u2018idle\u2019=00, and \u2018bicast\u2019=10. For example, the rectangle {0, 1}\ufffd{0}\ufffd{0, 1}\ufffd{1}\ufffd{0, 1}\ufffd{1} in Example 10 can be represented by a quaternary sequence Q1=\u2018bicast\u2019, Q2=\u20180-bound\u2019, Q3=\u2018bicast\u2019, Q4=\u20181-bound\u2019, Q5=\u2018bicast\u2019, Q6=\u20181-bound\u2019, or under the natural coding scheme, Q1=\u201801\u2019, Q2=\u201810\u2019, Q3=\u201801\u2019, Q4=\u201811\u2019, Q5=\u201801\u2019, Q6=\u201811\u2019. Conversely, if the destination addresses of a packet is represented by a sequence Q1=\u201811\u2019, Q2=\u201810\u2019, Q3=\u201801\u2019, Q4=\u201811\u2019, Q5=\u201810\u2019, Q6=\u201801\u2019, the packet is said to be destined for the rectangle {1}\ufffd{0}\ufffd{0, 1}\ufffd{1}\ufffd{0}\ufffd{0, 1} which comprises the output addresses 100100, 100101, 101100, and 101101., 181459=For example, if we let \u03a6 be a 3\ufffd3 single node network and \u03a8 be a 5\ufffd5 single node network, then the plain 2-stage tensor product of \u03a6 and \u03a8 would be the 15\ufffd15 2-stage network 1000 shown in FIG. 10, the 2X tensor product of \u03a6 and \u03a8 would be the 15\ufffd15 2-stage network 1200 shown in FIG. 12, and the X2 tensor product of \u03a6 and \u03a8 would be the 15\ufffd15 2-stage network 1300 shown in FIG. 13., 473985=It is worth pointing out a difference between the recursive application at the C- or P-level and the recursive application at the I- or F-level. A step at the I- or F-level results an interface-board package or a fiber-array package, which can be used in the next recursive step. In contrast, a step at the C- or P-level does not necessarily result in a whole IC chip or PCB; rather, such a step only logically results in a larger input or output switching element for the next step of implementation. For example, the 6\ufffd6 networks 1403 constructed from the 2-stage interconnection of 2\ufffd2 nodes (chips) 1401 and 3\ufffd3 nodes (chips) 1402 are not PCBs, they are just used to interconnect with another group of 5\ufffd3 nodes (chips) 1404 in the next step to produce the resulting 30\ufffd18 network, and the whole process is on a single PCB., 289289=Different banyan-type networks may be functionally equivalent and can substitute each other in applications. Among all banyan-type networks, those with the minimum layout complexity according to the \u201c2-layer Manhattan model with reserved layers\u201d turn out to be \u201cdivide-and-conquer networks\u201d, as disclosed by S. -Y. R. Li, \u201cOptimal multi-stage interconnection by divide-and-conquer networks,\u201d Proceedings of the IASTED International Conference on Parallel and Distributed Computing and Networks, Brisbane, Australia, published by ACTA Press, Anaheim, Calif., pp. 318-323, 1998., 233686=Consider 16\ufffd16 non-routable network 2400 [id:(34):(14):(4321):id]4 already illustrated in FIG. 24. By the calculation summarized in FIG. 30A, the trace of this network is the sequence 4, 3, 1, 3. Similarly the guide is the sequence 2, 4, 3, 4 by the calculation summarized in FIG. 30B. Consider the Table 2 below which is determined in the same manner as Table 1:, 216028=(e) trace 2754 is read as the sequence from top-to-bottom on the left-hand side of diagram 2750, namely, 4, 3, 1, 2., 217409=(b) in the second row, locate the column of where the integer n=4 appears, which is the third column labeled 2713 From the location of n=4 in column 2713, note the sequence of numbers in going from n=4 to the bottom of the column. In this case, the sequence is 4-to-1-to-1 or 4, 1, 1. The path in this sequence is shown by dashed lines 2734 and 2735., 83091=A fourth motivating example, which considers a switching network at a macroscopic level, relates to the properties of a switching network itself. The component complexity of an N\ufffdN nonblocking network is at least N2/4 (Here the definition of a nonblocking network requires the network to be unique-routing to begin with, because otherwise there are different senses for a network to be \u201cnonblocking\u201d.) The quadratic order in this bound indicates the intrinsically high complexity in the nonblocking property of the network. So instead of applying a nonblocking network in switch design, the focus is on uncovering simple networks that preserves \u201cconditionally nonblocking properties\u201d of switches and thereby construct large conditionally nonblocking switches out of small ones in an economical way. Recursive applications of such construction then leads to conditionally nonblocking switches of indefinitely large sizes. Such theoretical recursive property then allows the physical construction of switching fabric at a throughput level much higher than that of existing routers/switches by the contemporary ASIC technology. In the literature, there are individual instances of certain conditionally nonblocking switches constructed by switching networks, such as the one disclosed by A. Huang and S. Knauer in an article entitled \u201cStarlite: a wideband digital switch,\u201d as published in Proceedings of Globecom '84, Atlanta, pp. 121-125, 1984. However, these instances of conditionally nonblocking property are not preserved by simple network and hence do not enjoy the advantage of recursive construction., 205231=The coordinate interchange of a 2Stg(m, n) can be expressed as a bit-permuting exchange if both m and n are power of 2. In particular, if m=2k\u2212r, and n=2r, that is, a 2-stage interconnection network composed of 2r 2k\u2212r\ufffd2k\u2212r input nodes and 2k\u2212r 2r\ufffd2r output nodes, the coordinate interchange is the rth power of SHUF(k). For example, as shown in FIG. 16, the interstage exchange 1603 of the network 1600, which is the X2 version of a 2-stage interconnection network with parameter m=2=23\u22122 and n=4=22, is X(1 2 3), wherein the inducing permutation is (1 2 3) which is the 2nd power of SHUF(3), i.e. (3 2 1)2=(3 2 1)(3 2 1)=(1 2 3)., 408190=To demonstrate this generalized self-routing mechanism, consider network 2900 of FIG. 29. The destination address binary(d1d2d3d4) for a packet is 1110. The guide has been computed earlier as the sequence 2, 4, 1, 3. Thus, d\u03b3(1)=d2=1, d\u03b3(2)=d4=0, d\u03b3(3)=d1, =1, and d\u03b3(4)=d3=1, so the data packet is prepended with the binary stream 1d\u03b3(1)d\u03b3(2)d\u03b3(3)d\u03b3(4)=11011 as the routing tag. Each cell in the network is a sorting cell with respect to the linear order of, 214333=(a) in the second row, locate the column of where the integer n=4 appears, which is the third column labeled 2713 From the top of column 2713, note the sequence of numbers in going from the top to the location of integer 4. In this case, the sequence is 3-to-4 or 3, 4. The path in this sequence is shown by dashed line 2721., 79428=By way of a heuristic example of the benefit of uncovering foundational principles, a switching network at a microscopic level is first considered to illustrate the foregoing observations. It is known in the art that efficacious control over a packet switching network composed of nodes is effected whenever the switching decision at each node is determined only by information carried in each local input data packet to the node; such a control mechanism is called \u201cself-routing\u201d. The concept of \u201cself-routing\u201d was initially disclosed by D. H. Lawrie in an article entitled \u201cAccess and alignment of data in an array processor,\u201d as published in IEEE Trans. Comp., vol. 24, pp. 1145-1155, 1975. Lawrie postulated the following in-band control mechanism for a specific banyan-type network (called the Omega network) composed of a cascade of stages wherein each stage is further composed of a number of two-input/two-output switching cells: upon entering the network, a data packet composed of a sequence of bits is prepended with its binary destination address in the form d1d2 . . . dn. The bit dj indicates the preference between the only two outputs of a stage-j switching cell and is consumed by the stage-j switching control. Thus, the switching state of a cell is determined by just this leading bit of each of the two input packets. The existing self-route mechanism used in this particular banyan-type network considered by Lawrie is ad hoc, that is, determination of the routing tag of a packet is one of trial-and-error. The main reason behind the trial-and-error procedure is that Lawrie has not had the benefit of a fundamental theoretical approach to determine the routing tag for self-routing, as covered in the sequel by the inventive subject matter in accordance with the present invention. The theoretical underpinnings are founded upon the concept of \u201cguide of a bit-permuting network\u201d, which is a sequence of numbers, whereby the guide ensures that the routing tag for any given bit-permuting network can be determined once the guide of that network is computed. As will be shown, the guide of the networks studied by Lawrie happens to be a special case wherein the guide is the monotonically increasing 1, 2, . . . , n. The destination address can no longer be used as the routing tag for any other banyan-type network whose guide is not monotonically increasing. For this reason, those banyan-type networks whose routing tag \u201cseems not related\u201d to the destination address have not been widely studied. But, ironically, those widely studied networks, including the Omega network studied by Lawrie, are actually the most anti-optimal ones with regard to the layout complexity under the popular \u201c2-layer Manhattan model with reserved layers\u201d among a huge family of equivalent networks., 213448=TRACE: The sequence of the original set of n=4 integers in this banyan-type network appears in the first row 2701 in order 1, 2, 3, 4 (thus n=4 appears automatically at the top of the last column). Second row 2702 is obtained by applying the cycle (3 4) to the integers in row 2701; the cycle (3 4) appears on the left-hand side between rows 2701 and 2702 for reference. Next, third row 2703 is produced by applying the cycle (1 4) to the integers of row 2702; the cycle (1 4) appears between rows 2702 and 2703 on the left-hand side for reference. Finally, fourth row 2704 is generated by applying the cycle (2 4) to the integers of row 2703; the cycle (2 4) appears between rows 2703 and 2704 on the left-hand side for reference., 173532=Definition B2: \u201c2X interconnection network\u201d. The \u201c(y, x) system\u201d of external I/O order of the 2Stg(m, n) follows the (y, x) lexicographic order of both stage-1 input addresses and stage-2 output addresses. This system differs from the default system only in the external output order. Recall from the Definition A22, the external output order in the (y, x) system, since being different from the default external output order, induces an output exchange. This output exchange converts from the (x, y) lexicographic order on stage-2 outputs to the (y, x) lexicographic order on external outputs; thus it is the inverse coordinate interchange, that is, an mirror image of the interstage exchange. The same construction procedure as the plain 2-stage interconnection, but with the inverse coordinate interchange appended as the output exchange, is referred to as the 2-stage interconnection with an output exchange, or simply as the \u201c2X interconnection\u201d. A network so constructed is called a \u201c2X interconnection network\u201d. The 2X version of a 2Stg(m, n), that is, the 2X interconnection network with parameter m and n, is denoted as 2X(m, n). Data signal progresses through a generic 2X interconnection network along the path specified by path diagram 1100 in FIG. 11A., 200816=For example, network 2200 shown in FIG. 22 (which is also the structure of FIG. 7) is denoted as [id:(4 3 2 1):(1 4 2 3):(3 4):id]4. When the input exchange or the output exchange is induced by permutation \u201cid\u201d, i.e., when the exchange is absent, it may be omitted in the notation. So [id:(4 3 2 1):(1 4 2 3):(3 4):id]4 may be written simply as [:(4 3 2 1):(1 4 2 3):(3 4):]4. Meanwhile, the network [:]1 is a single 2\ufffd2 node without I/O exchanges., 183687=FIG. 14 shows how a 30\ufffd18 network is constructed from the recursive 2-stage construction with basic building blocks being 2\ufffd2, 3\ufffd3 and 5\ufffd3 nodes in two steps. Step 1: from the plain 2-stage tensor product of 2\ufffd2 single node network 1401 and 3\ufffd3 single node network 1402, a 6\ufffd6 network 1403 is resulted. Step 2: the plain 2-stage tensor product of the 6\ufffd6 network 1403 resulted in step 1 and 5\ufffd3 single node network 1404 gives the desired 30\ufffd18 network 1400., 172035=A 2Stg(m, n) with m=3 and n=5 can be represented by each of the aforementioned addressing schemes. FIG. 9 shows the network 900 under the linear addressing scheme, in which the stage-1 I/O 902, 903) and stage-2 I/O (904, 905) are addressed in the naturally induced I/O order. The element 901 is the interstage exchange which connects each stage-1 output port with the address in the form 3y+x, e.g. 11=3\ufffd3+2, to the stage-2 input port with the address 5x+y, e.g. 5\ufffd2+3=13, for x=0, 1, 2 and y=0, 1, 2, 3, 4. When represented under the vector addressing scheme as in FIG. 10, in which the addresses of the stage-1 (1002, 1003) and stage-2 (1004, 1005) nodes of the network 1000 are shown in 2-dimensional vector form, one can readily see that the interstage exchange 1001, also named as coordinate interchange, maps each stage-1 output address in the form (y, x) to the corresponding stage-2 input address (x, y), thus the interchange of the coordinates in the vector addresses is clear., 468226=For example, the recursively constructed 30\ufffd18 network 1400 as depicted in FIG. 14 can be implemented on a PCB wherein the three types of nodes, namely, 2\ufffd2 nodes 1401, 3\ufffd3 nodes 1402 and 5\ufffd3 nodes 1404, are implemented by three different IC chips., 475685=Recall that the procedure of the recursive invocation of the technique of 2-stage interconnection can be logged by a binary tree diagram. For example, the recursive procedure leading to the 30\ufffd18 3-stage network 1400 can be logged by FIG. 15 in Section B. Meanwhile, the recursive procedure leading to the 16\ufffd16 divide-and-conquer network 5100 is logged by the 4-leaf balanced tree 5010 shown in FIG. 50A. As stated in Section B, when each leaf in a binary tree is associated with a prescribed network, then the tree is \u201cassociated with\u201d or \u201ccorresponding to\u201d a recursive 2-stage interconnection network with the prescribed networks being the \u201cbuilding blocks\u201d in the construction. Each internal node of the tree corresponds to a particular step of 2-stage interconnection in the associated recursive 2-stage construction. When a binary tree is applied to the physical implementation of the recursive 2-stage construction, such correspondence can be summarized as follows:, 217807=(c) in the third row, locate the column of where the integer n=4 appears, which is the first column labeled 2711 From the location of n=4 in column 2711, note the sequence of numbers in going from n=4 to the bottom of the column. In this case, the sequence is 4-to-2 or 4, 2. The path in this sequence is shown by dashed line 2736., 203834=For example, the network 2300 of FIG. 23 illustrates a [:(3 2 1):(3 2 1):] which is a 8\ufffd8 shuffle exchange network which belongs to the family of 8\ufffd8 banyan-type networks., 185771=On the tree 1510 in FIG. 15 are a root 1511, an internal node 1512, and three leaves 1513, 1514, and 1515. The three leaves 1513, 1514, and 1515 correspond, respectively, to the three basic building blocks, that is, the 2\ufffd2 network 1401, the 3\ufffd3 network 1402, and the 5\ufffd3 network 1404 in FIG. 14. The sub-tree 1516 rooted at the internal node 1512 corresponds to the intermediate 6\ufffd6 network 1403, and the entire binary tree 1510 corresponds to the overall 30\ufffd18 network 1400. From the construction point of view, the internal node 1512 represents the first step in the above recursive 2-stage construction, that is, the step of constructing the 6\ufffd6 sub-network 1403 from the tensor product (plain 2-stage tensor product here) of the 2\ufffd2 network 1401 and the 3\ufffd3 network 1402, wherein the 2\ufffd2 network 1401 corresponds to the sub-tree 1517 rooted at the node 1513, and the 3\ufffd3 network 1402 corresponds to the sub-tree 1518 rooted at the node 1514. The root node 1511 represents the second and final step of the recursive construction. This step constructs the final 30\ufffd18 network 1400 from the plain 2-stage tensor product of the 6\ufffd6 network 1403 (corresponding to the sub-tree 1516 rooted at 1512) and the 5\ufffd3 network 1404 (corresponding to the sub-tree 1519 rooted at 1515). As a whole, the tree 1510 logs the overall procedure of the above recursive 2-stage construction., 215503=(d) construct \u201ctriangle-like\u201d diagram 2750 in the lower left-hand side of FIG. 27, as follows:, 244137=Another way to view the stage-by-stage progression of the I/O addresses along the route as conveyed by Table 2 is diagram 3100 of FIG. 31. As depicted, the permutation and replacement of the input bits I1I2I3I4 in the top row are shown in a top-down manner as the bits progress through network 2400 of FIG. 24. The last row shows quite explicitly the fact that that there exists a route from an origination address binary(I1I2I3I4) to a destination address binary(O1O2O3O4) if and only if I2=O1. This undesirable situation occurs because the number 2 does not appear in the trace, nor does the number 1 appear in the guide. Hence the bit I2 is never rotated to the rightmost bit position and so is never replaced. Eventually it is rotated to the leftmost bit position. Close scrutiny of the sequential bit substitution finds bit I3 rotated to the rightmost bit position upon entering stage 2 and replaced by a random bit (say Y) at stage 2, while the new bit Y is later rotated to the rightmost bit position upon entering stage 4 and is overwritten. This fact is reflected in the repeated appearance of the number 3 at both the second and the fourth terms in the trace., 217000=(a) in the first row, locate the column of where the integer n=4 appears, which is the fourth column labeled 2714 From the place of appearance of n=4, note the sequence of numbers in going from n=4 to the bottom of the column. In this case, the sequence is 4-to-3-to-3-to-3 or 4, 3, 3, 3. The path in this sequence is shown by dashed lines 2731, 2732, and 2733., 214699=(b) in the third row, locate the column of where the integer n=4 appears, which is the first column labeled 2711 From the top of column 2711, note the sequence of numbers in going from the top to the location of integer 4. In this case, the sequence is 1-to-1-to-4 or 1, 1, 4. The path in this sequence is shown by dashed lines 2722 and 2723., 174897=A 2X version of 2Stg(3,5) is the network 1200 as shown in FIG. 12. The output exchange 1202, which is the inverse of the coordinate interchange 1201, is appended to the 2Stg(3,5) (1000) in FIG. 10., 247615=For k\u2267n, if either the trace or the guide of the network [\u03c30:\u03c31:\u03c32: . . . :\u03c3k\u22121:\u03c3k]n includes all numbers from 1 to n, so does the other because of the close relationship between the two sequences. In this case, all bits in the origination address are replaced by switching decisions throughout the stages. Thus every bit in the destination address reflects the switching decision of some stage, which means that the network is routable. In other words, for any 2n\ufffd2n bit-permuting network, the routability of the network can easily be tested by examining either the trace or the guide of the network. If either sequence contains all numbers from 1 to n, then so does the other and the network is routable; otherwise, the network is just the superimposition of a plurality of logically disjoint copies of smaller network. An example of non-routable bit-permuting network can be recalled from the network 2400 in FIG. 24.}",
    "textBeforeTable": "Otras citas In addition, it will be appreciated by those with ordinary skill in the art that the block diagrams herein represent conceptual views of illustrative circuitry embodying the principles of the invention. Although the present invention have been shown and described in detail herein, those skilled in the art can readily devise many other varied embodiments that still incorporate these teachings. Thus, the previous description merely illustrates the principles of the invention. It will thus be appreciated that those with ordinary skill in the art will be able to devise various arrangements which, although not explicitly described or shown herein, embody principles of the invention and are included within its spirit and scope. Furthermore, all examples and conditional language recited herein are principally intended expressly to be only for pedagogical purposes to aid the reader in understanding the principles of the invention and the concepts contributed by the inventor to furthering the art, and are to be construed as being without limitation to such specifically recited examples and conditions. Moreover, all statements herein reciting principles, aspects, and embodiments of the invention, as well as specific examples thereof, are intended to encompass both structural and functional equivalents thereof. Additionally, it is intended that such equivalents include both currently known equivalents as well as equivalents developed in the future, that is, any elements developed that perform the function, regardless of structure. FIG. 75C shows an exemplifying list of generic",
    "textAfterTable": "US6999461 15 Jun 2001 14 Feb 2006 Industrial Technology Research Institute Routing schemes for packet switching networks US6999466 15 Jun 2001 14 Feb 2006 Industrial Technology Research Institute Switching concentrator US7016345 15 Jun 2001 21 Mar 2006 Industrial Technology Research Institute Conditionally nonblocking switch of the expander type US7031303 * 15 Jun 2001 18 Abr 2006 Industrial Technology Research Institute Conditionally nonblocking switch of the upturned decompressor type US7035254 15 Jun 2001 25 Abr 2006 Industrial Technology Research Institute Conditionally nonblocking switch of the upturned compressor type US7042873 15 Jun 2001 9 May 2006 Industrial Technology Research Institute Conditionally non blocking switch of the circular-unimodal type US7042878 15 Jun 2001 9 May 2006 Industrial Technology Research Institute General self-routing mechanism for multicasting control over bit-permuting switching networks US7050429 15 Jun 2001 23 May 2006 Industrial Technology Research Institute Conditionally nonblocking switch of the",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}