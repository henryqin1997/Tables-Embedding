{
    "relation": [
        [
            "Parameter",
            "uplo",
            "n",
            "alpha",
            "x",
            "incx",
            "y",
            "incy",
            "ap",
            "lda",
            "pack"
        ],
        [
            "Description",
            "Specifies whether the upper or lower triangular part of the matrix A is supplied in the packed array ap : uplo = 'U' or 'u' : The upper triangular part of A is supplied in ap. uplo = 'L' or 'l' : The lower triangular part of A is supplied in ap.",
            "Specifies the order of the matrix A. n must be at least zero.",
            "Specifies the scalar alpha.",
            "UTL_NLA_ARRAY_FLT/DBL of dimension at least (1+(n-1)*abs(incx)) Before entry, the incremented array X must contain the m element vector x.",
            "Specifies the increment for the elements of x. incx must not be zero.",
            "UTL_NLA_ARRAY_FLT/DBL of dimension at least (1+(n-1)*abs(incy)) Before entry, the incremented array X must contain the m element vector y.",
            "Specifies the increment for the elements of y. incy must not be zero.",
            "UTL_NLA_ARRAY_FLT/DBL of dimension at least ((n*(n+1))/2) Before entry with uplo = 'U' or 'u', the array ap must contain the upper triangular part of the symmetric matrix packed sequentially, column by column, so that ap(1) contains ap(1) contains a(1,1), ap(2) and ap(3) contain a(1,2) and a(2,2) respectively, and so on. On exit, the array ap is overwritten by the upper triangular part of the updated matrix. Before entry with uplo = 'L' or 'l', the array ap must contain the lower triangular part of the symmetric matrix packed sequentially, column by column, so that ap(1) contains a(1,1), ap(2) and ap(3) contain a(2,1) and a(3,1) respectively, and so on. On exit, the array ap is overwritten by the lower triangular part of the updated matrix",
            "Specifies the first dimension of a as declared in the calling (sub) program. lda must be at least (k + 1).",
            "(Optional) Flags the packing of the matrices: 'C': column-major (default) 'R': row-major"
        ]
    ],
    "pageTitle": "UTL_NLA",
    "title": "",
    "url": "http://docs.oracle.com/cd/E18283_01/appdev.112/e16760/u_nla.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986148.56/warc/CC-MAIN-20150728002306-00171-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 71783019,
    "recordOffset": 71742853,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Sat, 14 Aug 2010 15:00:23 GMT",
    "textBeforeTable": "Table 230-22 BLAS_SPR2 Procedure Parameters Parameters pack IN flag DEFAULT 'C'); lda IN POSITIVEN, a IN OUT UTL_NLA_ARRAY_FLT, incy IN POSITIVEN, y IN UTL_NLA_ARRAY_FLT, incx IN POSITIVEN, x IN UTL_NLA_ARRAY_FLT, alpha IN SCALAR_FLT, n IN POSITIVEN, uplo IN flag, UTL_NLA.BLAS_SPR2 ( pack IN flag DEFAULT 'C'); lda IN POSITIVEN, a IN OUT UTL_NLA_ARRAY_DBL, incy IN POSITIVEN, y IN UTL_NLA_ARRAY_DBL, incx IN POSITIVEN, x IN UTL_NLA_ARRAY_DBL, alpha IN SCALAR_DBL, n IN POSITIVEN, uplo IN flag, UTL_NLA.BLAS_SPR2 ( Syntax  BLAS Level 2 (Matrix-Vector Operations) Subprograms for other subprograms in this group See Also: where alpha is a scalar, x and y are n element vectors, and A is an n by n symmetric matrix, supplied in packed form. A := alpha*x*y' + alpha*y*x' +A This procedure performs the rank 2 operation BLAS_SPR2 Procedures     'R': row-major 'C': column-major (default) (Optional) Flags the packing of the matrices: pack Before entry with uplo = 'U' or 'u', the array ap must contain the upper triangular part of the symmetric matrix packed sequentially, column by column, so that ap(1) contains a(1,1),",
    "textAfterTable": "BLAS_SBMV Procedures This procedure performs the matrix-vector operation y := alpha*A*x + beta*y where alpha and beta are scalars, x and y are n element vectors and A is an n by n symmetric band matrix, with k super-diagonals. See Also: BLAS Level 2 (Matrix-Vector Operations) Subprograms for other subprograms in this group Syntax UTL_NLA.BLAS_SBMV ( uplo IN flag, n IN POSITIVEN, k IN NATURALN, alpha IN SCALAR_DOUBLE, a IN UTL_NLA_ARRAY_DBL, lda IN POSITIVEN, x IN UTL_NLA_ARRAY_DBL, incx IN POSITIVEN, beta IN SCALAR_DOUBLE, y IN OUT UTL_NLA_ARRAY_DBL, incy IN POSITIVEN, pack IN flag DEFAULT 'C'); UTL_NLA.BLAS_SBMV ( uplo IN flag, n IN POSITIVEN, k IN NATURALN, alpha IN SCALAR_FLOAT, a IN UTL_NLA_ARRAY_FLT, lda IN POSITIVEN, x IN UTL_NLA_ARRAY_FLT, incx IN POSITIVEN, beta IN SCALAR_FLOAT, y IN OUT UTL_NLA_ARRAY_FLT, incy IN POSITIVEN, pack IN flag DEFAULT 'C'); Parameters Table 230-23 BLAS_SBMV Procedure Parameters Parameter Description uplo",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}