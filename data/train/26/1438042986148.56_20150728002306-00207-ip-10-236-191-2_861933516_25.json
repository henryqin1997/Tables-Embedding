{
    "relation": [
        [
            "Name",
            "index",
            "text"
        ],
        [
            "Type",
            "Integer",
            "String"
        ],
        [
            "Description",
            "the index of the item to be changed.",
            "the item's new text."
        ]
    ],
    "pageTitle": "Class ListBox \u00a0 | \u00a0 Apps Script \u00a0 | \u00a0 Google Developers",
    "title": "",
    "url": "https://developers.google.com/apps-script/reference/ui/list-box",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986148.56/warc/CC-MAIN-20150728002306-00207-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 861966351,
    "recordOffset": 861933516,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{2274=Deprecated. The UI service was deprecated on December 11, 2014. To create user interfaces, use the HTML service instead.}",
    "TableContextTimeStampAfterTable": "{87410=Last updated May 19, 2015.}",
    "lastModified": "Tue, 19 May 2015 03:14:02 GMT",
    "textBeforeTable": "Parameters ServerHandler for more information. In addition, the values of certain widgets can be sent up with the event as well, as \"callback elements.\" See the documentation of } var source = parameter.source; // the id of the widget that fired this event. var eventType = parameter.eventType; // the type of event, in this case \"blur\". var parameter = eventInfo.parameter; function handlerFunction(eventInfo) { } return app; app.add(button); button.addBlurHandler(handler); var handler = app.createServerHandler(\"handlerFunction\"); var button = app.createButton(\"a button\"); var app = UiApp.createApplication(); function doGet() {   The handler passes back some information to the server about what happened. This information can be accessed as follows:   Note that you can have multiple handlers for the same event on the same widget. They will be called in the order that they were added to the widget, although ServerHandlers may appear to happen simultaneously.  Add a handler for blur events (losing keyboard focus).   Deprecated. This function is deprecated and should not be used in new scripts.  addBlurHandler(handler)   Deprecated methods      Sets the width of this ListBox. ListBox setWidth(width)   Sets the number of items that are visible. ListBox setVisibleItemCount(count)   Sets whether this ListBox is visible. ListBox setVisible(visible)   Sets the value associated with the item at a given index. ListBox setValue(index, value)",
    "textAfterTable": "addChangeHandler(handler) Deprecated. This function is deprecated and should not be used in new scripts. Add a handler for change events. Note that you can have multiple handlers for the same event on the same widget. They will be called in the order that they were added to the widget, although ServerHandlers may appear to happen simultaneously. The handler passes back some information to the server about what happened. This information can be accessed as follows:   function doGet() { var app = UiApp.createApplication(); var textBox = app.createTextBox(); var handler = app.createServerHandler(\"handlerFunction\"); textBox.addChangeHandler(handler); app.add(textBox); return app; } function handlerFunction(eventInfo) { var parameter = eventInfo.parameter; // the type of event, in this case \"change\". var eventType = parameter.eventType; // the id of the widget that fired this event. var source = parameter.source; }  In addition, the values of certain widgets can be sent up with the event as well, as \"callback elements.\" See the documentation of ServerHandler for more information. Parameters Name Type Description handler Handler the handler to execute when the event occurs. This can be a ClientHandler or a ServerHandler. Return ListBox \u2014 the ListBox itself, useful for chaining. addClickHandler(handler) Deprecated. This function is deprecated and",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}