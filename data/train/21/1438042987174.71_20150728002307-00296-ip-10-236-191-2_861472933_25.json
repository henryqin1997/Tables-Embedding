{
    "relation": [
        [
            "a",
            "",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        [
            "b",
            "1",
            "2",
            "3",
            "4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17"
        ],
        [
            "",
            "from django.db.backends import BaseDatabaseClient",
            "from django.conf import settings",
            "import os",
            "",
            "def runshell():",
            "args = ['psql']",
            "if settings.DATABASE_USER:",
            "args += [\"-U\", settings.DATABASE_USER]",
            "if settings.DATABASE_PASSWORD:",
            "args += [\"-W\"]",
            "if settings.DATABASE_HOST:",
            "args.extend([\"-h\", settings.DATABASE_HOST])",
            "if settings.DATABASE_PORT:",
            "args.extend([\"-p\", str(settings.DATABASE_PORT)])",
            "args += [settings.DATABASE_NAME]",
            "os.execvp('psql', args)",
            "class DatabaseClient(BaseDatabaseClient):",
            "def runshell(self):",
            "args = ['psql']",
            "if settings.DATABASE_USER:",
            "args += [\"-U\", settings.DATABASE_USER]",
            "if settings.DATABASE_PASSWORD:",
            "args += [\"-W\"]",
            "if settings.DATABASE_HOST:",
            "args.extend([\"-h\", settings.DATABASE_HOST])",
            "if settings.DATABASE_PORT:",
            "args.extend([\"-p\", str(settings.DATABASE_PORT)])",
            "args += [settings.DATABASE_NAME]",
            "os.execvp('psql', args)"
        ]
    ],
    "pageTitle": "5461-r8224.diff on Ticket #5461 \u2013 Attachment \u2013 Django",
    "title": "",
    "url": "https://code.djangoproject.com/attachment/ticket/5461/5461-r8224.diff",
    "hasHeader": true,
    "headerPosition": "FIRST_COLUMN",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987174.71/warc/CC-MAIN-20150728002307-00296-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 861536103,
    "recordOffset": 861472933,
    "tableOrientation": "VERTICAL",
    "TableContextTimeStampAfterTable": "{699085=\u00a9 2005-2015 Django Software Foundation unless otherwise noted. Django is a registered trademark of the Django Software Foundation.}",
    "textBeforeTable": "django/contrib/gis/db/backend/postgis/creation.py diff -r 187c638a7c24 django/contrib/gis/db/backend/postgis/creation.py Updated the patch after geodjango was merged to trunk File 5461-r8224.diff, 150.2 KB (added by leosoto, 7 years ago) Ticket #5461: 5461-r8224.diff Back to Ticket #5461 Context Navigation Search Wiki Timeline Reports View Tickets API Preferences DjangoProject Login GitHub Login Code \u2665 Donate About Code Community News Documentation Download Overview The web framework for perfectionists with deadlines. Django",
    "textAfterTable": "62 62 created_regex = re.compile(r'^createdb: database creation failed: ERROR:\u00a0 database \".+\" already exists') 63 63 def _create_with_shell(db_name, verbosity=1, autoclobber=False): 64 64 \u00a0 \u00a0 \"\"\" 65 \u00a0 \u00a0 \u00a0 If no spatial database already exists, then using a cursor will not work. \u00a0 66 \u00a0 \u00a0 \u00a0 \u00a0Thus, a `createdb` command will be issued through the shell to bootstrap \u00a0 \u00a0 65 \u00a0 \u00a0 If no spatial database already exists, then using a cursor will not work. \u00a0 66 \u00a0 \u00a0 \u00a0Thus, a `createdb` command will be issued through the shell to bootstrap 67 67 \u00a0 \u00a0 \u00a0creation of the spatial database. 68 68 \u00a0 \u00a0 \"\"\" 69 69 \u2026 \u2026 \u00a0 83 83 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if verbosity >= 1: print 'Destroying old spatial database...' 84 84 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 drop_cmd = 'dropdb %s%s' % (options, db_name) 85 85 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 status, output = getstatusoutput(drop_cmd) 86 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if status != 0: \u00a0 \u00a0 86",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}