{
    "relation": [
        [
            "Option",
            "-elevel",
            "-la",
            "-li ID",
            "-otype",
            "-p",
            "-s"
        ],
        [
            "Description",
            "Displays error information. After the -e, zero or one error decoding level may follow: 0 or nothing translates the NS error numbers dumped from the nserror function plus lists all other errors 1 displays only the NS error translation from the nserror function 2 displays error numbers without translation",
            "If a connection ID exists in the NS connect packet, then the output displays the connection IDs. Connection IDs are displayed as hexadecimal, eight-byte IDs. A generated ID is created by Trace Assistant if the packet is not associated with any connection, that is, the connect packet is overwritten in the trace file. This can occur with cyclic trace files. For each ID, the output lists the following: Socket ID, if the connection has one Connect packet send or receive operation Current setting of the MULTIPLEX attribute of the DISPATCHERS parameter in the initialization parameter file. When MULTIPLEX is set to ON, session multiplexing is enabled. Session ID, if MULTIPLEX is set to ON Connect data information Notes: Do not use this option with other options. The IDs generated by the Trace Assistant do not correlate with client/server trace files.",
            "Displays the trace for a particular ID from the -la output Note: Only use this option with output from the -la option.",
            "Displays the amount and type of information to be output. After the -o the following options can be used: c to display summary connectivity information d to display detailed connectivity information u to display summary Two-Task Common (TTC) information t to display detailed TTC information q to display SQL commands enhancing summary TTC information. Use this option with u, such as -ouq. Note: As output for d contains the same information as displayed for c, do not submit both c and d. If you submit both, then only output d will be processed.",
            "Oracle internal use only",
            "Displays the following statistical information: Total number of bytes sent and received Maximum open cursors Currently open cursors Count and ratio of operations Parsing and execution count for PL/SQL Total calls sent and received Total, average, and maximum number of bytes sent and received Total number of transports and sessions present Timestamp information, if any Sequence numbers, if any"
        ]
    ],
    "pageTitle": "Troubleshooting Oracle Net Services",
    "title": "",
    "url": "http://docs.oracle.com/cd/B28359_01/network.111/b28316/troublestng.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988860.4/warc/CC-MAIN-20150728002308-00119-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 70514131,
    "recordOffset": 70469205,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{3826=Troubleshooting the TNS-12154 Error}",
    "TableContextTimeStampAfterTable": "{54412=TNS-12549/ORA-12549: TNS:operating system resource quota exceeded and TNS-00519: Operating system resource quota exceeded, 80522=Directory naming issues associated with connectivity errors such as ORA-12154, ORA-12543, or ORA-12541 for database service or net service name entries in a directory server require analysis of the data. You can analyze the data contained within a directory server with the ldifwrite command line tool., 132717=The following output shows a log file excerpt with a successful execution of the STATUS command by host sales-server, followed by an unsuccessful connection attempt by a client with an IP address of 192.0.2.35. This connection attempt resulted in an ORA-12525: TNS:listener has not received client's request in time allowed error message, which occurs when a client fails to complete its connect request in the time specified by the INBOUND_CONNECT_TIMEOUT_listener_name parameter in the listener.ora file. This client may be attempting a denial-of-service attack on the listener., 79778=In some cases, these errors will be caused by the same conditions which cause TNS-00510, TNS-00519, TNS-12540/ORA-12540, TNS-12549/ORA-12549 errors., 54617=TNS-12560/ORA-12560: TNS:protocol adapter error occurred, 54097=TNS-12540/ORA-12540: TNS:internal limit restriction exceeded and TNS-00510: Internal limit restriction exceeded, 64876=In some cases, these errors can be caused by the same conditions which cause TNS-12549/ORA-12549, TNS-00519, TNS-12540/ORA-12540, TNS-00510, and TNS-12560/ORA-12560 errors., 54292=TNS-12541/ORA-12541: TNS:no listener, 90860=If the TNS-12154 error still persists, determine whether the files were transferred from the client to the server and check the configuration files to ensure that CTRL-M (^M) or CTRL-R (^R) characters were not inserted at the ends of any lines. Remove any such characters you may find., 53145=TNS-12500/ORA-12500: TNS: listener failed to start a dedicated server process, 85475=Timing issues are associated with an ORA-12535 error in the client log files., 76174=The first two are examples of hard limits. The third is an example of a limit which can be increased by setting PROCESSES parameter in the database initialization file to a larger value. In this case, a TNS-12500/ORA-12500 error is also returned. In some cases, these errors can be caused by the same conditions which cause TNS-12549/ORA-12549 and TNS-00519 errors., 73406=For example, the following listener.log excerpt shows a client IP address of 192.0.2.35., 87586=This section offers some solutions to the TNS-12154 error. The TNS-12154 error is encountered when SQL*Net cannot find the alias specified for a connection in the tnsnames.ora file or other naming adapter., 100506=On the client side, the sqlnet.log file (Example 16-3) contains an error stack corresponding to the ORA-12543 error., 88549=The TNS-12154 error appears when SQL*Net cannot find the alias specified for a connection in the tnsnames.ora file or other naming adapter., 88159=Problem Description for TNS-12154, 88241=Troubleshooting TNS-12154 on UNIX, 62523=For example, the following sqlnet.log excerpt shows a client IP address of 192.0.2.35., 211671=Using oerr, you can find out more information about return codes 12537 and 507. (Bold denotes user input.)}",
    "lastModified": "Thu, 09 Jul 2015 23:30:18 GMT",
    "textBeforeTable": "Table 16-24 Trace Assistant Syntax The options are described in Table 16-24. trcasst [options] <filename>  To run the Trace Assistant, enter the following at any command line prompt: 16.7.5.1 Trace Assistant Syntax    Statistics Example  Connection Example  Two-Task Common Packet Examples  Packet Examples  Trace Assistant Syntax  This section contains the following topics:  off. DIAG_ADR_ENABLED is set to Note: The Trace Assistant can only be used when  Oracle Net Services provides a tool called the Trace Assistant to help you understand the information provided in trace files by converting existing lines of trace file text into a more readable paragraph. Note that the Trace Assistant runs against only a level 16 (support) Oracle Net Services trace file. 16.7.5 Using the Trace Assistant to Examine Trace Files    // *Action: None needed; this is an information message. // disconnected. // *Cause: Normal \"end of file\" condition has been reached; partner has 00507, 00000, \"Connection closed\" oerr tns 507 // *Action: None needed; this is an information message. disconnected. // *Cause: \"End of file\" condition has been reached; partner has 12537, 00000, \"TNS:connection closed\" oerr tns 12537  Using oerr, you can find out",
    "textAfterTable": "If no options are provided, then the default is -odt -e0 -s, providing detailed connectivity and TTC events, error level zero (0), and statistics in the trace file. Example 16-6 shows how the Trace Assistant converts trace file information into a more readable format. Example 16-6 Trace File with Error  ntus2err: exit ntuscni: exit ntusconn: exit nserror: entry -<ERROR>- nserror: nsres: id=0, op=65, ns=12541, ns2=12560; nt[0]=511, nt[1]=2, nt[2]=0 Example 16-7 shows how the Trace Assistant converts the trace file information into a more readable format with the -e1 option. Example 16-7 trcasst -e1 Output  ************************************************************************* * Trace Assistant * ************************************************************************* ntus2err: exit ntuscni: exit ntusconn: exit nserror: entry -<ERROR>- nserror: nsres: id=0, op=65, ns=12541, ns2=12560; nt[0]=511, nt[1]=2, nt[2]=0 /////////////////////////////////////////////////////////////// Error found. Error Stack follows: id:0 Operation code:65 NS Error 1:12541 NS Error 2:12560 NT Generic Error:511 Protocol Error:2 OS Error:0 NS & NT Errors Translation 12541, 00000 \"TNS:no listener\" // *Cause: The connection request could not be completed because the listener // is not running. // *Action: Ensure that the supplied destination address matches one of // the addresses used by the listener - compare the TNSNAMES.ORA entry with // the appropriate LISTENER.ORA file (or TNSNAV.ORA if the connection is to // go by way of an Interchange). Start the listener on the remote machine. / 12560, 00000 \"TNS:protocol adapter error\" // *Cause: A generic",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}