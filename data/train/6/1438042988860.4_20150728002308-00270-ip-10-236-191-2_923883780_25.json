{
    "relation": [
        [
            "Field separator value",
            "FS == \" \"",
            "FS == any single character",
            "FS == regexp",
            "FS == \"\"",
            "FIELDWIDTHS == list of columns",
            "FPAT == regexp"
        ],
        [
            "Fields are split \u2026",
            "On runs of whitespace",
            "On that character",
            "On text matching the regexp",
            "Such that each individual character is a separate field",
            "Based on character position",
            "On the text surrounding text matching the regexp"
        ],
        [
            "awk / gawk",
            "awk",
            "awk",
            "awk",
            "gawk",
            "gawk",
            "gawk"
        ]
    ],
    "pageTitle": "The GNU Awk User\u2019s Guide",
    "title": "",
    "url": "https://www.gnu.org/software/gawk/manual/gawk.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988860.4/warc/CC-MAIN-20150728002308-00270-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 924124799,
    "recordOffset": 923883780,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{887=Copyright \u00a9 1989, 1991, 1992, 1993, 1996\u20132005, 2007, 2009\u20132015 Free Software Foundation, Inc., 1617=This command prints the total number of bytes in all the files in the current directory that were last modified in November (of any year). The \u2018ls\u00a0-l\u2019 part of this example is a system command that gives you a listing of the files in a directory, including each file\u2019s size and the date the file was last modified. Its output looks like this:}",
    "TableContextTimeStampAfterTable": "{975696=strftime() is guaranteed by the 1999 ISO C standard54 to support the following date format specifications:, 974159=Return the current time as the number of seconds since the system epoch. On POSIX systems, this is the number of seconds since 1970-01-01 00:00:00 UTC, not counting leap seconds. It may be a different number on other systems., 979503=The week number of the year (with the first Monday as the first day of week one) as a decimal number (01\u201353). The method for determining the week number is as specified by ISO 8601. (To wit: if the week containing January 1 has four or more days in the new year, then it is week one; otherwise it is week 53 of the previous year and the next week is week one.), 168000=In May 1997, J\u00fcrgen Kahrs felt the need for network access from awk, and with a little help from me, set about adding features to do this for gawk. At that time, he also wrote the bulk of TCP/IP Internetworking with gawk (a separate document, available as part of the gawk distribution). His code finally became part of the main gawk distribution with gawk version 3.1., 1045435=In their seminal 1976 book, Software Tools,61 Brian Kernighan and P.J. Plauger wrote:, 961154=Brian Kernighan added fflush() to his awk in April 1992. For two decades, it was a common extension. In December 2012, it was accepted for inclusion into the POSIX standard. See the Austin Group website., 977211=The year modulo 100 of the ISO 8601 week number, as a decimal number (00\u201399). For example, January 1, 2012, is in week 53 of 2011. Thus, the year of its ISO 8601 week number is 2011, even though its year is 2012. Similarly, December 31, 2012, is in week 1 of 2013. Thus, the year of its ISO week number is 2013, even though its year is 2012., 922891=NOTE: In older versions of awk, the length() function could be called without any parentheses. Doing so is considered poor practice, although the 2008 POSIX standard explicitly allows it, to support historical practice. For programs to be maximally portable, always supply the parentheses., 155848=This book is the gawk reference manual, but at its core it is a book about AWK programming that will appeal to a wide audience. It is a definitive reference to the AWK language as defined by the 1987 Bell Laboratories release and codified in the 1992 POSIX Utilities standard., 931466=Divide string into pieces separated by fieldsep and store the pieces in array and the separator strings in the seps array. The first piece is stored in array[1], the second piece in array[2], and so forth. The string value of the third argument, fieldsep, is a regexp describing where to split string (much as FS can be a regexp describing where to split input records). If fieldsep is omitted, the value of FS is used. split() returns the number of elements created. seps is a gawk extension, with seps[i] being the separator string between array[i] and array[i+1]. If fieldsep is a single space, then any leading whitespace goes into seps[0] and any trailing whitespace goes into seps[n], where n is the return value of split() (i.e., the number of elements in array)., 878541=NOTE: For many years, using delete without a subscript was a common extension. In September 2012, it was accepted for inclusion into the POSIX standard. See the Austin Group website., 196555=Arnold Robbins Nof Ayalon Israel February 2015, 707796=Locales can affect how dates and times are formatted (see Time Functions). For example, a common way to abbreviate the date September 4, 2015, in the United States is \u201c9/4/15.\u201d In many countries in Europe, however, it is abbreviated \u201c4.9.15.\u201d Thus, the \u2018%x\u2019 specification in a \"US\" locale might produce \u20189/4/15\u2019, while in a \"EUROPE\" locale, it might produce \u20184.9.15\u2019., 785025=NOTE: For many years, nextfile was a common extension. In September 2012, it was accepted for inclusion into the POSIX standard. See the Austin Group website., 186616=I started working with that version in the fall of 1988. As work on it progressed, the FSF published several preliminary versions (numbered 0.x). In 1996, edition 1.0 was released with gawk 3.0.0. The FSF published the first two editions under the title The GNU Awk User\u2019s Guide., 980816=The time zone offset in a \u2018+HHMM\u2019 format (e.g., the format necessary to produce RFC 822/RFC 1036 date headers)., 935258=If string does not match fieldsep at all (but is not null), array has one element only. The value of that element is the original string., 166518=The name awk comes from the initials of its designers: Alfred V. Aho, Peter J. Weinberger, and Brian W. Kernighan. The original version of awk was written in 1977 at AT&T Bell Laboratories. In 1985, a new version made the programming language more powerful, introducing user-defined functions, multiple input streams, and computed regular expressions. This new version became widely available with Unix System V Release 3.1 (1987). The version in System V Release 4 (1989) added some new features and cleaned up the behavior in some of the \u201cdark corners\u201d of the language. The specification for awk in the POSIX Command Language and Utilities standard further clarified the language. Both the gawk designers and the original awk designers at Bell Laboratories provided feedback for the POSIX specification., 168476=John Haque rewrote the gawk internals, in the process providing an awk-level debugger. This version became available as gawk version 4.0 in 2011., 152875=Arnold Robbins and I are good friends. We were introduced in 1990 by circumstances\u2014and our favorite programming language, AWK. The circumstances started a couple of years earlier. I was working at a new job and noticed an unplugged Unix computer sitting in the corner. No one knew how to use it, and neither did I. However, a couple of days later, it was running, and I was root and the one-and-only user. That day, I began the transition from statistician to Unix programmer., 195084=Robert P.J. Day, Michael Brennan, and Brian Kernighan kindly acted as reviewers for the 2015 edition of this Web page. Their feedback helped improve the final work., 167525=Paul Rubin wrote gawk in 1986. Jay Fenlason completed it, with advice from Richard Stallman. John Woods contributed parts of the code as well. In 1988 and 1989, David Trueman, with help from me, thoroughly reworked gawk for compatibility with the newer awk. Circa 1994, I became the primary maintainer. Current development focuses on bug fixes, performance improvements, standards compliance, and, occasionally, new features., 733289=The special patterns BEGIN and END cannot be used in ranges or with Boolean operators (indeed, they cannot be used with any operators). An awk program may have multiple BEGIN and/or END rules. They are executed in the order in which they appear: all the BEGIN rules at startup and all the END rules at termination. BEGIN and END rules may be intermixed with other rules. This feature was added in the 1987 version of awk and is included in the POSIX standard. The original (1978) version of awk required the BEGIN rule to be placed at the beginning of the program, the END rule to be placed at the end, and only allowed one of each. This is no longer required, but it is a good idea to follow this template in terms of program organization and readability., 188988=Late in 2008, a volunteer took on the task of setting up an awk-related website\u2014http://awk.info\u2014and did a very nice job., 969320=awk programs are commonly used to process log files containing timestamp information, indicating when a particular log record was written. Many programs log their timestamps in the form returned by the time() system call, which is the number of seconds since a particular epoch. On POSIX-compliant systems, it is the number of seconds since 1970-01-01 00:00:00 UTC, not counting leap seconds.51 All known POSIX-compliant systems support timestamps from 0 through 2^31 - 1, which is sufficient to represent times through 2038-01-19 03:14:07 UTC. Many systems support a wider range of timestamps, including negative timestamps that represent times before the epoch., 539840=prints \u20181950.000\u2019, with a total of four significant figures, three of which follow the decimal point. (The \u20184.3\u2019 represents two modifiers, discussed in the next subsection.)}",
    "textBeforeTable": "Recipe for a Programming Language History of awk and gawk Next: Names, Up: Preface \u00a0 [Contents][Index] Acknowledgments. \u00a0\u00a0 \u2022 Acknowledgments: Helping to save the world. \u00a0\u00a0 \u2022 How To Contribute: Brief history of the GNU project and this Web page. \u00a0\u00a0 \u2022 Manual History: Typographical Conventions. \u00a0\u00a0 \u2022 Conventions: Using this Web page. Includes sample input files that you can use. \u00a0\u00a0 \u2022 This Manual: What name to use to find awk. \u00a0\u00a0 \u2022 Names: The history of gawk and awk. \u00a0\u00a0 \u2022 History: Implementations of the awk language are available for many different computing environments. This Web page, while describing the awk language in general, also describes the particular implementation of awk called gawk (which stands for \u201cGNU awk\u201d). gawk runs on a broad range of Unix systems, ranging from Intel-architecture PC-based computers up through large-scale systems. gawk has",
    "textAfterTable": "$ awk 1 /dev/null error\u2192 awk: syntax error near line 1 error\u2192 awk: bailing out near line 1 In this case, you should find a version of new awk, or just install gawk! Throughout this Web page, whenever we refer to a language feature that should be available in any complete implementation of POSIX awk, we simply use the term awk. When referring to a feature that is specific to the GNU implementation, we use the term gawk. Next: Conventions, Previous: Names, Up: Preface \u00a0 [Contents][Index] Using This Book The term awk refers to a particular program as well as to the language you use to tell this program what to do. When we need to be careful, we call the language \u201cthe awk language,\u201d and the program \u201cthe awk utility.\u201d This Web page explains both how to write programs in the awk language and how to run the awk utility. The term \u201cawk program\u201d refers to a program written by you in the awk programming language. Primarily, this Web page explains the features of awk as defined in the POSIX standard. It does so in the context of the gawk implementation. While doing so, it also attempts to describe important differences between gawk and other awk implementations.",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}