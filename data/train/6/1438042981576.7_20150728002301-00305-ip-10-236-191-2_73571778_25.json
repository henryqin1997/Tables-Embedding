{
    "relation": [
        [
            "Modifier and Type",
            "B",
            "void"
        ],
        [
            "Method and Description",
            "TableColumnBuilder.cellValueFactory(Callback,ObservableValue> x) Set the value of the cellValueFactory property for the instance constructed by this builder.",
            "TableColumn.setCellValueFactory(Callback,ObservableValue> value) Sets the value of the property cellValueFactory."
        ]
    ],
    "pageTitle": "Uses of Interface javafx.beans.value.ObservableValue (JavaFX 2.2)",
    "title": "Method parameters in javafx.scene.control with type arguments of type ObservableValue",
    "url": "http://docs.oracle.com/javafx/2/api/javafx/beans/value/class-use/ObservableValue.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981576.7/warc/CC-MAIN-20150728002301-00305-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 73588931,
    "recordOffset": 73571778,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{196975=Copyright (c) 2008, 2014, Oracle and/or its affiliates. All rights reserved.}",
    "lastModified": "Tue, 10 Dec 2013 00:18:10 GMT",
    "textBeforeTable": "When.WhenListener.thenValue\u00a0 private ObservableValue<?> When.WhenListener.otherwiseValue\u00a0 private ObservableValue<?> Field and Description Modifier and Type \u00a0 Fields in javafx.beans.binding declared as ObservableValue ObservableStringValue plus additional convenience methods to generate bindings in a fluent style. StringExpression is a A StringExpression class\u00a0 String. Binding of a Base class that provides most of the functionality needed to implement a StringBinding class\u00a0 ObservableSetValue plus additional convenience methods to generate bindings in a fluent style. SetExpression is a A SetExpression<E> class\u00a0 ObservableSet. Binding of an Base class that provides most of the functionality needed to implement a SetBinding<E> class\u00a0 ObservableObjectValue plus additional convenience methods to generate bindings in a fluent style. ObjectExpression is a A ObjectExpression<T> class\u00a0",
    "textAfterTable": "Methods in javafx.beans.binding with parameters of type ObservableValue \u00a0 Modifier and Type Method and Description static <K>\u00a0BooleanBinding Bindings.booleanValueAt(ObservableMap<K,java.lang.Boolean>\u00a0op, ObservableValue<? extends K>\u00a0key) Creates a new BooleanBinding that contains the mapping of a specific key in an ObservableMap. static StringExpression Bindings.convert(ObservableValue<?>\u00a0observableValue) Returns a StringExpression that wraps a ObservableValue. static <K>\u00a0DoubleBinding Bindings.doubleValueAt(ObservableMap<K,? extends java.lang.Number>\u00a0op, ObservableValue<? extends K>\u00a0key) Creates a new DoubleBinding that contains the mapping of a specific key in an ObservableMap. static <K>\u00a0FloatBinding Bindings.floatValueAt(ObservableMap<K,? extends java.lang.Number>\u00a0op, ObservableValue<? extends K>\u00a0key) Creates a new FloatBinding that contains the mapping of a specific key in an ObservableMap. static <K>\u00a0IntegerBinding Bindings.integerValueAt(ObservableMap<K,? extends",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}