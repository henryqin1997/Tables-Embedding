{
    "relation": [
        [
            "Action name",
            "HSH_CONTAINS",
            "HSH_CPY",
            "HSH_CREATE",
            "HSH_DESTR",
            "HSH_EMPTY",
            "HSH_EXCL",
            "HSH_FOR",
            "HSH_FOR_DATA_KEY",
            "HSH_FOR_KEY",
            "HSH_IDX",
            "HSH_IDX2",
            "HSH_INCL",
            "HSH_KEYS",
            "HSH_LNG",
            "HSH_REFIDX",
            "HSH_UPDATE",
            "HSH_VALUES"
        ],
        [
            "hshlib.c function",
            "hsh_contains",
            "hsh_cpy",
            "hsh_create",
            "hsh_destr",
            "hsh_empty",
            "hsh_excl",
            "hsh_for",
            "hsh_for_data_key",
            "hsh_for_key",
            "hsh_idx",
            "hsh_idx2",
            "hsh_incl",
            "hsh_keys",
            "hsh_lng",
            "hsh_refidx",
            "hsh_update",
            "hsh_values"
        ],
        [
            "hsh_rtl.c function",
            "hshContains",
            "hshCpy",
            "hshCreate",
            "hshDestr",
            "hshEmpty",
            "hshExcl",
            "for",
            "for",
            "for",
            "hshIdx, hshIdxAddr",
            "",
            "hshIncl",
            "hshKeys",
            "a->size",
            "",
            "hshUpdate",
            "hshValues"
        ]
    ],
    "pageTitle": "Seed7 Manual: Primitive actions",
    "title": "",
    "url": "http://seed7.sourceforge.net/manual/actions.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981576.7/warc/CC-MAIN-20150728002301-00293-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 209743063,
    "recordOffset": 209718159,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Sun, 05 Jul 2015 19:20:24 GMT",
    "textBeforeTable": "All the *lib.c files containing primitive actions and various other files with their functions are grouped together in the \"s7_comp.a\" library (Licensed under GPL). Furthermore the C primitive action functions (E.g.: int_parse) of the *lib.c files may use corresponding functions (E.g.: intParse) which can be found in *_rtl.c files (E.g.: \"int_rtl.c\"). The *_rtl.c files are grouped together in the \"seed7_05.a\" library (Licensed under LGPL). When a Seed7 program is compiled with the Seed7 compiler (s7c) inline code is generated for many primitive actions. To implement the remaining primitive actions the functions of the \"seed7_05.a\" library are used. 13.1 Actions for the type ACTION declareExtern(\"intType intLog2 (intType);\"); The compiler writes a prototype of intLog2() in the function write_prototypes:  end func; c_expr.expr &:= \")\"; process_expr(params[1], c_expr); c_expr.expr &:= \"intLog2(\"; begin in ref_list: params, inout expr_type: c_expr) is func const proc: process (INT_LOG2, in reference: function, The helper functions are also used in the code generated by the Seed7 compiler:  intType intLog2 (intType number); The file \"int_rtl.h\" contains a prototype definition for the intLog2() helper function:  } /* intLog2 */ return result; } /* if */ result = uintMostSignificantBit((uintType) number); } else { result = 0; raise_error(NUMERIC_ERROR); if (unlikely(number <",
    "textAfterTable": "arr_cat arrCat ARR_CONV arr_conv (noop) ARR_CPY arr_cpy cpy_ ... ARR_CREATE arr_create create_ ... ARR_DESTR arr_destr destr_ ... ARR_EMPTY arr_empty \u00a0 ARR_EXTEND arr_extend arrExtend ARR_GEN arr_gen arrGen ARR_HEAD arr_head arrHead ARR_IDX arr_idx a->arr[b-a->min_position] ARR_LNG arr_lng a->max_position-a->min_position + 1 ARR_MAXIDX arr_maxidx a->max_position ARR_MINIDX arr_minidx a->min_position ARR_PUSH arr_push arrPush ARR_RANGE arr_range arrRange ARR_REMOVE arr_remove arrRemove ARR_SORT arr_sort arrSort ARR_SUBARR arr_subarr arrSubarr, arrSubarrTemp ARR_TAIL arr_tail arrTail ARR_TIMES arr_times times_ ... 13.3 Actions for the type bigInteger Action name biglib.c function big_rtl.c function BIG_ABS big_abs bigAbs BIG_ADD big_add bigAdd, bigAddTemp BIG_ADD_ASSIGN big_add_assign bigAddAssign, bigAddAssignSignedDigit BIG_BIT_LENGTH big_bit_length bigBitLength BIG_CMP big_cmp bigCmp BIG_CONV big_conv \u00a0 BIG_CPY big_cpy bigCpy BIG_CREATE big_create bigCreate BIG_DECR big_decr bigDecr BIG_DESTR big_destr bigDestr BIG_DIV big_div bigDiv BIG_EQ big_eq bigEq BIG_FROM_BSTRI_BE big_fromBStriBe bigFromBStriBe BIG_FROM_BSTRI_LE big_fromBStriLe bigFromBStriLe BIG_GCD big_gcd bigGcd BIG_GE big_ge bigCmp >= 0 BIG_GT big_gt bigCmp > 0 BIG_HASHCODE big_hashcode bigHashCode BIG_ICONV big_iconv bigIConv BIG_INCR big_incr bigIncr BIG_IPOW big_ipow bigIPow BIG_LE big_le bigCmp <= 0 BIG_LOG10 big_log10 bigLog10",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}