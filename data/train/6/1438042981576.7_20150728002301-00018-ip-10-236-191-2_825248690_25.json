{
    "relation": [
        [
            "Characteristic",
            "Superclass Role:",
            "Related Concepts:",
            "Supported States and Properties:",
            "Inherited States and Properties:",
            "Name From:",
            "Accessible Name Required:"
        ],
        [
            "Value",
            "command",
            "HTML link",
            "aria-expanded",
            "aria-atomic aria-busy (state) aria-controls aria-describedat aria-describedby aria-disabled (state) aria-dropeffect aria-flowto aria-grabbed (state) aria-haspopup aria-hidden (state) aria-invalid (state) aria-label aria-labelledby aria-live aria-owns aria-relevant",
            "contents author",
            "True"
        ]
    ],
    "pageTitle": "Accessible Rich Internet Applications (WAI-ARIA) 1.1",
    "title": "Characteristics:",
    "url": "http://www.w3.org/TR/2014/WD-wai-aria-1.1-20140612/",
    "hasHeader": true,
    "headerPosition": "MIXED",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981576.7/warc/CC-MAIN-20150728002301-00018-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 825373295,
    "recordOffset": 825248690,
    "tableOrientation": "VERTICAL",
    "TableContextTimeStampBeforeTable": "{194042=To comment, send email to public-pfwg-comments@w3.org (comment archive) or file an issue in W3C Bugzilla . Comments are requested by 11 July 2014. In-progress updates to the document may be viewed in the publicly visible editors' draft., 198982=Copyright \u00a9 2013-2014 W3C\u00ae (MIT, ERCIM, Keio, Beihang), All Rights Reserved. W3C liability, trademark and document use rules apply., 193087=This document was produced by a group operating under the 5 February 2004 W3C Patent Policy. W3C maintains a public list of any patent disclosures made in connection with the deliverables of the group; that page also includes instructions for disclosing a patent. An individual who has actual knowledge of a patent which the individual believes contains Essential Claim(s) must disclose the information in accordance with section 6 of the W3C Patent Policy.}",
    "TableContextTimeStampAfterTable": "{492414=JC 2014-06-03. I don't have the same concern with \"author should\" requirements as \"author must\" requirements. When possible, native markup features for image accessibility are the best choice. This particular requirement is especially important given the concerns raised with the following UA requirements., 496738=MC 2013-09-23 There is commented out text with explanation \"Values table is redundant b/c the value type is URI\". This is true but we have discussed a significant difference between URI to another page and URI to a fragment in the current page. The values table might be a place to explain that. Though that might be awkward. Still, if we don't include the values table, it will be the only ARIA property for which we don't, so I'd want to make that decision very consciously., 102004=JC 2014-06-03. Now that 1.1 will include a table role, we need to differentiate the short descrition more sufficiently. Emphasize that grids are \"interactive\" tables that maintain a selection state., 493530=JC 2014-06-03. The previous paragraph may be at-risk. Implementors from Mozilla, Google, and Apple have expressed concern over the RFC-2119 \"SHOULD\" requirement above: If the statement remains as-is, @aria-describedat would break the ARIA pattern to not affect mainstream UI. Dominic M. mentioned that if this pattern changed, developers may become more \"suspicious of ARIA and not want to apply simple accessibility bug fixes without worrying about the implications for their design.\" Alex S. said, UI-based requirements \"should be rather part of HTML than ARIA.\", 492170=MC 2013-09-23 We have tried to minimize \"author must\" statements and should look at other ways to express the above requirements, perhaps as simple as saying \"if you don't do this it won't work\".}",
    "lastModified": "Wed, 11 Jun 2014 14:25:54 GMT",
    "textBeforeTable": "Elements with the role alert have an implicit @aria-live value of assertive, and an implicit @aria-atomic value of true. Note Alerts are assertive live regions and will be processed as such by assistive technologies. Neither authors nor user agents are required to set or manage focus to them in order for them to be processed. Since alerts are not required to receive focus, content authors SHOULD NOT require users to close an alert. If the operating system allows, the user agent SHOULD fire a system alert event through the accessibility API when the WAI-ARIA alert is created. If an alert requires focus to close the alert, then content authors SHOULD use alertdialog instead. Alerts are used to convey messages to alert the user. In the case of audio warnings this is an accessible alternative for a hearing-impaired user. The alert role goes on the node containing the alert message. Alerts are specialized forms of the status role, which will be processed as an atomic live region. A message with important, and usually time-sensitive, information. See related alertdialog and status. alert (role)",
    "textAfterTable": "alertdialog (role) A type of dialog that contains an alert message, where initial focus goes to an element within the dialog. See related alert and dialog. Alert dialogs are used to convey messages to alert the user. The alertdialog role goes on the node containing both the alert message and the rest of the dialog. Content authors SHOULD make alert dialogs modal by ensuring that, while the alertdialog is shown, keyboard and mouse interactions only operate within the dialog. Unlike alert, alertdialog can receive a response from the user. For example, to confirm that the user understands the alert being generated. When the alert dialog is displayed, authors SHOULD set focus to an active element within the alert dialog, such as a form edit field or an OK button. The user agent SHOULD fire a system alert event through the accessibility API when the alert is created, provided one is specified by the intended accessibility API. Authors SHOULD use aria-describedby on an alertdialog to reference the alert message element in the dialog. If they do not, an assistive technology can resort to its internal recovery mechanism to determine the contents of the alert message.",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}