{
    "relation": [
        [
            "Attribute",
            "name",
            "deferred"
        ],
        [
            "Type",
            "String",
            "String"
        ],
        [
            "Description",
            "ORM : Name of the constraint",
            "ORM : Whether the constraint is deferred"
        ],
        [
            "Default",
            "",
            ""
        ]
    ],
    "pageTitle": "DataNucleus Access Platform - JDO Annotations",
    "title": "",
    "url": "http://www.datanucleus.org/products/accessplatform_2_2/jdo/annotations.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 125,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981856.5/warc/CC-MAIN-20150728002301-00132-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 388484719,
    "recordOffset": 388463427,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Fri, 02 Sep 2011 01:08:06 GMT",
    "textBeforeTable": "Annotations supported by DataNucleus are shown below. The annotations/attributes coloured in pink are ORM and really should be placed in XML rather than directly in the class using annotations. Annotations are prefixed by the @ symbol and can take properties (in brackets after the name, comma-separated) You can annotate fields or getters with field-level information. If you annotate fields then the fields are processed for persistence. If you annotate the methods (getters) then the methods (properties) are processed for persistence. Annotations can be added in two places - for the class as a whole, or for a field in particular. Annotations should really only be used for attributes of persistence that you won't be changing at deployment. Things such as table and column names shouldn't really be specified using annotations although it is permitted. Instead it would be better to put such information in an ORM MetaData file. You must have the JDO 2.1 (or later) jar in your CLASSPATH since this provides the annotations You must be using JDK 1.5 or above . One of the things that JDK 1.5 provides that can be of some use is annotations. JDO 2.1 introduces support for annotations to the JDO standard. When selecting to use annotations please bear in mind the following :-",
    "textAfterTable": "@EmbeddedOnly Class Specifies that the class is persistent and can only be persisted embedded in another persistent class @DatastoreIdentity Class Specifies the details for generating datastore-identity for this class @Version Class Specifies any versioning process for objects of this class @FetchPlans Class Defines a series of fetch plans @FetchPlan Class Defines a fetch plan @FetchGroups Class Defines a series of fetch groups for this class @FetchGroup Class Defines a fetch group for this class @Sequence Class Defines a sequence for use by this class @Queries Class Defines a series of named queries for this class @Query Class Defines a named query for this class @Inheritance Class Specifies the inheritance model for persisting this class @Discriminator Class Specifies any discriminator for this class to be used for determining object types",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}