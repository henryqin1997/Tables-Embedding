{
    "relation": [
        [
            "Name",
            "exchange",
            "routingKey",
            "mandatory",
            "immediate",
            "basicProperties",
            "body"
        ],
        [
            "Type",
            "string",
            "string",
            "bool",
            "bool",
            "IBasicProperties",
            "byte[]"
        ]
    ],
    "pageTitle": "public interface IModel",
    "title": "",
    "url": "http://www.rabbitmq.com/releases/rabbitmq-dotnet-client/v2.1.0/rabbitmq-dotnet-client-2.1.0-client-htmldoc/html/type-RabbitMQ.Client.IModel.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981856.5/warc/CC-MAIN-20150728002301-00198-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 662544920,
    "recordOffset": 662536718,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Wed, 15 Sep 2010 13:44:27 GMT",
    "textBeforeTable": "Parameters void Return type void Abort(ushort replyCode, string replyText) Abort Method Detail Remarks Summary ModelShutdownEventHandler ModelShutdown Remarks Summary CallbackExceptionEventHandler CallbackException Summary BasicReturnEventHandler BasicReturn Summary BasicRecoverOkEventHandler BasicRecoverOk Event Detail If the model is already destroyed at the time an event handler is added to this event, the event handler will be fired immediately. Notifies the destruction of the model. Examples of cases where this event will be signalled include exceptions thrown in IBasicConsumer methods, or exceptions thrown in ModelShutdownEventHandler delegates etc. Signalled when an exception occurs in a callback invoked by the model. Signalled when a Basic.Return command arrives from the broker. All messages received before this fires that haven't been ack'ed will be redelivered. All messages received afterwards won't be. Handlers for this event are invoked by the connection thread. It is sometimes useful to allow that thread to know that a recover-ok has been received, rather than the thread that invoked BasicRecover(). Returns true if the session",
    "textAfterTable": "A message indicating the reason for closing the model Abort void Abort() Return type void Summary Abort this session. Remarks If the session is already closed (or closing), then this method does nothing but wait for the in-progress close operation to complete. This method will not return to the caller until the shutdown is complete. In comparison to normal Close() method, Abort() will not throw AlreadyClosedException or IOException during closing model. BasicAck void BasicAck(ulong deliveryTag, bool multiple) Return type void Parameters Name Type deliveryTag ulong multiple bool Summary (Spec method) Acknowledge one or more delivered message(s). BasicCancel void BasicCancel(string consumerTag) Return type void Parameters Name Type consumerTag string Summary Delete a Basic",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}