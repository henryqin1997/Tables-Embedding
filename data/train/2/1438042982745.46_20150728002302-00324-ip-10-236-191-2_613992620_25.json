{
    "relation": [
        [
            "BugId",
            "6957028",
            "6322356",
            "7196533"
        ],
        [
            "Category",
            "javawebstart",
            "java",
            "java"
        ],
        [
            "Subcategory",
            "other",
            "classes_net",
            "classes_util_i18n"
        ],
        [
            "Description",
            "Random SHA1 digest errors when using Java Web Start with JarDiff",
            "InetAddress.getLocalHost performance need to be fixed",
            "TimeZone.getDefault() slow due to synchronization bottleneck"
        ]
    ],
    "pageTitle": "Java SE 6 Advanced",
    "title": "",
    "url": "http://www.oracle.com/technetwork/java/javase/overview-156328.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042982745.46/warc/CC-MAIN-20150728002302-00324-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 614039731,
    "recordOffset": 613992620,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{24499=See 8061765 (not public)., 6467=The ephemeral DH key size now defaults to 1024 bits during SSL/TLS handshaking in the SunJSSE provider. A new system property, \"jdk.tls.ephemeralDHKeySize\", is defined to customize the ephemeral DH key sizes. This can be set to \"legacy\" if the older JDK behavior (DH keysize of 768 bits) is desired. The DH key size for exportable ciphersuites remains at 512 bits., 7471=In order to avoid the compatibility issue, users who use X.509 certificates with RSA keys less than 1024 bits, are recommended to update their certificates with stronger keys. As a workaround, at their own risk, users can adjust the key size to permit smaller key sizes through the security property jdk.certpath.disabledAlgorithms. This change was earlier introduced in JDK 8 and JDK 7u40., 8704=Removed two root certificates with 1024-bit keys:, 12110=See JDK-8072960 (not public)., 6867=See JDK-8081079 (not public)., 10269=Removed five root certificates with 1024-bit keys:, 7041=Starting from JDK 6u101, the use of x.509 certificates with RSA keys less than 1024 bits in length is restricted. This restriction is applied via the Java Security property, jdk.certpath.disabledAlgorithms. The default value of jdk.certpath.disabledAlgorithms is now as follows:}",
    "textBeforeTable": "Bug Fixes \u00a0 Changes in 6u37 b32 For details, refer to the JDK 6u38 Update Release Notes. Changes in 6u38 Please note that fixes from prior revisions (6u37 b32) are included in this revision \u00a0 Changes in 6u38 b31 For details, refer to the JDK 6u39 Update Release Notes. Changes in 6u39 For details, refer to the JDK 6u41 Update Release Notes. Changes in 6u41 For details, refer to the JDK 6u43 Update Release Notes. Changes in 6u43 \u00a0 Psr:perf:osb performance regression (18%) in wss_bodyenc jaxp xml 8008733 JTable passes row index instead of length when inserts selection interval javax.swing client-libs 8005019 JVMTI FollowReferences is slow jvmti hotspot 7043987 possible performance problems in FollowReferences() and GetObjectsWithTags() jvmti hotspot 6951623 Description Subcategory Category BugId Bug Fixes \u00a0 Changes in 6u43 b31 For details, refer to the JDK 6u45 Update Release Notes. Changes in 6u45 \u00a0 Psr:perf:osb performance regression (18%) in wss_bodyenc jaxp xml 8008733 JVMTI FollowReferences is slow jvmti hotspot 7043987 possible performance problems in FollowReferences() and GetObjectsWithTags() jvmti hotspot",
    "textAfterTable": "Please note that fixes from prior revisions (6u35 b32) are included in this revision. Changes in 6u37 For details, refer to the JDK 6u37 Update Release Notes. Changes in 6u35 b32 \u00a0 Bug Fixes BugId Category Subcategory Description 6957028 javawebstart other Random SHA1 digest errors when using Java Web Start with JarDiff 6322356 java classes_net InetAddress.getLocalHost performance need to be fixed 7196533 java classes_util_i18n TimeZone.getDefault() slow due to synchronization bottleneck \u00a0 Changes in 6u35 b31 \u00a0 Bug Fixes BugId Category Subcategory Description 7147666 jaxp parse High lock time for com.sun.org.apache.xerces.internal.impl.dv.DTDDVFactory.getInstance() 7166896 jaxp parse DocumentBuilder.parse(String uri) is not IPv6 enabled. It throws MalformedURLException \u00a0 Changes in 6u35 Please note that fixes included in the immediately prior revisions are NOT included in 6u35. These fixes will be available in the first revision based on 6u35. For further details, refer to the JDK 6u35 Update Release Notes. \u00a0 Changes in 6u34 b32 \u00a0 Bug Fixes",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}