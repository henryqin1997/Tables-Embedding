{
    "relation": [
        [
            "Citing Patent",
            "US6434145 *",
            "US6567902 *",
            "US6763030 *",
            "US6804240 *",
            "US6820170",
            "US6907480 *",
            "US6934289 *",
            "US6963572 *",
            "US6990103",
            "US7027442 *",
            "US7068661",
            "US7181674 *",
            "US7372864",
            "US7424653 *",
            "US7463650",
            "US7558890",
            "US7590057 *",
            "US7620048 *",
            "US7694061 *",
            "US7707019 *",
            "US7920563",
            "US7921241",
            "US8325751 *",
            "US20040202163 *",
            "US20050030949 *"
        ],
        [
            "Filing date",
            "Jun 22, 1998",
            "Aug 15, 2000",
            "Aug 4, 1998",
            "Sep 12, 2000",
            "Jun 24, 2002",
            "Mar 28, 2002",
            "Jul 5, 2001",
            "Oct 22, 1999",
            "Jul 13, 1999",
            "Sep 7, 2004",
            "Jul 13, 1999",
            "Mar 10, 2003",
            "Aug 1, 2002",
            "May 9, 2003",
            "Nov 7, 2005",
            "Dec 19, 2003",
            "Jun 14, 2005",
            "Jun 14, 2005",
            "Sep 8, 2004",
            "Sep 23, 2005",
            "Jan 24, 2006",
            "Jun 1, 2009",
            "Nov 10, 2004",
            "Jul 5, 2001",
            "Sep 7, 2004"
        ],
        [
            "Publication date",
            "Aug 13, 2002",
            "May 20, 2003",
            "Jul 13, 2004",
            "Oct 12, 2004",
            "Nov 16, 2004",
            "Jun 14, 2005",
            "Aug 23, 2005",
            "Nov 8, 2005",
            "Jan 24, 2006",
            "Apr 11, 2006",
            "Jun 27, 2006",
            "Feb 20, 2007",
            "May 13, 2008",
            "Sep 9, 2008",
            "Dec 9, 2008",
            "Jul 7, 2009",
            "Sep 15, 2009",
            "Nov 17, 2009",
            "Apr 6, 2010",
            "Apr 27, 2010",
            "Apr 5, 2011",
            "Apr 5, 2011",
            "Dec 4, 2012",
            "Oct 14, 2004",
            "Feb 10, 2005"
        ],
        [
            "Applicant",
            "Applied Micro Circuits Corporation",
            "Juniper Networks. Inc.",
            "Micron Technology, Inc.",
            "Kabushiki Kaisha Toshiba",
            "Applied Micro Circuits Corporation",
            "Seiko Epson Corporation",
            "Lg Electronics Inc.",
            "Alcatel Canada Inc.",
            "Alcatel Canada Inc.",
            "Kabushiki Kaisha Toshiba",
            "Alcatel Canada Inc.",
            "Sun Microsystems, Inc.",
            "Applied Micro Circuits Corporation",
            "Hewlett-Packard Development Company, L.P.",
            "Alcatel Lucent Canada Inc.",
            "Applied Micro Circuits Corporation",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "Fisher-Rosemount Systems, Inc.",
            "Xilinx, Inc.",
            "Alcatel Lucent",
            "Applied Micro Circuits Corporation",
            "Realtek Semiconductor Corp.",
            "Lg Electronics Inc.",
            "Kabushiki Kaisha Toshiba"
        ],
        [
            "Title",
            "Processing of network data by parallel processing channels",
            "Systems and methods for packing data into a destination register",
            "Simplified switching hub for data communication networks",
            "Fast and adaptive packet processing device and method using digest information of input packet",
            "Context based cache indexing",
            "Data processing apparatus and data input/output apparatus and data input/output method",
            "Cell processing method and apparatus in an asynchronous transfer mode switch",
            "Method and apparatus for segmentation and reassembly of data packets in a communication switch",
            "Method and apparatus for providing distributed communication routing",
            "Fast and adaptive packet processing device and method using digest information of input packet",
            "Method and apparatus for providing control information in a system using distributed communication routing",
            "Computer system including a network employing redundant information and slicing",
            "Reassembly of data fragments in fixed size buffers",
            "System and method for error capture and logging in computer systems",
            "Method and apparatus for segmentation and reassembly of data packets in a communication switch",
            "Instruction set for programmable queuing",
            "Network switch and components and method of operation",
            "Network switch and components and method of operation",
            "Discarding a partially received message from a data queue",
            "Command buffering for hardware co-simulation",
            "Method and apparatus for providing distributed communication routing",
            "Instruction set for programmable queuing",
            "Mixed hardware/software architecture and method for processing communications",
            "Cell processing method and apparatus in an asynchronous transfer mode switch",
            "Fast and adaptive packet processing device and method using digest information of input packet"
        ]
    ],
    "pageTitle": "Patent US6307860 - Systems and methods for data transformation and transfer in networks - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US6307860?dq=5179747",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988511.77/warc/CC-MAIN-20150728002308-00116-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 468417763,
    "recordOffset": 468372238,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{56274=Search machine (SM) 190 maintains an address resolution database in memory 200 to do IP routing or other processing as determined by the software. The search machine is able to search for a key (e.g. an Ethernet or IP address) presented to it by the microcontroller 160, and execute a learning algorithm to learn a layer-2 or layer-3 address if the address is not in the database. While search machine 190 is not software programmable in some embodiments, the search machine supports flexible database node structure allowing the search machine to be easily adapted to different functions (e.g. IP routing, layer-2 switching, access control lists implementation or VLAN implementation). Search machine 190 executes commands from the microcontroller, such as Search, Insert, Delete, etc. The search machine also provides the microcontroller with direct access to memory 200. The search machine is described in U.S. patent application \u201cSystems and Methods for Multi-Tasking, Resource Sharing, and Execution of Computer Instructions\u201d, application Ser. No. 09/055,003, filed by A. Joffe et al. on Apr. 3, 1998 and incorporated herein by reference., 217497=The registers in the slicer are accessed through the header lines from the ATM switch. The header lines are described in U.S. Pat. No. 5,440,523 issued Aug. 8, 1995 and incorporated herein by reference., 149109=FIG. 12 illustrates the data flow pipeline for the channel control machine 150C. The channel control machine 150C services each sub-channel 150I, 150E in two clock cycles, for a total of 16 cycles. Each of stages A, B, C, D of FIG. 12 takes one or two clock cycles as shown in FIG. 13. The remaining cycles are taken by state memory 1410. Memory 1410 and Stage A, B, C and D registers of FIG. 12 are part of channel control machine 150C., 63288=Some microcontroller embodiments are described in the aforementioned U.S. patent Ser. No. 09/055,033 \u201cSystems and Methods for Multi-Tasking, Resource Sharing, and Execution of Computer Instructions\u201d, filed by A. Joffe et al. on Apr. 3, 1998 and incorporated herein by reference., 51168=FIG. 1 illustrates a software programmable port interface (PIF) circuit 110 that transfers data between ATM and Ethernet networks. Port interface 110 includes four full-duplex ports that provide an interface between ATM switch 120 and respective four Ethernet segments (not shown) each of which is connected to a corresponding MAC 130.0-130.3. In each port \u201cx\u201d (x=0,1,2,3) the data between the Ethernet segment and the ATM switch 120 flows through a corresponding MAC 130.x and a corresponding slicer 140.x. The slicer performs the well-known ATM SAR function, segmenting the Ethernet frame into ATM cells and appending ATM headers to the cells on the way to the ATM, switch and assembling the frame from the cells on the way to the Ethernet segment. In some embodiments, the ATM switch interface to PIF 110 operates in frame mode in which the ATM switch transmits a frame of cells to a slicer 140 with no intervening cells. Slicers 140 use the AAL-5 protocol. The frame mode is described, for example, in U.S. patent application Ser. No. 08/706,104 \u201cCell Queuing in ATM Switches\u201d filed Aug. 30, 1996 by A. Joffe et al. See also PCT application PCT/US97/14821 filed Aug. 28, 1997 and incorporated herein by reference., 53962=PIF 110 can be programmed to implement security restrictions or to limit traffic for any other reasons (for example, to reduce network congestion). For example, PIF 110 can be programmed to implement router access control lists and/or VLANs (virtual LANs). In particular, PIF 110 can store a database in memory 200 indicating which layer-2 or layer-3 source and destination addresses are allowed to communicate with each other. If communication is not allowed, PIF 110 can drop disallowed data or send them to a management station (not shown) for further processing. PIF 110 can perform address resolution and implement access control restrictions, which operations are described for \u201cridges\u201d (bridges/routers) in PCT publication WO 95/20282 (Jul. 27, 1995) incorporated herein by reference., 44811=It may be desirable to transform data when data are transferred in networks. For example, a router may replace physical addresses (MAC-layer addresses) in a data packet before transmission. An ATM switch may replace cell headers. Further, a router, a bridge, or some other device that transfers data between networks may perform protocol related transformations if the network on which the data are received and the network on which the data are transmitted use different protocols. See, for example, PCT publication WO 95/20282 (Jul. 27, 1995) incorporated herein by reference., 146286=FIG. 11 is a detailed block diagram of one embodiment of channel 150. Channel 150 of FIG. 11 performs the functions of input control 210 and output control 250 and other channel functions described above. Channel 150 includes a channel control machine 150C connected to buses cidata, citype, ciready, coready, cotype, cobyte, and codata. Internal memory 170 is connected to bus \u201ccodata\u201d through output multiplexer and register block 150M. This block was omitted from FIG. 3. Besides the memory 170, MUX block 150M has data inputs connected to MAC/slicer configuration file 150MS and to port statistics collector 150P. MAC/slicer configuration file 150MS includes MAC and slicer configuration registers and is connected to MACs 130 and slicers 140. Channel configurations and memory address translation block 150T has outputs connected to MAC/slicer configuration file 150MS, block 150M, internal memory 170, port statistics collector 150P, and status/request FIFO interface 1310. The block 150T output connected to internal memory 170 includes the address buses shown as Addr_In, Addr_Out in FIG. 3 and also includes the control signals such as REN, WEN (FIG. 7). Channel control machine 150C has outputs connected to block 150T, port statistics collector 150P, and block 1310. In addition, channel control machine 150C has an indication output csem, cstrobe (see Table 1 above) connected to microcontroller 160., 149907=In the clock cycle before A0, the state memory 1410 is read. The state memory output is loaded into stage A registers. In clocks A0, A1, the A registers are valid as indicated in FIG. 13.}",
    "textBeforeTable": "Patent Citations This register is not affected by the Software Rest. 1 \u2014 enabled 0 \u2014 disabled Memory Parity Check (1 bit) MPE Bootstrap ROM Disable (1 bit) BRD Program Ready (1 bit) PR get one more cell (almost full). 1 \u2014 Full indication when buffer can (completely full). cannot get any more cells",
    "textAfterTable": "US5592476 Apr 14, 1995 Jan 7, 1997 Hewlett-Packard Limited Asynchronous transfer mode switch with multicasting ability US5623489 Apr 17, 1995 Apr 22, 1997 Ipc Information Systems, Inc. Channel allocation system for distributed digital switching network US5629928 Dec 12, 1995 May 13, 1997 International Business Machines Corporation Dynamic fair queuing to support best effort traffic in an ATM network US5633859 Sep 16, 1994 May 27, 1997 The Ohio State University Method and apparatus for congestion management in computer networks using explicit rate indication US5633867 Jul 1, 1994 May 27, 1997 Digital Equipment Corporation Local memory buffers management for an ATM adapter implementing credit based flow control US5664116 Jul 7, 1995 Sep 2, 1997 Sun Microsystems, Inc. Buffering of data for transmission in a computer communication system interface US5689508 Dec 21, 1995 Nov 18, 1997 Xerox Corporation Reservation ring mechanism for providing fair queued access in a fast packet switch networks US5704047 Sep 20, 1995",
    "hasKeyColumn": true,
    "keyColumnIndex": 3,
    "headerRowIndex": 0
}