{
    "relation": [
        [
            "Proposed",
            "",
            "",
            "PostfixExpression:",
            "PrimaryExpression",
            "PostfixExpression . IdentifierOrTemplateInstance",
            "PostfixExpression . NewExpression",
            "PostfixExpression ++",
            "PostfixExpression --",
            "PostfixExpression ( )",
            "PostfixExpression ( ArgumentList )",
            "IndexExpression",
            "SliceExpression"
        ],
        [
            "",
            "",
            "=",
            "",
            "",
            "<>",
            "=",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        [
            "Website",
            "",
            "",
            "PostfixExpression:",
            "PrimaryExpression",
            "PostfixExpression . Identifier",
            "PostfixExpression . NewExpression",
            "PostfixExpression ++",
            "PostfixExpression --",
            "PostfixExpression ( )",
            "PostfixExpression ( ArgumentList )",
            "IndexExpression",
            "SliceExpression"
        ]
    ],
    "pageTitle": "GrammarComparison - Visual D - dsource.org",
    "title": "",
    "url": "http://www.dsource.org/projects/visuald/wiki/GrammarComparison",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988065.26/warc/CC-MAIN-20150728002308-00200-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 409041443,
    "recordOffset": 409010476,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{61649=The original grammar uses BasicTypes2 as part of Declarator in the Declarators, but this is not allowed in a list of variables., 35861=A list of declarations is needed in a lot of places, and it will blow up the grammar a lot to list only allowed declarations inside conditionals and attribute specifier blocks and others depending on usage inside struct, class, interface, etc. A parser can verify whether a DeclDef is allowed depending on the current enclosing scope., 511670=if(true) \u00a0\u00a0\u00a0 do {} while(false); // will not parse with current grammar else { }, 3227=Some changes make sense for a grammar to be fed into a parser generator, but the website version might be better for understanding the language design (e.g. merging all possible DeclDefs)., 931608=\u00a9 Copyright 2004-2015 - The Sankaty Group, Inc. All rights reserved., 2893=This is a comparison of the \"official\" D2 grammar extracted from the website and a proposed grammar that is used by the Visual D parser. Some changes are cosmetic (like removal of empty clauses and preferring optional elements instead), but others make syntactic differences that might need to be discussed.}",
    "textBeforeTable": "Some changes make sense for a grammar to be fed into a parser generator, but the website version might be better for understanding the language design (e.g. merging all possible DeclDefs). This is a comparison of the \"official\" D2 grammar extracted from the website and a proposed grammar that is used by the Visual D parser. Some changes are cosmetic (like removal of empty clauses and preferring optional elements instead), but others make syntactic differences that might need to be discussed. Last Change Index by Date Index by Title Start Page Wiki Navigation Search: About Trac Help/Guide Login Search View Tickets Browse Source Roadmap Timeline Wiki Visual D Site Tutorials Forums Projects Home the D Programming Language Open Source Development for dsource.org",
    "textAfterTable": "ModuleFullyQualifiedName: \u00a0 ModuleFullyQualifiedName: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ModuleName \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ModuleName \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Packages . ModuleName \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Packages . ModuleName \u00a0 \u00a0 \u00a0 ModuleName: \u00a0 ModuleName:",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}