{
    "relation": [
        [
            "Field Name",
            "name",
            "dialogid",
            "connectionid",
            "conferenceid"
        ],
        [
            "Details",
            "'dialog.started'",
            "The ID of the dialog.",
            "The identifier of the connection to which the dialog connection is bridged (usually the connectionid that was specified in the ). If the dialog is bridged to a conference the value will be undefined.",
            "The identifier of the conference to which the dialog connection is bridged (usually the conferenceid that was specified in the ). If the dialog is bridged to a connection the value will be undefined."
        ]
    ],
    "pageTitle": "Voice Browser Call Control: CCXML Version 1.0",
    "title": "",
    "url": "http://www.w3.org/TR/2005/WD-ccxml-20050111/ccxml-change.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042992201.62/warc/CC-MAIN-20150728002312-00248-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 811090543,
    "recordOffset": 810991988,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{48660=This is a W3C Last Call Working Draft for review by W3C Members and other interested parties. Last Call means that the Working Group believes that this specification is technically sound and therefore wishes this to be the Last Call for comments. If the feedback is positive, the Working Group plans to submit it for consideration as a W3C Candidate Recommendation. Comments can be sent until 31 January 2005., 52664=Copyright \u00a9 2005 W3C \u00ae ( MIT , ERCIM, Keio ), All Rights Reserved. W3C liability, trademark, and document use rules apply., 46796=This document has been produced under the 24 January 2002 CPP as amended by the W3C Patent Policy Transition Procedure. An individual who has actual knowledge of a patent which the individual believes contains Essential Claim(s) with respect to this specification should disclose the information in accordance with section 6 of the W3C Patent Policy. Patent disclosures relevant to this specification may be found on the Working Group's patent disclosure page.}",
    "TableContextTimeStampAfterTable": "{6068=The <ccxml> can designate the CCXML namespace. This can be achieved by declaring an xmlns attribute or an attribute with an \" xmlns \" prefix. See [XMLNS] for details. Note that when the xmlns attribute is used alone, it sets the default namespace for the element on which it appears and for any child elements. The namespace URI for CCXML is \"http://www.w3.org/2002/09/ccxml\"., 471601=Several CCXML instructions may cause arbitrary URIs to be referenced. In this case, the security issues of RFC1738, section 6, should be considered., 457564=This W3C specification is based upon a former CCXML specification, contributed to the Voice Browser Working Group in April 2001. The CCXML authors were:, 475618=It is recommended that the <ccxml> element indicate the location of the CCXML schema (see Appendix C) via the xsi:schemaLocation attribute from [SCHEMA2]: xsi:schemaLocation=\"http://www.w3.org/2002/09/ccxml http://www.w3.org/TR/ccxml/ccxml.xsd\" There may be a DOCTYPE declaration in the document prior to the root element. If present, the public identifier included in the DOCTYPE declaration must reference the CCXML DTD (Appendix B) using its Formal Public Identifier: <!DOCTYPE ccxml PUBLIC \"-//W3C//DTD CCXML 1.0//EN\" \"http://www.w3.org/TR/ccxml/ccxml.dtd\">, 415401=The VoiceXML interpreter is responsible for throwing this event when a \"hotword\" grammar is matched while performing a bridged transfer., 170247=During the processing of an event by the EHIA, the state of any ECMAScript objects exposed by a platform, such as the Connection object, must reflect the state of the CCXML session immediately following the occurrence of the event. For instance, if a 'connection.alerting' event is being processed against a connection with ID 1234, then session.connections['1234'].state would have a value of 'ALERTING'. This is true even if the actual connection has already been terminated, with a 'connection.disconnected' event queued (but not yet processed) against the session. It is required that the ECMAScript state for the session is updated prior to the selection of a matching <transition>, since the <transition> might contain an ECMAScript conditional expression the value of which depends on the state changes caused by the event.}",
    "lastModified": "Wed, 12 Jan 2005 12:03:51 GMT",
    "textBeforeTable": "The dialog.started event is thrown when a dialog is successfully started. The fields available in the event are: 7.3.2: dialog.started The following are the CCXML events related to dialogs: The majority of communication between CCXML interpreter sessions and dialogs is by way of events. Dialog environments post events to the CCXML interpreter event queue and a CCXML application can send an event to a dialog. How this is handled on the dialog side is dialog manager and CCXML interpreter dependent. On the CCXML side it is done by using <send> and passing in the dialogid that was received as a result of processing a <dialogstart>. 7.3.1: Overview 7.3: Events This indicates that the dialog will be terminated in a normal fashion. false This indicates that the dialog should be terminated immediately. true An ECMAScript Boolean expression, that identifies the termination style of the dialog. Valid values are: true false false ECMAScript Boolean Expression false immediate An ECMAScript expression which returns a character string identifying the dialog. This dialogid was returned in the variable identified by the dialogid attribute of previous dialogstart or dialogprepare request or the value in a dialog.started or dialog.prepared event. If the attribute value is invalid, an error.semantic event will be thrown. valid dialog",
    "textAfterTable": "7.3.3: dialog.exit The dialog.exit event is thrown when a dialog terminates either normally or following a <dialogterminate> request. The fields available in the event are: Field Name Details name 'dialog.exit' dialogid The ID of the dialog. connectionid The identifier of the connection to which the dialog connection is bridged (usually the connectionid that was specified in the <dialogstart> ). If the dialog is bridged to a conference the value will be undefined. conferenceid The identifier of the conference to which the dialog connection is bridged (usually the conferenceid that was specified in the <dialogstart> ). If the dialog is bridged to a connection the value will be undefined. namelist List of items that are stored on the values sub-object. values.* Values returned from the dialog. 7.3.4: dialog.disconnect The dialog.disconnect event is thrown when a dialog requests it be disconnected from its current call. The dialog is not terminated, but simply requests the CCXML application end the call. The fields available in the event are: Field Name Details name 'dialog.disconnect' dialogid The ID of the dialog.",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}