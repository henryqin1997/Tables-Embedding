{
    "relation": [
        [
            "Value",
            "NO_CHAIN (or 0)",
            "CHAIN (or 1)",
            "RELEASE (or 2)"
        ],
        [
            "Description",
            "COMMIT and ROLLBACK are unaffected. This is the default value.",
            "COMMIT and ROLLBACK are equivalent to COMMIT AND CHAIN and ROLLBACK AND CHAIN, respectively. (A new transaction starts immediately with the same isolation level as the just-terminated transaction.)",
            "COMMIT and ROLLBACK are equivalent to COMMIT RELEASE and ROLLBACK RELEASE, respectively. (The server disconnects after terminating the transaction.)"
        ]
    ],
    "pageTitle": "MySQL :: MySQL 5.6 Reference Manual :: 5.1.4 Server System Variables",
    "title": "",
    "url": "http://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988065.26/warc/CC-MAIN-20150728002308-00271-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 65992655,
    "recordOffset": 65889847,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{492484=In previous versions of MySQL, using different settings for lower_case_table_names on replication masters and slaves could cause replication to fail when the slave used a case-sensitive file system. This issue is resolved in MySQL 5.6.1. For more information, see Section\u00a017.4.1.34, \u201cReplication and Variables\u201d., 641775=If this is set to a nonzero value, all tables are closed every flush_time seconds to free up resources and synchronize unflushed data to disk. This option is best used only on systems with minimal resources. The default is 0 except that before MySQL 5.6.6, the default is 1800 on Windows., 120998=The path to a file containing certificate revocation lists in PEM format. Revocation lists work for MySQL distributions compiled using OpenSSL (but not yaSSL). See Section\u00a06.3.10.1, \u201cOpenSSL Versus yaSSL\u201d., 469029=This variable was added in MySQL 5.6.24. Until 5.6.26, this variable applies to Performance Schema and to other server functions that use digests, such as MySQL Enterprise Firewall. As of 5.6.26, it no longer applies to Performance Schema; instead, use performance_schema_max_digest_length., 794822=This variable was added in MySQL 5.6.10., 780866=This variable was added in MySQL 5.6.24. It is deprecated and will be removed in a future MySQL release., 602471=The default value is 128, plus 1 for a value of max_connections up to 500, plus 1 for every increment of 20 over 500 in the max_connections value, capped to a limit of 2000. Before MySQL 5.6.8, the default is 128., 460749=max_heap_table_size is not replicated. See Section\u00a017.4.1.21, \u201cReplication and MEMORY Tables\u201d, and Section\u00a017.4.1.34, \u201cReplication and Variables\u201d, for more information., 651687=TIMESTAMP columns declared as NOT NULL and without an explicit DEFAULT clause are treated as having no default value. For inserted rows that specify no explicit value for such a column, the result depends on the SQL mode. If strict SQL mode is enabled, an error occurs. If strict SQL mode is not enabled, the column is assigned the implicit default of '0000-00-00 00:00:00' and a warning occurs. This is similar to how MySQL treats other temporal types such as DATETIME., 654292=TIMESTAMP columns following the first one, if not declared with the NULL attribute or an explicit DEFAULT clause, are automatically assigned DEFAULT '0000-00-00 00:00:00' (the \u201czero\u201d timestamp). For inserted rows that specify no explicit value for such a column, the column is assigned '0000-00-00 00:00:00' and no warning occurs., 559036=The size in bytes of blocks in the key cache. The default value is 1024. See Section\u00a08.10.2, \u201cThe MyISAM Key Cache\u201d., 577273=For additional information about join buffering, see Section\u00a08.2.1.10, \u201cNested-Loop Join Algorithms\u201d. For information about Batched Key Access, see Section\u00a08.2.1.14, \u201cBlock Nested-Loop and Batched Key Access Joins\u201d., 358175=As of MySQL 5.6.10, when a client successfully connects to the server, the server sets the session old_passwords value appropriately for the account authentication method. For example, if the account uses the sha256_password authentication plugin, the server sets old_passwords=2., 11614=This variable was added in MySQL 5.6.11., 799792=Some system variables control the size of buffers or caches. For a given buffer, the server might need to allocate internal data structures. These structures typically are allocated from the total memory allocated to the buffer, and the amount of space required might be platform dependent. This means that when you assign a value to a system variable that controls a buffer size, the amount of space actually available might differ from the value assigned. In some cases, the amount might be less than the value assigned. It is also possible that the server will adjust a value upward. For example, if you assign a value of 0 to a variable for which the minimal value is 1024, the server will set the value to 1024., 607708=YES if mysqld supports SSL connections, NO if not. DISABLED indicates that the server was compiled with SSL support, but was not started with the appropriate --ssl-xxx options. For more information, see Section\u00a06.3.10.2, \u201cBuilding MySQL with SSL Support\u201d., 162078=Each session that needs to do a sort allocates a buffer of this size. sort_buffer_size is not specific to any storage engine and applies in a general manner for optimization. See Section\u00a08.2.1.15, \u201cORDER BY Optimization\u201d, for example., 441477=Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section\u00a013.7.5.23, \u201cSHOW INDEX Syntax\u201d). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans., 764629=This variable was added in MySQL 5.6.17., 66001=This variable affects statements waiting for execution in the low-priority queue. The value is the number of milliseconds before a waiting statement is moved to the high-priority queue. The default is 1000 (1 second). The range of values is 0 to 232 \u2212 2., 245526=When reading rows from a MyISAM table in sorted order following a key-sorting operation, the rows are read through this buffer to avoid disk seeks. See Section\u00a08.2.1.15, \u201cORDER BY Optimization\u201d. Setting the variable to a large value can improve ORDER BY performance by a lot. However, this is a buffer allocated for each client, so you should not set the global variable to a large value. Instead, change the session variable only from within those clients that need to run large queries., 76083=This variable was added in MySQL 5.6.10. It is available only if the thread pool plugin is enabled. See Section\u00a08.12.7, \u201cThe Thread Pool Plugin\u201d, 412587=The default pointer size in bytes, to be used by CREATE TABLE for MyISAM tables when no MAX_ROWS option is specified. This variable cannot be less than 2 or larger than 7. The default value is 6. See Section\u00a0B.5.2.12, \u201cThe table is full\u201d., 451784=The cutoff on the size of index values that determines which filesort algorithm to use. See Section\u00a08.2.1.15, \u201cORDER BY Optimization\u201d., 641059=If set to 1 (the default), foreign key constraints for InnoDB tables are checked. If set to 0, foreign key constraints are ignored, with a couple of exceptions. When re-creating a table that was dropped, an error is returned if the table definition does not conform to the foreign key constraints referencing the table. Likewise, an ALTER TABLE operation returns an error if a foreign key definition is incorrectly formed. For more information, see Section\u00a013.1.17.3, \u201cUsing FOREIGN KEY Constraints\u201d., 135695=If set to 1 (the default), the server quotes identifiers for SHOW CREATE TABLE and SHOW CREATE DATABASE statements. If set to 0, quoting is disabled. This option is enabled by default so that replication works for identifiers that require quoting. See Section\u00a013.7.5.12, \u201cSHOW CREATE TABLE Syntax\u201d, and Section\u00a013.7.5.8, \u201cSHOW CREATE DATABASE Syntax\u201d., 256338=Each thread that does a sequential scan for a MyISAM table allocates a buffer of this size (in bytes) for each table it scans. If you do many sequential scans, you might want to increase this value, which defaults to 131072. The value of this variable should be a multiple of 4KB. If it is set to a value that is not a multiple of 4KB, its value will be rounded down to the nearest multiple of 4KB., 305641=If set to 0 or OFF (the default), statement profiling is disabled. If set to 1 or ON, statement profiling is enabled and the SHOW PROFILE and SHOW PROFILES statements provide access to profiling information. See Section\u00a013.7.5.32, \u201cSHOW PROFILES Syntax\u201d., 200224=This variable is available if MySQL was compiled using OpenSSL (see Section\u00a06.3.10.1, \u201cOpenSSL Versus yaSSL\u201d). Its value is the path name of the RSA public key file for the sha256_password authentication plugin. If the file is named as a relative path, it is interpreted relative to the server data directory. The file must be in PEM format. Because this file stores a public key, copies can be freely distributed to client users. (Clients that explicitly specify a public key when connecting to the server using RSA password encryption must use the same public key as that used by the server.), 304563=The number of statements for which to maintain profiling information if profiling is enabled. The default value is 15. The maximum value is 100. Setting the value to 0 effectively disables profiling. See Section\u00a013.7.5.32, \u201cSHOW PROFILES Syntax\u201d., 118677=The path to a directory that contains files containing certificate revocation lists in PEM format. Revocation lists work for MySQL distributions compiled using OpenSSL (but not yaSSL). See Section\u00a06.3.10.1, \u201cOpenSSL Versus yaSSL\u201d., 203248=This variable is available if MySQL was compiled using OpenSSL (see Section\u00a06.3.10.1, \u201cOpenSSL Versus yaSSL\u201d). Its value is the path name of the RSA private key file for the sha256_password authentication plugin. If the file is named as a relative path, it is interpreted relative to the server data directory. The file must be in PEM format. Because this file stores a private key, its access mode should be restricted so that only the MySQL server can read it., 615383=The maximum permitted result length in bytes for the GROUP_CONCAT() function. The default is 1024., 298699=This variable is for internal server use. It was added in MySQL 5.6.10., 904=The number of errors, warnings, and notes that resulted from the last statement that generated messages. This variable is read only. See Section\u00a013.7.5.41, \u201cSHOW WARNINGS Syntax\u201d., 369290=Currently, when old is enabled, it changes the default scope of index hints to that used prior to MySQL 5.1.17. That is, index hints with no FOR clause apply only to how indexes are used for row retrieval and not to resolution of ORDER BY or GROUP BY clauses. (See Section\u00a08.9.3, \u201cIndex Hints\u201d.) Take care about enabling this in a replication setup. With statement-based binary logging, having different modes for the master and slaves might lead to replication errors., 244682=For more information about memory use during different operations, see Section\u00a08.12.5.1, \u201cHow MySQL Uses Memory\u201d. For information about Multi-Range Read optimization, see Section\u00a08.2.1.13, \u201cMulti-Range Read Optimization\u201d., 514642=This variable was added in MySQL 5.6.11 as a replacement for the --log-slow-admin-statements option. The system variable can be set on the command line or in option files the same way as the option, so there is no need for any changes at server startup, but the system variable also makes it possible to examine or set the value at runtime., 349934=Before MySQL 5.6.3, this variable is used for join buffer management. It controls how join buffers are used for join operations. As of MySQL 5.6.3, it is removed and the optimizer_switch variable is used instead. See Section\u00a08.2.1.14, \u201cBlock Nested-Loop and Batched Key Access Joins\u201d., 609579=YES if statement profiling capability is present, NO if not. If present, the profiling system variable controls whether this capability is enabled or disabled. See Section\u00a013.7.5.32, \u201cSHOW PROFILES Syntax\u201d., 664559=The number of errors that resulted from the last statement that generated messages. This variable is read only. See Section\u00a013.7.5.18, \u201cSHOW ERRORS Syntax\u201d.}",
    "textBeforeTable": "The transaction completion type. This variable can take the values shown in the following table. The variable can be assigned using either the name values or corresponding integer values. 2 1 0 RELEASE CHAIN NO_CHAIN Valid Values NO_CHAIN Default enumeration Type Permitted Values Yes Dynamic Variable Global, Session Variable Scope completion_type Name System Variable --completion_type=# Command-Line Format completion_type The server's default collation. latin1_swedish_ci Default string Type Permitted Values Yes Dynamic Variable Global, Session Variable Scope collation_server Name System Variable --collation-server Command-Line Format",
    "textAfterTable": "completion_type affects transactions that begin with START TRANSACTION or BEGIN and end with COMMIT or ROLLBACK. It does not apply to implicit commits resulting from execution of the statements listed in Section\u00a013.3.3, \u201cStatements That Cause an Implicit Commit\u201d. It also does not apply for XA COMMIT, XA ROLLBACK, or when autocommit=1. concurrent_insert Command-Line Format --concurrent_insert[=#] System Variable Name concurrent_insert Variable Scope Global Dynamic Variable Yes Permitted Values Type enumeration Default AUTO Valid Values NEVER AUTO ALWAYS 0 1",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}