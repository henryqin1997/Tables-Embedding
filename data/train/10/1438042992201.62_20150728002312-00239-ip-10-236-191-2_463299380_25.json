{
    "relation": [
        [
            "Decimal",
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15"
        ],
        [
            "Hexadecimal",
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "a",
            "b",
            "c",
            "d",
            "e",
            "f"
        ],
        [
            "Binary",
            "0000",
            "0001",
            "0010",
            "0011",
            "0100",
            "0101",
            "0110",
            "0111",
            "1000",
            "1001",
            "1010",
            "1011",
            "1100",
            "1101",
            "1110",
            "1111"
        ]
    ],
    "pageTitle": "FunctionX References: The Numeric Systems",
    "title": "",
    "url": "http://www.functionx.com/vbaccess2007/topics/numsystem.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042992201.62/warc/CC-MAIN-20150728002312-00239-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 463317339,
    "recordOffset": 463299380,
    "tableOrientation": "VERTICAL",
    "TableContextTimeStampAfterTable": "{96356=The number becomes 110000101011011001 or 11 0000 1010 1101 1001 The remainder of 2,191 by 2,048 is 143. The next number lower than 143 is 128. The resulting tables are:, 144939=Let\ufffds convert decimal 462834 to hexadecimal:, 161445=Of course, the binary number 10101101 is equivalent to 128 + 0 + 32 + 0 + 8 + 4 + 0 + 1 = 173 in the decimal system, 6270=\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 2751, 139105=Imagine you would like to convert the 10011110011101101 binary number to a decimal value., 5077=Non- Decimal Values: 0237, 0276382, k2783, R3273, 144451=1325 % 16 = 13 and the quotient is 82. Therefore the left number will be 13., 121138=The final number is: 11000010101101100100010001111 or 1 1000 0101 0110 1100 1000 1000 1111, 111388=110000101011011001000100011 or 110 0001 0101 1011 0010 0010 0011, 161993=To convert a binary number to hexadecimal, use the table of numeric conversions. First, convert the number in groups of 4 bits. If the most left group has less than 4 bits, complete the other bits with 0 each. Imagine you would like to convert the 100011111111011011100 binary to its hexadecimal equivalent. First create groups of 4 bits. The number becomes:, 84730=The current number is 110000101011 or 1100 0010 1011 The remainder of 182,415 by 131,072 is 51,343 which is less than 65,536 but greater than 32,768. For this reason, the equivalent bit of 65,536 is 0 and that of 32,768 is 1:, 161340=Therefore, the binary number 10101101 has a hexadecimal representation of 0XAD., 101352=The current number is 1100001010110110010001 or 11 0000 1010 1101 1001 0001 Find the remainder of 143 by 128. This produces 15; a number that is greater than 8 but less than 16. The bits of 64, 32, and 16 will receive a bit value of 0. Bit 8 will have a value of 1:, 92429=The number becomes 110000101011011 or 110 0001 0101 1011 The remainder of 18,575 by 16,384 is 2191. This number is greater that 2048. Therefore, the binary equivalents of both the 8,192 and the 4,096 bits is 0. The bit equivalent of 2,048 is 1:, 134244=When all bits are 0, the byte also has a value of 0. When combining and mixing 0 and 1 bits, you can get binary values as varied as possible: 0101 0010 or 1101 1110 or 0111 1100. We only need to know what each combination would represent. Considerer another binary number such as 11001000. To convert it to the decimal system, we use the decimal to binary table conversion to get:, 3208=When reading a binary number such as 1101, you should not pronounce \"One Thousand One Hundred And 1\", because such a reading is not accurate. Instead, you should pronounce 1 as One and 0 as zero or o. 1101 should be pronounced One One Zero One, or One One o One., 121260=The equivalent decimal number of 408340623 in binary is 11000010101101100100010001111 or 1 1000 0101 0110 1100 1000 1000 1111, 79288=Now the number is 110000101 or 1 1000 0101 Find the remainder of 1,493,135 by 1,048,576. The result is 444,559. The next number greater than 444,559 is 262,144. Therefore, fill it with 1 and fill out the 524,288 field with 0:, 164433=Let's convert the hexadecimal 0XD5 to binary. The binary representation of D is 1101. The binary representation of 5 is 0101. Therefore, hexadecimal 0XD5 is represented in binary as 11010101 or 1101 0101, 33466=The most fundamental representation of a word in binary format is 0000000000000000. To make it easier to read, you can group bits in 4, like this 0000 0000 0000 0000. Therefore, the minimum binary value represented by a word is 0000 0000 0000 0000. The maximum binary value represented by a word is 1111 1111 1111 1111., 165400=7 = 0111 2 = 0010 F = 1111 A = 1010, 28665=Using the binary system, you can represent the byte using a combination of 0s and 1s. When all bits have a value of 0, the byte is represented as 00000000. On the other hand, when all bits have a value of 1, the byte is represented as 11111111. When the number grows very large, it becomes difficult to read. Therefore, we will represent bits in groups of four. Instead of writing 00000000, we will write 0000 0000. This makes the number easier to read. \u00a0, 2820=The real and only system that the computer recognizes is made of only two symbols 0 and 1. In effect, the computer considers a piece of information to be true or to be false; and it assigns a value accordingly. Therefore, the binary system only counts 0 and 1. To get a number, you combine these values. Examples of binary numbers are 1, 100, 1011, or 1101111011., 162390=11 0001 1111 1110 1101 1100, 6070=\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 2*1000 + 7*100 + 5*10 + 1, 116243=The current number is: 1100001010110110010001000111 or 1100 0010 1011 0110 0100 0100 0111 The remainder of 3 by 2 is 1. This means that you will fill out bit 0 with 1:, 141528== 65536 +\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 8192+4096+2048+1024\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 128+ 64 +32\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0\u00a0\u00a0\u00a0 8\u00a0\u00a0 + 4\u00a0\u00a0\u00a0\u00a0\u00a0 +\u00a0\u00a0\u00a0\u00a0 1 = 81133, 34373== 32768 + 16384 + 8192\u00a0 + 4096\u00a0 + 2048\u00a0\u00a0 + 1024\u00a0 + 512\u00a0\u00a0 + 256\u00a0 + 128\u00a0\u00a0 + 64\u00a0\u00a0\u00a0 + 32\u00a0\u00a0\u00a0 + 16\u00a0\u00a0\u00a0\u00a0 + 8\u00a0\u00a0\u00a0\u00a0 + 4\u00a0\u00a0\u00a0\u00a0\u00a0 + 2\u00a0\u00a0\u00a0\u00a0\u00a0 + 1, 165478=Therefore, hexadecimal 0x72FA is represented in binary as 011100101111010. This can be read as 0111 0010 1111 1010. The computer would display it as 11100101111010, 6479=\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 6*10000 + 7*1000 + 0*100 + 4*10 + 8*1, 147207=The different nibbles (combination of 4 bits) of this number are 7 | 0 | 15 | 15 | 2. According to the table of numeric conversions, decimal 15 = hexadecimal F. The number is 7 | 0 | F | F | 2. Therefore, the hexadecimal equivalent of the decimal number 462834 is 0x70FF2, 82041=The number has become 11000010101 or 110 0001 0101 Find the remainder of 444,559 by 262,144. This is 182415. This number is greater than 131,072. Therefore, fill out the corresponding bit with 1., 6173=\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = 2000 + 700 + 50 + 1, 5263=The decimal system is said to use a base 10. This allows you to recognize and be able to read any number. Indeed, the system works in increments of 0, 10, 100, 1000, 10000, and up. In the decimal system, 0 is 0*100 (= 0*1, which is 0); 1 is 1*100 (=1*1, which is 1); 2 is 2*100 (=2*1, which is 2), and 9 is 9*100 (= 9*1, which is 9). Between 10 and 99, a number is represented by left-digit * 101 + right-digit * 101. For example, 32 = 3*101 + 2*100 = 3*10 + 2*1 = 30 + 2 = 32. In the same way, 85 = 8*101 + 5*100 = 8*10 + 5*1 = 80 + 5 = 85. Using the same logic, you can get any number in the decimal system. Examples are:, 106473=11000010101101100100010001 or 11 0000 1010 1101 1001 0001 0001, 144330=Consider a decimal number such as 1325 to convert to hexadecimal. The remainder of 1325 by 16 is, 144685=Since the quotient, 5, is less that 16, it will be put to the left of the existing numbers. We get 5 | 2 | 13. According to the table of numeric conversions, decimal 13 = hexadecimal D. Therefore, decimal 1325 = hexadecimal 0x52D, 30028=When a byte is completely represented with 0s, it provides the minimum value it can hold; this is 0000 0000, which is also 0. When all bits have a value of 1, which is 1111 1111, a byte holds its maximum value that we calculated as 255. As done with the nibble, we get the following table: \u00a0, 88629=The current number is 11000010101101 or 11 0000 1010 1101 The remainder of 51,343 by 32,768 is 18,575. This number is between 32,768 to 16,384. This results in:, 162716=0011 0001 1111 1110 1101 1100 \u00a0 3\u00a0\u00a0\u00a0\u00a0\u00a0 1\u00a0\u00a0\u00a0\u00a0\u00a0 F\u00a0\u00a0\u00a0\u00a0\u00a0 E\u00a0\u00a0\u00a0\u00a0\u00a0 D\u00a0\u00a0\u00a0\u00a0 C = 0x31FEDC, 16180=This produces the following binary combinations: 0000, 0001, 0010, 0011, 0100, 0101, 0110, 0111, 1000, 1001, 1010, 1011, 1100, 1101, 1110, 1111 = 16 combinations. When using the decimal system, these combinations can be resented as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, and 15., 159922=When all bits are 0, the byte also has a value of 0. When combining and mixing 0 and 1 bits, you can get binary values as varied as possible: 0101 0010 or 1101 1110 or 0111 1100. We only need to know what each combination would represent. If you divide bits by groups of four, you can use the table of numeric conversions to find out what each group represents. Consider a binary number such as 10101101. Dividing it in groups of 4-bits, we get 1010 1101. Referring to our conversion table, the low order nibble has a hexadecimal value of 8. The high order nibble has a hexadecimal value of C., 71271=The current number is 11000 or 1 1000 Now, find the remainder of 139,905,167 by 134,217,728. This is 5,687,439. This number is between 8,388,608 and 4,194,304. Therefore, fill each bit to 0 down to 4,194,304:, 162589=0011 0001 1111 1110 1101 1100}",
    "lastModified": "Sun, 05 Apr 2015 03:14:21 GMT",
    "textBeforeTable": "This produces the following binary combinations: 0000, 0001, 0010, 0011, 0100, 0101, 0110, 0111, 1000, 1001, 1010, 1011, 1100, 1101, 1110, 1111 = 16 combinations. When using the decimal system, these combinations can be resented as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, and 15. As you can see, a nibble is represented by a group of 4 bits. This is also a system that the computer uses to count bits internally. Sometimes, in your program in the help files, you will encounter a number less than four bits, such as 10 or 01 or 101. How do you reconcile such a number to a nibble? The technique used to complete and fill out the nibble consists of displaying 0 for each non-represented bit; this makes it easier to recognize. The binary number 10 will be the same as 0010. The number 01 is the same as 0001. The number 101 is the same as 0101. This technique is valuable and allows you to always identify a binary number as a divisor of 4. When all bits in a nibble are 0, you have the lowest value you can get, which is 0000. Any of the other combinations has at least one 0 bit, except for the last one. When all bits are 1, this provides the highest value possible for a nibble. The lowest value,",
    "textAfterTable": "\u00a0 Table of numeric conversions \u00a0 When looking at a binary value represented by 4 bits, you can get its decimal or hexadecimal values by referring to the table above. For this reason, you may have to memorize it. A nibble, which is a group of four consecutive bits, has a minimum and maximum values on each system: \u00a0 \u00a0 Decimal Hexadecimal Binary Minimum 0 0x0 0000 Maximum 15 0xf 1111 Practical Learning: Examining the Binary System To launch the calculator, from the task bar, click Start -> Programs -> Accessories -> Calculator (if the Calculator application is not installed in your computer, you should install it; you will need on a regular basis) On the main menu of the Calculator application, click View -> Scientific: \u00a0 \u00a0 Click the Bin radio button. Notice that on the numeric buttons, only the 1",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}