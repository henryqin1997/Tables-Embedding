{
    "relation": [
        [
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        [
            "proxy_str",
            "handle",
            "contentType",
            "contentLength",
            "httpStatus",
            "timeout"
        ],
        [
            "The URL of an item to get.",
            "The URL of the proxy.",
            "A pointer to store the handle for this connection.",
            "A buffer to store the media type of the item.",
            "A pointer to store the length of the item.",
            "The status returned on receiving a response message. The time out value sent with the request during which a response is expected from the server, failing which, an error is reported back to the user."
        ]
    ],
    "pageTitle": "MediaTomb: upnp.h File Reference",
    "title": "",
    "url": "http://mediatomb.cc/doxygen/upnp_8h.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 125,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988061.16/warc/CC-MAIN-20150728002308-00063-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 157733839,
    "recordOffset": 157698530,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{44552=Definition at line 1067 of file upnp.h.}",
    "lastModified": "Fri, 26 Mar 2010 19:16:55 GMT",
    "textBeforeTable": "Enumerator: enum Upnp_DescType_e Enumeration Type Documentation typedef struct virtual_Dir_List virtualDirList typedef struct user_HTTP_Header_List userHTTPHeaderList Definition at line 933 of file upnp.h. typedef void* UpnpWebFileHandle Definition at line 502 of file upnp.h. Returned when a device application registers with { UpnpRegisterRootDevice} or { UpnpRegisterRootDevice2}. Device handles can only be used with functions that operate with a device handle. typedef int UpnpDevice_Handle Definition at line 496 of file upnp.h. Returned when a control point application registers with { UpnpRegisterClient}. Client handles can only be used with functions that",
    "textAfterTable": "Enumerator: UPNP_CONTROL_ACTION_REQUEST\u00a0 Received by a device when a control point issues a control request. The { Event} parameter contains a pointer to a { Upnp_Action_Request} structure containing the action. The application stores the results of the action in this structure. UPNP_CONTROL_ACTION_COMPLETE\u00a0 A { UpnpSendActionAsync} call completed. The { Event} parameter contains a pointer to a { Upnp_Action_Complete} structure with the results of the action. UPNP_CONTROL_GET_VAR_REQUEST\u00a0 Received by a device when a query for a single service variable arrives. The { Event} parameter contains a pointer to a { Upnp_State_Var_Request} structure containing the name of the variable and value. UPNP_CONTROL_GET_VAR_COMPLETE\u00a0 A { UpnpGetServiceVarStatus} call completed. The { Event} parameter contains a pointer to a { Upnp_State_Var_Complete} structure containing the value for the variable. UPNP_DISCOVERY_ADVERTISEMENT_ALIVE\u00a0 Received by a control point when a new device or service is available. The { Event} parameter contains a pointer to a { Upnp_Discovery} structure with the information about the device or service.",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}