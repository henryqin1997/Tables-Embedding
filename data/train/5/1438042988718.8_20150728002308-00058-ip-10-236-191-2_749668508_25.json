{
    "relation": [
        [
            "Title",
            "Medical Applications Guide (Rev. H)",
            "TI HealthTech Health Guide (Rev. A)",
            "Consumer Medical Applications Guide (Rev. A)"
        ],
        [
            "Abstract",
            "",
            "",
            ""
        ],
        [
            "Type",
            "PDF",
            "PDF",
            "PDF"
        ],
        [
            "Size (KB)",
            "9.09 MB",
            "4.72 MB",
            "8.32 MB"
        ],
        [
            "Date",
            "02 May 2013",
            "02 May 2013",
            "05 Aug 2010"
        ],
        [
            "Views",
            "5177",
            "1890",
            "1063"
        ]
    ],
    "pageTitle": "Block Diagram (SBD) - Portable Blood Gas Analyzer - TI.com",
    "title": "",
    "url": "http://www.ti.com/solution/blood_gas_analyzer_portable",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988718.8/warc/CC-MAIN-20150728002308-00058-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 749693979,
    "recordOffset": 749668508,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "// sorting the table using id myTable with intial index 0 ends }); }); } 5: { sorter: \"commaDigit\" } }, sorter: 'DD MMM YYYY' 4: { 3: { sorter: \"commaDigit\" }, 1: {sorter: \"NotEmptyFirst\"}, 0: {sorter: \"AlphaNum\"}, headers: { $(\"#myTableforSelectionGuides\").tablesorter({ // sorting the table using id myTable with intial index 0 starts //for date sort ends }); type: 'text' }, } return s; else { } hit[1]; return hit[3] + months[hit[2].toUpperCase()] + if (hit && hit.length == 4) { var hit = s.match(/(\\d{2}) ([A-Za-z]{3}) (\\d{4})/); s = '' + s; //Make sure it's a string format: function(s) { }, return false; is: function(s) { id: 'DD MMM YYYY', $.tablesorter.addParser({ months[\"DEC\"] = \"12\"; months[\"NOV\"] = \"11\"; months[\"OCT\"] = \"10\"; months[\"SEP\"] = \"09\"; months[\"AUG\"] = \"08\"; months[\"JUL\"] = \"07\"; months[\"JUN\"] = \"06\"; months[\"MAY\"] = \"05\"; months[\"APR\"] = \"04\"; months[\"MAR\"] = \"03\"; months[\"FEB\"] = \"02\"; months[\"JAN\"] = \"01\"; var months = {}; }); type: 'numeric' // set type, either numeric or text }, return +new Date(s); // parse the string as a date and return it as a number format: function(s) { }, return false; // return false so this parser is not auto detected is: function(s) { id: 'dd mmm yyyy', // set a unique id $.tablesorter.addParser({ //for date sort starts //for string sort ends }); type: 'text' }, } return 'AA' + PadString(s, '00000000'); else { } return 'ZZ' + s; if (isNaN(s)) { s = s.replace(/<.*?>/g,''); s = s.toUpperCase(); s = '' + s; format:",
    "textAfterTable": "",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}