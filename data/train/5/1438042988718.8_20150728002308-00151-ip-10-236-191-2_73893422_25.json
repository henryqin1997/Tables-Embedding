{
    "relation": [
        [
            "Value",
            "NEVER (or 0)",
            "AUTO (or 1)",
            "ALWAYS (or 2)"
        ],
        [
            "Description",
            "Disables concurrent inserts",
            "(Default) Enables concurrent insert for MyISAM tables that do not have holes",
            "Enables concurrent inserts for all MyISAM tables, even those that have holes. For a table with a hole, new rows are inserted at the end of the table if it is in use by another thread. Otherwise, MySQL acquires a normal write lock and inserts the row into the hole."
        ]
    ],
    "pageTitle": "5.1.4\u00a0Server System Variables",
    "title": "",
    "url": "http://docs.oracle.com/cd/E17952_01/refman-5.5-en/server-system-variables.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988718.8/warc/CC-MAIN-20150728002308-00151-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 73978527,
    "recordOffset": 73893422,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{812204=The number of errors, warnings, and notes that resulted from the last statement that generated messages. This variable is read only. See Section\u00a013.7.5.41, \u201cSHOW WARNINGS Syntax\u201d., 244301=The number of errors that resulted from the last statement that generated messages. This variable is read only. See Section\u00a013.7.5.18, \u201cSHOW ERRORS Syntax\u201d., 438157=Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section\u00a013.7.5.23, \u201cSHOW INDEX Syntax\u201d). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans., 743175=This variable was added in MySQL 5.5.16. It is available only if the thread pool plugin is enabled. See Section\u00a08.12.7, \u201cThe Thread Pool Plugin\u201d, 695776=If set to 1 (the default), the server quotes identifiers for SHOW CREATE TABLE and SHOW CREATE DATABASE statements. If set to 0, quoting is disabled. This option is enabled by default so that replication works for identifiers that require quoting. See Section\u00a013.7.5.12, \u201cSHOW CREATE TABLE Syntax\u201d, and Section\u00a013.7.5.8, \u201cSHOW CREATE DATABASE Syntax\u201d., 541319=If set to 0 or OFF (the default), statement profiling is disabled. If set to 1 or ON, statement profiling is enabled and the SHOW PROFILE and SHOW PROFILES statements provide access to profiling information. See Section\u00a013.7.5.32, \u201cSHOW PROFILES Syntax\u201d., 547930=This variable is for internal server use. It was added in MySQL 5.5.30., 138058=This variable was added in MySQL 5.5.16., 415925=max_heap_table_size is not replicated. See Section\u00a017.4.1.21, \u201cReplication and MEMORY Tables\u201d, and Section\u00a017.4.1.36, \u201cReplication and Variables\u201d, for more information., 392690=You should not use different settings for lower_case_table_names on replication masters and slaves. In particular, you should not do this when the slave uses a case-sensitive file system, as this can cause replication to fail. This is a known issue which is fixed in MySQL 5.6. For more information, see Section\u00a017.4.1.36, \u201cReplication and Variables\u201d., 454597=The size of the metadata locks cache. The server uses this cache to avoid creation and destruction of synchronization objects. This is particularly helpful on systems where such operations are expensive, such as Windows XP. This variable was added in MySQL 5.5.19., 282819=The maximum permitted result length in bytes for the GROUP_CONCAT() function. The default is 1024., 133326=Some system variables control the size of buffers or caches. For a given buffer, the server might need to allocate internal data structures. These structures typically are allocated from the total memory allocated to the buffer, and the amount of space required might be platform dependent. This means that when you assign a value to a system variable that controls a buffer size, the amount of space actually available might differ from the value assigned. In some cases, the amount might be less than the value assigned. It is also possible that the server will adjust a value upward. For example, if you assign a value of 0 to a variable for which the minimal value is 1024, the server will set the value to 1024., 424243=The cutoff on the size of index values that determines which filesort algorithm to use. See Section\u00a08.2.1.11, \u201cORDER BY Optimization\u201d., 258212=If set to 1 (the default), foreign key constraints for InnoDB tables are checked. If set to 0, foreign key constraints are ignored, with a couple of exceptions. When re-creating a table that was dropped, an error is returned if the table definition does not conform to the foreign key constraints referencing the table. Likewise, an ALTER TABLE operation returns an error if a foreign key definition is incorrectly formed. For more information, see Section\u00a013.1.17.3, \u201cUsing FOREIGN KEY Constraints\u201d., 601785=When reading rows from a MyISAM table in sorted order following a key-sorting operation, the rows are read through this buffer to avoid disk seeks. See Section\u00a08.2.1.11, \u201cORDER BY Optimization\u201d. Setting the variable to a large value can improve ORDER BY performance by a lot. However, this is a buffer allocated for each client, so you should not set the global variable to a large value. Instead, change the session variable only from within those clients that need to run large queries., 590648=Each thread that does a sequential scan for a MyISAM table allocates a buffer of this size (in bytes) for each table it scans. If you do many sequential scans, you might want to increase this value, which defaults to 131072. The value of this variable should be a multiple of 4KB. If it is set to a value that is not a multiple of 4KB, its value will be rounded down to the nearest multiple of 4KB., 288589=YES if statement profiling capability is present, NO if not. If present, the profiling system variable controls whether this capability is enabled or disabled. See Section\u00a013.7.5.32, \u201cSHOW PROFILES Syntax\u201d., 668695=Each session that needs to do a sort allocates a buffer of this size. sort_buffer_size is not specific to any storage engine and applies in a general manner for optimization. See Section\u00a08.2.1.11, \u201cORDER BY Optimization\u201d, for example., 542290=The number of statements for which to maintain profiling information if profiling is enabled. The default value is 15. The maximum value is 100. Setting the value to 0 effectively disables profiling. See Section\u00a013.7.5.32, \u201cSHOW PROFILES Syntax\u201d., 463983=The default pointer size in bytes, to be used by CREATE TABLE for MyISAM tables when no MAX_ROWS option is specified. This variable cannot be less than 2 or larger than 7. The default value is 6. See Section\u00a0B.5.2.12, \u201cThe table is full\u201d., 131794=Some of the following variable descriptions refer to \u201cenabling\u201d or \u201cdisabling\u201d a variable. These variables can be enabled with the SET statement by setting them to ON or 1, or disabled by setting them to OFF or 0. However, before MySQL 5.5.10, to set such a variable on the command line or in an option file, you must set it to 1 or 0; setting it to ON or OFF will not work. For example, on the command line, --delay_key_write=1 works but --delay_key_write=ON does not. As of MySQL 5.5.10, boolean variables can be set at startup to the values ON, TRUE, OFF, and FALSE (not case sensitive). See Section\u00a04.2.5, \u201cProgram Option Modifiers\u201d., 752760=This variable affects statements waiting for execution in the low-priority queue. The value is the number of milliseconds before a waiting statement is moved to the high-priority queue. The default is 1000 (1 second). The range of values is 0 to 232 \u2212 2., 508620=Currently, when old is enabled, it changes the default scope of index hints to that used prior to MySQL 5.1.17. That is, index hints with no FOR clause apply only to how indexes are used for row retrieval and not to resolution of ORDER BY or GROUP BY clauses. (See Section\u00a08.9.3, \u201cIndex Hints\u201d.) Take care about enabling this in a replication setup. With statement-based binary logging, having different modes for the master and slaves might lead to replication errors., 331145=The size in bytes of blocks in the key cache. The default value is 1024. See Section\u00a08.10.2, \u201cThe MyISAM Key Cache\u201d.}",
    "lastModified": "Sun, 26 Jul 2015 10:10:03 GMT",
    "textBeforeTable": "The transaction completion type. This variable can take the values shown in the following table. As of MySQL 5.5.3, the variable can be assigned using either the name values or corresponding integer values. Before 5.5.3, only the integer values can be used. 2 1 0 RELEASE CHAIN NO_CHAIN Valid Values NO_CHAIN Default enumeration Type Permitted Values (>= 5.5.3) 2 1 0 Valid Values 0 Default integer Type Permitted Values (<= 5.5.2) Yes Dynamic Variable Global, Session Variable Scope completion_type Name System Variable --completion_type=# Command-Line Format completion_type The server's default collation. latin1_swedish_ci Default",
    "textAfterTable": "completion_type affects transactions that begin with START TRANSACTION or BEGIN and end with COMMIT or ROLLBACK. It does not apply to implicit commits resulting from execution of the statements listed in Section\u00a013.3.3, \u201cStatements That Cause an Implicit Commit\u201d. It also does not apply for XA COMMIT, XA ROLLBACK, or when autocommit=1. concurrent_insert Command-Line Format --concurrent_insert[=#] System Variable Name concurrent_insert Variable Scope Global Dynamic Variable Yes Permitted Values (<= 5.5.2) Type integer Default 1 Valid Values 0 1 2 Permitted Values (>= 5.5.3) Type",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}