{
    "relation": [
        [
            "a",
            "540",
            "541",
            "542",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "",
            "",
            "",
            "549",
            "550",
            "551",
            "\u2026",
            "570",
            "571",
            "572",
            "",
            "",
            "",
            "573",
            "574",
            "575",
            "\u2026",
            "587",
            "588",
            "589",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        [
            "b",
            "540",
            "541",
            "542",
            "543",
            "544",
            "545",
            "546",
            "547",
            "548",
            "549",
            "550",
            "551",
            "552",
            "553",
            "554",
            "555",
            "556",
            "557",
            "558",
            "559",
            "560",
            "561",
            "562",
            "563",
            "564",
            "565",
            "566",
            "567",
            "568",
            "569",
            "570",
            "571",
            "572",
            "573",
            "574",
            "575",
            "576",
            "577",
            "578",
            "579",
            "580",
            "581",
            "582",
            "583",
            "584",
            "585",
            "586",
            "587",
            "588",
            "589",
            "590",
            "591",
            "592",
            "593",
            "594",
            "595",
            "596",
            "597",
            "598",
            "599",
            "600",
            "601",
            "602",
            "603",
            "604",
            "605",
            "606",
            "607",
            "608",
            "609",
            "610",
            "611",
            "612",
            "613",
            "614",
            "615",
            "616",
            "617",
            "618",
            "619",
            "620",
            "621",
            "622",
            "623",
            "624",
            "625",
            "626",
            "627",
            "628",
            "629",
            "630",
            "631",
            "632",
            "633",
            "634",
            "635",
            "636",
            "637",
            "638",
            "639",
            "640",
            "641",
            "642",
            "643",
            "644",
            "645",
            "646",
            "647",
            "648",
            "649",
            "650",
            "\u2026",
            "669",
            "670",
            "671",
            "672",
            "673",
            "674",
            "675",
            "676",
            "677",
            "\u2026",
            "689",
            "690",
            "691",
            "692",
            "693",
            "694",
            "695",
            "696",
            "697",
            "698",
            "699",
            "700",
            "701",
            "702",
            "703",
            "704",
            "705",
            "706",
            "707",
            "708",
            "709",
            "710",
            "711",
            "712",
            "713",
            "714",
            "715",
            "716",
            "717",
            "718",
            "719",
            "720",
            "721",
            "722",
            "723",
            "724",
            "725",
            "726",
            "727",
            "728",
            "729",
            "730",
            "731",
            "732",
            "733",
            "734",
            "735",
            "736",
            "737",
            "738",
            "739",
            "740",
            "741",
            "742",
            "743",
            "744",
            "745",
            "746",
            "747",
            "748",
            "749",
            "750",
            "751"
        ],
        [
            "",
            "More details on named URL patterns are in the :doc:`URL dispatch documentation",
            "`.",
            "",
            "``verbose_names``",
            "-----------------",
            "",
            ".. classmethod:: Model.verbose_names(count=1)",
            "",
            ".. versionadded:: 1.4",
            "",
            "A Python classmethod.",
            "",
            "This method has no default implementation and you might provide one depending",
            "on the the human readable name you need for your model.",
            "",
            "The *count* argument is the quantity of model instances the verbose name is",
            "being requested for.",
            "",
            "It provides a straight migration path from the :attr:`~Options.verbose_name` and",
            ":attr:`~Options.verbose_name_plural` options that entered a deprecation cycle",
            "starting with Django 1.4. For example this model declaration::",
            "",
            "class SSN(models.Model):",
            "value = models.CharField(max_length=11)",
            "",
            "class Meta:",
            "verbose_name = 'social security number'",
            "",
            "needs to be changed to::",
            "",
            "class SSN(models.Model):",
            "value = models.CharField(max_length=11)",
            "",
            "@classmethod",
            "def verbose_names(cls, count=1):",
            "return 'social security number'",
            "",
            "and this one::",
            "",
            "class SecurityPolicy(models.Model):",
            "title = models.CharField(max_length=30)",
            "",
            "class Meta:",
            "verbose_name_plural = 'security policies'",
            "",
            "should be changed to::",
            "",
            "class SecurityPolicy(models.Model):",
            "title = models.CharField(max_length=30)",
            "",
            "@classmethod",
            "def verbose_names(cls, count=1):",
            "if count != 1:",
            "return 'security policies'",
            "",
            "This new syntax can take in account the number of model instances at play to",
            "decide the exact verbose name to show in user interaction contexts. It provides",
            "for better internationalization of your application because the name of your",
            "model is now translatable in a more correct way to many more locales::",
            "",
            "from django.utils.translation import ugettext_lazy",
            "",
            "class Man(models.Model):",
            "first_name = models.CharField(max_length=30)",
            "",
            "@classmethod",
            "def verbose_names(cls, count=1):",
            "if count == 1:",
            "return ugettext_lazy('man')",
            "else:",
            "return ugettext_lazy('men')",
            "",
            "Although you usually will use the",
            ":func:`~django.utils.translation.ungettext_lazy` function::",
            "",
            "from django.utils.translation import ungettext_lazy",
            "",
            "class Library(models.Model):",
            "city_name = models.CharField(max_length=30)",
            "",
            "@classmethod",
            "def verbose_names(cls, count=1):",
            "return ungetttext_lazy('llbrary', 'libraries', count)",
            "",
            ".. note::",
            "Remember to declare this method as a classmethod::",
            "",
            "class MyModel(models.Model):",
            "...",
            "",
            "@classmethod",
            "def verbose_names(cls, count=1):",
            "...",
            "",
            ".. seealso::",
            "",
            "The :meth:`~Model.get_verbose_name` method that works together with this",
            "method.",
            "",
            "Extra instance methods",
            "======================",
            "",
            "In addition to :meth:`~Model.save()`, :meth:`~Model.delete()`, a model object",
            "might have some of the following methods:",
            "",
            "``get_*_display``",
            "-----------------",
            "",
            ".. method:: Model.get_FOO_display()",
            "",
            "For every field that has :attr:`~django.db.models.Field.choices` set, the",
            "",
            ">>> p.get_gender_display()",
            "'Male'",
            "",
            "``get_next_by_*`` and ``get_prev_by_*``",
            "---------------------------------------",
            "",
            ".. method:: Model.get_next_by_FOO(\\**kwargs)",
            ".. method:: Model.get_previous_by_FOO(\\**kwargs)",
            "",
            "",
            "primary key as a tie-breaker. This guarantees that no records are skipped or",
            "duplicated. That also means you cannot use those methods on unsaved objects.",
            "",
            "``get_verbose_name``",
            "--------------------",
            "",
            ".. classmethod:: Model.get_verbose_name(count=1)",
            "",
            ".. versionadded:: 1.4",
            "",
            "A Python classmethod.",
            "",
            "Django automatically gives all models an implementation of this method so you",
            "usually don't need to override it.",
            "",
            "It provides an official API to access translated and correctly pluralized",
            "verbose names of models (something that previously involved using non public",
            "APIs like accessing the ``Model._meta.verbose_name`` and",
            "``Model._meta.verbose_name_plural`` attributes.)",
            "",
            ".. seealso::",
            "",
            "The :meth:`~Model.verbose_names` user-provided classmethod that works",
            "together with this method.",
            "",
            "This method will always return a value independently of whether the model",
            "implements the :meth:`~Model.verbose_names` classmethod or not. Django provides",
            "fallback return values compatible with the default values of the deprecated",
            ":attr:`~Options.verbose_name` and :attr:`~Options.verbose_name_plural` options.",
            "",
            "For example, given this model::",
            "",
            "class Door(models.Model):",
            "height = models.PositiveIntegerField()",
            "",
            "then these are the return values of this method::",
            "",
            ">>> Door.get_verbose_name(1) # One door",
            ">>> 'door' # Automatically provided singular verbose name",
            ">>> Door.get_verbose_name(3) # More than one door",
            ">>> 'doors'",
            "# Note how it returns an automatically provided simple naive pluralization",
            "# appending a 's' to the singular value",
            "",
            "Or, for the examples in the :meth:`~Model.verbose_names` section above::",
            "",
            ">>> SSN.get_verbose_name() # One SSN, count default value",
            ">>> 'social security number'",
            "# Note how it returns the value returned by SSN.verbose_names(count) for a",
            "# value of count=1",
            ">>> SSN.get_verbose_name(0) # Zero SSN",
            ">>> 'social security numbers'",
            "# Note how it returns an automatically provided simple naive pluralization",
            "# appending a 's' to the singular value",
            "",
            ">>> SecurityPolicy.get_verbose_name() # One policy",
            ">>> 'security policy'",
            "# Note how it returns a value automatically provided by Django by processing",
            "# the model class name",
            ">>> SecurityPolicy.get_verbose_name(10) # Ten policies",
            ">>> 'security policies'",
            "# Note how it returns the value returned by",
            "# SecurityPolicy.verbose_names(count) for a count value different from 1"
        ]
    ],
    "pageTitle": "11688-verbose_name_plural_evolution-1.diff on Ticket #11688 \u2013 Attachment \u2013 Django",
    "title": "",
    "url": "https://code.djangoproject.com/attachment/ticket/11688/11688-verbose_name_plural_evolution-1.diff",
    "hasHeader": true,
    "headerPosition": "FIRST_COLUMN",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989826.86/warc/CC-MAIN-20150728002309-00106-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 865617887,
    "recordOffset": 865578481,
    "tableOrientation": "VERTICAL",
    "TableContextTimeStampAfterTable": "{381280=\u00a9 2005-2015 Django Software Foundation unless otherwise noted. Django is a registered trademark of the Django Software Foundation.}",
    "textBeforeTable": "django/contrib/admin/actions.py diff --git a/django/contrib/admin/actions.py b/django/contrib/admin/actions.py First iteration of a proposed implementation of this feature File 11688-verbose_name_plural_evolution-1.diff, 77.9 KB (added by ramiro, 4 years ago) Ticket #11688: 11688-verbose_name_plural_evolution-1.diff Back to Ticket #11688 Context Navigation Search Wiki Timeline Reports View Tickets API Preferences DjangoProject Login GitHub Login Code \u2665 Donate About Code Community News Documentation Download Overview The web framework for perfectionists with deadlines. Django",
    "textAfterTable": "1105 1105 \u00a0 \u00a0 \u00a0 \u00a0 The 'change list' admin view for this model. 1106 1106 \u00a0 \u00a0 \u00a0 \u00a0 \"\"\" 1107 1107 \u00a0 \u00a0 \u00a0 \u00a0 from django.contrib.admin.views.main import ERROR_FLAG 1108 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 opts = self.model._meta \u00a0 1108 \u00a0 \u00a0 \u00a0 \u00a0 model = self.model \u00a0 1109 \u00a0 \u00a0 \u00a0 \u00a0 opts = model._meta 1109 1110 \u00a0 \u00a0 \u00a0 \u00a0 app_label = opts.app_label 1110 1111 \u00a0 \u00a0 \u00a0 \u00a0 if not self.has_change_permission(request, None): 1111 1112 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 raise PermissionDenied \u2026 \u2026 \u00a0 1194 1195 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 changecount += 1 1195 1196 1196 1197 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if changecount: 1197 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if changecount == 1: 1198 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 name = force_unicode(opts.verbose_name) 1199 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 else: 1200 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}