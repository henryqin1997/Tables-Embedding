{
    "relation": [
        [
            "Parameter",
            "ctx",
            "name",
            "pubId",
            "sysId",
            "note"
        ],
        [
            "In/Out",
            "IN",
            "IN",
            "IN",
            "IN",
            "IN"
        ],
        [
            "Description",
            "user's SAX context",
            "entity's name; data encoding",
            "entity's public ID as data encoding, or NULL",
            "entity's system ID; data encoding",
            "entity's notation name; data encoding"
        ]
    ],
    "pageTitle": "Package SAX APIs for C",
    "title": "",
    "url": "http://docs.oracle.com/cd/B19306_01/appdev.102/b16207/sax.htm",
    "hasHeader": true,
    "headerPosition": "MIXED",
    "tableType": "RELATION",
    "tableNum": 25,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988048.90/warc/CC-MAIN-20150728002308-00308-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 68866820,
    "recordOffset": 68858618,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Wed, 13 May 2015 05:07:07 GMT",
    "textBeforeTable": "oratext *body); oratext *attr, oratext *elem, void *ctx, xmlerr XmlSaxAttributeDecl(  Syntax This event marks an element declaration in the DTD. The element's name and content will be in the data encoding. Note that an attribute may be declared before the element it belongs to! XmlSaxAttributeDecl()     Receives SAX notification of an XML declaration. Oracle extension. XmlSaxXmlDecl() Receives SAX notification of ignorable (whitespace) data. XmlSaxWhitespace() Receives SAX notification of an unparsed entity declaration. XmlSaxUnparsedEntityDecl() Receives SAX namespace-aware start-of-element notification. XmlSaxStartElementNS() Receives SAX start-of-element notification. XmlSaxStartElement() Receives SAX start-of-document notification. XmlSaxStartDocument() Receives SAX notification of a parsed entity declaration. Oracle extension. XmlSaxParsedEntityDecl() Receives SAX notification of a processing instruction. XmlSaxPI() Receives SAX notification of a notation declaration. XmlSaxNotationDecl() Receives SAX end-of-element notification. XmlSaxEndElement() Receives SAX end-of-document notification.",
    "textAfterTable": "See Also: XmlSaxAttributeDecl() XmlSaxCDATA() This event handles CDATA, as distinct from Text. If no XmlSaxCDATA callback is provided, the Text callback will be invoked. The data will be in the data encoding, and the returned length is in characters, not bytes. See also XmlSaxWhitespace, which receiving notification about ignorable (whitespace formatting) character data. Syntax  xmlerr XmlSaxCDATA( void *ctx, oratext *ch, size_t len); Parameter In/Out Description  ctx  IN user's SAX context  ch  IN pointer to CDATA; data encoding  len  IN length of CDATA, in characters Returns (xmlerr) error code, XMLERR_OK [0] for success",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}