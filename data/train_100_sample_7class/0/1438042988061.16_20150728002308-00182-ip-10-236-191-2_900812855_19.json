{
    "relation": [
        [
            "Operation",
            "Add/remove/update a list column",
            "Add/remove/Update a list content type",
            "Create/remove an index",
            "Manage files which have no checked-in version",
            "Non-indexed recursive queries",
            "Cross list query",
            "Lookup columns that enforce relationship behavior",
            "Deleting a list",
            "Deleting a site",
            "Save list as template with data",
            "Showing totals in list views",
            "Enable/disable attachments in a list"
        ],
        [
            "Description",
            "All columns, including lookup and calculated columns, in addition to many kinds of updates, such as a type change or a uniqueness change. Some updates, such as a name change, are not blocked because they do not affect every item in the list.",
            "Affects every item in the list so it is blocked for any list that has more items than the list view threshold.",
            "Affects every item in the list so it is blocked for any list that has more items than the list view threshold.",
            "A non-indexed recursive query that fails for any list that has more items than the list view threshold.",
            "Includes filters and some sorts. This operation fails when the list size is greater than the list view threshold. Because there is no index, it does a full scan against the entire list. Also, it returns all items, and it ignores folders.",
            "Includes queries by the Content Query Web Part and follows the list view threshold setting for auditors and administrators, which by default is 20,000 items. If the operation involves more than 20,000 items, the query fails.",
            "You cannot create lookup columns that enforce relationship behavior when the list that is referenced contains more items than the list view threshold.",
            "Affects every item in the list so it is blocked for any list that has more items than the list view threshold.",
            "If the sum of all items in a site is greater than the list view threshold, deleting the site is prevented because it affects too many items.",
            "Affects every item in the list so it is blocked for any list that has more items than the list view threshold.",
            "Performs a query against every item in the list so it is blocked for any list that has more items than the list view threshold.",
            "Affects every item in the list so it is blocked for any list that has more items than the list view threshold."
        ]
    ],
    "pageTitle": "Designing large lists and maximizing list performance (SharePoint Server 2010)",
    "title": "",
    "url": "https://technet.microsoft.com/library/cc262813(office.14).aspx",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 19,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988061.16/warc/CC-MAIN-20150728002308-00182-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 900860099,
    "recordOffset": 900812855,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{43760=SharePoint Server 2010 provides performance improvements in the following key scenarios:, 24331=Topic Last Modified: 2011-09-24, 26007=Although this article is specific to SharePoint Server 2010, the throttles and limits also apply to Microsoft SharePoint Foundation. This article covers several features that greatly enhance the experience of working with large lists, and these features are available only in SharePoint Server 2010. No distinction between SharePoint Foundation and SharePoint Server is made in this article., 41519=The features that helped with large lists in Office SharePoint Server 2007 still help with SharePoint Server 2010, and many of them are improved to provide better performance at large scale. SharePoint Server 2010 also has many new features that help improve the performance of large lists and that enable users to use large lists effectively. This section summarizes new and improved features in SharePoint Server 2010., 135782=Lists that have large storage requirements can trigger a fundamental decision for how to store the documents. By default, SharePoint Server 2010 stores all documents as BLOBs in the SQL Server database. SharePoint Server 2010 and SQL Server 2008 provide a Remote BLOB Storage API, which allows documents to be stored outside of the SQL Server database, which reduces database size. The decision of whether to use Remote BLOB Storage is largely decided by cost savings., 194359=The Content Query Web Part displays data from SharePoint Server 2010 lists. Queries can be configured to return results from one or multiple lists. By default, the Content Query Web Part is cached. However, it can be non-cached., 193464=There are three main SharePoint Server 2010 features that can be used to query and filter list data with simple configuration: list view and metadata navigation, Content Query Web Part, and search. There are additional options for using custom code to query a list; those options are not described in this article., 24463=This article provides information about the performance of large document libraries and large lists. The recommendations in this article are the result of a series of performance tests that were conducted with Microsoft SharePoint Server 2010. The focus of this article is on the performance characteristics of large lists and on how different configurations affect the performance of large lists and of the farm. SharePoint Server 2010 has several new improvements that make it easier to create and use large lists. However, creating and implementing large lists still requires careful planning. You must consider many factors, such as information architecture, performance, disaster recovery, and governance. This article covers information architecture and features that are used to implement large lists, and it covers the effect that specific configurations have on performance., 64747=Windows Server 2008 R2 x64, 167494=SharePoint Server 2010 uses its own indexing mechanism to work with its database table structure. Create indexes in SharePoint Server by modifying the settings for the list., 46850=The Document Center and Records Center are SharePoint Server 2010 site templates that you can use to create structured repositories. The Document Center site template includes features such as preconfigured Content Query Web Parts for returning relevant results by logged-in users and a document library with metadata navigation configured., 159102=Improvements in SharePoint Server 2010 give you more flexibility in using folders and less dependence on performance considerations. By using managed metadata and metadata navigation, users can easily filter on metadata, rather than navigating through folders. This enables you to organize content for administrative purposes such as permissions or policy, rather than only for user navigation. For instance, you can have a folder of classified material that only certain employees can access and another folder that all employees can access. You can specify different permissions on the folders and then use the content organizer to automatically move content into the appropriate folder, based on metadata. You can still choose to use folders for navigation in combination with metadata navigation., 212594=The new list view threshold in SharePoint Server 2010 presents a major change to how views must be used with large lists. Users will get errors if views attempt to return more results than the list view threshold. Using totals on a large list will always be blocked by the list view threshold. Therefore, do not use them. The number of items that must be scanned is what is important, not necessarily the number of rows that are returned. If a view has a filter where the column Color = \u201cRed\u201d and color is not an indexed column, then it might be prevented. Even though there might be only 100 items that match this query, if there are 10,000 items in the list, then the query must scan 10,000 items. In this case, users get errors when they try to access the view. To resolve this problem, you can use folders, filters and indexing, and metadata navigation., 108561=The preceding table shows the limit of indexes that can be created per list, including compound indexes and indexes that are created by SharePoint Server 2010. This limit is not configurable., 26635=Large lists and SharePoint Server 2010, 65962=SharePoint Server 2010 (Pre Release), 44761=SharePoint Server 2010 brings new search capabilities that include a search term refinement panel and improved scalability that has support for sub-second query latency with 100 million documents. There is also Microsoft FAST Search Server 2010 for SharePoint, which can be used to reach larger scale points than SharePoint Server 2010 Search., 53598=Managed metadata is a new set of features that add more information architecture capabilities to SharePoint Server. The managed metadata features include a shared service called the managed metadata service. The managed metadata service can be used to store term sets that can be reused throughout a SharePoint Server 2010 deployment. Some of the managed metadata features include the following:, 50344=Metadata navigation is a new SharePoint Server 2010 feature that enables users to dynamically filter lists so they can find what they need. Metadata navigation enables users to select filter options, and it handles performing the query in the most efficient manner possible. Metadata navigation consists of two parts. One part is a set of navigation controls that let a user filter a list that has navigation hierarchies and key filters. The second part is a mechanism for rearranging and retrying queries., 217580=SharePoint Server 2010 provides new and improved features that enhance the user experience and performance of working with large lists. Throttles and limits protect the performance of the farm for other users and prevent operations from consuming a disproportionately large amount of SQL Server resources. Metadata enhancements and metadata navigation provide an enhanced experience for retrieving list data, and Content Query Web Parts, search, and list views can be configured to work with large lists. Careful planning is still required to create the correct solutions for your requirements. However, large lists can be developed quickly with configuring out-of-box solutions that have been designed to work with good performance., 45740=SharePoint Server 2010 Search also improves capabilities around scale. SharePoint Server 2010 Search supports scaling out of index, crawl, and query servers. Other improvements include fresher indexes, better resiliency, and higher availability. FAST Search Server 2010 for SharePoint includes all of the SharePoint Server 2010 Search capabilities and adds scale for extreme demands, entity extraction, tunable relevance ranking, visual best bets, thumbnails, and previews., 166754=There is a non-configurable limit of 20 indexes that can be created per list, including compound indexes and SharePoint Server 2010 features that index columns by default. Adding indexes to a list has a minimal effect on performance. However, it does affect some operations, such as add and update. You should avoid using more indexes than necessary because unused indexes will cause a small negative performance effect, and some SharePoint Server 2010 features add indexes when they are enabled. For example, SharePoint Server 2010 requires at least three index slots if you use the expiration and eDiscovery features. Consider keeping at least three index slots available in case you must create new indexes later., 48460=This section describes new features in SharePoint Server 2010 that help with managing large lists and list performance., 170519=SharePoint Server features can create indexes that count against the list index limit. The following table provides a list of SharePoint Server 2010 features that are common in document libraries that add indexed columns., 144156=With SharePoint Server 2010, metadata and content types are useful for creating information architecture. New features, such as managed metadata, term sets, and metadata navigation, make metadata very useful and important for retrieving content. Because operations, such as modifying content types and columns, are blocked on large lists, it is especially important to plan ahead with requirements for metadata. If you plan to use metadata navigation or some other method of retrieving content by metadata, then it is important to plan content types and the columns they will have during the design phase., 42484=The following sections discuss the features from Microsoft Office SharePoint Server 2007 that are improved in SharePoint Server 2010., 66078=SQL Server 2008 CTP 3, 194058=Metadata navigation is a filtering control for SharePoint Server 2010 list views. When metadata navigation is configured, you can select metadata hierarchies and key filters to dynamically filter results that are displayed in a list view., 168033=Reserve index slots for SharePoint Server 2010 features that might need to create columns such as eDiscovery and Information Management Policy Retention., 24254=Applies to: SharePoint Server 2010, 56658=Indexes are important for large lists. In SharePoint Server 2010, you can now create compound indexes. Compound indexes are useful when queries are commonly performed on two columns because a query on just one column might not be selective enough. Compound indexes are not utilized by views. However, they are utilized by metadata navigation. When a throttling condition occurs, the metadata navigation logic can try again and use applicable compound indexes and single indexes for the chosen filter conditions to find complete or partial results that satisfy the query., 141788=At very large scale points, such as a large-scale archive scenario, it might be worth considering a multi-site collection architecture. A new SharePoint Server 2010 feature allows site collections to be grouped together to load balance documents. The content organizer feature is used to route documents between multiple site collections. Search must be used to retrieve the documents. This is fine for long-term storage because it allows content to be balanced across multiple site collections and scales to support many more documents than a single list., 126381=Before you implement a large list, consider the business case and requirements. Requirements such as service level agreement (SLA), time for backup and restore, size of content, amount of content (number of items), and access times are all important to consider. Depending on the size and demand of the application, you must make important choices at multiple levels, including hardware, content storage, and SharePoint Server 2010 information architecture. A large application that has millions of items and hundreds of concurrent users might require stand-alone hardware for the specific project, although a document repository with tens of concurrent users and tens of thousands of documents can work well with existing shared hardware and a single document library in an existing site., 78573=SharePoint Server 2010 supports document libraries and lists that have tens of millions of items. You can create very large document libraries by using folders, standard views, site hierarchies, and metadata navigation. To retrieve data from large lists by using list views or Collaborative Application Markup Language (CAML) queries, the data must be partitioned by using folders or indexes or both. Otherwise, search is the only mechanism that can be used to access the data efficiently. The number of items that a single document library can support can vary depending on how documents and folders are organized, the size and kind of documents stored, the usage of the document library, and the number of columns in the document library., 140065=When you design a large list solution, it is important to consider whether single list architecture is appropriate. The decision to place content in a single list should be based on business requirements, such as ease of use for working on and discovering content. In many instances, it might be more sensible to use multiple lists. Creating a successful implementation with great usability and user experience with the capabilities of SharePoint Server 2010 and available resources should be your top priority., 55638=SharePoint Server 2010 introduces several configurable limits to help maintain farm performance. At the Web application level there are now configurable throttles and limits. These have been added so that operations from individual users or processes do not adversely affect farm performance. For example, the list view threshold is a limit that prevents queries that affect more than a certain number of list items., 66033=SharePoint Server 2010 (Pre Release),, 60798=By default, SharePoint Server 2010 stores file (Binary Large Object (BLOB)) data in SQL Server databases. A large amount of a content database is commonly BLOB data. Remote BLOB Storage (RBS) allows this data to be stored outside of SQL Server, which makes it possible to have less expensive storage options and reduce content database size. Remote BLOB Storage is a library API set that is incorporated as an add-on feature pack for SQL Server 2008. A third-party remote BLOB storage provider is required to make use of the Remote BLOB Storage API.}",
    "textBeforeTable": "\u00a0 There are some common large list scenarios, and depending on the scenario, you will make different design decisions. For example, in a collaborative large list scenario, users are frequently adding content and updating properties. In this kind of scenario, you would not want the list size to grow into millions of items because it will be difficult to filter content and because content is frequently updated and changing. If you are working with unstructured document libraries, this article can help you understand the throttles and limits that protect SQL Server performance. The following table shows considerations for large list scenarios. Example large list scenarios Search Web Parts can be used to offload queries to a system that is optimized for finding content (versus editing properties and seeing the updates in real time). Search Web Parts can be configured to use static or user-specified queries. Search Web Parts have good performance. However, the data is only as current as the most recent crawl. This means results are older than results from list views and Content Query Web Parts. Search The Content Query Web Part displays a statically configured view of data that is cached by using the Portal Site Map Provider",
    "textAfterTable": "Collaborative large list or library The collaborative large list ranges from hundreds to thousands of items and is used as storage for a large amount of active content. Collaborative large lists generally include knowledge management solutions, engineering libraries, and sales and marketing collateral repositories. Users actively add and edit content (a large number of read operations and write operations). You can put structure and management in place to keep the library organized. However, because a great deal of work is performed by users, events might occur that are beyond the control of administrators. This can make it easy for the list to grow faster than expected or past the limits it was planned for. This kind of repository can have hundreds or thousands of users with tens or even hundreds of concurrent users. Compared to a structured repository or archive, a collaborative large list is more prone to administrative changes such as adding and deleting folders, adding content types and columns, or reorganizing content. These actions can be prevented by the list view threshold due to the size of the list. Structured large repository The structured large repository ranges from thousands to hundreds of thousands of items. The content is usually final and is submitted",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}