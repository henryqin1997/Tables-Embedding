{
    "relation": [
        [
            "Citing Patent",
            "US7512938 *",
            "US7810080 *",
            "US7818729 *",
            "US7844978 *",
            "US7856624",
            "US8010937 *",
            "US8010954 *",
            "US8032865 *",
            "US8161465 *",
            "US8239844",
            "US8239845",
            "US8239846",
            "US8250550",
            "US8255889",
            "US8255890",
            "US8365151 *",
            "US8527937",
            "US8527973",
            "US8615748",
            "US8707280",
            "US8707281",
            "US8719805 *",
            "US8752031 *",
            "US8954939 *",
            "US8997070 *",
            "US20090217249 *",
            "US20100088686 *",
            "US20100223603 *",
            "US20120222021 *",
            "US20130159981 *",
            "US20140189662 *"
        ],
        [
            "Filing date",
            "Mar 18, 2005",
            "Nov 2, 2005",
            "Jun 23, 2006",
            "Jun 2, 2006",
            "May 6, 2005",
            "Sep 24, 2007",
            "May 15, 2007",
            "Jun 29, 2005",
            "Jul 27, 2006",
            "Oct 20, 2008",
            "Oct 20, 2008",
            "Oct 20, 2008",
            "Oct 20, 2008",
            "Oct 20, 2008",
            "Oct 20, 2008",
            "Apr 30, 2010",
            "Aug 1, 2011",
            "Aug 22, 2011",
            "Oct 13, 2010",
            "Jun 29, 2012",
            "Jul 23, 2012",
            "May 9, 2012",
            "Dec 1, 2008",
            "Dec 31, 2012",
            "Dec 15, 2011",
            "Dec 1, 2008",
            "Dec 1, 2008",
            "",
            "",
            "Dec 15, 2011",
            "Dec 31, 2012"
        ],
        [
            "Publication date",
            "Mar 31, 2009",
            "Oct 5, 2010",
            "Oct 19, 2010",
            "Nov 30, 2010",
            "Dec 21, 2010",
            "Aug 30, 2011",
            "Aug 30, 2011",
            "Oct 4, 2011",
            "Apr 17, 2012",
            "Aug 7, 2012",
            "Aug 7, 2012",
            "Aug 7, 2012",
            "Aug 21, 2012",
            "Aug 28, 2012",
            "Aug 28, 2012",
            "Jan 29, 2013",
            "Sep 3, 2013",
            "Sep 3, 2013",
            "Dec 24, 2013",
            "Apr 22, 2014",
            "Apr 22, 2014",
            "May 6, 2014",
            "Jun 10, 2014",
            "Feb 10, 2015",
            "Mar 31, 2015",
            "Aug 27, 2009",
            "Apr 8, 2010",
            "Sep 2, 2010",
            "Aug 30, 2012",
            "Jun 20, 2013",
            "Jul 3, 2014"
        ],
        [
            "Applicant",
            "Microsoft Corporation",
            "Thomas Plum",
            "Thomas Plum",
            "International Business Machines Corporation",
            "Thomas Plum",
            "Apple Inc.",
            "The Mathworks, Inc.",
            "Kyocera Corporation",
            "Oracle International Corporation",
            "The Mathworks, Inc.",
            "The Mathworks, Inc.",
            "The Mathworks, Inc.",
            "The Mathworks, Inc.",
            "The Mathworks, Inc.",
            "The Mathworks, Inc.",
            "Sony Computer Entertainment Inc.",
            "Apple Inc.",
            "The Mathworks, Inc.",
            "International Business Machines Corporation",
            "The Mathworks, Inc.",
            "The Mathworks, Inc.",
            "Kan Zhao",
            "Samsung Electronics Co., Ltd.",
            "Microsoft Corporation",
            "Sap Se",
            "Taisong Kim",
            "Microsoft Corporation",
            "Sony Computer Entertainment Inc.",
            "Kan Zhao",
            "Sap Ag",
            "Microsoft Corporation"
        ],
        [
            "Title",
            "Typed intermediate representation for object-oriented languages",
            "Automated safe secure techniques for eliminating undefined behavior in computer software",
            "Automated safe secure techniques for eliminating undefined behavior in computer software",
            "Artifact management for an extensible runtime environment",
            "Automated safe secure techniques for eliminating undefined behavior in computer software",
            "Method and apparatus for application building using build styles",
            "Parallel programming interface to dynamically allocate program portions",
            "System and method for field diagnosis of wireless communications device system software",
            "Method and apparatus for performing conditional compilation",
            "Method of using parallel processing constructs and dynamically allocating program portions",
            "Media for using parallel processing constructs",
            "Device for performing parallel processing of distributed arrays",
            "Parallel processing of distributed arrays and optimum data distribution",
            "Method of using parallel processing constructs and dynamically allocating program portions",
            "Media for performing parallel processing of distributed arrays",
            "Multiple stage program recompiler using information flow determination",
            "Method and apparatus for application building using build styles",
            "Parallel programming interface to dynamicaly allocate program portions",
            "Control flow analysis using deductive reaching definitions",
            "Using parallel processing constructs and dynamically allocating program portions",
            "Performing parallel processing of distributed arrays",
            "Method and system for presenting and analyzing software source code through intermediate representation",
            "Compiling method and processor using the same",
            "Extending a development environment",
            "Extension mechanism for scripting language compiler",
            "Compiling method and processor using the same",
            "Programming language with extensible syntax",
            "Multiple stage program recompiler using information flow determination",
            "Method and System for presenting and analyzing software source code through intermediate representation",
            "Extension mechanism for scripting language compiler",
            "Extending A Development Environment"
        ]
    ],
    "pageTitle": "Patent US7305666 - Description language for an extensible compiler and tools infrastructure - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US7305666?dq=4168396",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 7,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986423.95/warc/CC-MAIN-20150728002306-00219-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 495604335,
    "recordOffset": 495557945,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6408=As noted above, in the case of dynamically generating an extended class the core class definitions 1010 and the class extension definitions 1020 are processed to create separate source code representations of the core class definitions and their extensions. Also, these separate source code representations are later compiled separately to generate separate files executable by a computer. In this case, unlike the static extensions described above, class extension members needed to extend a core class definition are not simply added to the source code header files with the extended class definitions. Instead, as shown in FIG. 10C, other code 1031 may be added to GET and SET class extensions that the dynamically extensible class definition expects to be added to the core class definition 1010 at runtime. Thus, in comparison to a static extension, the dynamic extensions may have the added overhead of having to execute some additional procedures 1031 in order to appropriately extend a class definition at runtime. Thus, typically the dynamic extensibility reduces the speed of a process but on the other hand provides for additional flexibility for providing extensions because in this approach the core and the extensions may be compiled separately. This allows for third parties to provide extensions to core class definitions without needing access to the source code of the core framework.}",
    "textBeforeTable": "Patent Citations Also, it should be understood that the programs, processes, or methods described herein are not related or limited to any particular type of computer apparatus. Various types of general purpose or specialized computer apparatus may be used with or perform operations in accordance with the teachings described herein. Actions described herein can be achieved by computer-readable media comprising computer-executable instructions for performing such actions. Elements of the illustrated embodiment shown in software may be implemented in hardware and vice versa. In view of the many possible embodiments to which the principles of our invention may be applied, it should be recognized that the detailed embodiments are illustrative only and should not be taken as limiting the scope of our invention. Rather, we claim as our invention all such embodiments as may come within the scope and spirit of the following claims and equivalents thereto. Having described and illustrated the principles of our invention with reference to the described embodiments, it will be recognized that the described embodiments can be modified in arrangement and detail without departing from such principles. Although, the technology described herein have been illustrated via examples using compilers, any of the technologies can use other software development tools (e.g., debuggers, optimizers, simulators and software analysis tools). Furthermore, the principles of generating extensions have been primarily described herein with reference to extending core classes, but the same principles are equally applicable to",
    "textAfterTable": "US6292938 Dec 2, 1998 Sep 18, 2001 International Business Machines Corporation Retargeting optimized code by matching tree patterns in directed acyclic graphs US6330717 * Feb 25, 1999 Dec 11, 2001 Sony Corporation Of Japan Process and system for developing an application program for a distributed adaptive run-time platform US6353924 Feb 8, 1999 Mar 5, 2002 Incert Software Corporation Method for back tracing program execution US6363522 Apr 23, 1999 Mar 26, 2002 Sun Microsystems, Inc. Method and apparatus for handling exceptions as normal control flow US6374368 May 21, 1999 Apr 16, 2002 Microsoft Corporation Weakest precondition analysis US6412109 Jan 29, 1999 Jun 25, 2002 Sun Microsystems, Inc. Method for optimizing java bytecodes in the presence of try-catch blocks US6421667 Jun 11, 1997 Jul 16, 2002 Edgar F. Codd Delta model processing logic representation and execution system US6460178 Jun 30, 1999 Oct 1, 2002 Microsoft Corporation",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}