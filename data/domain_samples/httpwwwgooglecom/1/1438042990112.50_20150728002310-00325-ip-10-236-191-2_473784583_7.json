{
    "relation": [
        [
            "Citing Patent",
            "US6349331 *",
            "US6839331",
            "US6883025",
            "US6930673",
            "US7133410",
            "US7174446",
            "US7278157 *",
            "US7318551 *",
            "US7346709",
            "US7450517",
            "US7471665",
            "US7493078",
            "US7558525",
            "US7567527",
            "US7590084",
            "US7593361 *",
            "US7629958 *",
            "US7668184",
            "US7668959 *",
            "US7684752",
            "US7715336",
            "US7849491",
            "US8116258",
            "US8125940",
            "US8246470",
            "US8366552",
            "US8385258",
            "US8463947",
            "US8526490",
            "US8606942",
            "US8711923",
            "US8769594",
            "US8953675",
            "US8964830",
            "US9061207",
            "US9077991",
            "US9084936",
            "US20020056577 *",
            "US20040073638 *",
            "US20040110463 *",
            "US20040110464 *",
            "US20040110468 *",
            "US20040160908 *",
            "US20040160986 *",
            "US20040246936 *",
            "EP1206070A2 *",
            "WO2002039308A1 *",
            "WO2005069545A1 *"
        ],
        [
            "Filing date",
            "Jun 5, 1998",
            "Mar 5, 2001",
            "Dec 7, 2001",
            "Nov 9, 2001",
            "Apr 5, 2001",
            "Apr 25, 2003",
            "Mar 14, 2002",
            "Nov 26, 2004",
            "Aug 28, 2002",
            "Jan 20, 2005",
            "May 5, 2007",
            "Dec 10, 2002",
            "Dec 10, 2002",
            "Apr 4, 2003",
            "Feb 14, 2003",
            "Feb 14, 2003",
            "Jul 6, 2004",
            "Oct 2, 2006",
            "Feb 27, 2002",
            "Dec 10, 2002",
            "Jul 15, 2003",
            "Dec 10, 2002",
            "Jun 27, 2003",
            "Jul 14, 2003",
            "Apr 18, 2008",
            "Aug 7, 2009",
            "Jul 12, 2004",
            "Jan 14, 2008",
            "Aug 7, 2009",
            "Jan 23, 2009",
            "Aug 7, 2009",
            "Jan 23, 2009",
            "Jan 23, 2009",
            "Aug 7, 2009",
            "Aug 7, 2009",
            "Aug 7, 2009",
            "Jan 23, 2009",
            "Nov 9, 2001",
            "Aug 28, 2002",
            "Dec 10, 2002",
            "Dec 10, 2002",
            "Mar 24, 2003",
            "Feb 14, 2003",
            "Apr 4, 2003",
            "Jul 12, 2004",
            "Oct 31, 2001",
            "Nov 9, 2001",
            "Jan 17, 2005"
        ],
        [
            "Publication date",
            "Feb 19, 2002",
            "Jan 4, 2005",
            "Apr 19, 2005",
            "Aug 16, 2005",
            "Nov 7, 2006",
            "Feb 6, 2007",
            "Oct 2, 2007",
            "Jan 15, 2008",
            "Mar 18, 2008",
            "Nov 11, 2008",
            "Dec 30, 2008",
            "Feb 17, 2009",
            "Jul 7, 2009",
            "Jul 28, 2009",
            "Sep 15, 2009",
            "Sep 22, 2009",
            "Dec 8, 2009",
            "Feb 23, 2010",
            "Feb 23, 2010",
            "Mar 23, 2010",
            "May 11, 2010",
            "Dec 7, 2010",
            "Feb 14, 2012",
            "Feb 28, 2012",
            "Aug 21, 2012",
            "Feb 5, 2013",
            "Feb 26, 2013",
            "Jun 11, 2013",
            "Sep 3, 2013",
            "Dec 10, 2013",
            "Apr 29, 2014",
            "Jul 1, 2014",
            "Feb 10, 2015",
            "Feb 24, 2015",
            "Jun 23, 2015",
            "Jul 7, 2015",
            "Jul 21, 2015",
            "May 16, 2002",
            "Apr 15, 2004",
            "Jun 10, 2004",
            "Jun 10, 2004",
            "Jun 10, 2004",
            "Aug 19, 2004",
            "Aug 19, 2004",
            "Dec 9, 2004",
            "May 15, 2002",
            "May 16, 2002",
            "Jul 28, 2005"
        ],
        [
            "Applicant",
            "Lsi Logic Corporation",
            "Sharp Laboratories Of America, Inc.",
            "Lsi Logic Corporation",
            "Gtco Calcomp",
            "Tellabs Operations, Inc.",
            "Dell Products L.P.",
            "International Business Machines Corporation",
            "Socket Communications, Inc.",
            "Tellabs Operations, Inc.",
            "Lg Electronics Inc.",
            "Onlive, Inc.",
            "Onlive, Inc.",
            "Onlive, Inc.",
            "Onlive, Inc.",
            "Onlive, Inc.",
            "Onlive, Inc.",
            "Logitech Europe S.A.",
            "Tellabs Operations, Inc.",
            "Ntt Docomo, Inc.",
            "Onlive, Inc.",
            "Onlive, Inc.",
            "Onlive, Inc.",
            "Onlive, Inc.",
            "OnLive",
            "Onlive, Inc.",
            "Ol2, Inc.",
            "Ol2, Inc.",
            "Tellabs Operations, Inc.",
            "Ol2, Inc.",
            "Ol2, Inc.",
            "Ol2, Inc.",
            "Ol2, Inc.",
            "Ol2, Inc.",
            "Ol2, Inc.",
            "Sony Computer Entertainment America Llc",
            "Sony Computer Entertainment America Llc",
            "Sony Computer Entertainment America Llc",
            "Kaye Stephen T.",
            "Jenkins David W.",
            "Perlman Stephen G.",
            "Perlman Stephen G",
            "Perlman Stephen G.",
            "Perlman Stephen G.",
            "Perlman Stephen G.",
            "Rearden Studios, Inc.",
            "Sharp Kabushiki Kaisha",
            "Gtco Cal Comp",
            "Ki-Hyoung Cho"
        ],
        [
            "Title",
            "Multiple channel communication system with shared autonegotiation controller",
            "Method to dynamically change all MIB parameters of a wireless data network",
            "Method for autonegotiating multiple devices with a shared autonegotiation controller",
            "Collaborative input system",
            "Method and system for designing ring-based telecommunications networks",
            "System and method for managing the boot sequence of an information handling system",
            "Efficient transmission of IP data using multichannel SOCKS server proxy",
            "Y-adapter with embedded wireless port",
            "Methods for assigning rings in a network",
            "Mobile ad hoc network system and operating method thereof",
            "Single transceiver architecture for a wireless network",
            "Antenna assembly for satellite and wireless services",
            "Mass storage repository for a wireless network",
            "Single transceiver architecture for a wireless network",
            "Self-configuring, adaptive, three-dimensional, wireless network",
            "Method of operation for a three-dimensional, wireless network",
            "Wireless input devices for computer system",
            "Method and system for designing ring-based telecommunications networks",
            "Link manager and link management method",
            "Wireless network providing distributed video / data services",
            "Method of operation for a three-dimensional, wireless network",
            "Apparatus and method for wireless video gaming",
            "Self-configuring, adaptive, three-dimensional, wireless network",
            "Self-configuring, adaptive, three-dimensional, wireless network",
            "Mass storage repository for a wireless network",
            "System and method for multi-stream video compression",
            "Self-configuring, adaptive, three-dimensional, wireless network",
            "Method of finding rings for optimal routing of digital information",
            "System and method for video compression using feedback including data related to the successful receipt of video content",
            "System and method for intelligently allocating client requests to server centers",
            "System and method for selecting a video encoding format based on feedback data",
            "Video compression system and method for reducing the effects of packet loss over a communication channel",
            "Tile-based system and method for compressing video",
            "System and method for multi-stream video compression using multiple encoding formats",
            "Temporary decoder apparatus and method",
            "System and method for utilizing forward error correction with video compression",
            "System and method for protecting certain types of multimedia data transmitted over a communication channel",
            "Collaborative input system",
            "Methods for assigning rings in a network",
            "Antenna assembly for satellite and wireless services",
            "Mass storage repository for a wireless network",
            "Wireless network with presentation and media layers for broadcast satellite and cable services",
            "Method of operation for a three-dimensional, wireless network",
            "Single transceiver architecture for a wireless network",
            "Self-configuring, adaptive, three-dimensional, wireless network",
            "Method to dynamically change all management information base (MIB) parameters of a wireless data network",
            "Collaborative input system",
            "Mobile ad hoc network system and operating method thereof"
        ]
    ],
    "pageTitle": "Patent US6092117 - System and method for automatically reconnecting a wireless interface device ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US6092117?ie=ISO-8859-1",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 7,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990112.50/warc/CC-MAIN-20150728002310-00325-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 473853563,
    "recordOffset": 473784583,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{69227=The configuration of the radio communication subsystem between the wireless interface device 100 and the remote host computer 101 or access point 109 conforms to the Open System Interconnection (OSI) reference model for data communications and implements the lower two layers of the seven-layer OSI model. In particular, with reference to FIG. 3, the physical layer 107 (WIRELESS PHY) may be a 2.4 GHz spread spectrum frequency hopping radio which replaces the LAN cable normally connected between workstations. The radio operates within the 2.4000-2.4835 GHz band, the unlicensed Industrial Scientific and Medial (ISM) band, and is divided into eighty-two 1 MHz channels. In a spread-spectrum, frequency-hopping radio, data is broadcast on one particular channel for a predetermined time (i.e. 400 msec); and then the system hops to another channel in a predetermined pattern to avoid interference., 191309=Three sources control the shut down signal SHUTDOWN: the keyboard controller 125 (FIG. 15); the pen controller 110A (FIG. 21) and a signal HOOK-- VCC, connected to the switching power supply 851 (FIG. 26) by way of the FET 904. These sources are diode ORed to the shut down signal SHUTDOWN by way of the diodes 645 and 647 (FIG. 20) and a diode 1102 (FIG. 28). During a normal state, the shut down signal SHUTDOWN is high, which enables the power supply 851 (FIG. 26). When the shut down signal SHUTDOWN goes low, the power supply 851 goes into an inactive state. During the inactive state, minimum power is supplied to the pen detection circuitry as discussed above., 201401=Referring first to FIG. 31, the mouse emulation system is event-driven by the passive pen. Initially the system checks to see if the passive Den has touched anywhere on the LCD 113C (FIG. 36), which includes a display area 1200 and a hot icon area 1202. If a pen-down event has been detected, the system checks in step 1204 if the wireless interface device 100 has been placed in a calibration mode. If so, a calibration handler is called in step 1206. The calibration handler does not form part of the present invention. If the wireless interface device 100 is not in the calibration mode, the system then checks to determine if the pen has been lifted from the LCD 113C in step 1208. If a pen-up event occurs subsequent to a pen-down event, control is passed to a hot icon identification (ID) processor (FIG. 32) in step 1210, which, as will be discussed below, processes the pen position to determine which of the hot icons in the hot icon area 1202 of the LCD screen 113C was selected. If the pen was not lifted from the LCD 113C, the system checks in step 1212 if the previous event in a previous cycle was a pen-up event. If the previous pen event in the previous cycle was a pen-down event, the current pen event is processed by a mouse mode handler (FIG. 33) in step 1214, which, as will be discussed in more detail below, determines if the pen is being used in a mouse MOVE or mouse TOUCH MODE. In step 1216, the coordinates of the current pen-down event are processed to determine if the current pen-down event occurred in the hot icon area 1202 of the LCD 113C. If the pen-down event occurred in the hot icon area 1202 (FIG. 36), a flag is turned on indicating the hot icon area 1202 was selected in step 1218. If the system determines the current pen-down event occurred in the display area 1200 (FIG. 36) of the LCD screen 113C, an audio click is generated in step 1220; different from the hot icon audio click., 233867=The system then checks in step 1420 whether the host computer 101 returned an acknowledgement that the private message was received. If an acknowledgement of the private message is not received by the wireless interface device 100, the attempt to enter the host control mode is aborted in step 1422. If an acknowledgement is received, the system checks in step 1424 if the mouse keyboard and mouse had been previously locked out by the wireless interface device 100 as discussed above. If so, the host keyboard and mouse are unlocked. Subsequently in step 1426, an internal flag is set indicating a request for termination of the connection with the host computer 101 in step 1428. The request for termination initiates a timer, which, when timed out, disconnects the wireless interface device 100 from the host computer 101. Thus, the system checks to determine if the host computer 101 is still connected to the wireless interface device 100 in step 1430. If so, the system determines if the request for termination has timed out in step 1432. If not, the system waits for the timer to time out and disconnects the wireless interface device 100 from the host computer 100. Once the wireless interface device 100 is disconnected, control of the host computer 101 is returned to the host computer 101., 240956=Activation of the remote keyboard macros is accomplished by pressing down on the user-defined hot icons 1472 or 1474, located in the hot icon area 1202 (FIG. 36) of the LCD 113C. The system checks in steps 1486 and 1488, whether the user defined hot icons 1472 or 1474 are selected. If the user-defined hot icons 1472 or 1474 are not selected, the system returns to step 1486. Once one of the user-defined hot icons 1472 or 1474 is selected, the keyboard scan code sequence, stored in the EEPROM 111B (FIG. 12), is retrieved for the selected hot icon 1472 or 1474 in step 1490, which are then individually transmitted to the host 101 in step 1492. These scan codes are then written to the keyboard buffer on the host 101 in step 1494. Subsequently, in step 1496, the host 101 processes the scan codes as though they originated from the host keyboard., 195562=The sensing of suspend state is done by the charge pump 994, which monitors the 5-volt power supply signal 5 V-- CORE. When the 5-volt power supply signal 5 V-- CORE goes low, indicating a suspend state, the leakage control signal LEAKAGE goes high, turning off the FETs 992, 998 and 1018, blocking leakage into the pen circuitry from the XPLUS terminal., 237681=If a response is received, the system identifies the unique node address from the responding hosts 101 in step 1452 and saves the unique host node addresses in step 1454. The list of available hosts 101 is searched in step 1456 for duplicate serial numbers. Should duplicate serial numbers be found in step 1458, a warning is generated in step 1460, warning the user that a duplicate copy of software is running on one of the responding hosts 101. In step 1462, the currently connected host is forced to appear as unavailable on the dialog box illustrated in FIG. 53., 112540=All of the ground pins GND on the system controller 129 are tied to the system ground. Both 3-volt and 5-volt power supplies are applied to the system controller 129. In particular, a 5-volt supply 5 V-- EG is applied to the power supply pins VDD of the system controller 129. The 5-volt supply 5 V-- EG is available from DC-to-DC converter 300 (FIG. 26) by way of a ferrite bead inductor 381 (FIG. 12). More particularly, a 5-volt supply signal 5 V-- CORE from the DC-to-DC converter is applied to the ferrite bead inductor 381, which, in turn, is used to generate the 5-volt supply signal 5 V-- EG. In order to stabilize the 5-volt supply signal 5 V-- EG, a plurality of bypass capacitors 1101-1111 (FIG. 13) are connected between the 5-volt supply 5 V-- EG and system ground., 239245=Referring to FIG. 37, the wireless interface device 100 includes two user-defined hot icons 1472 and 1474, located in the hot icon area 1202 (FIG. 36) of the LCD 113C, that can be used for the macros. These hot icons 1472 and 1474 are configurable in a set-up mode, which, as discussed above, is under the control of the set-up hot icon 1410 (FIG. 37). Once the set-up hot icon 1410 is selected, a hot key button 1470 on the dialog box illustrated in FIG. 54 is selected. As noted in FIG. 54, the dialog box includes two configurable macros. These macros are configured by way of the two edit fields 1472 and 1474 (FIG. 54). In order to configure the macros, the icon for the desired edit field 1472 or 1474 is selected. These edit fields 1472 and 1474 are configurable by way of a virtual on-screen keyboard (OSK), selectable by way of a hot icon 1480 (FIG. 37)., 114821=In order to assure proper operation of the system controller 129, a number of signals are pulled up to either five volts or three volts or pulled down by way of various pull-down resistors. More specifically, the signals IOCS16, MASTER, MEMCS16, REFRESH, ZWS, IOCHCK, GPI01/MDDIR and GPI02/MDEN are pulled up to the 5-volt supply 5 V-- EG by way of a plurality of pull-up resistors 1113-1129, respectively. Similarly, the signals BUSY, FERR, LOCAL, SMIADS and RDY are pulled up by a plurality of pull-up resistors 1131 through 1139. In addition, the general purpose chip select signals GPCS1 and GPCS2 are pulled up to the 5-volt power supply signal 5 V-- EG by way of a pair of pull-up resistors 375 and 377. Certain signals are pulled low by way of pull-down resistors in order to assure their operating state. In particular, the signals KBC-PO4, LB/EXTACT, RING, EXTACT/VLCLK and HRQ206 are pulled down by the pull-down resistors 388 to 396. The signal BLAST is tied directly to the system ground., 185129=A pen shut-down signal PEN-- SHUTDOWN is used to develop a shut-down signal SHUTDOWN as discussed above for turning on the switching power supply 851 (FIG. 26). The pen shutdown signal PEN-- SHUTDOWN is developed by the circuit that includes the transistors 1060, 1062 and 1064; a plurality of resistors 1066, 1068, 1069, 1070 and 1072; and a capacitor 1074. In particular, a 5-volt power supply signal 5 V-- CORE is applied to a pair of voltage-dividing resistors 1070 and 1072, which, in turn, is used to bias the transistor 1064 on. The base-emitter voltage is held fairly constant by the capacitor 1074. Once the transistor 1064 is turned on, it is used to control the FET 1062. A main power supply signal POWER is applied to the gate of the FET 1062 by way of the resistor 1069. Wake up of the system by way of the pen subsystem is discussed below., 251356=If it is determined in step 1576 that the sleep-face hot icon 1410 is selected, the system checks in step 1580 whether a double pen-down event occurred at the location of the sleep-face hot icon 1410. As mentioned above, the sleep-face hot icon 1410 causes the wireless interface device 100 to go into a low-power mode. However, before placing the wireless interface device 100 in a low-power mode, the node address of the host 101 to which the wireless interface device 100 is connected is saved in a specific location of the DRAM 111A and, in turn, written to the EEPROM 111B in step 1582. After the node address is saved, the wireless interface device 100 is powered down in step 1584., 223592=The multiplexer IPXMUX.COM 1364 multiplexes or interleaves the data from both the wireless LAN card driver 1354 and the wired LAN card driver 1362 to the IPXODI protocol by manipulating the source and destination addresses of incoming and outgoing packets, so that as far as the Novell IPXODI protocol is concerned, it is only communicating with a single LAN card. Similarly, communication from the host computer 101, as well as applications 1358, which may be running on the wireless interface device 100, to both the wired LAN card 1352 and the wireless LAN card is formatted by the IPXODI.COM and multiplexed to either the wireless LAN card 1360 or wired LAN card 1352 by the multiplexer IPXMUX.COM by way of the link support layer. The multiplexer IPYMUX.COM 1364 is loaded after the wired LAN card driver 1354 and the wireless LAN card driver 1362 are loaded and before IPXODI.COM 1355., 242969=Subsequently, the maintenance button on the dialog box is selected to get to the dialog box illustrated in FIG. 55. An upgrade button 1502 on the dialog box illustrated in FIG. 55 is selected in step 1504. In order to prevent programming errors, the radio quality is checked in step 1506 before proceeding. If the radio quality is poor, the upgrade is aborted. If the radio quality is adequate, power management is disabled in step 1508 to prevent the wireless interface device 100 from going into a reduced power state as discussed above during programming of the flash memory devices 742-748. After the power management is disabled, a portion of the DRAM memory 111A (FIGS. 18 and 24) in the wireless interface device 100 is set aside to receive a flash sector from the host computer 101 in step 1510. Subsequently, the wireless interface device 100 polls the host computer 101 to determine the correct numbers of sectors in the flash update and whether the sectors are available on the hard disk of the host computer 101 in steps 1512 and 1514. If the flash update files are not on the host hard drive or an incorrect number of sectors are available on the host hard disk, the update is aborted. Otherwise, the system requests the path/file data from the host computer 101 in step 1516. Subsequently, each sector (file) in the flash update is read by the host computer 101 and uploaded over the radio to the DRAM 111A in the wireless interface device 100 in step 1518. After the sectors are written to the DRAM 111A in the wireless interface device 100, a BIOS call is made to write the sectors in the DRAM 111A to the flash memory devices 742-748 in step 1520., 226985=Once the address of the LSL initialization entry point is known by the IPXODI protocol, the IPXODI protocol will call that address for service. Thus, all LSL service calls are checked in step 1382 (FIG. 49) to determine if the call is a request for protocol support API entry point. If not, the multiplexer IPXMUX.COM will direct that call into LSL.COM. If so, an address of a special 2F interrupt handler (LSL Protocol Support API Handler) supported by IPXMUX.COM is returned to IPXODI.COM in step 1384., 208542=As will be discussed in more detail below, the host manager Windows module 1260 modifies a Windows configuration file. (WIN.INI) and, in particular, the distance and time limitations for a mouse button double click. In particular, the Windows system checks the Windows configuration file WIN.INI in order to compare the distance between the mouse locations for each of the clicks as well as the time between clicks. More particularly, the Windows systems will only pass double click data to a Windows application program if the distance (i.e. height and width) between mouse locations for the two clicks is less than 16 for both height and width and the time between the clicks is less than 1.0 seconds., 170534=Input power to the DC-to-DC converter 300 may be from an AC/DC converter (not shown) connected to the plug 633, which has a DC output voltage between 5.5-15 volts DC, applied to a power supply terminal AC/DCIN FIG. 28) as well as internal batteries, for example, the IBP 130, connected to the system by way of a connector 850 (FIG. 26). The battery supply voltage from the IBP 130 is connected to the battery positive terminal BATT (FIG. 28). The two supplies BATT and AC/DCIN are alternatively used to develop a main power signal POWER (FIG. 28), that is applied to a switching power supply 851, for example, a Maxim type 786 by way of a pair of FETS 854 and 856 (IL. 26), under the control of a main power switch 855 (FIG. 28). The main power signal POWER is applied to a drain input D2 on each of the FETS 854 and 856. A bypass capacitor 860 is connected to the drain terminal D2 of the FET 856 and system ground. The source terminals S2 of each of the FETS 854 and 856 is connected to the switching power supply 851 to provide 5- and 3-volt references by way of the zener diodes 860 and 862, respectively. The gate terminals G1 and G2 of the FETS 854 and 856 are under the control of the switching power supply 851., 228918=If the protocol API call is not to register the protocol stack, the system then checks in step 1392 whether a special registration service, a bind stack service, is requested. A bind stack service, normally done before registration, is used to set up a protocol for communication, i.e. packet length, etc. If bind stack service is requested, an IPXMUX Bind Stack API handler in step 1394 is called, which forces IPXODI to bind to the wired LAN card 1352 to which IPXODI is bound before the wireless LAN card 1360 was installed in order to be compatible with the IPXODI protocol. The IPXMUX bind stack handler also saves the process ID of the binding for sending and receiving packets., 236456=In order to initiate connection of the wireless interface device 100 to an available host 101, the set-up hot icon 1410 (FIG. 37) is selected in step 1439 (FIG. 59) which causes a set-up dialog box, as illustrated in FIG. 53 to be displayed in the viewing area 1202 (FIG. 36) of the LCD 113C. Subsequently, in step 1440, the wireless interface device 100 broadcasts network packets to be received by all available hosts 101 in range that are on the same channel and domain as the wireless interface device 100. After the network packets are broadcast, the wireless interface device 100 listens for a predetermined time period in steps 1442 and 1444 for return acknowledgement packets from the available hosts 101, which contain, among other things, the node addresses of the available hosts 101. After the time-out period the wireless interface device 100 terminates listening for responses from the available hosts 101 in step 1446. After listening is terminated, the system checks the number of responses received in step 1448. If no responses are received, the wireless interface device 100 repeats the cycle (i.e. returns to step 1440) for a predetermined number of retries as determined in step 1450., 257686=If it is determined in step 1622 that the host 101 is running a Windows application, the occlusion region on the host 101 is established by way of a private message sent by the wireless interface device 100 to the host 101 in step 1624. After the private message is sent, the system checks in step 1626 to determine if it was successfully sent. If not, the system proceeds to step 1612 and checks to determine if an OSK is currently visible. If the private message is successfully sent, the system checks in step 1628 whether the private message was successfully received by the host 101. If so, the system goes to step 1630 and checks whether the private message was acknowledged by the host 101. If so, the system goes to step 1616 and draws the OSK at the user-requested coordinates. If not, the system goes to 1612. If it is determined in step 1628 that the private message has not been received, the system continually checks for receipt of the private message for a predetermined time-out period in step 1632. Should a time-out occur before the private message is acknowledged by the host 101, the system again will go to step 1612., 227960=The entry point of the LSL Protocol Support API Handler in IPMMUX.COM from the standpoint of IPXODI.COM is the protocol support API within the link support layer LSL. Since the link support layer LSL.COM supports various protocols, such as IPXODI and TCPIP, registration of the IPXODI.COM protocol is checked in step 1386. If the call to the link support layer LSL is to register a protocol stack, an IPXMUX register protocol stack application program interface (API) handler in step 1388 checks whether the protocol stack is IPXODI. If the protocol stack is IPXODI, the protocol stack handler sets a packet receive handler, supported by IPXMUX.COM and calls LSL.COM's protocol stick API to register the protocol. The protocol stack handler also saves the stack ID. Subsequently, in step 1390, an IPXMUX Receive Routine Linker sets the protocol stack IPXODI's receive routine address to the packet receive address supported by IPXMUX.COM., 225201=If the command was to load IPXMUX, the system checks in step 1374 to determine if the link support layer LSL.COM 1356 has been loaded. If not, the system exits the initialization routine since IPXMUX.COM cannot be loaded until the link support layer LSL.COM has been loaded If the link support layer LSL.COM 1356 was loaded, control is passed to a LAN configuration browser in step 1376 to browse the LAN configuration for the number of LAN cards and the frame types of the cards and the number of frame types (i.e. IEEE 802.2, 802.3, etc.) to find out which LAN card drivers are running. In addition, the browser finds and saves all relevant application program interface entry points to the link support layer LSL.COM and sets to those supported by IPXMUX. COM. The browser also sets the LSL interrupt vector to the interrupt vector supported by IPXMUX.COM, as well as finds and saves all logical board numbers., 253434=As mentioned above, the wireless interface device 100 includes a virtual on-screen keyboard (OSK), as illustrated in FIG. 66. More particularly, the OSK is configurable by the buttons 1590, 1592, 1594 and 1596 in a control box located at the top of the OSK. These buttons 1590, 1592, 1594 and 1596 enable the OSK to be configured. For example, a button 1590 displays the OSK as illustrated in FIG. 66A with a full keyboard and numeric keypad. The button 1592 is a toggle which displays the keyboard without the numeric keyboard as illustrated in FIG. 66B. The button 1594 displays the numeric keypad with the NUM LOCK off as illustrated in FIG. 66C, or alternatively displays the OSK as a numeric keyboard NUM LOCK on as illustrated in FIG. 66D. The button 1596 allows the size of the OSK to be varied. The \"X\" button closes the window displaying the OSK., 213252=Referring to FIG. 40, anytime the host manager DOS module 1280 is loaded, an initial connection status checker 1290 calls the host manager DOS module 1280 to obtain the current connection status between the wireless interface device 100 and the host computer 101. Next, the system checks in step 1292 whether a connection exists between the host computer 101 and the wireless interface device 100. If not, the system returns. If there is a connection, a virtual key poster 1294 posts a virtual key V-- TAB into the Windows Systems queue to force the Windows program to disable the current active screen saver automatically, which, in essence, simulates the press of a key on a keyboard. Once the current active screen saver is disabled, the screen saver on/off flag in a Windows configuration file is turned off in step 1296 to disable the screen saver until there is a change in the connection status., 153164=The video controller 113A (FIG. 19) controls the video functions. The video controller 113A, for example, a model number CL-GD 6205 from Cirrus Logic, can support various video modes including a mono STN and a color TFT panel with up to 640\ufffd480 with 64 shades of gray. In addition, the video controller 113A will support 1024 by 768 resolution with 16 colors on a CRT through the aid of its on-board digital to analog converter., 257024=If it is determined in step 1606 that the host 101 is not in a text mode, the system checks in step 1618 whether the host 101 is in a graphics mode. If not, the system goes to step 1620 and sets the video mode to VGA graphics in the wireless interface device 100 and subsequently proceeds to step 1608 to establish the occlusion region in the host 101 by host control drivers. If the host is in a graphics mode, the system next checks in step 1622 whether the host 101 is running a Windows application. If not, the system returns to step 1608 and establishes the occlusion region on the display of the host 101 using the host control drivers., 252064=The system discussed above is thus able to automatically connect the wireless interface device 100 to the last host 101 to which it was connected. After the automatic reconnect, should the set-up window hot icon 1410 (FIG. 37) be selected, the host selection set-up dialog box illustrated in FIG. 53 will be displayed on the screen 113C of the wireless interface device 100. Subsequently, the system will go to step 1554 and check whether the wireless interface device 100 is connected to a host 101. In this case, since the wireless interface device 100 will still be connected to the available host, the system then checks in step 1586 whether a disconnect button on the host selection dialog box illustrated in FIG. 53 has been depressed. If not, the system goes to step 1556 and continuously waits for a hot icon in the hot icon area 1202 (FIG. 36) of the LCD 113C to be depressed. If the disconnect button in the host selection set-up dialog box illustrated in FIG. 53 is depressed, the node address for the host 101 to which the wireless interface device 100 is connected is erased from the specific location in the DRAM 111B in step 1588. Subsequently, the system goes to step 1556 and waits for a hot icon in the hot icon area 1202 (FIG. 37) to be depressed., 218476=Whenever a 12-bit serial pen packet is generated by the pen controller 110A and read by a firmware module in step 1330 (FIG. 41), an interrupt is generated in step 1332. A pen packet assembler assembles the packets into pen points (p1, p2, p3, p4). These pen points (p1, p2, p3, p4) are processed and passed to the applications program. In order to process each pen point (p1, p2, p3, p4), the interrupts must be disabled. During the time when the interrupts are disabled, the pen point packets (p1, p2, p3, p4) and the pen-up packets p5 are generated by the pen controller 111A but not processed and thus are garbled or lost. Lost or garbled pen point packets (p1, p2, p3, p4) do not affect mouse emulation. However, since mouse emulation is based on both pen-down and pen-up events, lost pen-up packets p5 can result in the mouse emulation being hampered, possibly resulting in the system being stuck in the state preceding the pen-up event., 230317=Incoming packets are handled by an incoming packet handler illustrated in FIG. 32. In particular, incoming packets are checked in step 1404 whether the source address of the packet is from the wireless LAN card 1360. If not, the system returns. If so, the packet's source mode address is saved and set to the mode address of the wireless LAN card 1360 while the pocket destination address is set to the address of the wired LAN card 1352 to which IPOXDI is bound., 226134=In order to interleave the data from the wired LAN card 1352 (FIG. 46) and the wireless LAN card 1360 to IPXODI.COM to emulate a single LAN card, 2F interrupt calls from the application program by way of IPXODI.COM are trapped and handled by a separate routine. In particular, 2F interrupt calls are checked in step 1378 to determine if such calls are interrupt calls to LSL.COM. If not, the system exits. If so, the address of the LSL protocol support API handler supported by IPXMUX.COM is returned. Interrupt calls to LSL.COM from an application program are handled by a special interrupt handler. If the interrupt call is to LSL.COM, a LSL initialization entry point, supported by IPXMUX.COM is returned in step 1380. The LSL initialization entry point represents an address of the protocol initialization routine into LSL.COM., 230878=The wireless interface device 100 includes a hot icon 1408 (FIG. 37) in the hot icon area 1202 (FIG. 36) of the LCD 113C for switching control of the host computer 101 from the wireless interface device 100 and the host computer 101. While the wireless interface device 100 has control of the host computer 101, the user has the option to dim the screen of the host computer 101, as well as lock out the keyboard and mouse inputs. In particular, with reference to FIG. 37, a set-up window hot icon 1410 may be selected. Activation of the set-up window icon causes one of five selectable set-up dialog boxes to be displayed in the viewing area 1200 (FIG. 36) of the LCD 113C on the wireless interface device 100. These dialog boxes are illustrated in FIGS. 53-57, which can be selected by a graphical button bar 1412 (FIG. 53). When the \"host\" button is selected, a list of host computer groups that are accessible by the wireless interface device 100 as well as the specific host to which the wireless interface device 100 is connected are displayed. When the wireless interface device 100 has control of the host computer 101, the host computer screen can be dimmed and the host keyboard and mouse can be locked out by placing the pen down in the box next to those functions in the dialog box illustrated in FIG. 53. FIG. 54 relates to setting up remote keyboard macros. FIG. 55 is a maintenance dialog box which enables various maintenance functions, such as calibration of the pen, rebooting of the host, and the like. FIG. 56 relates to power settings, and in particular includes an inactivity timer for timing periods of inactivity in order to place the wireless interface device 100 in a low-power state. FIG. 57 is selectable by the screen button and enables the brightness and contrast of the LCD 113C on the wireless interface device 100 to be adjusted., 56523=This case is a continuation-in-part of to the following copending application: STRUCTURE AND METHOD FOR CONTROLLING A HOST COMPUTER USING A REMOTE HAND-HELD INTERFACE DEVICE, by B. R. Banerjee, S. C. Gladwin, A. Maskatia and A. Soucy, filed Sep. 2, 1994, Ser. No. 08/300,500. This case is also related to the following copending applications, all filed on even date: REMOTE CONTROL INTERFACE, by B. R. Banerjee, S. C. Gladwin, A. Maskatia and A. Soucy Ser. No. 08/543,700; RADIO FLASH UPDATE, by D. Bi, H. Hsiung and J. Wilson, Ser. No. 08/543,463; MOUSE EMULATION WITH PASSIVE PEN, by D. Bi, G. Cohen, M. Cortopassi, J. George, S. C. Gladwin, H. Hsiung, P. Lim, J. Parham, A. Soucy, D. Voegeli and J. Wilson, Ser. No. 08/543,786, now abandoned in favor of continuation U.S. patent application Ser. No. 08/957,398, filed on Oct. 23, 1997; RESUME ON PEN CONTACT, by M. Cortopassi, S. C. Gladwin and D. Voegeli, Ser. No. 08/543,510; SCREEN SAVER DISABLER, by D. Bi, S. C. Gladwin and J. Wilson, Ser. No. 08/543,698; IPX DRIVER FOR MULTIPLE LAN ADAPTERS, by D. Bi, Ser. No. 08/553,808; DISASTER RECOVERY JUMPER, by M. Cortopassi, J. George, J. Parham and D. Voegeli, Ser. No. 08/543,423; RC TIME CONSTANT, by M. Cortopassi, Ser. No. 08/543,697; DOUBLE PEN UP EVENT, by D. Bi and J. George, Ser. No. 08/543,787; REMOTE OCCLUSION REGION, by J. Wilson, Ser. No. 08/543,701; BROADCAST SEARCH FOR AVAILABLE HOST, by D. Bi, S. C. Gladwin and J. Wilson, Ser. No. 08/543,599; REMOTE KEYBOARD MACROS ACTIVATED BY HOT ICONS, by S. C. Gladwin and J. Wilson, Ser. No. 08/543,788; HOST/REMOTE CONTROL MODE, by M. Cortopassi, J. George, S. C. Gladwin, H. Hsiung, P. Lim, J. Parham, D. Voegeli and J. Wilson, Ser. No. 08/551,936; PASSWORD SWITCH TO OVERRIDE REMOTE CONTROL, by D. Bi, S. C. Gladwin and J. Wilson, Ser. No. 08/543,785; and PORTABLE TABLET, by G. Cohen, S. C. Gladwin, P. Lim, J. Smith, A. Soucy, K. Swen, G. Wong, Ken K. Wood and G. Wu, Ser. No. 29/045,319, now U.S. Design Pat. No. 385,857 issued on Nov. 14, 1997., 209265=With a pen-based system two pen-down events separated by a pen-up event normally take longer and occur at greater distances between pen-down events than allowed by the Windows system to generate a double click. Thus, the host manager Windows module 1260 modifies the time and distance parameters to enable two pen-down events separated by a pen-up event to enable Windows to emulate a mouse double click that can be passed on to the Windows application program running in the host computer 101. In particular, the host manager Windows module 1260 includes is an initializer 1262 which loads the host manager Windows module 1260, and an initial icon displayer 1264, which displays that the host manager Windows module 1264 has been loaded. The host manager Windows module 1260 also includes a double click configuration modifier 1266. The double click configuration modifier 1266 modifies the configuration of the Windows systems file WIN.INI by modifying the time or speed in step 1268. The distance, broken down into width and length, between the successive pen-down events, is modified by a double click width modifier and a double click height modifier in steps 1270 and 1272. The modified speed, width and height parameters are set in the Windows system file WIN.INI running in the host computer 101 in step 1274 to enable a mouse button double click to be emulated by two successive pen-down events., 132546=The various clock signals used for the system are provided by the clock generator circuit 398 (FIG. 13). The clock circuit 398 includes a clock generator, for example, an Integrated Circuit Designs Model No. ICD2028. A 14.318 MHz crystal 484 and a 32.768 KHz crystal 486 are applied to the clock generator 488. In particular, the crystal 484 is applied to a pair of X1 and X2 input pins along with a plurality of capacitors 489, 490, 492 and an input resistor 494. Similarly, the crystal 486 is applied to input pins XSYSB1 and XSYSB2. A pair of capacitors 496 and 498 are connected across the crystal 486., 219439=In order to solve this problem, a firmware module 1330 generates two pen-up packets p5. More particularly, with reference to FIG. 42, the firmware module 1330 reads in the 12-bit serial data from the pen controller 110A into packets in step 1334. Next, the system checks in step 1336 whether the packet was a pen-up packet p5. If not, the system proceeds to the pen driver in step 1332 (FIG. 41). If the packet is a pen-up packet p5, the system checks to determine if the pen-up packet p5 is the first pen-up packet in step 1338. If not, the system passes the packet to the pen driver in step 1332 as discussed above. If the system determines in step 1338 that the pen-up packet p5 is the first pen-up packet p5, the serial data for second pen-up packet p5 is generated in step 1340 and assembled in step 1334. In addition, the first pen-up packet p5 is passed to the pen driver., 246577=As mentioned above, the wireless interface device 100 can be connected to any of the available hosts 101 that appear in the dialog box illustrated in FIG. 53 in the manner described above. The system illustrated in FIGS. 64A and 64B obviates the need for the user to select a host 101 for connection each time the wireless interface device 100 is powered up, by automatically connecting the wireless interface device 100 to the last host 101 to which it was successfully connected. As will be discussed in more detail below, when a host 101 is selected from the dialog box illustrated in FIG. 53 for connection to the wireless interface device 100 and a connection is successfully achieved, the node address of that host 101 is stored in the EEPROM 111B (FIG. 12). Subsequently, once the wireless interface device 100 is powered up in step 1544, the system 1o reads the node address from the EEPROM 111B, and reads it to a specific location in DRAM 111A (FIGS. 18 and 24) in step 1546. After the node address is written to the DRAM 111A, the system checks the node address to determine whether it is valid in step 1548. Invalid node addresses 15occur anytime the wireless interface device 100 makes an attempt to connect to a host 101, which fails during automatic reconnecting or is later disconnected by the end user. Thus, if a successful connection is not made or if there is a manual disconnection, the node address is cleared from the DRAM 111A in step 1550 and thus will be invalid. Subsequently, if the automatic reconnect fails in order to facilitate connection of the wireless interface device 100 to another available host 101, the set-up dialog box illustrated in FIG. 53 is displayed on the display 113C of the wireless interface device 100 in step 1552. After the host selection set-up dialog box is displayed on the wireless interface device 100, the system checks in step 1554 whether the wireless interface device 100 is connected to an available host 101. Normally, if an invalid address is found in step 1548 and the host selection set-up dialog box appears on the display 113C of the wireless interface device 100, there will be no connection to an available host 101 and the system will jump to step 1556, where it checks if the hot icon area 1202 (FIG. 37) has been depressed. Normally in this situation, since the host selection dialog box is already being displayed on the screen 113C of the wireless interface device 100, the only hot icon that can affect the situation is a sleep-face hot icon 1558 (FIG. 37), which places the wireless interface device 100 in a low-power sleep mode. In a normal situation when the wireless interface device 100 is first powered up, the sleep-faced hot icon 1558 is not depressed and the system waits for the user to select an available host 101 from the host set-up dialog box illustrated in FIG. 53 as discussed above in step 1560. Once an available host 101 is selected, the system loops back to step 1562 and attempts to establish connection with the selected host 101., 183912=A 5-volt signal PENACT-- 5 V, available at the port P5 V pin of the microcontroller is converted to a 3-volt signal PENACT-- 3 V by way of a pair of voltage dividing resistors 1042 and 1044. This signal PENACT-- 3 V is applied to a 3-volt terminal of the system controller 129 (FIG. 12). As discussed above, the power supply for the FETs 992 and 1018 is provided by the charge pump 994. The power supply for the charge pump 994 is a 5-volt power supply signal 5 V-- CORE, available at the DC-to-DC converter 300 (FIG. 26). A ground terminal of the charge pump 994 is connected to system ground by way of a pull-down resistor 1050. The 5-volt power supply PEN-- VCC is also utilized by the shift register 982 and the data buffer 984 and buffered by way of a pair of bypass capacitors 985 and 987., 206641=Pen events in the hot icon area 1202 of the LCD display 113C are handled by the hot icon ID processor 1210 (FIG. 32), while pen events in the viewing area 1200 are handled by the mouse mode handler 1214 (FIG. 33). The mouse mode handler 1214 emulates two mouse actions: moving without either button being depressed and released (MOVE); and button depression and release events (TOUCH). As discussed above, both left and right mouse button events can be emulated in the TOUCH., 211064=As mentioned above, the wireless interface device 100 connects to a host computer 101 and displays whatever is being displayed on the host computer 101. In particular, after a connection is made, all of the screen images on the host computer 101 are passed on to the LCD display 113C on the wireless interface device 100. Whenever the host computer 101 is running a screen saver, the host display will continually change, passing on all of the images to the LCD 113C on the wireless interface 100, which creates a lot of unnecessary traffic on the LAN. In order to reduce this unnecessary LAN traffic, a host manager Windows module 1278 (FIG. 39) disables the screen saver on the host computer 101 anytime a connection is made between the host computer 101 and the wireless interface device 100. Anytime the connection between the host computer 101 and the wireless interface device 100 is broken, the host manager Windows module re-enables the screen saver on the host computer 101., 221713=The standard Novell LAN stack conf iguration is illustrated in FIG. 45. The LAN card is identified with the reference numeral 1352. Communication between the LAN card 1352 and the IPXODI protocol is by way of a driver 1354. The driver 1354 communicates with the IPXODI protocol (IPXODI.COM) 1355 by way of a link support layer LSL.COM 1356. The Novell IPXODI protocol passes data between the applications programs 1358 and the link support layer LSL.COM 1356. Even though the link support layer LSL.COM can support multiple LAN cards, the IPXODI protocol only supports a single LAN card., 229622=If the protocol API call is not a register protocol stack or a bind stack service, the system checks in step 1396 whether send packet service is requested. If not, the system exits and the service call is handled by LSL.COM. If so, an IPXMUX send packet routine is called in step 1398 and 1400 (FIG. 51), which sets the address of the wireless LAN card 1360 as the source node address in step 1402. The packet modifier also sets the node address of the wireless interface device 100 as the packet's destination mode address in step 1400 (FIG. 51). The send event service routine address is set to the address of the send event service routine in IPXMUX.COM before it returns., 233234=Initially in step 1414 (FIG. 58) the system determines if the hot icon area 1202 of the LCD 113C on the wireless interface device 100 was pressed. As illustrated in FIG. 37, the hot icon area 1202 includes several hot icons. Thus, the system checks in step 1416 whether the host control mode hot icon 1408 (FIG. 37) was selected. If not, the system loops back to step 1414 and waits for the hot icon area to be pressed. If the host control mode hot icon 1408 was selected, the wireless interface device 100 sends a private message (i.e. pocket) to the host computer 101 in step 1418, requesting host control mode., 204450=As mentioned above, the system is able to emulate both left and right mouse buttons. This emulation is accomplished by way of left/right mouse button hot icon 1232 (FIG. 37). A left mouse button is configured to be the default setting. This hot icon 1232 is set up as a toggle. Thus, when the system is first turned on, the pen events from the mouse mode handler are translated to be left mouse button events. Anytime the left/right mouse button hot icon 1232 is selected, the system will toggle and translate subsequent pen events to be right mouse button events. A subsequent pen-down event on the hot icon 1232 causes subsequent pen events from the mouse mode handler to be translated as left mouse button events and so on., 235188=In order to obviate the need to reconfigure the wireless interface device 100 the next time the wireless interface device 100 is connected to the host computer 101, the system checks in step 1434 whether any of the configuration data (i.e. contrast, brightness (FIG. 57) was changed. If not, the wireless interface device 100 is placed in a suspend mode in step 1436. If the configuration data did change, the new configuration data is saved in the EEPROM 111B (FIG. 12) in step 1438., 196034=The system ON/OFF switch 855 (FIG. 28) enables the system to be completely shut off. When the switch 855 is closed, power from either the IBP 130 or the external AC-to-DC converter supplies power to the system. In order to wake up the system from an OFF state, a shutdown line SHUTDOWN must be held high until the keyboard controller 125 pulls its shutdown pin KB-- SHUTDOWN high. As discussed above, the keyboard shutdown signal KB-- SHUTDOWN is diode ORed relative to the shutdown signal SHUTDOWN, which controls the power supply 851 (FIG. 26). Until the time when the keyboard shutdown signal KB-- SHUTDOWN is pulled high, a signal HOOK-- VCC is used to force the shut down signal SHUTDOWN high. As mentioned above, the HOOK-- VCC signal is also diode ORed relative to the shutdown signal SHUTDOWN by way of the diode 1102 (FIG. 28). However, for proper operation of the system, the shutdown signal SHUTDOWN will be under the control of the keyboard controller 125 (FIG. 15) after the system is turned on Thus, a 5-volt power supply signal HOOK-- VCC, available at the power supply 851 (FIG. 26), forces the shut down signal SHUTDOWN high until the keyboard controller 125 (FIG. 15) has time to pull its keyboard shutdown signal KB-- SHUTDOWN high. The 5-volt power supply signal HOOK-- VCC is always high when the main power switch 855 is turned on. On power-up, the 5-volt power supply signal HOOK-- VCC forces the shutdown signal SHUTDOWN (FIG. 28) high by way of an FET 1104 and the diode 1102, which, in turn, wakes up the power supply 851 (FIG. 26). Once the power supply 851 is enabled, a power supply signal MAX 786-- VCC is used to turn off the FET 1104 to place the control of the shut down signal SHUTDOWN under the control of the keyboard controller 125 as discussed above. In order to provide sufficient time for the keyboard controller 125 to pull its keyboard shutdown signal KB-- SHUTDOWN high, the turn OFF of the FET 1104 is delayed by way of a resistor 1106 and a capacitor 1108. In particular, once the main power switch 855 is closed, the power supply signal MAX786-- VCC will be low, thereby causing the FET 1104 to be turned ON, which connects the power supply signal HOOK-- VCC to the shutdown signal SHUTDOWN by way of the diode 1107. Once the power supply 851 is enabled, the signal MAX786-- VCC, applied to the gate of the FET 1104, turns off the FET 1104, placing the shutdown signal SHUTDOWN under the control of the keyboard controller shutdown signal KB-- SHUTDOWN as discussed above. The resistor 1106 and capacitor 1108 delay the turning off of the FET 1104 after the signal MAX786-- VCC goes high for a sufficient time to allow the keyboard controller 125 to pull its keyboard shut down signal KB-- SHUTDOWN high., 222320=In order to enable the Novell IPXODI protocol to support a configuration as illustrated in FIG. 44 to enable the wireless interface device 100 to connect to both a wired LAN card 1352 and a wireless LAN card 1360, an additional layer IPXMUX.COM (FIG. 46) is provided for multiplexing incoming and outgoing packets to and from the wired LAN card 1352 and the wireless LAN card 1360. The multiplexer IPXMUX.COM manipulates the data packet source and destination addresses to simulate a single LAN card so as to be compatible with the IPXODI protocol. By providing the additional layer IPXMUX.COM, the host computer 101, as well as the wireless interface device 100, will be able to access all of the LAN resources 1350 (FIG. 44)., 115863=As mentioned above, the system controller 129 is capable of running at different clock frequencies, depending upon the voltage applied, while supplying a clock signal to the CPU 112. Even though the system controller 129 can supply either a 1X or a 2X clock signal to the CPU 112, the system controller 129 requires a 2X clock for proper operation. Thus, a 2X clock signal CLK2IN, available from a clock generator circuit 398 (FIG. 13); is applied to the clock 2X pin CLK2IN of the system controller 129. In addition, 32 kilohertz (KHz) and 14 megahertz (MHz) clock signals are also applied to the system controller 129, available from the clock generator circuit 398, for proper operation. The system controller 129, in turn, provides a CPU clock signal CPUCLK to the CPU 112 and in particular to its clock 2-pin CLK2 by way of a resistor 1141 and the capacitors 1143 and 1145., 242362=In order to upgrade the flash memory devices 742-748, the upgrade disks are installed in an available host computer 101. In particular, the flash upgrade software is written to a predetermined directory on the host's 101 hard disk. After the flash upgrade disks are installed, the wireless interface device 100 is turned on in step 1498 (FIG. 62A) by way of the main power switch 855 (FIG. 28). Subsequently, in step 1500, a connection between the host computer 101 and wireless interface device 100 is initiated in step 1500 by first selecting the configuration hot icon 1410 (FIG. 37)., 145135=The keyboard controller 125 also controls the brightness of the LCD display. In particular, brightness adjustment signals BRIGHTNESS-- UP, BRIGHTNESS-- DOWN (FIG. 15) are available at port 1, pins 6 and 7. These signals BRIGHTNESS-- UP and BRIGHTNESS-- DOWN are normally pulled up to the 5-volt supply 5 V-- KBD by way of a pair of pull-up resistors 608 and 610. These signals BRIGHTNESS-- UP and BRIGHTNESS-- DOWN are applied to a digital output potentiometer 612 (FIG. 27), for example a Dallas Semiconductor Model No. DS1669-50. The digital output potentiometer 612 is powered by a 5-volt power supply 5 V-- CORE, which is also used to pull up an unused output terminal, RH., 240128=Referring to FIG. 60, the system checks in step 1476 whether there has been a pen-down event in the viewing area 1202 (FIG. 36) of the LCD 113C and, in step 1478, whether the OSK hot icon 1480 (FIG. 37) was selected. If not, the system loops back to step 1476. If so, the selected key on the OSK is translated into a keyboard scan code in step 1480 and a visual indication of the key selected in the edit field 1472 or 1474 in step 1482. The process is repeated until the macro (i.e. WIN, DIR), followed by a carriage return 1486, is complete and the macro is saved in the EEPROM 111B (FIG. 12) in step 1484. A clear button 1486 is provided in the dialog box illustrated in FIG. 54 for each edit field 1472 and 1474. These clear buttons 1486 enable the edit fields to be cleared in the EEPROM 111B (FIG. 12)., 249629=In step 1564 the system checks whether or not the connection was successful. If not, the system goes to step 1550 and clears the node address for the selected host 101 from the DRAM 111A and displays the host selection set-up dialog box in step 1552. If the connection between the wireless interface device 100 and the host 101 is successful, the node address of the host 101 is saved in a specific DRAM location in step 1566, and in turn, written to the EEPROM 111B (FIG. 12) in step 1568. After the node address of the selected host 101 is stored in EEPROM 111B, the wireless interface device 100 will display whatever is being displayed on the host 101 in step 1570., 250318=After a connection is established between the host 101 and the wireless interface device 100, the system continuously checks for hot icons being selected in step 1572. If no hot icons are selected, the system will loop back and continue to check for the selection of a hot icon. If the system determines that a hot icon is selected, the system checks in step 1574 whether the set-up dialog hot icon 1410 (FIG. 37) was selected. If so, the system loops back to step 1552 and displays the host selection set-up dialog box illustrated in FIG. 53 on the display 113C of the wireless interface device 100. If the set-up dialog hot icon 1410 is not selected, the system checks in step 1576 whether the sleep-face hot icon 1558 is selected in step 1576. If not, the system checks in step 1578 whether other hot icons in the hot icon area 1202 (FIG. 36) were selected and the appropriate action is taken. The system then goes to step 1570 and, in turn, and continually checks for the selection of other hot icons in step 1572., 207136=As discussed above, a current pen-down event preceded by a pen-down event activates the mouse mode handler 1214 (FIG. 33). In step 1246, the system first determines if the hot icon flag is on. As discussed above, the hot icon flag is turned on anytime a pen-down event occurs in the hot icon area 1202 (FIG. 36) of the LCD display 113C. If the hot icon flag is not on, the pen-down event is translated to a mouse button down event by a mouse TOUCH handler in step 1248. If the hot icon flag is on, the system determines in step 1250 whether the coordinates of the current pen-down event to determine if the current pen-down event occurred in the hot icon area 1202. If so, the pen coordinate data is dropped in step 1252 since such data will be processed by the hot icon ID processor 1210 (FIG. 32) discussed above. If the current pen event occurred in the viewing area 1200, the pen coordinate data is translated to mouse move data., 195233=The FETs 992, 998 and 1018 are used to prevent current leakage in a suspend state. In particular, these FETs 992, 998 and 1018 are under the control of the leakage control signal LEAKAGE, available at the charge pump 994, which turns the FETs 992, 998 and 1018 ON in normal operate and OFF in a suspend state., 224503=The Novell LAN software includes a configuration file which checks the particular LAN cards 1352 being run by the LAN card driver 1354. The system is initialized by the routine illustrated in FIG. 47, which is run each time the multiplexer IPXMUX.COM 1364 is loaded. Initially, a command line parser 1366 is used to determine whether the user has issued commands to either load or unload IPXMUX.COM command in step 1368. If the command is an unload command, the system checks whether IPXMUX.COM 1364 has already been loaded in step 1370. If so, the system unloads IPXMUX.COM 1364 in step 1372. If IPXMUX.COM 1364 has not been loaded, the system exits the initialization routine., 223067=Referring to FIG. 46, the additional layer IPXMUX.COM is stacked between the Novell IPXODI protocol IPXODI.COM 1355 and the link support layer LSL.COM 1356. As mentioned above, the link support layer LSL.COM 1356 can support two LAN cards. Thus, a wireless LAN card 1360 and a corresponding wireless LAN card driver 1362, which communicates with the link support layer LSL.COM 1356 along with the wired LAN card 1352 and its corresponding driver 1354, can communicate with IPXODI.COM by way of the driver., 189692=There are various ways in which to force the test mode signal TEST-- MODE low during reprogramming of the flash memory device 742 by way of the serial interface 790. One way is to externally ground the test mode signal TEST-- MODE during such a condition. In particular, the test mode signal TEST-- MODE may be connected to one pin of a two-pin header 1100 (FIG. 30). The other pin of the header 1100 is connected to system ground. During reprogramming of the flash memory device 742, an external jumper (not shown) is inserted into the header 1100 to shunt the test mode signal TEST-- MODE to system ground to enable the system to execute code from the protected or boot block area of the flash memory device 742 in order to enable the system to be booted. Once the system is booted, the flash memory device 742 is reprogrammed by way of the serial interface 894 (FIG. 29). Once reprogramming is complete, the shunt is removed from the header 1100 (FIG. 30) and the adapter plug 790 is removed, restoring the system to normal operation., 244653=In step 1522 the system checks for errors in writing to the flash memory devices 742-748. Should any errors be detected, the update is aborted. If no errors are detected, the system checks in step 1524 whether all of the sectors from the DRAM 111A have been written to the flash memory devices 742-748 in the wireless interface device 100. If not, the system loops back to step 1516. Once all of the files have been transferred to the flash memory devices 742-748, the wireless interface device 100 is rebooted in step 1526. Once the wireless interface device is rebooted, the system will be able to utilize the updated software in the flash memory devices 742-748., 182854=Power from both analog and digital power supply and grounds are supplied to the system. In particular, a 5-volt digital power supply PEN-- VCC, developed from the 5-volt supply 5 V-- CORE, is available from the DC-to-DC converter 300 (FIG. 26) by way of an in-line ferrite bead inductor 1028. An analog power supply PEN-- AVCC is developed from the digital supply PEN-- VCC by way of an in-line ferrite bead inductor 1030. The digital power supply PEN-- VCC is applied to the microcontroller 980 and filtered by a bypass capacitor 1030. The analog supply PEN-- AVC is utilized by the 12-bit analog-to-digital converter 988 and filtered by way of a bypass capacitor 1032., 212593=Referring to FIG. 39, anytime the connection status between the host computer 101 and the wireless interface device 100 changes, the host manager Windows module 1278 checks the new status in step 1284. If the connection has been lost, a screen saver disable module 1286 is called, which, in turn, calls several Windows modules: Windows Software Development kit functions; SystemParametersInfo; and WritePrivateProfileString to disable the screen saver. Should the current status indicate that the wireless interface device 100 is connected to the host computer 101, the system proceeds to step 1288, which calls the various Windows module., 76706=The wireless interface device 100 also includes a keyboard controller 125 which performs, in addition to controlling an optional keyboard by way of a connector, various other functions including battery monitoring and LCD status control. The keyboard controller 125 can be implemented by a Model No. M38802M2 integrated circuit from Mitsubishi Corporation, Tokyo, Japan. Battery power to the wireless interface device 100 may be provided by an intelligent battery pack (IBP) 131, for example, as described in U.S. patent application Ser. No. 07/975,879, filed on Nov. 13, 1992, hereby incorporated by reference, connected to a system power supply module 133 by way of a battery connector 132. The IBP 131 maintains and provides information about the remaining useful battery life of IBP 131, monitored by keyboard controller 125. Upon the occurrence of a significant event relative to the IBP 130, e.g. battery remaining life falling below a preset value, the keyboard controller 125 generates an interrupt signal., 183610=A separate clock supply is used for the microcontroller 980. This clock supply includes a 4.0 MHz crystal 1034, a resistor 1036 and a pair of parallel coupled capacitors 1038 and 1040. The clock supply is applied to the oscillator terminals OSC1 and OSC2 of the microcontroller 980., 254877=Referring to FIG. 65A, the system monitors the hot icon area 1202 (FIG. 36) to determine if any of the hot icons have been pressed. As discussed above, the system includes an OSK hot icon 1480 (FIG. 37), which displays the OSK on the LCD 113C of the wireless interface device 100 when depressed. If the system determines in step 1598 that a hot icon has been depressed, it checks in step 1600 whether the OSK hot icon 1480 was pressed. If not, the system loops back to 1598 and continually checks for hot icons being pressed. If the OSK hot icon 1480 has been depressed, the system determines the last configuration for the OSK in step 1602 (i.e. FIGS. 66A-66D). Once the configuration of the last OSK is determined in step 1602, the system then checks the operating system and video mode of the host 101 in step 1604. Depending on whether the host 101 is in text or graphics mode will determine whether the OSK image on the wireless interface device 100 is merely shadowed onto the display of the host 101 by way of a private message, as will be discussed in more detail below, or whether the remote occlusion region at the host 101 is established by drivers in the host software, which create the remote occlusion region by way of ASCII characters. Thus, in step 1606, if the system determines that the host 101 is in the text mode, an occlusion region on the display of the host 101 is created using the host control drivers in step 1608. In step 1610, the system checks whether the occlusion region was successfully established. If not, the system then checks in step 1612 whether the OSK is currently visible on the display 113C of the wireless interface device 100. If not, the display of the OSK is aborted in step 1614. If it is determined in step 1612 that the OSK is currently visible on the LCD 113C of the wireless interface device 100, any reconfiguration of the OSK is ignored and the configuration of the last OSK is continuously displayed in step 1614. If it is determined in step 1610 that the remote occlusion region is successfully established, the system goes to step 1616, which enables the OSK to be used., 184782=The chip select signal PENCS for the data buffer 984 is generated by an OR gate 1052. The general purpose chip select signal GPCS2 is available from the system controller 129 (FIG. 12), as well as a signal KBC-- P00, available from the keyboard controller 125 (FIG. 15) are applied to the inputs of the OR gate 1052., 192944=The pen shut down control signal PEN-- SHUTDOWN is used to wake the system from a suspend state. More particularly, as mentioned above, during a suspend state, power from the main power supply POWER (FIG. 28) is applied to the collector of the transistor 1064 (FIG. 21) and to the drain of the FET 1062. Since the 5-volt power supply 5 V-- CORE is unavailable during a suspend state, the transistor 1064 will be OFF, allowing power to appear at the gate of the FET 1062, thus turning the FET 1062 ON. Once the FET 1062 is turned ON, the main power signal POWER is applied to the XPLUS terminal of the digitizer panel. Thus, a pen (or finger) down event will result in the YPLUS terminal being connected to the XPLUS terminal by way of a finite resistance (ire. 500-1500 Ohms) to apply power to the YPLUS terminal, which, in turn, is connected to the drain of the P-channel FET 1060 while its source is used as the pen shutdown signal PEN-- SHUTDOWN. The FET 1060 is under the control of a leakage signal LEAKAGE, available at the output of the charge pump 994. Since the leakage signal LEAKAGE will be low during a suspend state, the FET 1060 will turn on in response to the pen down event, thereby connecting the YPLUS terminal to the pen shut down signal PEN-- SHUTDOWN. As mentioned above, the YPLUS terminal will be high in response to a pen down event following a suspend state. As such, the pen shut down signal PEN-- SHUTDOWN will go high. Since the pen shut down signal PEN-- SHUTDOWN is diode ORed with the shut down signal SHUTDOWN, the shut down signal SHUTDOWN will thus be forced high in response to a pen down event following a suspend state, which, in turn, will wake up the power supply 851 (FIG. 26). Once the system is wakened, the keyboard controller shutdown line KB-- SHUTDOWN goes high, latching the system ON. The resistors 1070, 1072 and the capacitor 1074 are used to delay turning ON the transistor 1064 and the turning OFF of the FET 1062 before the keyboard shutdown signal KB-- SHUTDOWN is pulled high which would cause the pen shut down signal PEN-- SHUTDOWN to go low before the keyboard shutdown signal KB-- SHUTDOWN goes high., 205196=The hot icons in the hot icon area 1202 (FIG. 36) are triggered by a pen-down event followed by a pen-up event. As discussed above, such a sequence of pen events is processed by hot icon ID processor 1210, illustrated in FIG. 32. The hot icon ID processor 1210 first determines if the pen event occurred in the viewing area 1200 (FIG. 36) of the LCD 113C by determining from the mouse mode handler 1214 (FIG. 33) whether the system is in the TOUCH in step 1234, since this mode only occurs for pen events in the viewing area 1200 of the LCD display 113C. If the system is not in a TOUCH mode, the system checks in step 1236 whether the system is in the MOVE mode. If the pen event (i.e. pen-down followed by a pen-up event) did not occur in the viewing area 1200 of the LCD display 113C, the system compares the coordinates of the pen-down event with the locations of the various hot icons displayed in FIG. 37 in step 1238. In step 1240 (FIG. 32), the system determines if the left/right mouse button hot icon 1232 was selected. If not, the system proceeds directly to step 1242 to uplevel software for processing. If the system determines that the left/right mouse hot icon 1232 was selected, the system emulates a left or right mouse button in step 1244, depending on the last status of the left/right mouse button emulation and utilizes the emulated left or right mouse button status in the uplevel software in step 1242., 238268=The responding hosts 101 are sorted first by group name and then by host name in step 1464. After the sorting, an internal status list of the available hosts 101 in designated as available in step 1466. Subsequently, the available hosts and groups are displayed in the dialog box illustrated in FIG. 53 in step 1468. Movement of the cursor (by a pen-down event) to the desired host 101 selects that host 101. A \"connect\" button on the dialog box is then selected to connect the wireless interface device 100 to the selected host 101., 212067=The connection status between the host computer 101 and the wireless interface device 100 is under the control of a host manager DOS module 1280 (FIG. 38), a terminate and stay resident program. The host manager DOS module 1280 is driven by a timer tick interrupt and checks the connection status at each timer tick interrupt. If the connection status has changed, the host manager DOS module 1280 calls a host manager communicator 1282, which passes the new status to the host manager Windows module 1278., 214956=There are certain situations where the screen to the host computer 101 may not be enabled on disconnection, for example, when the disconnection occurs because the wireless interface device 100 is either out of power or out of range. In order to enable the user to access the host computer 101 in such a situation, a host manager 1300 (FIG. 40A) first checks whether the connection status has changed in step 1302 in the manner as discussed above. If the system is connected, no action is required. However, if the connection has been broken, the system checks in step 1304 whether the screen is enabled. If not, the user will have normal access to the host computer 101. If so, the latest log-in password by the user is stored in by the system in step 1306 Since the host manager DOS module controls the screen, the system checks in step 1308 to determine whether Windows is running in the host computer 101. If DOS is running, the system compares the password entered on the keyboard with the latest log-in password in steps 1310 and 1312. If the password entered does not match the correct password, the system returns to step 1310 and awaits another keyboard input. If the correct password entered, the screen is turned on in step 1314., 216215=Should the host computer 101 be running Windows, as determined in step 1308, the latest log-in password is passed to a host manager Windows module in step 1316. The system next checks in steps 1318 and 1320 whether the correct password was entered in a similar manner as discussed above. If so, since DOS handles the enabling of the screen on the host computer 101, the host manager DOS module is notified that the correct password was entered in step 1322, which, in turn, enables the screen in step 1314., 180861=The pen controller 110A is illustrated in FIG. 21 and is adapted to cooperate with an analog-resistive type digitizer 106. The pen controller 110A includes a controller 980, for example a Motorola type MC68HC705J2 microcontroller, with the firmware being programmed within the part. The controller 980 communicates with the system by way of the system data bus SD[0..15]. In particular, serial data from a port PB6 on the controller 980 is applied to a shift register 982, which, in turn, is connected to an 8-bit parallel buffer 984, which, in turn, is connected to the serial data bus SD[0..15]. The controller 980 is adapted to be used with an analog-resistive touch screen digitizer, for example a drawing No. 8313-34 Rev. C4, as manufactured by Dynapro. XY information from the digitizer 106 is received by the controller 980 by way of a connector 986. The X and Y information from the digitizer is connected to a 12-bit analog-to-digital (A/D) converter and also applied to port PA5 of the microcontroller 980. In particular, the X- data from the digitizer is applied to the A1 terminal of the A/D converter 988 by way of a pull-up resistor 990 and an FET 992. The FET 992 is under the control of a charge pump 994, for example a Linear Technology Model No. LTC1157C58. The Y- data from the digitizer is applied to the terminal A1 of the A/D converter 988 by way of a current-limiting resistor 994. A pair of bypass capacitors 996 and 998 are tied between the terminals A0 and A1 of the A/D converter 988 and an analog ground PEN-- AGND. The X+, Y+, X-, Y- inputs from the digitizer are also applied to the controller ports PA[0..4] by way of a plurality of transistors 1000, 1006, 1010, 1016 and 1018; a plurality of resistors 1002, 1008, 1012, 1014, 1020, 1022, 1028, 1032 and 1034; an inductor 1004; and a plurality of capacitors 1024 and 1026. The transistor 1018, as well as the transistors 992 and 998, are used to prevent leakage in a suspend state., 203345=Steps 1204-1220 are driven by each pen event in order to determine the location of the pen-down event (i.e. hot icon area 1202 or display area 1200). Once the system determines where the pen event occurred, the pen data is converted to mouse data in step 1222 and a cursor is displayed in the viewing area 1200, corresponding to the location of the pen touch in step 1224. After the cursor is displayed, the system determines in step 1226 whether the mouse data is to be used locally by the wireless interface device 100 for local applications or the application running on the host computer 101. As mentioned above, the wireless interface device 100, through its graphical user interface, provides a virtual or on-screen keyboard (OSK). Thus, if the OSK has been activated and the pen event occurs in the OSK area, the mouse data is used locally by the wireless interface device 100 in step 1228. If the wireless interface device 100 is running a host application, the mouse data is sent to the host computer 101 application over the wireless interface as discussed above in step 1230, 220338=The pen driver 1332 (FIG. 43) is responsive to an interrupt that is generated each time a packet is assembled. In response to an interrupt, the pen driver reads the packet in step 1342. In step 1344, the pen driver determines whether the packet is a pen-up packet p5. If not, the pen packet assembler processes the packet in step 1346. If the system determines in step 1344 that the packet is a pen-up packet, it next checks in step 1346 whether the packet is the second pen-up packet. If so, indicating that the first pen-up packet was processed, the second pen-up packet is dropped in step 1348. If not, the packet is determined to be a first pen packet, which is processed by the pen packet assembler in step 1346., 258844=The OSK includes a control bar 1632 (FIG. 66A). The control bar 1632 enables the location of the OSK on the LCD 113C of the wireless interface device 100 to be changed by touching the control bar 1632 with the pen and dragging it to the desired location on the LCD 113C of the wireless interface device 100. Anytime the user changes the location of the OSK on the LCD 113C of the wireless interface device 100 as acknowledged by the system in step 1634, the system then returns to step 1604 to determine the video mode of the host computer 101. As discussed above, the video mode determines whether the remote occlusion region on the display of the host 100 is created by shadowing the OSK on the display of the host by way of the private message or whether the occlusion region on the display of the host is created by local drivers using ASCII characters. The system then goes to step 1606., 123327=The system controller 129 also includes a number of programmable pins which enhance its flexibility. For example, four general purpose input/output pins GPIO[0..3] are provided; each of which may be independently set for input or output. The GPIO1 and GPIO2 pins are used for the EEPROM 1111 as discussed above. The GPIO0 pin and GPIO3 pin may be used for various purposes. In addition to the programmable input/output pins, the system controller 129 includes two general purpose chip select pins GPCS1 and GPCS2 as well as a plurality of programmable output pins PC[0..9]. The programmable chip selects GPCS1 and GPCS2 are used for the pen controller 110A, UART 134 and the radio interface 114B., 198991=An inhibit circuit (FIG. 26), which includes a plurality of resistors 1110-1120, a diode 1122, a transistor 1124 and an FET 1126, is used to prevent the system from being turned ON during low battery conditions when the system is being supplied solely by the IBP 130. During a normal condition (i.e, when the system is being supplied power by the AC/DC converter or by the battery, the signal MAX786-- VCC is connected to the main power signal POWER by way of the FET 1126. The FET 1126 is under the control of the transistor 1124. During conditions when the AC/DC converter is supplying power to the system, a signal AC/DCIN will be high, thereby turning ON the transistor 1124, which, in turn, turns ON the PET 1126, connecting the main power signal POWER to the signal MAX786-- VCC. The collector of the transistor 1124, in turn, controls the FET 904, which connects the power supply signal HOOK-- VCC to the enable terminals ON3 and ON5 on the power supply 851. When AC power is not available, the AC/DCIN goes low, leaving the control of the transistor 1124 under the control of an inhibit signal INHIBIT, available from the IBP 130 by way of the connector 850. During a normal battery condition, the inhibit signal is high, keeping the transistor 1124 turned ON, thereby enabling the power supply 851 by way of the FET 904. Should a low battery condition occur, the inhibit signal goes low, turning OFF the transistors 904, 1124, as well as the FET 1126, to prevent the system from being turned ON., 245338=FIGS. 63A and 63B illustrate the routine for writing the flash update sectors from the DRAM 111A to the flash memory devices 742-748. Since the flash updates are stored in the DRAM memory 111A, the programming is aborted if the AC power is turned off as determined in step 1528 since the flash update data in the DRAM 111A will be lost when the battery is exhausted. In order to prevent errors during programming, interrupts, as well as the power management, are disabled on the wireless interface device 100 in steps 1530 and 1532. After the interrupts and the power management are disabled, the flash memory device is erased in step 1534. If errors occur during erasure, as determined in step 1536, updating of the particular flash memory device 742-748 is aborted. If not, a sector from the DRAM 111A is written to the flash memory devices 742-748 in step 1538. After the sector is written to the flash memory devices 742-748, the system checks in step 1540 whether any errors occurred. If so, the update is aborted. If not, the interrupts, as well as the power management, are enabled in step 1542 when all sectors have been reflashed., 208089=A mouse button double click is emulated by two pen-down events separated by a pen-up event in the viewing area 1200 of the LCD 113C. In particular, when the host computer 101 is running a Windows application, a pen driver translates the two pen-down events separated by a pen-up event and passes four mouse messages: mouse button down; mouse button release, mouse button down and mouse button release to the host Windows application.}",
    "textBeforeTable": "Patent Citations Obviously, many modifications and variations of the present invention are possible in light of the above teachings. Thus, it is to be understood that, within the scope of the appended claims, the invention may be practiced otherwise than as specifically described above. The OSK includes a control bar 1632 (FIG. 66A). The control bar 1632 enables the location of the OSK on the LCD 113C of the wireless interface device 100 to be changed by touching the control bar 1632 with the pen and dragging it to the desired location on the LCD 113C of the wireless interface device 100. Anytime the user changes the location of the OSK on the LCD 113C of the wireless interface device 100 as acknowledged by the system in step 1634, the system then returns to step 1604 to determine the video mode of the host computer 101. As discussed above, the video mode determines whether the remote occlusion region on the display of the host 100 is created by shadowing the OSK on the display of the host by way of the private message or whether the occlusion region on the display of the host is created by local drivers using ASCII characters. The system then goes to step 1606. If it is determined in step 1622 that the host 101 is running a Windows application, the occlusion region on the host 101 is established by way of a",
    "textAfterTable": "US5487069 * Nov 23, 1993 Jan 23, 1996 Commonwealth Scientific And Industrial Research Organization Wireless LAN US5491495 * Nov 13, 1990 Feb 13, 1996 Wang Laboratories, Inc. User interface having simulated devices US5495593 * Jun 3, 1994 Feb 27, 1996 National Semiconductor Corporation Microcontroller device having remotely programmable EPROM and method for programming US5504746 * Mar 27, 1995 Apr 2, 1996 Norand Corporation Radio frequency local area network US5508713 * Mar 21, 1995 Apr 16, 1996 Ricoh Company, Ltd. Control system for picture display apparatus having improved displaying data transmission system US5515509 * Feb 15, 1995 May 7, 1996 Sun Microsystems, Inc. Method and apparatus for implementing self-organization in a wireless local area network US5519843 * Mar 15, 1993 May 21, 1996 M-Systems Flash memory system providing both BIOS and user storage capability",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}