{
    "relation": [
        [
            "Citing Patent",
            "US8245050 *",
            "US8634557",
            "US8650393",
            "US8661527",
            "US8667286",
            "US8732466",
            "US8761389",
            "US8812843",
            "US8855297 *",
            "US8984294",
            "US8990571",
            "US20100017889 *",
            "US20100192206 *",
            "US20130142324 *"
        ],
        [
            "Filing date",
            "Sep 29, 2006",
            "Jun 15, 2012",
            "Jun 15, 2012",
            "Jun 1, 2012",
            "Jun 15, 2012",
            "Jun 15, 2012",
            "Jun 15, 2012",
            "Jun 15, 2012",
            "Jun 15, 2012",
            "Feb 15, 2013",
            "Dec 19, 2013",
            "",
            "Nov 13, 2009",
            ""
        ],
        [
            "Publication date",
            "Aug 14, 2012",
            "Jan 21, 2014",
            "Feb 11, 2014",
            "Feb 25, 2014",
            "Mar 4, 2014",
            "May 20, 2014",
            "Jun 24, 2014",
            "Aug 19, 2014",
            "Oct 7, 2014",
            "Mar 17, 2015",
            "Mar 24, 2015",
            "Jan 21, 2010",
            "Jul 29, 2010",
            "Jun 6, 2013"
        ],
        [
            "Applicant",
            "Netapp, Inc.",
            "Kabushiki Kaisha Toshiba",
            "Kabushiki Kaisha Toshiba",
            "Kabushiki Kaisha Toshiba",
            "Kabushiki Kaisha Toshiba",
            "Kabushiki Kaisha Toshiba",
            "Kabushiki Kaisha Toshiba",
            "Kabushiki Kaisha Toshiba",
            "Kabushiki Kaisha Toshiba",
            "Kabushiki Kaisha Toshiba",
            "Kabushiki Kaisha Toshiba",
            "Symantec Corporation",
            "Kazuaki Aoyama",
            "Yuji Nagai"
        ],
        [
            "Title",
            "System and method for initial key establishment using a split knowledge protocol",
            "Semiconductor storage device",
            "Authenticator",
            "Authenticator, authenticatee and authentication method",
            "Host device, semiconductor memory device, and authentication method",
            "Semiconductor memory device",
            "Memory",
            "Device and authentication method therefor",
            "Device and authentication method therefor",
            "System of authenticating an individual memory device via reading data including prohibited data and readable data",
            "Host device, semiconductor memory device, and authentication method",
            "Control of Website Usage Via Online Storage of Restricted Authentication Credentials",
            "Bulletin board system, terminal device of bulletin board system, and server device of bulletin board system",
            "Device and authentication method therefor"
        ]
    ],
    "pageTitle": "Patent US8020199 - Single sign-on system, method, and access device - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US8020199?dq=6,192,476",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 8,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988399.65/warc/CC-MAIN-20150728002308-00014-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 482426479,
    "recordOffset": 482386845,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6375=FIG. 14 illustrates a packet encapsulation method of implementing forced packet routing. In this embodiment, the access device again divides the password into multiple segments and sends each segment to the authentication server in a different packet. The packets are sent through intermediate servers or routers. In the example shown, a packet is sent through two intermediate servers, IS1 and IS2. The access device sends the password packet and a header for the second intermediate server within an outer encapsulation frame 1401. The outer encapsulation frame includes its own header comprising the source address for the access device (SA-AD) 1402 and the destination address for the first intermediate server (SA-IS1) 1403.}",
    "TableContextTimeStampAfterTable": "{126230=The client application 1501 utilizes each of the unique index values to extract different sets of password modification factors from the lookup table 1505. In an alternative embodiment, the client may access separate lookup tables associated with the password-protected servers. The client application then uses the password modification factors to modify the password entered by the user to create multiple multi-factor passwords, one for each server. At step 10, the client application sends the multi-factor passwords to the server applications 1502 1-1502 N for authentication., 111650=At step 1201, the server is configured with at least three addresses. At step 1202, the user enters his password in the access device. At step 1203, the access device generates at least three packets containing the password and an identifier of the access device. Each packet is addressed to a different address of the server. At step 1204, the access device sends the packets to the server via the multiple addresses. The packets may be transmitted with one or more predefined time delays between the subsequent packets., 37240=This application is a continuation-in-part of U.S. patent application Ser. No. 11/607,764 filed Dec. 1, 2006, now U.S. Pat. No. 7,503,936 which is a continuation-in-part of U.S. patent application Ser. No. 11/061,223 filed Feb. 18, 2005, now U.S. Pat. No. 7,581,113 which is a continuation-in-part of U.S. patent application Ser. No. 09/783,049 filed Feb. 14, 2001, now U.S. Pat. No. 7,043,640, the entire disclosures of which are incorporated by reference herein., 113261=If it is determined at step 1206 that the predefined characteristic is not different in one of the received packets, the method moves to step 1209 where it is determined whether the predefined characteristic is different in multiple packets. If so, the method moves to step 1210 where the server denies access to the access device. If the predefined characteristic is not different in multiple packets at step 1209, then it is the same in all received packets. Therefore the method moves to step 1211 where the server grants access to the access device identified in all received packets., 79747=Table 1 indicates that password software 132 would read the first two segments in a maximum time of 1650 milliseconds (ms) Any additional time intervals and entry events add to the time of the time envelope. However, this does not include the variable and arbitrary time delay Td to disguise the actual length of time of the password., 41858=In yet another type of hacking, the hacker may install a program known as a Trojan on the user's computer. The Trojan may search for data files on the user's computer and transmit them over a network connection to the hacker. Alternatively, a program known as a \u201ckey-logging program\u201d may monitor the user's keyboard and capture the keystrokes as the user enters his User ID and password. The Trojan then reports the User ID and password to the hacker who uses it to gain access to the user's protected information., 112232=At step 1205, the server receives the packets and utilizes the identifier to associate the received packets with the access device. At step 1206, the server determines whether a predefined characteristic is different in one of the received packets. This characteristic may be, for example, the identifier of the access device, a source address, or the expected time of receipt of the packet. If a predefined characteristic is different in one of the received packets, the method moves to step 1207, where the server determines whether the password in the remaining packets matches a stored password for the identified access device. If so, the method moves to step 1208, where the server grants access to the access device identified in the remaining packets. If the password in the remaining packets does not match the stored password for the identified access device, the method moves instead to step 1210, where the server denies access to the access device., 122529=The process begins at step 1 where a user enters into the client application 1501, a User ID and associated password. At step 2, the client application sends the User ID to the server application 1502. The server application recognizes the User ID and uses it at step 3 to access the server database 1503. At step 4, the server database sends an index value to the server application. At step 5, the server application sends the index value to the client application. When the user presses the hardware switch 1504, the switch allows a single access to the lookup table 1505. The client application sends the index value at step 6 to the switch, which uses the index value at step 7 to access the lookup table. At step 8, the lookup table sends one or more password modification factors to the switch, which returns the factors at step 9 to the client application. The password modification factors may include, for example, instructions regarding how to segment the user's password into separate data packets, time intervals for use between each of the data packets, multiple IP addresses for sending each data packet to a different address, extra \u201cfiller\u201d bits for placement in the data packets to disguise the character or characters of the password, and the like. The client application then uses the password modification factors to modify the password entered by the user to create a multi-factor password. At step 10, the client application sends the multi-factor password to the server application for authentication., 109694=At step 1105, the server receives the packets and places a time-of-receipt stamp on each received packet. At step 1106, the server utilizes the identifier of the access device to associate the multiple packets and reassemble the password. At step 1107, the server verifies that the password characters of the reassembled password are correct, and the packet contents of each individual packet match stored packet contents associated with the access device. At step 1108, the server calculates time intervals between the packets and verifies that the calculated time intervals match stored time intervals associated with the access device. At step 1109, the server grants access to protected information if the password characters are correct, the packet content of each packet is correct, and the time intervals between packets are correct, within any predefined tolerance values., 115959=In another embodiment of the present invention, the server 1302 has multiple IP addresses which are known to the access device 1301. The access device divides the password into multiple segments and sends each segment in a different packet. Each packet is addressed to a different IP address of the server. The routers in this embodiment may be configured with static routing tables. When a packet is received with a predefined destination address, the router is programmed to send the packet out on a designated port. The password packets follow different routes to the server because the routing tables route packets addressed to the different IP addresses through different ports of each router. Thus, packet routing is changed by changing the destination address. Once again, if a hacker is monitoring a router such as Router-D because it is on the shortest path to the server, the hacker will not learn all of the characters of the password., 119833=When the first intermediate server receives the outer encapsulation frame, the server strips off the header, revealing the destination address for the second intermediate server (DA-IS2) 1404 in a header for an inner encapsulation frame 1405. The first intermediate server adds its own source address (SA-IS1) 1406 to the header for the inner encapsulation frame and sends the frame to the second intermediate server. When the second intermediate server receives the inner encapsulation frame, the server strips off the header, revealing the destination address for the authentication server (DA-AS) 1407 in a header for the password packet. The second intermediate server adds its own source address (SA-IS2) 1408 to the header for the password packet and sends the packet to the authentication server. When the authentication server receives the packet, the server strips off the header, revealing the source address (or other identifier) of the access device 1409 and the password characters (PASS) 1410., 115254=In one embodiment of the present invention, the access device 1301 divides the password into multiple segments and sends each segment in a different packet to a different router. The first packet may be sent to Router-A, the second packet to Router-D, and the third packet to Router-G, for example. Each packet includes the bank's address as its destination address. Each router uses its dynamic routing table to further route the packet it receives. If a hacker is monitoring a router such as Router-D because it is on the shortest path to the server 1302, the hacker will only see the second packet and will not learn all of the characters of the password.}",
    "textBeforeTable": "Patent Citations It is thus believed that the operation and construction of the present invention will be apparent from the foregoing description. While the system and apparatus shown and described has been characterized as being preferred, it will be readily apparent that various changes and modifications could be made therein without departing from the scope of the invention as defined in the following claims. It is important to note that while the present invention has been described in the context of a fully functional computer system and network, those skilled in the art will appreciate that the instructions for practicing the method of the present invention are capable of being recorded on any type of a computer readable medium. The steps of the method of the present invention are executed, regardless of the particular type of signal-bearing media actually utilized. Examples of computer readable media include: nonvolatile, hard-coded type media such as read only memories (ROMs) or erasable, electrically programmable read only memories (EEPROMs), recordable type media such as floppy disks, hard disk drives, solid state drives, flash memory and CD-ROMs, and transmission type media such as digital and analog communication links. The client application 1501 utilizes each of the unique index values to extract different sets of password modification factors from the lookup table 1505. In an alternative embodiment, the client may access separate lookup tables associated with the password-protected servers. The client application",
    "textAfterTable": "US20080235775 * Jan 28, 2008 Sep 25, 2008 Authenex, Inc. System and method for controlling access to multiple public networks and for controlling access to multiple private networks US20080263362 * Apr 17, 2007 Oct 23, 2008 Chen Xuemin Sherman Method and apparatus of secure authentication for system on chip (soc) US20090282243 * May 9, 2008 Nov 12, 2009 Qualcomm Incorporated Puzzle-based authentication between a token and verifiers * Cited by examiner Non-Patent Citations Reference 1 * Franks, J. et al. \"HTTP Authentication: Basic and Digest Access Authentication\" (RFC 2617), Jun. 1999. 2 * Halderman, J. Alex et al. \"A Convenient Method for Securely Managing Passwords\", May 2005. 3 * Kamendje, Guy-Armand et al. WIPO Publication WO 2005/125078, Dec. 2005. * Cited by examiner",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}