{
    "relation": [
        [
            "Citing Patent",
            "US7345944 *",
            "US7362132 *",
            "US7498835",
            "US7498836",
            "US7498839",
            "US7504854",
            "US7519754",
            "US7549139",
            "US7562332",
            "US7581124",
            "US7730268 *",
            "US7750671",
            "US7750678",
            "US7768313",
            "US7782085 *",
            "US7859303",
            "US7898880 *",
            "US7913073 *",
            "US7924058",
            "US8000121 *",
            "US8060708 *",
            "US8099691",
            "US8112607 *",
            "US8176230",
            "US8205033 *",
            "US8245101",
            "US8255621 *",
            "US8261091 *",
            "US8291211 *",
            "US8307131",
            "US8365041",
            "US8381077 *",
            "US8386700",
            "US8423679 *",
            "US8473811 *",
            "US8473814",
            "US8484533",
            "US8484534",
            "US8499332 *",
            "US8533367 *",
            "US8533384",
            "US8555023",
            "US8589618 *",
            "US8621137",
            "US8621138",
            "US8671227 *",
            "US8732312 *",
            "US8738841",
            "US8745310 *",
            "US8751755",
            "US8762620",
            "US8775717",
            "US8793543",
            "US8812745 *",
            "US8843805 *",
            "US8855083",
            "US8891303",
            "US8898477",
            "US8903653 *",
            "US8971144",
            "US8982855",
            "US9043517",
            "US9048876",
            "US9058289",
            "US9070481",
            "US20060282550 *",
            "US20080155271 *",
            "US20090319720 *",
            "US20100017852 *",
            "US20100180183 *",
            "US20100268869 *",
            "US20100318726 *",
            "US20100324821 *",
            "US20110060968 *",
            "US20110126066 *",
            "US20110153921 *",
            "US20110246760 *",
            "US20120137006 *",
            "US20120166749 *",
            "US20120290779 *",
            "US20130232238 *",
            "US20130268780 *",
            "US20130272192 *",
            "US20140059656 *",
            "WO2007118107A2 *",
            "WO2009086365A1 *",
            "WO2013115790A1 *"
        ],
        [
            "Filing date",
            "Jan 11, 2006",
            "Sep 21, 2006",
            "Nov 4, 2005",
            "Jan 4, 2006",
            "Oct 22, 2004",
            "Feb 20, 2004",
            "Dec 11, 2006",
            "Feb 20, 2004",
            "Aug 11, 2006",
            "Jan 4, 2006",
            "Aug 18, 2006",
            "Aug 26, 2008",
            "Aug 26, 2008",
            "Aug 26, 2008",
            "Aug 26, 2008",
            "Aug 26, 2008",
            "Sep 12, 2007",
            "Aug 28, 2007",
            "Aug 26, 2008",
            "Dec 2, 2008",
            "May 28, 2010",
            "Jun 24, 2009",
            "May 7, 2009",
            "Apr 7, 2006",
            "Nov 5, 2008",
            "Apr 8, 2008",
            "Jun 21, 2007",
            "Dec 21, 2006",
            "Mar 1, 2011",
            "Nov 12, 2007",
            "Mar 17, 2010",
            "May 5, 2010",
            "Nov 29, 2011",
            "Jul 28, 2006",
            "Nov 2, 2010",
            "Jun 27, 2012",
            "Jun 27, 2012",
            "Jun 27, 2012",
            "Jun 4, 2007",
            "Mar 11, 2013",
            "Apr 8, 2008",
            "Dec 20, 2011",
            "Mar 18, 2010",
            "Apr 8, 2008",
            "Apr 8, 2008",
            "Aug 9, 2013",
            "Nov 29, 2011",
            "Apr 8, 2008",
            "Jan 3, 2008",
            "Apr 8, 2008",
            "Apr 8, 2008",
            "Apr 8, 2008",
            "Aug 31, 2012",
            "Jan 30, 2014",
            "Mar 16, 2012",
            "Dec 9, 2009",
            "Jun 6, 2014",
            "Nov 12, 2007",
            "Jun 10, 2010",
            "Jan 18, 2013",
            "Aug 22, 2008",
            "Sep 24, 2013",
            "Nov 16, 2012",
            "Aug 31, 2012",
            "Jun 6, 2014",
            "Jul 28, 2006",
            "Dec 21, 2006",
            "",
            "Jun 4, 2007",
            "Jan 12, 2009",
            "",
            "",
            "Jun 10, 2010",
            "May 5, 2010",
            "",
            "",
            "",
            "",
            "Sep 7, 2010",
            "",
            "Nov 2, 2012",
            "Apr 10, 2012",
            "Jan 7, 2011",
            "Nov 5, 2013",
            "Apr 4, 2007",
            "Dec 23, 2008",
            "Jan 31, 2012"
        ],
        [
            "Publication date",
            "Mar 18, 2008",
            "Apr 22, 2008",
            "Mar 3, 2009",
            "Mar 3, 2009",
            "Mar 3, 2009",
            "Mar 17, 2009",
            "Apr 14, 2009",
            "Jun 16, 2009",
            "Jul 14, 2009",
            "Aug 25, 2009",
            "Jun 1, 2010",
            "Jul 6, 2010",
            "Jul 6, 2010",
            "Aug 3, 2010",
            "Aug 24, 2010",
            "Dec 28, 2010",
            "Mar 1, 2011",
            "Mar 22, 2011",
            "Apr 12, 2011",
            "Aug 16, 2011",
            "Nov 15, 2011",
            "Jan 17, 2012",
            "Feb 7, 2012",
            "May 8, 2012",
            "Jun 19, 2012",
            "Aug 14, 2012",
            "Aug 28, 2012",
            "Sep 4, 2012",
            "Oct 16, 2012",
            "Nov 6, 2012",
            "Jan 29, 2013",
            "Feb 19, 2013",
            "Feb 26, 2013",
            "Apr 16, 2013",
            "Jun 25, 2013",
            "Jun 25, 2013",
            "Jul 9, 2013",
            "Jul 9, 2013",
            "Jul 30, 2013",
            "Sep 10, 2013",
            "Sep 10, 2013",
            "Oct 8, 2013",
            "Nov 19, 2013",
            "Dec 31, 2013",
            "Dec 31, 2013",
            "Mar 11, 2014",
            "May 20, 2014",
            "May 27, 2014",
            "Jun 3, 2014",
            "Jun 10, 2014",
            "Jun 24, 2014",
            "Jul 8, 2014",
            "Jul 29, 2014",
            "Aug 19, 2014",
            "Sep 23, 2014",
            "Oct 7, 2014",
            "Nov 18, 2014",
            "Nov 25, 2014",
            "Dec 2, 2014",
            "Mar 3, 2015",
            "Mar 17, 2015",
            "May 26, 2015",
            "Jun 2, 2015",
            "Jun 16, 2015",
            "Jun 30, 2015",
            "Dec 14, 2006",
            "Jun 26, 2008",
            "Dec 24, 2009",
            "Jan 21, 2010",
            "Jul 15, 2010",
            "Oct 21, 2010",
            "Dec 16, 2010",
            "Dec 23, 2010",
            "Mar 10, 2011",
            "May 26, 2011",
            "Jun 23, 2011",
            "Oct 6, 2011",
            "May 31, 2012",
            "Jun 28, 2012",
            "Nov 15, 2012",
            "Sep 5, 2013",
            "Oct 10, 2013",
            "Oct 17, 2013",
            "Feb 27, 2014",
            "Oct 18, 2007",
            "Jul 9, 2009",
            "Aug 8, 2013"
        ],
        [
            "Applicant",
            "Xilinx, Inc.",
            "Fujitsu Limited",
            "Xilinx, Inc.",
            "Xilinx, Inc.",
            "Xilinx, Inc.",
            "Xilinx, Inc.",
            "Silicon Storage Technology, Inc.",
            "Xilinx, Inc.",
            "Xilinx, Inc.",
            "Xilinx, Inc.",
            "Cypress Semiconductor Corporation",
            "Hynix Semiconductor Inc.",
            "Hynix Semiconductor Inc.",
            "Hynix Semiconductor Inc.",
            "Hynix Semiconductor Inc.",
            "Hynix Semiconductor Inc.",
            "Mtekvision Co., Ltd.",
            "Samsung Electronics Co., Ltd.",
            "Hynix Semiconductor Inc.",
            "Unity Semiconductor Corporation",
            "Cypress Semiconductor Corporation",
            "Xilinx, Inc.",
            "Sap Ag",
            "Kingston Technology Corporation",
            "Sony Corporation",
            "Sandisk Enterprise Ip Llc",
            "Nec Corporation",
            "Spansion Llc",
            "Samsung Electronics Co., Ltd.",
            "Gemalto Sa",
            "Sandisk Enterprise Ip Llc",
            "Lsi Corporation",
            "Sandisk Enterprise Ip Llc",
            "Kabushiki Kaisha Toshiba",
            "Samsung Electronics Co., Ltd.",
            "Sandisk Enterprise Ip Llc",
            "Sandisk Enterprise Ip Llc",
            "Sandisk Enterprise IP LLC.",
            "Thomson Licensing",
            "Kabushiki Kaisha Toshiba",
            "Sandisk Enterprise Ip Llc",
            "Sap Ag",
            "Samsung Electronics Co., Ltd.",
            "Sandisk Enterprise Ip Llc",
            "Sandisk Enterprise Ip Llc",
            "Kabushiki Kaisha Toshiba",
            "Fujitsu Limited",
            "Sandisk Enterprise IP LLC.",
            "Sony Corporation",
            "Sandisk Enterprise Ip Llc",
            "Sandisk Enterprise Ip Llc",
            "Sandisk Enterprise Ip Llc",
            "Sandisk Enterprise Ip Llc",
            "Kabushiki Kaisha Toshiba",
            "Juniper Networks, Inc.",
            "Uniloc Usa, Inc.",
            "Sandisk Technologies Inc.",
            "Gemalto Inc.",
            "Uniloc Luxembourg S.A.",
            "Quixant Plc",
            "Fortress Credit Co Llc",
            "Sandisk Enterprise Ip Llc",
            "Sandisk Enterprise Ip Llc",
            "Sandisk Enterprise Ip Llc",
            "Sandisk Technologies Inc.",
            "Akihisa Fujimoto",
            "Spansion Llc",
            "Seagate Technology Llc",
            "Thomson Licensing",
            "Macronix International Co., Ltd.",
            "Samsung Electronics Co., Ltd.",
            "Kabushiki Kaisha Toshiba",
            "Craig Stephen Etchegoyen",
            "Lsi Corporation",
            "Samsung Electronics Co., Ltd.",
            "Sung-Up Choi",
            "Ueta Seiji",
            "Fujitsu Limited",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "John Wong",
            "Mediatek Inc.",
            "Panasonic Corporation",
            "Kingston Technology Corp",
            "Pliant Technology Inc",
            "Hewlett-Packard Development Company L.P."
        ],
        [
            "Title",
            "Programmable detection of power failure in an integrated circuit",
            "Reconfigurable integrated circuit device to automatically configure an initialization circuit",
            "Implementation of low power standby modes for integrated circuits",
            "Programmable low power modes for embedded memory blocks",
            "Low power zones for programmable logic devices",
            "Regulating unused/inactive resources in programmable logic devices for static power reduction",
            "Hard disk drive cache memory and playback device",
            "Tuning programmable logic devices for low-power design implementation",
            "Disabling unused/inactive resources in programmable logic devices for static power reduction",
            "Method and mechanism for controlling power consumption of an integrated circuit",
            "Multiprocessor system having an input/output (I/O) bridge circuit for transferring data between volatile and non-volatile memory",
            "Nonvolatile programmable logic circuit",
            "Nonvolatile programmable logic circuit",
            "Nonvolatile programmable logic circuit",
            "Nonvolatile programmable logic circuit",
            "Nonvolatile programmable logic circuit",
            "Dual port memory device, memory device and method of operating the dual port memory device",
            "System embedding plural controller sharing nonvolatile memory",
            "Nonvolatile programmable logic circuit",
            "Solid state drive with non-volatile memory for a media device",
            "Multiprocessor system having an input/output (I/O) bridge circuit for transferring data between volatile and non-volatile memory",
            "Disabling unused/inactive resources in an integrated circuit for static power reduction",
            "Method and system for managing large write-once tables in shadow page databases",
            "Wireless flash memory card expansion system",
            "Memory device, memory management method, and program",
            "Patrol function used in flash storage controller to detect data errors",
            "Multiprocessor system and portable terminal using the same",
            "Solid-state memory-based generation and handling of security authentication tokens",
            "System embedding plural controller sharing nonvolatile memory",
            "System and method for drive resizing and partition size exchange between a flash memory controller and a smart card",
            "MLC self-raid flash data protection scheme",
            "Systems and methods for implementing error correction in relation to a flash memory",
            "Flash memory controller garbage collection operations performed independently in multiple flash memory groups",
            "Card and host apparatus",
            "Multi-chip memory system and related data transfer method",
            "MLC self-RAID flash data protection scheme",
            "MLC self-RAID flash data protection scheme",
            "MLC self-RAID flash data protection scheme",
            "Electronic board provided with security functions and method for ensuring electronic board security",
            "Card and host apparatus",
            "Flash memory controller garbage collection operations performed independently in multiple flash memory groups",
            "Method and system for managing large write-once tables in shadow page databases",
            "Memory system comprising nonvolatile memory device and controller",
            "Metadata rebuild in a flash memory controller following a loss of power",
            "Flash storage controller execute loop",
            "Card and host apparatus",
            "Computing system and computing system management method",
            "Flash memory controller and system including data pipelines incorporating multiple buffers",
            "Storage apparatus, computer system, and method for managing storage apparatus",
            "Mass storage controller volatile memory containing metadata related to flash memory storage",
            "Multiprocessor storage controller",
            "Storage controller for flash memory including a crossbar switch connecting a plurality of processors with a plurality of internal memories",
            "Adaptive read comparison signal generation for memory systems",
            "Card and host apparatus",
            "Memory error protection using addressable dynamic ram data locations",
            "Inter-access network handover",
            "Method and system for dynamic word line based configuration of a three-dimensional memory device",
            "System and method for secure firmware update of a secure token having a flash memory controller and a smart card",
            "System and method for locating network nodes",
            "Hardware write-protection",
            "Systems and methods for improved mobility and quality of service in a wireless network",
            "Multipass programming in buffers implemented in non-volatile data storage systems",
            "Systems, methods and devices for multi-tiered error correction",
            "Soft information generation for memory systems",
            "Internal current measurement for age measurements",
            "Card and host apparatus",
            "Solid-state memory-based generation and handling of security authentication tokens",
            "System and method of garbage collection in a memory device",
            "Electronic board provided with security functions and method for ensuring electronic board security",
            "Circuit for reducing the read disturbance in memory",
            "Memory system comprising nonvolatile memory device and controller",
            "Memory system and memory system managing method",
            "System and Method for Locating Network Nodes",
            "Systems and Methods for Implementing Error Correction in Relation to a Flash Memory",
            "Multi-chip memory system and related data transfer method",
            "System Embedding Plural Controller Sharing Nonvolatile Memory",
            "Electronic device and electronic device system",
            "Computing system and computing system management method",
            "Data management in solid-state storage devices and tiered storage systems",
            "Data management in solid-state storage devices and tiered storage systems",
            "Mobile device with multiple security domains",
            "Portable access and power supply apparatus",
            "Apparatuses and Methods for Hybrid Automatic Repeat Request (HARQ) Buffering Optimization",
            "Functional device, access apparatus, access system, and communication establishing method",
            "Wireless flash memory card expansion system",
            "Multiprocessor storage controller",
            "Single and double chip spare"
        ]
    ],
    "pageTitle": "Patent US20060053246 - Systems and methods for providing nonvolatile memory management in wireless ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US20060053246?dq=5893120",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 5,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986806.32/warc/CC-MAIN-20150728002306-00267-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 466716283,
    "recordOffset": 466647707,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6488=The operation of the second embodiment illustrated in FIG. 16 will now be described with reference to FIG. 17. FIG. 17 illustrates the boot up procedure performed by the BOOT_CTLR (1613). The assertion of the power-on reset signal at state (1701) puts the Memory System (1601) and the external electronics in reset mode. Upon the deassertion of the power-on reset signal, at state (1702) the BOOT_CTLR (1613) automatically becomes active and begins to generate the first PPA of the boot section and, at states (1703, 1704) configures and activates the FLASH_CTLR (1610) to read the NAND Flash page of this PPA. When, at state (1705), a determination is made that the FLASH_CTLR (1610) has completed the page read operation, the read NAND Flash page is stored in PAGE_BUFF with any potential errors corrected by the FLASH_CTLR ECC circuit. At state (1706), a determination is made as to whether the page is part of the system boot code or the FMM program code. At state (1707), the BOOT_CTLR (1613) the copies the page data from the PAGE_BUFF to the FMM_RAM if the page is part of the FMM program code. If the page is part of the system boot code, the process proceeds to state (1708), and the page will be copied to the SDRAM (318) as described herein.}",
    "TableContextTimeStampAfterTable": "{167236=Examples of \u201cFlash Media Management\u201d processes include, but are not limited to, one or more of the following techniques: wear-leveling; garbage collection; bad block replacement; and power-failure recovery. These techniques are used to overcome challenges raised by high-density Flash technology's sensitivity to the number of erase-rewrite cycles performed on a particular erase unit. An erase unit is defined as an area on the storage media which can be erased in a single erase operation. In NAND Flash memory, the erase unit is equivalent to a block, which contains multiple pages (e.g. 32 or 64 pages) where a page (e.g. 528 or 2112 bytes) is a data access unit which can be written to, or read from the storage media with a single write or read command. When an already-written block needs to be overridden with new data, the entire block needs to be erased before the new data can be written to that block. The process of erasing a block, and then writing new data to the block, is counted as one erase-rewrite cycle., 256743=With respect to the SDRAM Controller (SDRAM_CTLR), the Control Circuit contains two copies of the SDRAM_CTLR, where each copy has the same functionality as in the first embodiment. The two SDRAM_CTLRs (2009, 2010) perform the same data access operations at the same time. To each SDRAM master, an access the SDRAM memory space is performed in bursts of data words of twice the width of the data word of a single SDRAM device., 257227=With respect to the Flash Media Manager (FMM 2013), FMM (2013) performs the Flash media management tasks as similarly described with respect to the first embodiment, but further performs such tasks based on one set of LPAs and two separate sets of PPAs and therefore has the capability to maintain two logical-to-physical address associations (in other embodiments, the FMM can be scaled to handle still additional flash controllers, and SDRAM controllers). A first example association is between the even LPAs and FLASH_CTLR_1's PPAs, and between the odd LPAs and FLASH_CTLR_2's PPAs. Both associations are optionally based on the same or similar FMM algorithms as that in the first embodiment. When DMA_CTLR (2014) activates the FMM (2013) to read from an LDPA, which addresses two pages of an even LPA and an odd LPA, the FMM (2013) performs two address translations to convert the even LPA to a PPA of FLASH_CTLR_1 and the odd LPA to a PPA of FLASH_CTLR_2. The FMM (2013) then configures both FLASH_CTLRs (2011, 2012) to perform a page read operation from their corresponding PPAs at substantially the same time. As such, the LPA register in the FMM (2013) in the first embodiment is replaced with \u201cLDPA\u201d register., 211421=When the FLASH_CTLR (310) completes the page read operation, as determined at state (1108), the page data is stored in the PAGE_BUFF with potential errors already corrected by the ECC circuit. Now the DMA_CTLR (312) needs to move the page data from PAGE_BUFF to the SDRAM (318). The DMA_CTLR (312) first disassembles the page data into bursts of data aligned to SDRAM bursts and, for a given burst, sends an SDRAM access request to the MAD (308) at state (1109). When, at state (1110), a determination is made that access has been granted, at state (1111), the DMA_CTLR (312) transfers a burst of data from PAGE_BUFF to the SDRAM (318) via SDRAM_CTLR (309). At state (1112), a determination is as to whether there are more bursts in page data that need to be transferred. If there is, then at state (1113), the DMA_CTLR (312) repeats the access to SDRAM (318), and the SDRAM access will continue to be repeated until all page data has been transferred to SDRAM (318). The DMA_CTLR (312) then repeats the page transfer process until the entire DMA transfer is complete (1114, 1115). At state (1116), the CMD_CTLR (304) interrupts the Primary Processor (314) to indicate the completion of the DMA transfer., 250578=The present embodiment does not limit the coordination of the operations of the two FLASH_CTLRs or the two SDRAM_CTLRs to a specific technique. To illustrate the current embodiment by way of example, in the example described below it is assumed that the two FLASH_CTLRs (2011, 2012) perform the same operations and the two SDRAM_CTLRs (2009, 2010) perform the same operations., 254614=The Control Circuit contains two copies of the FLASH_CTLR, where each copy has the same or similar functionality as in the first embodiment. Each FLASH_CTLR outputs multiple chip select signals to operate multiple NAND Flash devices although an access may be limited to one NAND Flash device at a time. Both FLASH_CTLRs (2011, 2012) are under the control of the BOOT_CTLR (2015) and the FMM (2011), and perform the same data access operations at the same time., 213922=The DMA_CTLR (312) begins by moving the page data from SDRAM (318) to the PAGE_BUFF. At state (1206), a determination is made as to whether the MAD (308) has granted access in response to a DMA_CTLR request, wherein the DMA_CTLR (312) first disassembles the page data in SDRAM (318) into bursts and, for each burst, sends an SDRAM (318) access request to the MAD (308) (state 1205). When access is granted, at state (1207), the DMA_CTLR (312) transfers a burst of data from SDRAM (318) to the PAGE_BUFF. With reference to states (1208, 1209), the DMA_CTLR (312) repeats the access to SDRAM (318) until all page data has been transferred to the PAGE_BUFF., 71490=This application claims the benefit under 35 U.S.C. 119(e) of U.S. Provisional Application 60/605,265 (filed Aug. 30, 2004), and U.S. Provisional Patent Application 60/611,219 (filed Sep. 20, 2004). The entire disclosure of both of these applications is hereby incorporated by reference herein., 253430=Similar to the FLASH_CTLRs (2011, 2012), the two SDRAM_CTLRs (2009, 2010) perform the same data access operation at the same time. In other words, when performing a data access to the SDRAM memory space, the Control Circuit reads two bursts of data or writes two bursts of data simultaneously, with each burst transferred by one of the SDRAM_CTLRs (2009, 2010). Having two SDRAM_CTLRs (2009, 2010) operating the same commands at the same time has the same effect as doubling the width of a data word. For example, if the data size of a single SDRAM burst is 8 words with each word being 16 bits wide, then two SDRAM bursts at the same time is equivalent to 8 words with each word being 32 bits wide., 252726=A new data unit is introduced here and hereinafter referred to as \u201cLogical Double Page\u201d (LDP). Each LDP contains two NAND Flash pages of consecutive LPAs where one LPA is even and the other is odd. Each LDP is assigned an address hereinafter referred to as \u201cLDP Address\u201d (LDPA). For example, LDPA 0 addresses the two pages of LPA 0 and LPA 1, LDPA 1 addresses the two pages of LPA 2 and LPA 3, and so on. With two FLASH_CTLRs (2011, 2012), the Control Circuit transfers one LDP to or from the NAND Flash space in a single NAND Flash access operation where FLASH_CTLR_1 transfers the even LPA and FLASH_CTLR_2 transfers the odd LPA., 251027=When performing data accesses to the NAND Flash, both FLASH_CTLRs (2011, 2012) perform the same operation at substantially the same time. In other words, the Control Circuit will read two pages from, or write two pages to the NAND Flash storage space at the same time, with each page transferred by one of the FLASH_CTLRs (2011, 2012). To accommodate this hardware architecture, the arrangement of logical pages in the NAND Flash storage space may be \u201cinterleaved\u201d between the two FLASH_CTLRs (2011, 2012). For example, if the data in the entire NAND Flash storage space is logically arranged in pages of LPA 0, 1, 2, 3 . . . and so on, then even LPAs such as LPA 0, 2 . . . and so on are stored in the NAND Flash devices (2019) attached to FLASH_CTLR_1, and odd LPAs such as LPA 1, 3 . . . and so on are stored in the NAND Flash devices (2020) attached to FLASH_CTLR_2. Therefore, the Control Circuit always accesses LPA 0 and 1 together or LPA 2 and 3 together, and so on. With two FLASH_CTLRs (2011, 2012), the total number of LPAs in the NAND Flash storage space is twice that of the first embodiment., 153093=Currently, in many commercially available NAND Flash devices, these two portions are arranged so that either the user portion occupies the lower 512 bytes and the spare portion occupies the upper 16 bytes of the page if each page contains 528 bytes, or the user portion occupies the lower 2048 bytes and the spare portion occupies the upper 64 bytes of the page if each page contains 2112 bytes. In some other commercially available Flash devices, a page may not be divided into two portions by the Flash device manufacturer. In this case, a page can still be conceptually divided into two portions by the user of the Flash device with one portion used as the \u201cuser portion\u201d and the other portion used as the \u201cspare portion\u201d. Optionally, in a Flash Memory device or system where no ECC is needed and no system-related information such as file system flags or book-keeping records for the FMM need to be stored in the Flash Memory, the Flash devices optionally do not include the \u201cspare portion\u201d in each page and the entire page is considered the \u201cuser portion\u201d., 259218=With respect to the DMA Controller (DMA_CTLR 2014), with two FLASH_CTLRs (2011, 2012) operating at the same time, the DMA_CTLR (2014) performs the DMA transfer by downloading or uploading two NAND Flash pages, or an LDP, per access to the NAND Flash space. With two SDRAM_CTLRs (2009, 2010) operating at the same time, the DMA_CTLR (2014) performs each access to the SDRAM space by transferring a burst of data words of twice the width of the data word of a single SDRAM device., 206626=At state (1005), a determination is made as to whether the FLASH_CTLR (310) is idle, and so whether the FLASH_CTLR (310) has completed the page read operation. The read NAND Flash page is stored in PAGE_BUFF with potential errors corrected by the ECC circuit. The BOOT_CTLR (313) then copies the page data from PAGE_BUFF to either the BOOT_RAM (307) or the FMM_RAM, depending on whether this page is a part of the System boot code or the FMM program code, see states (1006, 1007 and 1008)., 240243=At state (1909), the BOOT_CTLR (1813) releases the FMM (1811) from idle. Once the FMM is no longer idle, and has been released, the FMM (1811) begins to execute the FMM program code stored in the FMM_RAM. The FMM program code instructs the FMM (1811) to perform tasks to initialize the FMM (1811) including copying the system boot code from the NAND Flash memory (1817) to SDRAM (1818). When the FMM (1811) completes the initialization, at state (1910), the BOOT_CTLR releases the Primary Processor (1814) from reset by deasserting the reset signal going to the Primary Processor (1814) via the PPBS interface (1911). Then the BOOT_CTLR (1813) becomes idle, but the Primary Processor (1814) becomes active and begins to execute the System boot code in the SDRAM (1818) by transferring bursts of data in and out of the SDRAM (1818) at state (1912). At state 1913, the Memory System (1801) enters the \u201cNormal Operation Mode\u201d (1913)., 256186=Therefore, when reading from the boot section, the BOOT_CTLR (2015) directly generates the boot section PPAs, and then activates both FLASH_CTLRs (2011, 2012) at the same time to each read the NAND Flash pages of the same PPAs. When both FLASH_CTLRs (2011, 2012) finish their page read operation, each PAGE_BUFF contains a page of data, and the BOOT_CTLR (2015) moves the two pages of data into either the BOOT_RAM or the FMM_RAM, depending on the PPAs of the two pages., 260319=To transfer an LDP, the DMA_CTLR (2014) sends the LDPA and the transfer type (e.g., LDP read or LDP write) to the FMM (2013), which then performs the address translation to obtain two PPAs, one for each FLASH_CTLR, and then configures both FLASH_CTLRs (2011, 2012) to each read from or write to the corresponding NAND Flash page of their own PPA. Optionally, a DMA transfer moves an amount of data equivalent to an integral number of LDPs, and does not start or end the DMA transfer in the middle of an LDP.}",
    "textBeforeTable": "Referenced by Although this invention has been disclosed in the context of certain embodiments and examples, it will be understood by those skilled in the art that the present invention extends beyond the specifically disclosed embodiments to other alternative embodiments and/or uses of the invention and obvious modifications and equivalents thereof. In addition, while a number of variations of the invention have been shown and described in detail, other modifications, which are within the scope of this invention, will be readily apparent to those of skill in the art based upon this disclosure. It is also contemplated that various combinations or subcombinations of the specific features and aspects of the embodiments may be made and still fall within the scope of the invention. Accordingly, it should be understood that various features and aspects of the disclosed embodiments can be combined with, or substituted for one another, in order to form varying modes of the disclosed invention. Thus, it is intended that the scope of the present invention herein disclosed should not be limited by the particular disclosed embodiments described above. In this instance, when released from reset by the BOOT_CTLR, the Primary Processor executes the system boot code by fetching instructions from the external electronics instead of from the Memory System. Furthermore, in such cellular phones, the external electronics may directly control the reset of the Primary Processor. In this case,",
    "textAfterTable": "* Cited by examiner Classifications U.S. Classification 711/100 International Classification G06F12/14 Cooperative Classification G11C7/20, G06F12/0246, G06F9/4403 European Classification G11C7/20, G06F9/44A1 Legal Events Date Code Event Description Nov 21, 2005 AS Assignment Owner name: MAXILICON, INC., CALIFORNIA Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LEE, SCHWEIRAY JOSEPH;REEL/FRAME:017050/0311 Effective date: 20051114 Mar 20, 2007 AS Assignment Owner name: SILICON STORAGE TECHNOLOGY, INC., CALIFORNIA Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MAXILICON, INC.;REEL/FRAME:019037/0261 Effective date: 20060614 Jul 14, 2009 CC Certificate of correction Aug 3, 2010 AS",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}