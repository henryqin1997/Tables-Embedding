{
    "relation": [
        [
            "Citing Patent",
            "US8392460",
            "US8433717",
            "US8458230",
            "US8583680",
            "US20120084325 *"
        ],
        [
            "Filing date",
            "Nov 2, 2011",
            "Mar 13, 2012",
            "Jun 18, 2012",
            "May 14, 2012",
            "Sep 30, 2011"
        ],
        [
            "Publication date",
            "Mar 5, 2013",
            "Apr 30, 2013",
            "Jun 4, 2013",
            "Nov 12, 2013",
            "Apr 5, 2012"
        ],
        [
            "Applicant",
            "Informatica Corporation",
            "Informatica Corporation",
            "Informatica Corporation",
            "Informatica Corporation",
            "Teradata Us, Inc."
        ],
        [
            "Title",
            "Relationship data management",
            "System and method for efficiently securing enterprise data resources",
            "System and method for flexible security access management in an enterprise",
            "System and method for integrating, managing and coordinating customer activities",
            "Master data management hierarchy merging"
        ]
    ],
    "pageTitle": "Patent US8150803 - Relationship data management - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US8150803?dq=patent:6144888",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 7,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988311.72/warc/CC-MAIN-20150728002308-00215-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 482296783,
    "recordOffset": 482258492,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6389=FIG. 14 illustrates a match-and-merge process 1400 that is employed by some embodiments. The matching engine 1060 performs this process for each potentially matching pair of relationship data sets in the master reference data store 1056. The match process 1400 initially determines (at 1405) whether the two pair of relationship data sets match on a first set of criteria. In some embodiments, the first set of criteria includes whether a set of X fields match between the records. To perform this determination, the matching engine of some embodiments uses SSA-NAME3 from Identity Systems, an Intellisync Company.}",
    "TableContextTimeStampAfterTable": "{86748=After the standardization operation at 1120, the process 1100 performs a mapping operation at 1130 to map the standardized data to the enterprise normalized hierarchical data schema in the master reference store 1065. Schema mapping 1130 is the process of projecting incoming data from the source schema onto the target schema. Application-centric data stores have schema, also known as data model, which is most conducive to the specific application that they service. The hierarchy manager data store schema, similarly, will be most suitable for its purpose of managing hierarchical relationship data. Schema mapping 1130 determines the appropriate location in the target schema for each incoming data record. As mentioned above, landing tables in landing area 1012 have schema, or model, that matches their respective input data sources. Staging tables in staging area 1017 have schema, or model, which matches the destination data store 1065 schema., 96771=The survivorship module 1050 of some embodiments maintains content metadata for each data attribute that it checks for consolidation. Two examples of content metadata are (1) the lineage of the new value and the source that provides this new value, and (2) the history of the replaced value and the source that provided the replaced value. Some embodiments maintain the full lineage and history for the replaced data fields and the data sources from which these fields emanated. Maintaining history and lineage for each field allows some embodiments to provide for an un-merge procedure, as further described below., 102819=When the process 1400 determines (at 1405) that the two relationship data sets meet a first set of matching criteria (i.e., have a sufficient number and/or quality of fields that match), there is a highly probability (i.e., virtually absolute) that the two relationship data sets match. Accordingly, the process directs (at 1410) the trust score calculator to compute trust scores for the attributes of the matching relationship data sets., 36970=This Application is related to U.S. patent application Ser. No. 11/325,608, filed Jan. 3, 2006, now issued as U.S. Pat. No. 7,523,121., 107193=One of ordinary skill will realize that the hierarchy manager 1075 might follow different consolidation policies than those described above. In some embodiments, the policy designates the system as consolidating, where consolidation of data occurs whenever a new value for an existing relationship data set is received. Therefore, these embodiments perform an update operation when they recognize a match between a new and an existing relationship data set. Some embodiments have a policy that designates them as one-off consolidators. In these embodiments, a new value for an existing relationship is always inserted at runtime. Later, the match/merge engine 1060 consolidates and merges these new and old values and updates the data store. Yet other embodiments have a policy of no-consolidation. These embodiments do not consolidate, but always insert new values for existing relationship data., 85403=Standardization is the process of homogenizing different data codifications. For example, in one application-centric body of data, the male gender may be codified as \u2018M\u2019. In another application-centric body of data, the male gender may be codified as \u20181\u2019. During standardization 1120, the system assimilates these two different coding styles into a uniform coding style for the hierarchy manager's data store. In this example, it may be that hierarchy manager standardizes on male codification as \u2018M\u2019, \u20181\u2019, \u2018456\u2019, or some other value. The standardization provides a deterministic conversion of the incoming data codification into the uniform codification used by hierarchy manager., 95051=Thus, the trust framework 1070 includes a rule-based system of trust that includes various algorithms and parameters. The trust score calculator 1045, in the embodiments described above, applies the system of trust to compute trust scores for data entering trust framework 1070. Trust scoring begins when one or more relationship records are received by the trust framework 1070 from the load processor 1055. In some embodiments, these records are cleansed records received by the load processor 1055 from a staging table. In some embodiments, these records also include stored records retrieved by the load processor 1055 from the master reference data store 1065 based on associated cross-reference keys., 83644=The delta detection operation (at 1115) involves examining each set of relationship data to determine whether the hierarchy manager 1075 previously stored the data set in a master reference store 1065, and if so, whether the data set has changed since it was last received. In some embodiments, this detection is done via timestamp comparison. If an incoming relationship data set has a timestamp identical to that of data set stored in the master reference store, then there is no delta. In other words, if timestamps match, the incoming data set is identical to corresponding existing data set and hence the former is not processed., 101702=On the other hand, the second set of criteria for the set of Z fields at 1415 can include a lesser number and a lesser quality of field matches (e.g., only the direction of relationship matches). If only the set of Z fields match, then there is only a possibility of a record match in this instance and this \u201cpossible\u201d match should be queued for an individual to inspect the data and/or perform a manual-merge at 1420., 97936=Once relationship data is stored in the hierarchy manager data store 1065, some embodiments further consolidate the stored data through a match and merge process. Such consolidation includes, for instance, removal of redundant relationship records and resolution of conflicting relationship records., 89815=Next, the load processor 1055 uses (at 1220) the unique relationship identification code associated with the received relationship data set to determine whether the data set received at 1205 updates a relationship data set previously stored in the master reference data store 1065. In some embodiments, an update is a modification to a data attribute (e.g., data cell) of a relationship data set (e.g., a relationship data record) that defines the relationship between two entities. Accordingly, at 1220, the load processor 1055 searches the master reference store 1065 to check whether any relationship data set in this storage has the same unique relationship identification code. The presence in the storage of a relationship data set with the unique relationship identification code indicates that the data entering the hierarchy manager 1075 is an update., 91335=On the other hand, when the load processor 1055 determines that the data is an update, then load processor (1) retrieves from the master reference store the previously stored relationship data set that corresponds to the received relationship data set, and (2) has the trust framework 1070 perform (at 1235, 1237, and 1240) the update operation on the retrieved and received relationship data sets., 103312=In some embodiments, the operation of the trust score calculator 1045 during the matching process 1400 is the same as the operation of this calculator during the update process 1200. Once the trust score calculator 1045 computes (at 1410) one or more trust scores for the relationship data set(s), the survivorship module 1050 consolidates (at 1430) the attributes of the relationship data sets (i.e., the received and previously stored relationship data sets) based on the computed trtj.st scores. In some embodiments, the survivorship module 1050 will retain the attributes that have the higher calculated trust score. During this consolidation, the survivorship module 1050 again maintains content metadata (e.g., lineage and history) for each data attribute that it checks for consolidation. At 1430, the process 1400 stores the consolidate relationship data set and its associated metadata in the master reference store, where it awaits for additional updating by the hierarchy manager 1075, retrieval by a data consumer, and/or matching by a match/merge engine., 104496=A data consumer can retrieve relationship data sets from the master reference store 1065 through a variety of ways. In other words, relationship data sets that are stored in the hierarchy manager can be exported to outside systems such as data warehouses, application-centric data sources, or applications, through a variety of ways, such as ETL tools, XML/SOAP communication, Message Queue, or other suitable method., 100876=The second matching determination at 1415 allows the match/merge engine 1060 to differentiate between both the number and the quality of field matches at 1405 and 1415. For instance, in the case where the first set of criteria comprises a set of X field matches, the set of X fields at 1405 might include both a high threshold number of field matches and some particular fields that are a strong indicator of a match (e.g., the direction of the relationship, start date, end date, and role fields all match, or just the start date and end date fields match). This case may represent a correct match between the records for almost every instance where the set of X fields match, and thus meeting this condition indicates a highly probable or \u201cabsolute\u201d match., 102167=Accordingly, when the process 1400 determines (at 1415) that a manual-merge might be appropriate, then the process 1400 queues up (at 1420) the two relationship data sets for a data steward to review and determine whether the two relationship data sets are a match. On the other hand, when the process determines (at 1415) that the two relationship data sets do not meet the second set of matching criteria (i.e., determines that a manual-merge would not be appropriate), the process specifies (at 1425) that the two relationship data sets are not a match, and then terminates., 87797=After the mapping operation at 1130, the received data 1135 is in a cleansed, standardized, enterprise-normalized format. The data remains in the staging tables in this format until it is retrieved by or supplied to the load processor 1055., 96270=Once the trust score calculator 1045 computes (at 1235) one or more trust scores for the relationship data sets, the survivorship module 1050 consolidates (at 1237) the attributes of the relationship data sets (i.e., the received and previously stored relationship data sets) based on the computed trust scores. In some embodiments, the survivorship module 1050 will retain the attributes that have the higher calculated trust score., 91801=In some embodiments, the trust framework 1070 applies a concept of \u201ctrust\u201d to update relationship records. The concept of trust involves a system of measuring the value and reliability of data. Trust may be represented as a numerical score as to the confidence of the system in that data., 92866=This trust score calculator 1045 computes the trust score differently in different embodiments. In some embodiments, the trust score calculator 1045 computes the trust score based on certain parameters, algorithms, and rules. Examples of such parameters are source reliability weighting parameters that specify the reliability of the data source and fields from which the relationship data records are provided. One example of trust rules are syntax validation rules that are used to determine the trust score of a data field based on the value of the data that is stored in that field. For instance, a syntax rule might reduce the trust score of an ownership attribute if the percentage is not between 0 to 100%., 100389=If the process 1400 determines (at step 1405) that the first set of criteria is not met (e.g., the set of X fields do not match), then the match/merge engine 1060 determines (at 1415) whether a second set of criteria are met (e.g., a different set of Z fields match). For this operation, the matching engine of some embodiments can again use the matching modules SSA-NAME3 from Identity Systems, an Intellisync Company., 99101=When scheduled or requested, the match/merge engine 1060 determines whether a relationship data record matches one or more relationship data records stored in the master reference data store 1065. To match existing records in the master reference data store 1065, the match/merge engine 1060 of some embodiments uses a method different from the system of relationship identification keys described above in relation to updating by the load processor 1055., 97426=After 1237, the load processor stores (at 1240) the scored and/or consolidated relationship data sets in the master reference store 1065. This data then awaits in the master reference store 1065 for additional updating by the hierarchy manager 1075, retrieval by a data consumer, and/or matching by the match/merge engine 1060. The match/merge engine will now be described., 98275=To consolidate relationship records stored in the master reference data store 1065, the hierarchy manager includes the match/merge engine 1060. The match/merge engine 1060 may operate periodically or in real time to consolidate relationship records in the master reference data store 1065. The operation of the match/merge engine 1060 could be triggered by various events such as a change in a relationship data record stored in the master reference data store 1065. The match/merge engine 1060 may also be triggered by a change in the rules and trust algorithms relating to the trust scoring of the relationship records. The data steward may further trigger the match/merge engine 1060 to specifically perform matching at various times., 90764=When the load processor 1055 determines (at 1220) that the data is not an update (i.e., new data), then the load processor 1055 uses (at 1222) a trust score calculator 1045 of the trust framework 1070 to compute trust scores for each attribute of the received relationship data set. Computation of trust scores are described below. After 1222, the load processor 1055 stores (at 1225) the data in the master reference data store 1065, and then terminates it operation., 95846=In some embodiments, each attribute of a relationship data set retrieved from the master reference store already has a trust score that was previously calculated. Notwithstanding this previous trust score, the trust score calculator 1045 calculates trust scores for each attribute of the retrieved relationship data set as well as each attribute of the received relationship data set., 84332=The process 1100 performs delta detection only during a bulk load (i.e., only during batch processing) in some embodiments. During a bulk load operation, large amounts of data are processed into the persistent master reference store. In contrast, when a real-time data load occurs, the system of some embodiments assumes that fresh data is coming in and skips delta detection., 84748=After delta detection operation at 1115, the process 1100 transitions to 1120. The process also transitions to 1120 from 1110 when it determines that the data was not received through a batch load operation. At 1120, the process performs data cleansing and standardization operations.}",
    "textBeforeTable": "Patent Citations One of ordinary skill will also recognize that the invention can be embodied in other specific forms without departing from the spirit of the invention, even though the invention has been described with reference to numerous specific details. In view of the foregoing, one of ordinary skill in the art would understand that the invention is not to be limited by the foregoing illustrative details, but rather is to be defined by the appended claims. One of ordinary skill will realize that the hierarchy manager 1075 might follow different consolidation policies than those described above. In some embodiments, the policy designates the system as consolidating, where consolidation of data occurs whenever a new value for an existing relationship data set is received. Therefore, these embodiments perform an update operation when they recognize a match between a new and an existing relationship data set. Some embodiments have a policy that designates them as one-off consolidators. In these embodiments, a new value for an existing relationship is always inserted at runtime. Later, the match/merge engine 1060 consolidates and merges these new and old values and updates the data store. Yet other embodiments have a policy of no-consolidation. These embodiments do not consolidate, but always insert new values for existing relationship data. Thus, some embodiments provide an un-merge functionality that dramatically improves data reliability and quality. Moreover, some embodiments provide for several additional mechanisms such as",
    "textAfterTable": "US5970490 * Nov 4, 1997 Oct 19, 1999 Xerox Corporation Integration platform for heterogeneous databases US6014647 Jul 8, 1997 Jan 11, 2000 Nizzari; Marcia M. Customer interaction tracking US6151608 Apr 7, 1998 Nov 21, 2000 Crystallize, Inc. Method and system for migrating data US6324541 Jun 5, 2000 Nov 27, 2001 Boardwalk Ltd. System, method, and computer program product for providing relational patterns between entities US6332163 Sep 1, 1999 Dec 18, 2001 Accenture, Llp Method for providing communication services over a computer network system US6345288 May 15, 2000 Feb 5, 2002 Onename Corporation Computer-based communication system and method using metadata defining a control-structure US6477580 Aug 31, 1999 Nov 5, 2002 Accenture Llp Self-described stream in a communication services patterns environment US6519571 May 27, 1999 Feb 11, 2003 Accenture Llp Dynamic customer profile management US6523041 Dec 21, 1999",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}