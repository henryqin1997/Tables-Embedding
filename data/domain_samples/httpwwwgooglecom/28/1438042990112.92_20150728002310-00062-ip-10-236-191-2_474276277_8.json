{
    "relation": [
        [
            "Date",
            "Jun 19, 2000",
            "Sep 26, 2006",
            "Jul 31, 2009",
            "Sep 14, 2009",
            "Oct 12, 2009",
            "Oct 13, 2009",
            "Nov 8, 2010",
            "Jun 27, 2011",
            "Mar 15, 2013",
            "Mar 26, 2013",
            "Nov 6, 2014"
        ],
        [
            "Code",
            "AS",
            "FPAY",
            "AS",
            "AS",
            "AS",
            "AS",
            "FPAY",
            "AS",
            "AS",
            "AS",
            "FPAY"
        ],
        [
            "Event",
            "Assignment",
            "Fee payment",
            "Assignment",
            "Assignment",
            "Assignment",
            "Assignment",
            "Fee payment",
            "Assignment",
            "Assignment",
            "Assignment",
            "Fee payment"
        ],
        [
            "Description",
            "",
            "Year of fee payment: 4",
            "Owner name: UNISYS CORPORATION,PENNSYLVANIA Free format text: RELEASE BY SECURED PARTY;ASSIGNOR:CITIBANK, N.A.;REEL/FRAME:023312/0044 Effective date: 20090601 Owner name: UNISYS HOLDING CORPORATION,DELAWARE Free format text: RELEASE BY SECURED PARTY;ASSIGNOR:CITIBANK, N.A.;REEL/FRAME:023312/0044 Effective date: 20090601",
            "Owner name: UNISYS CORPORATION,PENNSYLVANIA Free format text: RELEASE BY SECURED PARTY;ASSIGNOR:CITIBANK, N.A.;REEL/FRAME:023263/0631 Effective date: 20090601 Owner name: UNISYS HOLDING CORPORATION,DELAWARE Free format text: RELEASE BY SECURED PARTY;ASSIGNOR:CITIBANK, N.A.;REEL/FRAME:023263/0631 Effective date: 20090601",
            "",
            "",
            "Year of fee payment: 8",
            "Owner name: GENERAL ELECTRIC CAPITAL CORPORATION, AS AGENT, IL Free format text: SECURITY AGREEMENT;ASSIGNOR:UNISYS CORPORATION;REEL/FRAME:026509/0001 Effective date: 20110623",
            "Owner name: UNISYS CORPORATION, PENNSYLVANIA Free format text: RELEASE BY SECURED PARTY;ASSIGNOR:DEUTSCHE BANK TRUST COMPANY;REEL/FRAME:030004/0619 Effective date: 20121127",
            "Owner name: UNISYS CORPORATION, PENNSYLVANIA Free format text: RELEASE BY SECURED PARTY;ASSIGNOR:DEUTSCHE BANK TRUST COMPANY AMERICAS, AS COLLATERAL TRUSTEE;REEL/FRAME:030082/0545 Effective date: 20121127",
            "Year of fee payment: 12"
        ]
    ],
    "pageTitle": "Patent US6560641 - System, method, and adapter card for remote console emulation including ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US6560641?dq=7,546,338",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 8,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990112.92/warc/CC-MAIN-20150728002310-00062-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 474314799,
    "recordOffset": 474276277,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{60039=The host computer system 14 also has a system BIOS 51 in the form of code stored in a read-only memory. BIOS code for host computer systems based on the industry standard PC architecture is available from a variety of manufacturers, including Phoenix Technologies Ltd. and American Megatrends, Inc. Numerous publications are available providing information concerning the industry standard features of such BIOS code, including, for example, System BIOS for IBM PCs, Compatibles, and EISA Computers: the complete guide to ROM-based system software, Second Edition, \ufffd 1991 Phoenix Technologies Ltd., which is incorporated herein by reference in its entirety., 83326=FIG. 3 illustrates the functions performed by the first program code of the BIOS extension 132 in accordance with the present invention, when executed by the host processor 50 during the POST routine of the system BIOS 51. In addition to the following steps, it is understood that the modified BIOS extension 132 of the present invention also provides the basic functionality of a standard BIOS extension for the peripheral device controller. In step 200, the first program code determines from a constant, K, embedded within the code at compile time, the size of the embedded server program code 134 (i.e., the second program code). In step 202, the first program code decrements the value stored at word 40:13 h of the host memory (designated M[40:13 h] WORD) to allocate a portion of host memory in which to copy the embedded server program code 134. In the industry standard PC architecture of the host computer system 14, the word at M[40:13 h] identifies the amount of available base memory in kilobytes as it is determined by the BIOS POST routine. When multiplied by 40 h, this value essentially provides a pointer to the top of available host memory (sometimes also referred to as the Top of DOS Memory). To allocate memory for the server program code 134 in step 202, the first program code decrements M[40:13 h] WORD by X, where (X*1024>K). Next, in step 204, the first program code locates the newly allocated portion of host memory 52 (M[40:13 h]*40 h) and then copies the embedded server program code 134 to that location, effectively extracting it from the BIOS extension 132., 65045=In the present embodiment, the network interface controller 24 implements the 10/100 BaseT Ethernet protocol, however, in other embodiments, other networking protocols can be employed. In the present embodiment, the network interface controller 24 is implemented using an Intel\ufffd 21143 and a 10/100 Base-TX transceiver. The 21143 supports the MAC layer for both 10 BaseT and 100 BaseT. The 10/100 Base-TX transceiver provides the capability to autodetect the speed of the network and to select 100 BaseT where possible. This combination enables the network interface controller 24 to support 10/100 BaseT full duplex Ethernet with automatic detection of speed and simplex/duplex operation. The network interface controller 24 employs Transmission Control Protocol/Internet Protocol (TCP/IP) over the Ethernet to communicate with the remote client program on the remote computer system 16, as described more fully below., 86139=FIG. 4 is a flow diagram illustrating further details of the operation of the server program code 134 in accordance with the preferred embodiment. As explained above, in this embodiment, execution of the server code 134 begins when the system BIOS calls INT 19 h at the conclusion of its POST routine. Referring to the Figure, at step 220, the server program 134 allocates portions of host memory to server as temporary storage for variables and other data associated with the work that it must perform (e.g., temporary storage is needed to support various INT 13 h diskette service functions that the server program will perform). Next, at step 222, the server program 134 allocates an additional portion of host memory to serve as a communications buffer between the server program and the communications client (described hereinafter) executing on the adapter card 12. Specifically, the server program obtains the contents of host RAM location 40:13 h to again identify the top of available host memory. The server program then decrements that value based on the desired size of the communication buffer, thereby reserving that portion of the host memory as the communications buffer. At step 224, the server program 134 stores a unique signature (i.e., a predetermined pattern of data) in the communications buffer at a predefined offset from the start of the buffer. As described more fully hereinafter, the communications client 140 uses the value at location 40:13 h of host RAM 52 to identify where the communication buffer should be, but then relies upon the presence of the unique signature to ensure that the server program 134 has indeed created the buffer., 44227=Co-pending application Ser. No. 09/310,542, filed May 12, 1999, entitled \u201cSystem and Adapter Card for Remote Console Emulation,\u201d describes an adapter card for remote console emulation that combines a graphics controller, a network interface controller, and a peripheral device interface controller. A remote client program executes on a remote computer system that connects to the network interface controller of the adapter card via a network. The remote client program receives video information from the adapter card via the network and uses that information to produce a representation of the console screen of the host computer on a display at the remote location., 90547=FIG. 5 is a flow diagram providing fuirther details of the operation of the communications client 140 in accordance with the preferred embodiment. At step 240, the communications client 140 retrieves the value stored in the host memory at location 40:13 h (the top of available memory indicator). Because no other host system BIOS code should have changed that value after the server program 134 decrements it to define the communications buffer, the communications client 140 can rely upon the value in identifying the location of the start of the communication buffer. Specifically, the communications client 140 multiples the value at location 40:13 h by 40 h to compute the segment address for the start of the allocated communications buffer.}",
    "textBeforeTable": "Patent Citations Intel and i960 are registered trademarks of Intel Corporation. VxWorks is a registered trademark of Wind River Systems. Microsoft, Windows, Windows NT and/or other Microsoft products referenced herein are either trademarks or registered trademarks of Microsoft Corporation. Pentium, Itanium, and Intel are either trademarks or registered trademarks of Intel, Inc. Navigator is a registered trademark of Netscape Communications Corporation. Java is a trademark of Sun Microsystem, Inc. As the foregoing illustrates, the present invention is directed to a system, method, and adapter card, for providing remote control or emulation of a console of a host computer system from another remotely located computer system over a network, including in particular, the ability to remotely control a peripheral device connected to the host computer system. It is understood that changes may be made to the embodiments described above without departing from the broad inventive concepts thereof. Accordingly, the present invention is not limited to the particular embodiments disclosed, but is intended to cover all modifications that are within the spirit and scope of the invention as defined by the appended claims. The options available to an Observer-level user are shown in the HTML page 108. As illustrated, an Observer-level user will be able to perform the Console, Change Password, and Send Message operations described above. However, an Observer-level user may only be able to view the console, without the ability to interact with it via mouse or keyboard.",
    "textAfterTable": "US6985967 Jul 20, 2000 Jan 10, 2006 Rlx Technologies, Inc. Web server network system and method US7007158 * Feb 14, 2002 Feb 28, 2006 Adaptec, Inc. Method for providing a configuration extensible markup language (XML) page to a user for configuring an XML based storage handling controller US7024497 * Sep 7, 2000 Apr 4, 2006 Adaptec, Inc. Methods for accessing remotely located devices US7076518 * Oct 24, 2000 Jul 11, 2006 Hewlett-Packard Development Comapny, L.P. System and method for linking a web server in a peripheral to a network through a host US7133902 Aug 14, 2003 Nov 7, 2006 Oracle International Corporation Transmitting acknowledgements using direct memory access US7200804 * Sep 1, 2000 Apr 3, 2007 Yodlee.Com, Inc. Method and apparatus for providing automation to an internet navigation application US7228405 * Jun 25, 2002 Jun 5, 2007 Intel Corporation Methods",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}