{
    "relation": [
        [
            "Citing Patent",
            "US5323390 *",
            "US5329524 *",
            "US5345441 *",
            "US5351236 *",
            "US5355364 *",
            "US5502816 *",
            "US5537403 *",
            "US5544160 *",
            "US5550815 *",
            "US5566193 *",
            "US5642349 *",
            "US5687172 *",
            "US5724349 *",
            "US5724352 *",
            "US5835024 *",
            "US6571350 *",
            "US7257688"
        ],
        [
            "Filing date",
            "Oct 20, 1992",
            "Oct 20, 1992",
            "Oct 20, 1992",
            "Oct 20, 1992",
            "Oct 30, 1992",
            "Mar 25, 1994",
            "Dec 30, 1994",
            "Dec 30, 1994",
            "Dec 30, 1994",
            "Dec 30, 1994",
            "Dec 30, 1994",
            "Dec 30, 1994",
            "Aug 31, 1995",
            "Aug 31, 1995",
            "Jun 7, 1995",
            "Dec 27, 1999",
            "Mar 11, 2003"
        ],
        [
            "Publication date",
            "Jun 21, 1994",
            "Jul 12, 1994",
            "Sep 6, 1994",
            "Sep 27, 1994",
            "Oct 11, 1994",
            "Mar 26, 1996",
            "Jul 16, 1996",
            "Aug 6, 1996",
            "Aug 27, 1996",
            "Oct 15, 1996",
            "Jun 24, 1997",
            "Nov 11, 1997",
            "Mar 3, 1998",
            "Mar 3, 1998",
            "Nov 10, 1998",
            "May 27, 2003",
            "Aug 14, 2007"
        ],
        [
            "Applicant",
            "At&T Bell Laboratories",
            "At&T Bell Laboratories",
            "At&T Bell Laboratories",
            "At&T Bell Laboratories",
            "International Business Machines Corporation",
            "At&T Corp.",
            "At&T Corp.",
            "At&T Corp.",
            "Lucent Technologies Inc.",
            "Lucent Technologies Inc.",
            "Lucent Technologies Inc.",
            "Lucent Technologies Inc.",
            "Lucent Technologies Inc.",
            "Lucent Technologies Inc.",
            "International Business Machines Corporation",
            "Hitachi, Ltd.",
            "Hitachi, Ltd."
        ],
        [
            "Title",
            "Multirate, sonet-ready, switching arrangement",
            "TDM circuit-switching arrangement that handles frames of different sizes",
            "Hierarchical path hunt for multirate connections",
            "Multirate, sonet-ready, switching arrangement",
            "Method of routing electronic messages",
            "Method of routing a request for a virtual circuit based on information from concurrent requests",
            "Terabit per second packet switch having distributed out-of-band control of circuit and packet switching communications",
            "Terabit per second packet switch",
            "Apparatus and method for reducing data losses in a growable packet switch",
            "Method and apparatus for detecting and preventing the communication of bit errors on a high performance serial data link",
            "Terabit per second ATM packet switch having distributed out-of-band control",
            "Terabit per second distribution network",
            "Terabit per second ATM packet switch having out-of-band control with multi casting",
            "Terabit per second packet switch having assignable multiple packet loss probabilities",
            "Multi-stage interconnection network with selectable function switching apparatus",
            "Data storage method and data storage for averaging workload in a redundant storage configuration",
            "Information processing system with redundant storage having interleaved master storage and substorage regions"
        ]
    ],
    "pageTitle": "Patent US4993016 - Network control arrangement for processing a plurality of connection requests - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US4993016?dq=%223do%22+dna",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 7,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987552.57/warc/CC-MAIN-20150728002307-00280-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 484836103,
    "recordOffset": 484801580,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{125668=Note that in network 1200 there are eight paths associated with any specified inlet/outlet pair. Each memory 1312 has 512 locations, each comprising eight bits. Each of the 512 locations of a given memory 1312 corresponds to a different value of the predetermined nine bits extracted from the binary number formed by concatenating the inlet number, path number, and outlet number in the manner of FIG. 30. However, none of the path number bits are extracted for any of the stages. As a result, a memory 1312 location defines the busy/idle status of a link stage for each of the eight paths associated with a given inlet/outlet number pair. All eight bits of the addressed memory 1312 locations are read and concurrently combined by a plurality of path busy/idle check units 1314, implemented, for example, as multi-input OR-gates. One of the path check units 1314 transmits an idle signal when all of its input signals indicate an idle status of links. An idle path select unit 1316 (FIG. 51) receives the busy/idle signals from each of the units 1314 and selects in a predetermined fashion one of the defined idle paths. Idle path select unit 1316 then transmits the binary number corresponding to the one of the eight paths selected. Unit 1316 also transmits a blocked path indicator if, in fact, there is not path found. The blocked path indicator is fed back to the connect request queue 1302 such that the connection request can be repeated at a later time. The inverse of the blocked path indicator is used as a write request signal to write a busy bit into each of the memories 1312. The idle path number is transmitted to the memories 1312 to additionally identify the particular path and therefore the particular bit of the location addressed by the inlet and outlet numbers. In addition, a path memory 1318 is updated in response to the write request and stores, at an address defined by the shuffle inlet, both the shuffle outlet and the selected idle path number., 65795=The time required to perform a path hunt through a switching network effectively limits the rate at which circuit-switched or packet-switched communications can be established through that network. The path hunt process involves three basic determinations: (1) identifying one or more paths between a given network inlet and a given network outlet, (2) determining whether any of the identified paths are idle and (3) if more than one of the identified paths are idle, selecting one for use for a particular communication. Once an idle path is selected, further control actions must be taken to enable communication through that path. As disclosed in an article by A. Feiner et al., Bell System Technical Journal, September 1964, pages 2208-2214, a basic decision in the design of the 1 ESS\u2122 switch was that of isolating the path hunt function from the switching network itself. A central processor makes all path searches and keeps a continuous record of all pertinent switching information in its memory. Since only a single processor is used, only one path hunt operation is performed at a time. Accordingly, there is no possibility of an error due to a memory being accessed for a second path hunt operation before a path selected as a result of a first path hunt is marked busy. However, as network designs evolve for use in communicating a wider variety of voice, image and data information, and specifically for networks designed for implementation in the photonics domain and where circuit-switched or packet-switched connections are requested at a high rate the limitation of \"one at a time\" path hunt operations characteristic of known network control arrangements may lead to long connection request queues and connection setup delays., 71023=One specific illustrative embodiment of the invention is used in the network controller 1300 (FIG. 1) which controls a 512\ufffd512 multi-stage crossover network 1200 (FIG. 38). To get a better understanding of the size of network 1200 and the potential complexity of performing path hunts in a network of that size, first refer to the 16\ufffd16 crossover network 1170 (FIGS. 34-36) and note the pattern of crossover connections from stage to stage. FIG. 37 is a representation of the relative sizes of the 16\ufffd16 network 1170 and the 512\ufffd512 network 1200. Also shown is an intermediate size 128\ufffd128 network. Crossover network 1200 (FIG. 38) also includes 15 stages; however stages 1, 2, 3, 13, 14, and 15 do not perform a switching function but are used only to implement the fanout/fanin F=8. Network controller 1300 is used to effect path hunt, connect and disconnect functions for network 1200 via a plurality of stage controllers 1201 through 1209, individual to the stages 4 through 12. For the present example, the nodes of the switching stages 4 through 12 are full capacity switching nodes such as the node of FIG. 6., 96014=The forward-backward invariance property (FBIP) can be stated as follows: every stage j node which can be reached by a given stage i node reaches exactly the same set of stage i nodes. The FBIP holds for stages i and j in an EGS network if ##EQU4## pps divides rj. The paths between certain stage 3 and stage 5 nodes for network 1014 are shown by dark lines in FIG. 22. Note that every stage 5 node which can be reached by a given stage 3 node reaches exactly the same set of stage 3 nodes. The FBIP is important because it drastically reduces intersecting calls and produces multistage modularity., 86789=FIG. 19 is a diagram of a system 1602 having N=16 inlets and M=4 outlets. System 1602 is identical to system 1600 (FIG. 2) except that expansion section 1610 is not required., 74481=In a first plural processing technique, busy/idle information is read from stage memories 1312 and subsequently processed by the busy/idle check units 1314 and the idle path select unit 1316 to identify an idle path. Concurrently with the path identification processing, the stage memories 1312 are accessed again to effect another, non-conflicting path hunt., 110950=FIG. 28 is a path hunt processing flow chart used to effect the path hunt function in network 1012 where the switches are capacity one, i.e. cap (Si)=1. Processing begins with block 1122 where a previously unchecked path P* is selected. In block 1124 the busy/idle status of Si (x,P*,y) is checked for all i,1\u2266i\u2266S. In decision block 1126 a determination is made of whether all the Si (x,P*,y) are idle. If all the Si (x,P*,y) are idle processing proceeds from block 1126 to block 1128 where it is concluded that path P* may be used to connect inlet x to outlet y. If it is determined in block 1126 that all the Si (x,P*,y) are not idle, processing continues with decision block 1130. In block 1130 it is determined whether there are other unchecked paths. If there are, processing returns to block 1122 and the processing flow chart is repeated for a new unchecked path. However, if in decision block 1130 it is determined that there are no other unchecked paths, processing branches to block 1132 where it is concluded that all paths are blocked between inlet x and outlet y. The switches Si are checked in the flow chart of FIG. 28 because the switches of network 1012 were assumed to be of capacity one., 64932=T. J. Cloonan et al., \"Crossover Network Utilizing Two-Dimensional Arrays of Nodes\", Ser. No. 07/349,008 filed May 8, 1989., 92356=An example EGS network 1014 is shown in FIGS. 17 and 18. To determine the number of paths between input x and output y, we calculate ##STR3##, 89334=A general strictly nonblocking three stage Clos network 1006 is shown in FIG. 13. (The inter-stage links are omitted in FIG. 13.) Applying the strictly nonblocking condition to network 1006, the minimum number of paths between any input-output pair is equal to r. The maximum number of blocked paths is equal to (n-1)+(m-1) and therefore whenever r\u2267n+m-1, network 1006 is strictly nonblocking. Note that an S+2 stage Clos network can be recursively produced from an S stage Clos network by simply replacing each switch in a given stage with a three stage Clos network. A strictly nonblocking five stage Clos network 1008 as shown in FIG. 14 with the number of links between stages indicated thereon. Two problems in implementing Clos networks in the photonic domain are: (1) non-square, non-small switching elements, and (2) different numbers of links between stages (increasing geometrically toward the center)., 122451=Returning to block 1406, if it is determined that the given connection request is in conflict with other connection requests being processed, information concerning the given connection request in stored in a queue in block 1420. Once an idle path is found in block 1410 for one of the other connection requests, a report is made to the queue of block 1420. The disjoint path check of block 1406 is then repeated. If no idle path is identified in block 1410 for a connection request, blocks 1422 and 1424 are executed. In block 1422, a report is made to the queue of block 1420 that connection processing is complete. In block 1424, a blocking failure report is made to the queue of block 1402 such that the unsuccessful connection request can be processed again later., 116725=Recall that the crossover network and the shuffle network are isomorphic. The transformations between various stages of the two network types are illustrated schematically in FIG. 32. The particular transformations identified in FIg. 32 are listed herein in Tables 1-3. In FIG. 32 the switch and output of stage i of a crossover network identified in block 1150 and the switch and output of a shuffle network stage i identified in block 1154 are related by transformations 1, 2, 3, and 4 of blocks 1152. Similarly, the switch and input for stage i+1 of a crossover network represented in block 1160 and the switch and input for stage i+1 of a shuffle network represented in block 1164 are related as defined by transformations 9, 10, 11, and 12 of block 1162. The transformations between stage i and switch and output number for a crossover network and stage i+1 switch and input number for a crossover network are specified by transformations 13, 14, 15, and 16 of block 1156. The corresponding relationships between successive stages of a shuffle network are given by transformations 5, 6, 7, and 8 of block 1158. The transformations 1 through 16 are listed in Tables 1-3. For each transformation, the number to be transformed is an n-bit binary number represented by Bn-1 . . . B1 B0., 85758=When system 1600 (FIG. 5) is implemented using 2-modules, such as node 1530, as the switching nodes of perfect shuffle equivalent network 1620 as well as in expansion section 1910 and concentration section 1930, the 2-modules of perfect shuffle equivalent network 1620 are individually disabled or enabled as necessary such that none of the 2-modules has more than one active input signal. The 2-modules of the last expansion node stage 1912 are also individually disabled or enabled (not shown in FIG. 5) such that a signal received at a given one of the N inlets is transmitted to only two 2-modules of node stage 1621-0. To improve the tolerance of system 1600 to faults, such as a particular 2-module output becoming locked at one logic value, all the expansion and concentration 2-modules may be controllable., 94126=Referring to network 1012 (FIG. 21), consider the following. Since n1 \u2266N and ##EQU1## is nondecreasing in k, there must exist some stage t such that for 1 \u2266k\u2266t, ##STR9## Similarly, there must exist a stage u such that for u\u2266k\u2266S, ##STR10## The relationship ##STR11## implies that all inlets have at least one path to every stage t+1 node and therefore that intersecting call C(i,j) must have i\u2266t+1 and similarly, because ##STR12## must have j\u2267u-1. Using all of this information, we are able to establish that the expression for blocked path becomes ##STR13## where, conventionally, it is understood that the summation term ##EQU2## equals zero if t+1>u-2 and the product term ##EQU3## equals one if t+2>S. Note that ##STR14## is a function of the entry point i and that ##STR15## is a function of the departure point j. In addition, ##STR16## is a constant for all intersecting calls. Therefore, the upperbound on paths blocked by a single intersecting call is a separable function of the entry point, departure point, plus a constant., 105218=Crossover network 1020 shown in FIG. 25 is a perfect shuffle equivalent network. This can easily be verified by examining the labeling of the nodes in each stage and the interconnection between stages. The existence of such regularized physical interconnection patterns of perfect shuffle equivalent networks is important for implementation consideration., 123957=A hardware embodiment of network controller 1300 is shown in FIGS. 42-44. Connection requests, specifying a particular network 1200 inlet/outlet pair, are stored in a connect request queue 1302. The nine-bit binary crossover inlet number and the nine-bit binary crossover outlet number are transmitted to a crossover to shuffle mapping unit 1304 (FIG. 50) for conversion to the corresponding nine-bit shuffle inlet number and the corresponding nine-bit shuffle outlet number. The shuffle inlet and outlet numbers are stored in a connect/disconnect request queue 1305 and then transmitted to a disjoint path check unit 1306 (FIg. 45). Unit 1306 determines whether the present inlet/outlet number pair defines paths through network 1200 which are link disjoint from the paths associated with another inlet/outlet number pair. When two or more connection requests define disjoint paths through network 1200, multiple connection requests and path hunts can be processed at the same time in what is referred to herein as an overlap mode of operation. The shuffle inlet/outlet numbers are then stored in a connect/disconnect request queue 1308. When a path hunt is to be performed, connect request queue 1308 transmits a read request signal to a plurality of memories 1312 that store the link busy/idle bits for a corresponding one of the link stages 4 through 11 of network 1200. (Link stage i is the stage of links between node stage i and node stage i+1). The nine-bit shuffle inlet and the nine-bit shuffle outlet signals are also transmitted in parallel from connect request queue 1308 and predetermined ones of the inlet and outlet signals are used to address locations of the memories 1312., 123240=Disconnection processing (FIG. 40) begins when a network 1200 inlet for a given disconnection request is stored in a queue in block 1440. When the stored inlet is to be processed, a conversion of the inlet number is made in block 1442 to the corresponding inlet number of the shuffle network topologically equivalent to network 1200. In block 1444, the shuffle inlet number is used to index the path memory to determine the shuffle outlet number and the path number for the connection. Disconnect orders are sent in block 1448 to the network stage controllers 1201 through 1209. Further, the path components (switches or links) for the path being disconnected are again marked idle for all stages., 90944=An extended generalized shuffle (EGS) network 1012 is shown in FIG. 16. An EGS network is a MIN with a particular specified link interconnection pattern. In any stage i the nodes are numbered consecutively from 0 to ri -1 and the outputs on a particular node are numbered consecutively from 0 to mi -1. The outputs of the stage i nodes are then numbered consecutively from 0 to ri mi -1; output oi on node xi is numbered xi mi +oi. The EGS interconnection pattern is stated as follows: stage i output xi mi +oi is connected to node (xi mi +oi)mod r.sbsb.i+1 in stage i+1. This interconnection pattern assigns links consecutively to nodes in the next stage (the so called perfect shuffle.). An important implication of the EGS interconnection pattern is that the number of paths between any two nodes in two given stages never differs by more than one. For i<j, the number of paths between a node in stage i and a node in stage j is either ##STR1## where x denotes the smallest integer \u2267x and x denotes the largest integer \u2266x. Consider an EGS network with N=n1 r1 inlets and m=ms rs outlets. The minimum number of paths between any inlet-outlet pair is given by ##STR2##, 131004=The memories 1312 are each 512\ufffd8 random access memories storing the link busy/idle bits. The path busy/idle check units 1314 are implemented as OR gates. The select unit 1316 (FIG. 5) is implemented using an arrangement of AND, NAND, OR, and NOR gates to define, using three path signals, the selected idle path, and to generate a single signal for use both as a blocked path indicator and as a write request signal., 83433=Three alternative 2\ufffd2 switching nodes 1510, 1520, and 1530 for use in system 1600 are shown in FIGS. 6, 7 and 8. A node with n inputs and m outputs is said to be a full capacity node if it is able to convey min{n,m} signals at the same time. A node is said to be a capacity one node if it is able to convey only one signal at a time. A capacity one node may have selectivity of either inputs or outputs or may have no selectivity., 101277=An example nonblocking EGS network 1016 is shown in FIG. 24. If the output links in each stage of this network are assigned consecutively to the nodes in the next stage (perfect shuffle), then any idle input can be connected to any idle output, regardless of the current connection state of the network, i.e., the network is strictly nonblocking., 65085=G. W. Richards, \"Concurrent Multi-Stage Network Control Arrangement\", Ser. No. 07/349,011, filed May 8, 1989., 88765=A 24\ufffd24 strictly nonblocking three stage Clos network 1004 is shown in FIG. 12. There are five paths between each inlet and outlet, one through each middle stage switch. Any inlet (outlet) may have two paths blocked by the other two inlets (outlets) on its switch. If these two pairs of blocked paths are disjoint, a total of four paths are blocked. Thus, applying the strictly nonblocking condition, we have 5\u2267(2+2)+1. The number of crosspoints in network 1004 is 3\ufffd5\ufffd8+8\ufffd8\ufffd5+5\ufffd3\ufffd8=560. For comparison, a 24\ufffd24 crossbar network has 576 crosspoints., 109626=FIG. 27 is a path hunt processing flow chart used to effect the path hunt function in network 1012 where the switches are full capacity, i.e., cap(Si)=min{ni,mi }. Processing begins with block 1102 where a previously unchecked path P* is selected. In block 1104 the busy/idle status of Li (x,P*,y) is checked for all i, 1\u2266i\u2266S-1. In decision block 1106 a determination is made of whether all the Li (x,P*,y) are idle. If all the Li (x,P*,y) are idle, processing proceeds from block 1106 to block 1108 where it is concluded that path P* may be used to connect inlet x to outlet y. If it is determined in block 1106 that all the Li (x,P*,y) are not idle, processing continues with decision block 1110. In block 1110 it is determined whether there are other unchecked paths. If there are, processing returns to block 1102 and the processing flow chart is repeated for a new unchecked path. However, if in decision block 1110 it is determined that there are no other unchecked paths, processing branches to block 1112 where it is concluded that all paths are blocked between inlet x and outlet y. The links Li are checked in the flow chart of FIG. C1 because the switches of network 1012 were assumed to be full capacity., 119334=Arrangements for controlling a 512\ufffd512 crossover network 1200 (FIG. 38) are now described. To get a better understanding of the size of such a network, first refer to the 16\ufffd16 crossover network 1170 (FIGS. 34-36) and note the pattern of crossover connections from stage to stage. FIG. 37 is a representation of the relative sizes of the 16\ufffd16 network 1170 and the 512\ufffd512 network 1200. Also shown is an intermediate size 128\ufffd128 network. Crossover network 1200 (FIG. 38) includes 15 stages; however stages 1, 2, 3, 13, 14, and 15 do not perform a switching function but are used only to implement the fanout/fanin F=8. A crossover network controller 1300 is used to effect path hunt, connect, and disconnect functions for network 1200 via a plurality of stage controllers 1201 through 1209, individual to the stages 4 through 12. For the present example, the nodes of the switching stages 4 through 12 are full capacity switching nodes such as the node of FIG. 5. The nodes of the fanout stages 1,2 and 3 and the nodes of the fanin stages 13, 14, and 15 are simple fanout elements and fanin elements, respectively. Crossover network controller 1300, which may be implemented as a single processor operated under stored program control or as a hardware logic circuit arrangement, implements the control processing shown, for example, in FIGS. 39 and 40 to effect connections and disconnections respectively., 106468=EGS network 1022 shown in FIG. 26 represents an important special case of perfect shuffle equivalent networks. In network 1022 S\u22673, n1 32 1, m1 =F, r1 =N, ns =F, M2 =1, r2 =N, and for 2\u2266i\u2266S-1, ni =mi =n, and ##EQU39## LET: P(B)=probability that a given idle inlet and outlet cannot be connected (blocked)., 64760=T. J. Cloonan et al., \"Optical Apparatus for Combining Light Beam Arrays Having Different Wavelengths\", Ser. No. 07/349,280 filed May 8, 1989., 115443=The relationship of the switches and links of a shuffle network to the inlet/outlet and path numbers is described herein for the exemplary network 1140, shown in FIG. 29. FIG. 30 illustrates the concatenation of binary representations of inlet 137, path 417, and outlet 291 to from a single binary number. FIG. 31 illustrates that the determination of a particular switch in a given stage can be made simply by selecting a certain number of consecutive bits of the binary number. The particular eleven-bit sequences used to identify the stage 2 switch and the stage 16 switch are illustrated in FIG. 31. Similarly, the twelve-bit sequences used to identify the particular links in stage 2 and stage 16 are also illustrated. The eleven-bit strings identify one out of 2048 switches. The twelve-bit strings identify one out of 4096 links. Also illustrated in FIG. 31 is the method for identifying the particular inputs and outputs of the various stages, based on the bit(s) adjacent to the bit sequences used to identify the switches and links. For example, the stage 2 and stage 16 inputs are identified and the stage 1, stage 2 and stage 16 outputs are identified. Note that for network 1140, output routing is \"self-routing\"--independent of the input., 90266=A multistage interconnection network (MIN) 1010 is shown in FIG. 15 and is defined by the following five conditions:, 131440=The disjoint path check unit 1306 is based on the logic arrangement shown in FIG. 46. The two inlet/outlet pairs checked are designated as (X9, X8, X7, X6, X5, X4, X3, X2, X1)--(Y9, Y8, Y7, Y6, Y5, Y4, Y3, Y2, Y1) and (x9, x8, x7, x6, x5, x4, x3, x2, x1)--(y9, y8, y7, y6, y5, y4, y3, y2, y1). The logic arrangement of unit 1306 is applicable for checking disjoint paths in network 1330, shown in FIG. 49, independent of the fanout as indicated by the first stage of elements being 1\ufffd2n elements and independent of the fanin as indicated by the last stage of elements being 2n \ufffd1 elements. The logic arrangement of unit 1306 generates a logic zero signal when all paths for the inlet/outlet pairs are not link disjoint and generates a logic one signal when all pairs are link disjoint. The explanation of this logic is as follows. Consider the binary representation of xM1 +P*M+y for the two inlet/outlet pairs being checked. ##EQU48## Li (x,P*,y) is given by a window of log2 (ri mi)=n+k=9+3=12 bits displaced by log2 Mi+1 =12-i bits from the right of these binary values for 4\u2266i\u226611. Since any stage 1, 2, or 3 link is accessible by only one inlet (the three stages of fan-out) and any stage 12, 13, or 14 link is accessible by only one outlet (the three stages of fan-in) we are concerned with Li only 4\u2266i\u226611., 86983=Before describing the blocking characteristics of systems such as system 1600, the fundamental principles of strictly nonblocking networks are discussed. The condition for a network to be strictly nonblocking is that the minimum number of paths between any input-output pair must exceed the maximum number of paths which can be blocked between that pair. However, a sufficient (but non necessary) condition for a network to be strictly nonblocking is that the minimum number of paths between any input-output pair exceeds the maximum number of paths which can be blocked between any input-output pair. In equation form, this sufficient condition is expressed as:, 87945=A single stage strictly nonblocking network 1002 is shown in FIG. 11. In network 1002, the minimum number of paths between any input-output pair is equal to one. There are no blocked paths because each horizontal rail is uniquely associated with an input and each vertical rail is uniquely associated with an output. Therefore, we have, 83883=Node 1510 (FIG. 6), a fully capacity node, comprises two selectors 1511 and 1512. Selector 1511 connects either of the node inputs I1 and I2 to node output O1 in response to a selection signal S1. Selector 1512 connects either of the node inputs I1 and I2 to node output O2 in response to a selection signal S2., 85143=Node 1530 represents a special case of a more general switching node referred to herein as an nxm-module. An nxm-module, which as n inputs and m outputs, either routes the logical union of the signals at the n inputs to all of the m outputs, or routes none of the signals at the n inputs to any of the m outputs. If a network of nxm-modules is controlled such that at most one input of an nxm-module has an active signal, the nxm-module functions to either route the signal to all of the m outputs or to leave the m outputs idle. Node 1530 is a 2\ufffd2-module, also referred to herein as a 2-module., 130299=The crossover to shuffle mapping unit 1304 (FIG. 50) comprises a set of exclusive-OR gates combining the appropriate inlet and outlet signals. Since the network has fan-out and fan-in of eight, we may interpret the entire network as being comprised of a total of fifteen stages--three stages for one to eight fan-out, nine stages for switching, and three stages for one to eight fan-in. The fan-out/fan-in is accomplished by selectively equipping only one of each eight inlets/outlets (one inlet/outlet one of four switches). The selected 512 inlet and outlet switches are then mapped to the shuffle domain using expression (1), of Table 1. The resulting logic is indicated in FIG. 50., 88419=Accordingly, network 1002 is a strictly nonblocking network. In network 1002, there are N\ufffdM crosspoints but only min {N,M} are ever used at one time. To make a more efficient network, multiple stages are employed so as to create more paths than possible blocked paths while simultaneously decreasing the number of crosspoints., 82399=Three alternative implementations for the expansion section 1610 and concentration section 1630 are shown in FIGS. 3, 4 and 5. In expansion section 1710 (FIG. 3), each of the N=4 inlets is directly connected to four of the inputs of node stages 1621-0. In concentration section 1730, four outputs of node stage 1621-3 are directly connected to each of the M=4 outlets. Expansion section 1810 (FIG. 4) has a single stage 1811 of 1\ufffd4 nodes and concentration section 1830 has a single stage 1831 of 4\ufffd1 nodes. Expansion section 1910 (FIG. 5) has two stages 1911 and 1912 of 1\ufffd2 nodes and concentration section 1930 has two stages 1931 and 1932 of 2\ufffd1 nodes. Each of the expansion sections 1710, 1810, 1910 connects each of the N inlets to multiple inputs of node stage 1621-0 in a perfect shuffle sustaining pattern as defined herein. Each of the concentration sections 1730, 1830, 1930 connects multiple outputs of node stage 1621-3 to each of the M outlets in a perfect shuffle sustaining pattern as defined herein., 86592=FIG. 9 is a diagram of a system 1601 having N=4 inlets and M=16 outlets. System 1601 is identical to system 1600 (FIG. 2) except that concentration section 1630 is not required., 65224=G. W. Richards, \"Network Control Arrangement Based on Topological Equivalence\" Ser. No. 07/349,007, filed May 8, 1989., 81391=FIG. 2 is a diagram of a system 1600 comprising an expansion (fanout) section 1610, a perfect shuffle equivalent network 1620, and a concentration (fanin) section 1630. System 1600 has N=4 and M=4 outlets. Perfect shuttle equivalent network 1620 has four node stages 1621-0, 1621-1, 1621-2 and 1621-3 comprising 2\ufffd2 nodes, and three link stages 1622-0, 1622-1 and 1622-2 each effecting the same perfect shuffle interconnection of successive node stages. Expansion section 1610 expands the N=4 inlets to 16 (more than N) inputs of the first node stage 1621-0. Concentration section 1630 concentrates 16 (more than M) outputs of the last node stage 1621-3 to the M=4 outlets. System 1600 has at least two paths between each of the N inlets and each output of the last node stage. Individual nodes of the node stages 1621-0, 1621-1, 1621-2 and 1621-3 are controlled by corresponding stage controllers 1640, 1641, 1642, 1643 in response to instructions from a shuffle network controller 1650., 72159=Network controller 1300 (FIG. 1) includes a plurality of memories 1312 each storing stage busy/idle information for one of the link stages of network 1200. Stage busy/idle information is combined concurrently from all of the memories 1312 to hunt for an idle path from a specified network 1200 inlet to a specified network 1200 outlet. Network 1200 has eight paths from a specified inlet to a specified outlet. Each stage memory 1312 stores the stage busy/idle bits for all eight paths at one location addressable based on the specified inlet and outlet. The stage busy/idle bits are read concurrently for all paths and all stages. Eight busy/idle check units 1314 concurrently determine the overall busy/idle status of all eight paths. An idle path select unit 1316 selects one of the idle paths for use for a particular communication. All of the stage memories 1312 are concurrently updated to redefine the selected path as busy. Signals are transmitted to the node stage controllers 1201 through 1209 to enable the selected path for communication and information defining the path is written into path memory 1318. When a disconnection request is received, the stage busy/idle information is changed concurrently in all stage memories 1312 to again reflect an idle status. Signals are transmitted to the node stage controllers 1201 through 1209 (FIG. 38) to disable communication over the path and the path information is deleted from path memory 1318 (FIG. 1)., 112242=It is significant to note that in performing the path hunt for network 1012, parallel operations are possible. All Si (x,P*,y) or Li (x,P*,y) busy/idle statuses for all i and P* may be read concurrently, and then all P paths can be determined busy or idle concurrently. A specific path is then chosen from those found idle, if any., 64599=T. J. Cloonan et al., \"Space-Division Switching Network Having Reduced Functionality Nodes\", Ser. No. 07/349,280 field May 8, 1989., 64425=T. J. Cloonan et al., \"Network Topology for Reduced Blocking and Photonic System Implementation Thereof\", Ser. No. 07/349,281 filed May 8, 1986., 120761=Connection processing (FIG. 39) begins when a network 1200 inlet/outlet pair for a given connection request is stored in a queue in block 1402. When the stored inlet/outlet pair is to be processed, a conversion of the inlet and outlet numbers is made in block 1404 to the corresponding inlet and outlet numbers of the shuffle network topologically equivalent to network 1200. Then in block 1406 a disjoint path check is made using procedures described further herein to determine whether any of the possible paths for this connection request intersect with any of the possible paths for other connection requests being processed concurrently. If there is no conflict with other connection requests in progress, execution proceeds to block 1408 where the switches or links associated with all paths from the inlet to the outlet of the equivalent shuffle network are determined. Since, in network 1200, the switches (or nodes) are full capacity switches, it is sufficient to determine the links of a given path through the network. If the network switches are capacity one switches, it is sufficient to determine the switches of a given path through the network. Once the path components of all paths have been determined, an idle path is identified in block 1410 if such idle path exists. When an idle path is found, a path memory is updated in block 1412 to define the idle path using the inlet, outlet, and path numbers for the equivalent shuffle network. Connection orders are sent in block 1414 to the network stage controllers 1201 through 1209. Further, the path components (switches or links) for the identified path are marketed busy in block 1416 for all stages., 74860=An alternative network controller 1301 (FIG. 45) has duplicate, first and second memories 1312 for each stage. In a second plural processing technique, the first memories 1312 and the second memories 1312 are read concurrently to perform two path hunts. Identified paths are subsequently marked busy in both the first memories 1312 and the second memories 1312. Controller 1301 also employs the first plural processing technique to further reduce connection request processing times., 98276=Recall that at most ##EQU14## calls can enter L(x,y) in network 1012 (FIG. 23) at point A from stage 1 through stage i. But also, at most \u03c9 calls can enter from stage 1 through stage i. Also recall that at most ##EQU15## calls can depart L(x,y) from point B of network 1012 from stage i+2 through stage S. But also, at most \u03c9 calls can depart from stage i+2 through stage S. Thus, as many as ##EQU16## calls can enter from stage 1 through stage i, and as many as ##EQU17## calls can enter from stage 1 through stage i-1. Assuming a maximum number of calls entering through stage i-1, we have at most ##EQU18## calls entering at stage i. And similarly, we have at most ##EQU19## calls departing at stage i. We are now able to state the fundamental condition for strictly nonblocking EGS networks. ##STR18## is the minimum number of paths between any input-output pair, ##EQU20## is the maximum number of entering calls at stage i, ##STR19## is the number of paths blocked by calls entering at stage i, ##EQU21## is the maximum number of departing calls at stage i, ##STR20## is the number of paths blocked by the call departing at stage i, \u03c9 is the maximum number of intersecting calls, and ##STR21## is a constant component of blocked paths for all intersecting calls., 108970=Recall that network 1012, shown in FIG. 16, is an EGS network having an interconnection pattern that simply assigns links consecutively to switches in the next stage--a perfect shuffle interconnection. The number of paths P between any inlet x and any outlet y in network 1012 is given by ##STR24## Let I(k) denote the integer set {0,1, . . . , k-1}. Denote a given path from inlet x to outlet y by the triple (x,P*,y), where P* is an element of I(P). Path (x,P*,y) will pass through stage i switch ##STR25## for 1\u2266i\u2266S. Denote a link between stages i and i+1 as a stage i link. Path (x,P*,y) utilizes stage i link ##STR26## for 1\u2266i\u2266S-1., 84689=Node 1530 (FIG. 8), a capacity one node without selectivity, comprises an OR-gate 1531 and an AND-gate 1532. When a control signal C is a logic one, AND-gate 1532 transmits the logic union of the signals at the inputs I1 and I2, to both outputs O1 and O2. When the control signal C is a logic zero, AND-gate 1532 transmits a logic zero to both outputs O1 and O2. Only one of the inputs I1 and I2 receives an active signal at any time., 84214=Node 1520 (FIG. 7), a capacity one node with input selectivity, comprises two AND-gates 1521 and 1522, and an OR-gate 1523. AND-gate 1521 transmits a signal from input I1, via OR-gate 1523, to both outputs O1 and O2 in response to a selection signal S1. AND-gate 1522 transmits a signal from input I2, via OR-gate 1523, to both outputs O1 and O2 in response to a selection signal S2. Only one of the selection signals S1 and S2 is a logic one at any time., 127663=A disconnect queue 1320 effects disconnections by transmitting the crossover inlet to be disconnected, to crossover to shuffle mapping unit 1304 for conversion to the corresponding shuffle inlet. The shuffle inlet is then used to address path memory 1318. Disconnect request queue 1320 transmits a read request signal to path memory 1318 and reads the shuffle outlet stored at the location of path memory 1318 defined by the shuffle inlet address. The read shuffle outlet is then transmitted along with the shuffle inlet via queue 1305, disjoint path check unit 1306 and queue 1308 to address memories 1312. The addressed path memory 1318 location also includes the path number of the path to be disconnected. The read path number is transmitted in parallel to each of the memories 1312 to additionally specify the particular bit to be returned to an idle status. Thereafter, disconnect request queue 1320 transmits a write request which effects the change to idle status in the memories 1312 and also deletes information concerning that connection from path memory 1318. Each of the node stage controllers 1201 through 1209 includes a translator which effects a predetermined combination of the shuffle inlet, outlet, and path signals to determine both the node and the node input to node output connection to be enabled as part of a new path or to be disabled for a disconnection. The design of these translators is based on the following logic. Following reasoning similar to that to determine Si (x,P*,y) and Li (x,P*,y) from a binary representation of xM1 +P*M+y, we may determine Ii (x,P*,y) (the input used on Si (x,P*,y)) and Oi (x,P*,y) (the output used on Si (x,P*,y). ##STR61##, 73643=In network 1200, it is very probable that two connection requests are not in conflict, i.e., none of the eight network 1200 paths from a first inlet to a first outlet conflict with any of the eight network 1200 paths from a second inlet to a second outlet. A disjoint path check unit 1306 (FIG. 46) determines whether any network paths conflict for the two connection requests. Stage memories 1312 are accessed to find an idle path from the second inlet to the second outlet before being updated only when it is determined that there is no possible conflict. The disjoint path check is effected by logically combining corresponding bits of inlet binary numbers associated with the first and second inlets and logically combining corresponding bits of outlet binary numbers associated with the first and second outlets., 96643=With reference to network 1012 shown in FIG. 23, assume that FBIP holds for stages 1 through i, i.e., ##EQU5## divides ri. Thus, every stage i node which can be reached by some inlet x reaches exactly the same set of first stage nodes or inlets. Since any stage i node can reach at most ##EQU6## inlets (the products of the np fanouts from stage i through stage 1), at most ##EQU7## calls can enter the channel graph L(x,y) from stage 1 through stage i (point A in FIG. 23). Similarly, if FBIP holds for stages i+2 through S, then at most ##EQU8## calls can depart from stage i+2 through stage S (point B in FIG. 23). For worst case considerations, we assume that all calls which enter at or before stage i depart at or before stage i+1 and all calls which depart at or after stage i+2 enter at or after stage i+1. Thus, for a given i, 1\u2266i\u2266S-2, the number of calls intersecting a channel graph is upperbounded by ##EQU9## Minimizing for i and considering that at most min{N-1,M-1} calls can intersect a channel graph, we have that the maximum number of calls \u03c9 intersecting a channel graph is given by: ##EQU10## The arguments which are used to obtain this result are valid if FBIP holds for all stages 1 through i in which ##EQU11## and also for all stages j through S in which ##EQU12##, 134284=When two inlet/outlet pairs are determined to be link disjoint, then the path hunt function to establish connections can be performed in an overlap mode of operation, as shown in the timing diagram of FIG. 47. As shown, the times needed to perform a read of the memories 1312, the subsequent operation of the logic circuitry comprising OR gates 1314 and the idle path select unit 1316, and then the subsequent time for writing of path memory 1318, as well as writing busy bits into the memories 1312, are indicated in FIG. 47 by the times R1,L1,W1. The corresponding times for a second connection request are designated R2,L2,W2. As shown, the second read occurs during the time that the results of the first reading are propagating through the several levels of logic gates. As shown in FIG. 48, when duplicate copies of the network controller memories, etc., are used, as in FIG. 45, four reads can be effected before the corresponding four writes occur.}",
    "textBeforeTable": "Patent Citations It is to be understood that the above-described embodiments are merely illustrative of the principles of the invention and that many variations may be devised by those skilled in the art without departing from the spirit and scope of the invention. It is therefore intended that such variations be included within the scope of the claims. Link disjoint path probability: The probability that L(x,y)\u2229L(x',y')=\u03c6 is given by ##EQU50## Switch disjoint path probability: The probability that S(x,y)\u2229S(x,40 ,y')=\u03c6 is given by ##EQU51## For log2 N\u2266S\u22662 log2 N: P (disjoint)=P (all paths between a given inlet/outlet pair are switch and link disjoint from all paths between another ##EQU52## There are ##EQU53## ways to select two inlet/outlet pairs that have common switches for some paths. There are ##EQU54## ways to select two inlet/outlet pairs. By way of example, for N=512, S=9, there are 5122 /2 [512(18-9+1)-1024+1]=537,001,984 ways to select two inlet/outlet pairs with intersecting paths and 5122 \ufffd5112 /2=34,225,651,712 ways to select two inlet/outlet pairs. P (disjoint)=1-537,001,984/34,225,651,712=0.9843. In addition, P (at least 2 of 3 pairs are disjoint)\u22480.99999613, P (each of 4 pairs are disjoint from the other three)\u22480.9094, and P (some of 4 of 5 pairs are all disjoint)\u22480.996. Case 1: x and x' and also y and y' are chosen without replacement from the sets of N inlets and M outlets, respectively. Thus, x\u2260x', and x\u2260y'. For this case we set \u03b2=1. Case 0: x and x'",
    "textAfterTable": "International Business Machines Corporation Method of routing electronic messages US5502816 * Mar 25, 1994 Mar 26, 1996 At&T Corp. Method of routing a request for a virtual circuit based on information from concurrent requests US5537403 * Dec 30, 1994 Jul 16, 1996 At&T Corp. Terabit per second packet switch having distributed out-of-band control of circuit and packet switching communications US5544160 * Dec 30, 1994 Aug 6, 1996 At&T Corp. Terabit per second packet switch US5550815 * Dec 30, 1994 Aug 27, 1996 Lucent Technologies Inc. Apparatus and method for reducing data losses in a growable packet switch US5566193 * Dec 30, 1994 Oct 15, 1996 Lucent Technologies Inc. Method and apparatus for detecting and preventing the communication of bit errors on a high performance serial data link US5642349 * Dec 30, 1994 Jun 24, 1997 Lucent Technologies Inc. Terabit per second ATM packet switch",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}