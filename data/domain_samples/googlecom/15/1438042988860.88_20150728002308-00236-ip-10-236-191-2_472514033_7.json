{
    "relation": [
        [
            "Citing Patent",
            "US5703940 *",
            "US5761288 *",
            "US5883946 *",
            "US5898772 *",
            "US5923738 *",
            "US5930341 *",
            "US5937041 *",
            "US5937347 *",
            "US5940483 *",
            "US5946383 *",
            "US5953406 *",
            "US5960205 *",
            "US5999609 *",
            "US5999730 *",
            "US6041110 *",
            "US6058175 *",
            "US6061512 *",
            "US6064732 *",
            "US6157708 *",
            "US6199066",
            "US6208642",
            "US6212267 *",
            "US6314451",
            "US6317761",
            "US6377567",
            "US6393120",
            "US6466967",
            "US6516338",
            "US6615279 *",
            "US6687737",
            "US6785659",
            "US6880123",
            "US6990630",
            "US7093009 *",
            "US7142655",
            "US7143337",
            "US7149958",
            "US7155663",
            "US7177407 *",
            "US7463620 *",
            "US8000970",
            "US8073866",
            "US8078602",
            "US8086697",
            "US8170881",
            "US8255413",
            "US8316003",
            "US8689238",
            "EP0840490A2 *",
            "EP0841792A2 *",
            "EP0848529A2 *",
            "EP1047237A2 *",
            "WO1998032293A2 *",
            "WO1998049821A1 *",
            "WO1999033285A1 *",
            "WO1999061983A2 *"
        ],
        [
            "Filing date",
            "Aug 10, 1995",
            "Jun 5, 1995",
            "Nov 27, 1996",
            "May 29, 1997",
            "Jul 29, 1997",
            "Jul 29, 1997",
            "Mar 10, 1997",
            "Nov 6, 1996",
            "Aug 19, 1997",
            "Jan 21, 1997",
            "May 20, 1997",
            "Oct 30, 1997",
            "Apr 4, 1997",
            "Oct 27, 1997",
            "Jun 27, 1997",
            "Dec 17, 1997",
            "Apr 29, 1997",
            "Dec 6, 1997",
            "Jun 16, 1999",
            "Jul 20, 1998",
            "Dec 19, 1997",
            "Feb 12, 1999",
            "Jul 13, 1999",
            "Jul 13, 1999",
            "Jul 16, 1997",
            "Feb 4, 1999",
            "Sep 13, 2001",
            "Jul 13, 1999",
            "Jan 7, 1998",
            "Sep 13, 2001",
            "Jul 13, 1999",
            "Jul 13, 1999",
            "May 31, 2002",
            "Jul 5, 2001",
            "Jul 13, 2001",
            "Sep 13, 2001",
            "May 31, 2002",
            "May 31, 2002",
            "Nov 30, 2001",
            "Sep 10, 2002",
            "Jun 14, 2002",
            "Mar 16, 2006",
            "Dec 17, 2004",
            "Oct 31, 2005",
            "Jul 26, 2011",
            "Aug 19, 2005",
            "Oct 12, 2009",
            "Dec 23, 2011",
            "Oct 21, 1997",
            "Nov 3, 1997",
            "Dec 15, 1997",
            "Mar 1, 2000",
            "Jan 20, 1998",
            "Apr 29, 1998",
            "Dec 17, 1998",
            "May 26, 1999"
        ],
        [
            "Publication date",
            "Dec 30, 1997",
            "Jun 2, 1998",
            "Mar 16, 1999",
            "Apr 27, 1999",
            "Jul 13, 1999",
            "Jul 27, 1999",
            "Aug 10, 1999",
            "Aug 10, 1999",
            "Aug 17, 1999",
            "Aug 31, 1999",
            "Sep 14, 1999",
            "Sep 28, 1999",
            "Dec 7, 1999",
            "Dec 7, 1999",
            "Mar 21, 2000",
            "May 2, 2000",
            "May 9, 2000",
            "May 16, 2000",
            "Dec 5, 2000",
            "Mar 6, 2001",
            "Mar 27, 2001",
            "Apr 3, 2001",
            "Nov 6, 2001",
            "Nov 13, 2001",
            "Apr 23, 2002",
            "May 21, 2002",
            "Oct 15, 2002",
            "Feb 4, 2003",
            "Sep 2, 2003",
            "Feb 3, 2004",
            "Aug 31, 2004",
            "Apr 12, 2005",
            "Jan 24, 2006",
            "Aug 15, 2006",
            "Nov 28, 2006",
            "Nov 28, 2006",
            "Dec 12, 2006",
            "Dec 26, 2006",
            "Feb 13, 2007",
            "Dec 9, 2008",
            "Aug 16, 2011",
            "Dec 6, 2011",
            "Dec 13, 2011",
            "Dec 27, 2011",
            "May 1, 2012",
            "Aug 28, 2012",
            "Nov 20, 2012",
            "Apr 1, 2014",
            "May 6, 1998",
            "May 13, 1998",
            "Jun 17, 1998",
            "Oct 25, 2000",
            "Jul 23, 1998",
            "Nov 5, 1998",
            "Jul 1, 1999",
            "Dec 2, 1999"
        ],
        [
            "Applicant",
            "Intervoice, Inc.",
            "Mitel Corporation",
            "Bell Communications Research, Inc.",
            "Lucent Technologies Inc.",
            "Northern Telecom, Limited",
            "Northen Telecom, Limited",
            "Northern Telecom, Limited",
            "Nortel Networks Corporation",
            "Siemens Information And Communication Networks, Inc.",
            "Ericsson Inc.",
            "Mci Communications Corporation",
            "Lucent Technologies Inc.",
            "Sun Microsystems, Inc.",
            "Phoenix Technologies Limited",
            "Alcatel",
            "Telefonaktiebolaget Lm Ericsson",
            "Global Adsi Solutions",
            "Northern Telecom Limited",
            "Nortel Networks Limited",
            "Telefonaktiebolaget L M Ericsson",
            "Ericsson Inc",
            "Nec Corporation",
            "Unicast Communications Corporation",
            "Unicast Communications Corporation",
            "Mci Communications Corporation",
            "Telefonaktiebolaget Lm Ericsson",
            "Unicast Communications Corporation",
            "The Macmanus Group, Inc.",
            "Iq Systems",
            "Unicast Communications Corporation",
            "Unicast Communications Corporation",
            "Unicast Communications Corporation",
            "Unicast Communications Corporation",
            "Intel Corporation",
            "Sbc Properties, L.P.",
            "Unicast Communications Corporation",
            "Unicast Communiations Corporation",
            "Unicast Communications Corporation",
            "Toshiba America Information Systems, Inc.",
            "3Com Corporation",
            "Nuance Communications, Inc.",
            "Claria Innovations, Llc",
            "Claria Innovations, Llc",
            "Claria Innovations, Llc",
            "Nuance Communications, Inc.",
            "Carhamm Ltd., Llc",
            "Carhamm Ltd., Llc",
            "Carhamm Ltd., Llc",
            "Lucent Technologies Inc.",
            "Northern Telecom Limited",
            "Alcatel Alsthom Compagnie Generale D'electricite",
            "Siemens Aktiengesellschaft",
            "Ericsson Ge Mobile Inc",
            "Global Adsi Solutions Inc",
            "Ericsson Ge Mobile Inc",
            "Ericsson Telefon Ab L M"
        ],
        [
            "Title",
            "Method and apparatus for delivering calling services",
            "Service context sensitive features and applications",
            "Method and apparatus for provisioning customized telecommunications services",
            "Logical PC agent",
            "System and method for retrieving internet data files using a screen-display telephone terminal",
            "ADSI web browser for retrieving internet data files",
            "System and method for retrieving internet data files using a screen-display telephone terminal",
            "Interactive subscriber telephone terminal with automatic management software download feature",
            "System and method for initializing ISDN terminals",
            "Dynamically associating service script logics to provide a subscriber feature within an advanced intelligent network",
            "Generalized customer profile editor for call center services",
            "Upgrading the control of switching systems",
            "Computer-telephony (CT) system including an electronic call request",
            "Generation of firmware code using a graphic representation",
            "Method and apparatus for providing a telecommunications service",
            "Method and device for managing services in a telecommunications network",
            "Methods and apparatus for creating automated servers for display telephones",
            "Screen-based telephone set for interactive enhanced telephony service",
            "Interactive subscriber telephone terminal with automatic management software download feature",
            "Meta-service activating interface between a customer administrative system and database network elements of a communications network",
            "Architecture independent application invocation over a telephony network",
            "Switching system service controller operating in a closed loop with call processor using subscriber-specific scheduling memories",
            "Ad controller for use in implementing user-transparent network-distributed advertising and for interstitially displaying an advertisement so distributed",
            "Technique for implementing browser-initiated user-transparent advertising and for interstitially displaying an advertisement, so distributed, through a web browser in response to a user click-stream",
            "System and method for distributing data collected from call center services",
            "Arrangement in a network structure",
            "Apparatus and accompanying methods for network distribution and interstitial rendering of information objects to client computers",
            "Apparatus and accompanying methods for implementing network servers for use in providing interstitial web advertisements to a client computer",
            "Central and distributed script servers in an object oriented processor array",
            "Apparatus and accompanying methods for network distribution and interstitial rendering of information objects to client computers",
            "Agent-based technique for implementing browser-initiated user-transparent interstitial web advertising in a client computer",
            "Apparatus and accompanying methods for implementing a network distribution server for use in providing interstitial web advertisements to a client computer",
            "Technique for implementing browser-initiated user-transparent network-distributed advertising and for interstitially displaying an advertisement, so distributed, through a web browser in response to a user click-stream",
            "Uploading personal agents to personalize network services",
            "Platform for rapid development of telecommunications services",
            "Apparatus and accompanying methods for network distribution and interstitial rendering of information objects to client computers",
            "Technique for implementing browser-initiated user-transparent network-distributed advertising and for interstitially displaying an advertisement, so distributed, through a web browser in response to a user click-stream",
            "Technique for implementing browser-initiated user-transparent network-distributed advertising and for interstitially displaying an advertisement, so distributed, through a web browser in response to a user click-stream",
            "System and method for integration of softkeys with voice mail",
            "Architecture and method for controlling features and services in packet-based networks",
            "Distributed voice browser",
            "Method for providing content to an internet user based on the user's demonstrated content preferences",
            "Search engine for a computer network",
            "Techniques for displaying impressions in documents delivered over a computer network",
            "Distributed voice browser",
            "Method and apparatus for responding to request for information-personalization",
            "Updating content of presentation vehicle in a computer network",
            "Techniques for displaying impressions in documents delivered over a computer network",
            "Telecommunication feature for exchange of translation information between a computer and a telecommunication switching system",
            "Interactive subscriber telephone terminal with automatic management software download feature",
            "Method for selecting and executing free programmable functions of a telephone set and corresponding telephone set",
            "Communications system for controlling a terminal from a remote computer",
            "Telecommunications network using service script logics within an advanced intelligent network",
            "Methods and apparatus for creating automated servers for display telephones",
            "Architecture independent application invocation over a telephony network",
            "Changing functionality of a module terminal in a wireless network"
        ]
    ],
    "pageTitle": "Patent US5541986 - Method and system for automated telecommunications service script ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US5541986?dq=3798360",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 7,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988860.88/warc/CC-MAIN-20150728002308-00236-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 472540123,
    "recordOffset": 472514033,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{28238=One specific illustrative embodiment of a system in accordance with my invention to accomplish automated script consolidation is illustrated in FIG. 1. An ADSI compatible telephone set 20, having a visual display 21 and a processor 22 with memory 25, establishes a connection through the telephone central office 23 to an ADSI server 24. Within the server 24 a download session administrator process 26 receives the call and engages the telephone set 20 into a dialog in accordance with Bellcore TR-NWT-001273. The administrator process 26 then retrieves from a user profile database 28, that user's service profile. The profile includes all services selected by that customer for that line, including both subscription based and usage sensitive services. The session administrator process 26 forwards to a service script generation processor 30, the customer profile retrieved from database 28. The script generation process 30 then retrieves from a service module database 32 service modules that correspond to those services selected by the user as evidenced in the user profile (service modules are described in more detail in the sections below). These service modules are, ideally, modules constructed according to the requirements of my high level scripting language and service template and service module constructs described in the sections below. The script generation process 30 consolidates the selected service modules into a single service script. The single service script is forwarded to a compiler process 34 which compiles the service script generated by the script generation process 30 to produce executable code compatible with Bellcore TR-NWT-001273. The compiled executable code is forwarded by the compiler process 34 to the session administrator process 26 and is downloaded to ADSI telephone set 20 and stored in that set's processor memory 25., 27037=My invention provides a system and method for automatically consolidating a set of service scripts into a single service script that is downloaded from a network server, over the interface defined by Bellcore Technical Report TR-NTW-001273, to a display device compatible with the specifications set forth in Bellcore Special Report SR-INS-002461. In order to best understand my invention it is important to understand my overall inventive system, those constructs I call service modules and service templates, the characteristics of my high level scripting language, and my inventive method of automated service script consolidation. Accordingly, this specification is divided into four sections. The first section describes my inventive system for service script downloading as depicted in FIG. 1. The second section describes my service modules and templates. The third section describes the necessary attributes of high level ADSI service scripting. The fourth and last section describes my inventive method for using modules and templates for automated service script consolidation., 23060=Service scripts for use in ADSI devices are defined in Bellcore Special Report entitled \"Customer Premises Equipment Compatibility Considerations for the Analog Display Services Interface\", SR-INS-002461, December 1992. Such scripts consist of a set of op-- code instructions. However, the telephone companies do not expect a programmer to write Service Scripts in the binary op-- codes as defined in DR-INS-002461. High level scripting languages are being developed for the script programmer. Appendix 2 of SR-INS-002461 illustrates scripts developed in an example high level language., 41717=However, some \"new\" scripting capabilities can be defined which actually result in a sequence of op-- codes or rs-- codes i.e. supported by SR-INS-002461. For example a \"banner\" instruction could be defined if deemed useful such that, 20358=The prototype CPE provided a 7 line by 16 character liquid crystal display (LCD) as a visual interface that responds to user actions in context of the call states. The visual interface provides the users with context sensitive menus, step by step prompts, visual indicators of the services status, and a call log feature. This specific experiment demonstrated the acceptability of a screen-assisted telephone. It also indicated customer interest in acquiring such phones and helped to confirm that there is a need to make network services easier for customers to access and use. Visual access to voice services via display-based sets can improve the usability of current and future services by providing customers visual choices or options for services at appropriate times during a call or service transaction. To provide this capability in a generic way, the Analog Display Service Interface (ADSI) protocol has been developed to provide an interface between the network service features and the advanced CPE, such as visual displays and soft keys, and allows the network to support screen-based management of telephone services. The ADSI protocol has been publicly disclosed in Bellcore Technical Reference \"Generic Requirements for an SPCS to Customer Premises Equipment Data Interface for Analog Display Services\", TR-NWT-001273, December 1992., 41277=When an incoming call is answered, the display would show the identity of the caller if the Caller-- ID feature or service module is included in the Service Script; otherwise, the wording \"Party Unknown\", would be used instead. The resulting ANSI executable code includes either but not both. The instructions tagged with a # do not correspond to any op-- code specified in SR-INS-002461., 40033=To empower the script programmer beyond what is provided in SR-INS-002461, some scripting instructions can be furnished with capabilities that allow the script programmer some control over the resulting Service Script even though they have nothing to do with any op-- code or rs-- code. Since these added capabilities are not supported by SR-INS-002461, they impact only on the process of producing the resulting Service Scripts. Their functions are removed once the Service Script is compiled. These pseudo scripting instructions are commonly referred to as \"preprocessor directives.\" One example of a preprocessor directive is #ifdef, which can be found in C-Language; #ifdef allows conditional inclusion of instructions before compilation. Consider the following example:, 36879=Depending on the degree of flexibility to be given to the script programmers and the type of targeted applications, the scripting language can implement all or only a subset of the instructions disclosed in SR-INS-002461. In particular, some rs-- codes pertain mainly to Service Display Control applications, rather than Feature Downloaded Service Scripts. Therefore, in my scripting language, these rs-- codes have been excluded from the scripting instruction set., 42141=would clear the display \"One Moment, Please\" wait for a few seconds, and then clear the display again. This would result in a sequence of op-- codes 5, 2, and 11 if \"banner\" is an opcode derived instructions; or a sequences of rs-- codes 0\ufffd97, 0\ufffd98 and 0\ufffd90 if it is a rs-- code-derived instruction. Note that in the SR-INS-002461 specification, some op-- code and rs-- code functions overlap while others don't. Considerations should be taken so that an rs-- code derived instruction is not confused with an op-- code derived instruction and vice-versa. Both the script programmer and the script compiler need to distinguish between the two., 37386=My scripting language reduces the complexity of script programing by using default parameters for the op-- code/rs-- code whenever possible. For example op-- code 1 in SR-INS-002461 requires specifying the number of instructions to be executed when the specified event occurs. For this case, the corresponding scripting instruction for op-- code 1 contains a block of script instructions to be executed. The resulting number of instructions are automatically calculated and put into the proper field of op-- code 1, sparing the script programmer from such meticulous details. An example of a script instruction for op-- code 1 may look as follows:, 42900=Procedure calls are desirable and common in programming languages but they don't exist in the context of the protocol of SR-INS-002461. However, a pseudo-procedure call can be implemented. It will not be a true procedure call because the script program pointer is memoryless; as a result there is no way to get back to where the procedure was invoked upon completing the procedure calls. Nevertheless, it does reduce the size of the resulting Service Script, and conservation of code size is one of the reasons for procedure call. A pseudo-procedure call can be implemented using the two user-definable event codes (22 and 23). Each pseudo-procedure essentially consists of op-- code 1 specifying the triggering event code say, 22, plus the set of embedded instructions associated with the op-- code 1. These pseudo-procedures are placed within appropriate overlays. Now, an rs-- code derived scripting instruction say, go-to, can be defined to invoke the pseudo-procedure. The go-to instruction can basically consists of the Overlay rs-- code(0\ufffd9D) and Event 22 Trigger rs-- code (0\ufffd9e). According to the parameter(s) specified for the go-- to instruction, the appropriate overlay is loaded, and event 22 is triggered; thus the corresponding pseudo-procedure is invoked and executed., 44487=Since ADSI Service Scripts are event driven, the scripting language should be designed specifically to implement state machines. This means there should be a state variable upon which state transitions are triggered upon the happening of various events. I use overlays described in SR-INS-002461, as the state variable., 36083=Programmers are free to write service scripts in binary code as defined in the SR-INS-002461 or use a high-level scripting language/environment. The use of a high level scripting language plays a critical role in successful service script creation and management because it not only provides a more user friendly environment for the script programmer but also can act as a successful means for integration of multiple service scripts. An example of a scripting language is one that provides a one-to-one mapping between the scripting language and the op-- code and return string code (rs-- code instructions defined in SR-INS-002461. SR-INS-002461 defines a set of capabilities and constraints from which the scripting language defined herein is derived.}",
    "textBeforeTable": "Patent Citations Clearly, those skilled in the art recognize that the principles that define my method are not limited to the embodiment illustrated herein. Other embodiments may be readily devised by those skilled in the art. ##SPC1## Although the above is a simple example, one can readily understand the advantages of my inventive method when large number of users need to consolidate multiple service features into a single service script. My inventive method supports an automated system for consolidating service scripts, saving significant programming resources and providing significant flexibility in creating customer dependent custom service scripts. After all the instructions are incorporated into the appropriate objects, the combined script is forwarded to a compiling process for compilation into executable code to be downloaded to the display telephone set. In our example from Annex C, the \"display \"Press <A> to \"&&\" activate Service A\"\" instruction has a lower rank than the \"clear-- display\" instruction in the object \"on MAKING-- CALL\". My method would then select the next instruction from the object, step 68, which is \"clear-- clipboard\". This process is repeated, and because the \"display \"Press <A> to \"&&\" activate Service A\"\" instruction still has a lower rank, the next instruction from the object is selected as the current instruction. Again the process is repeated until the \"display \"Press <A> to \"&&\" activate Service A\"\" can be inserted. Annex D indicates the resulting consolidated service script that is produced",
    "textAfterTable": "Unicast Communications Corporation Technique for implementing browser-initiated user-transparent network-distributed advertising and for interstitially displaying an advertisement, so distributed, through a web browser in response to a user click-stream US7093009 * Jul 5, 2001 Aug 15, 2006 Intel Corporation Uploading personal agents to personalize network services US7142655 Jul 13, 2001 Nov 28, 2006 Sbc Properties, L.P. Platform for rapid development of telecommunications services US7143337 Sep 13, 2001 Nov 28, 2006 Unicast Communications Corporation Apparatus and accompanying methods for network distribution and interstitial rendering of information objects to client computers US7149958 May 31, 2002 Dec 12, 2006 Unicast Communiations Corporation Technique for implementing browser-initiated user-transparent network-distributed advertising and for interstitially displaying an advertisement, so distributed, through a web browser in response to a user click-stream US7155663 May 31, 2002 Dec 26, 2006 Unicast Communications Corporation Technique for implementing browser-initiated user-transparent network-distributed advertising and for interstitially displaying an advertisement, so distributed, through a web browser in response to a user click-stream US7177407 * Nov 30, 2001 Feb",
    "hasKeyColumn": true,
    "keyColumnIndex": 3,
    "headerRowIndex": 0
}