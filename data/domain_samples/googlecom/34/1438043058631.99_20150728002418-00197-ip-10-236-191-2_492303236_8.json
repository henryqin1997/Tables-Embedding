{
    "relation": [
        [
            "Date",
            "Apr 24, 2001",
            "Nov 16, 2005",
            "Mar 27, 2009",
            "Mar 16, 2010",
            "Mar 7, 2013"
        ],
        [
            "Code",
            "AS",
            "AS",
            "FPAY",
            "CC",
            "FPAY"
        ],
        [
            "Event",
            "Assignment",
            "Assignment",
            "Fee payment",
            "Certificate of correction",
            "Fee payment"
        ],
        [
            "Description",
            "Owner name: ORACLE CORPORATION, CALIFORNIA Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:JANOSIK, JOHN LOUIS JR.;DIAMOND, DAVID LANE;RUBINO, MICHAEL;REEL/FRAME:011735/0084 Effective date: 20010417",
            "Owner name: ORACLE INTERNATIONAL CORPORATION, CALIFORNIA Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ORACLE CORPORATION;REEL/FRAME:017366/0283 Effective date: 20051115 Owner name: ORACLE INTERNATIONAL CORPORATION, CALIFORNIA Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ORACLE CORPORATION;REEL/FRAME:016797/0172 Effective date: 20051115",
            "Year of fee payment: 4",
            "",
            "Year of fee payment: 8"
        ]
    ],
    "pageTitle": "Patent US20020156836 - Method for extracting personalization information from web activity - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US20020156836?dq=7069184",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 8,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438043058631.99/warc/CC-MAIN-20150728002418-00197-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 492323671,
    "recordOffset": 492303236,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{44596=[0026] As specified by RFC 2965, two state management headers, Set-Cookie2 and Cookie, are used and both have common syntactic properties involving attribute-value (AV) pairs. Each AV pair consists of an attribute name and a value separated by an equal sign. The Web Jacket uses cookies to identify specific Web browsers and to identify sequences of exchanges with a single Web browser during a session. The Web Jacket initiates a session by inserting an extra \u201cset cookie\u201d header field in the outbound response message in a manner that is transparent to the Web Server. The Web browser then returns a Cookie request header to the Web Jacket which is passed to but ignored by the Web server, indicating that the Web browser chooses to continue the session initiated by the Web Jacket. Although the protocol permits the Web Jacket to send back to the Web browser a Set-Cookie2 response header with the same or different information, it need not (and normally does not) send another Set-Cookie2 header at all. Although the Web Jacket could end a session by sending the Web browser a Set-Cookie2 header with Max-Age=0, it normally has no reason to end any \u201csession\u201d since the primary goal is the identification of individual browsers rather than the monitoring of sessions as such. Said another way, the Web Jacket uses cookies to group all communications between a given Web browser and all applications which receive and respond to messages passing through the Web Jacket. Since shorter \u201csessions\u201d are of concern to individual applications, those applications may, and frequently do, use their own cookie mechanism to monitor application specific sessions., 33994=[0013] The Web Jacket 107 processes request and response messages which are received and sent using the Hypertext Transfer Protocol (HTTP), an application-level protocol used by the World-Wide Web global information system. Version 1.1 (referred to as \u201cHTTP/1.1\u201d) of that protocol is specified in the Internet Standards Track Request for Comment document RFC 2616, Hypertext Transfer Protocol\u2014HTTP/1.1 (June, 1999). The HTTP protocol is a request/response protocol. A client sends a request to the server in the form of a request method, URI, and protocol version, followed by a MIME-like message containing request modifiers, client information, and possible body content over a connection with a server. The server responds with a status line, including the message's protocol version and a success or error code, followed by a MIME-like message containing server information, entity meta-information, and possible entity-body content., 42825=[0024] The format for expressing cookies was defined in a preliminary specification, Persistent Client State-HTTP Cookies promulgated by Netscape Corporation and has been more recently specified in the Internet Standards Track Request for Comments RFC 2965, HTTP State Management Mechanism (October, 2000) which describes a way to create stateful sessions with HTTP requests and responses. HTTP servers typically respond to each client request without relating that request to previous or subsequent requests. The use of \u201ccookies\u201d provides a state management mechanism that allows clients and servers that wish to exchange state information to place HTTP requests and responses within a larger context, called a \u201csession\u201d. This context is commonly used by applications to create, for example, a \u201cshopping cart\u201d, in which user selections can be aggregated before purchase, or a magazine browsing system, in which a user's previous reading affects which offerings are presented., 34989=[0014] HTTP messages consist of requests from client to server and responses from server to client. Request and response messages use the generic Internet message format of defined in the Internet Standards Track Request for Comment document RFC 822, Standard for The Format of ARPA Internet Text Messages (August 1982) for transferring entities (the payload of the message). Both types of message consist of a start-line, zero or more header fields (also known as \u201cheaders\u201d), an empty line (i.e., a line with nothing preceding the carriage-return, line feed characters) indicating the end of the header fields, and possibly a message-body.}",
    "textBeforeTable": "Patent Citations [0040] It is to be understood that the specific arrangements described above are merely illustrative examples of the manner in which the present invention may be used to gather and utilize data describing Web request/response information exchanges. Numerous modifications may be made to the methods and apparatus described above without departing from the true spirit and scope of the invention. [0039] Conclusion [0038] The WebJacket can be configured to store the entire content of response messages, allowing the WebJacket to act as cache. When so configured, the WebJacket responds to the inbound message by reassembling and returning the cached response message, without passing the request to the Web server, thereby reducing the load on the Web server. The WebJacket may also be configured to work with and utilize data stored by standard Web server log file builders, as well as standard log file analysis programs. [0037] Each WebJacket instance may be configured to serve as a dispatcher to balance HTTP request loads. Thus, as seen in FIG. 3, the WebJacket instance 311 handles Web applications 321, 323 and 325 while the WebJacket instance 313 handles Web applications 321, 327 and 329. [0036] The WebJacket application may interact with the remainder of the system in a variety of ways. As illustrated in FIG. 3, two or more instances of the WebJacket application may",
    "textAfterTable": "International Business Machines Corporation Systems, methods and computer program products for linking transactions by multiple web site servers to web site visitors US6564342 * May 31, 2002 May 13, 2003 Mercury Interactive Corp Post-deployment monitoring of server performance US6567849 * Aug 17, 1998 May 20, 2003 International Business Machines Corporation System and method for configuring and administering multiple instances of web servers US6601100 * Jul 30, 2002 Jul 29, 2003 International Business Machines Corporation System and method for collecting and analyzing information about content requested in a network (world wide web) environment US6651099 * Jun 30, 2000 Nov 18, 2003 Hi/Fn, Inc. Method and apparatus for monitoring traffic in a network US6668273 * Nov 18, 1999 Dec 23, 2003 Raindance Communications, Inc. System and method for application viewing through collaborative web browsing session US6701363 * Feb 29, 2000 Mar 2, 2004 International Business Machines Corporation",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}