{
    "relation": [
        [
            "Date",
            "Mar 21, 2002",
            "Jan 22, 2009",
            "Mar 20, 2013",
            "Aug 2, 2013",
            "Sep 24, 2013"
        ],
        [
            "Code",
            "AS",
            "FPAY",
            "REMI",
            "LAPS",
            "FP"
        ],
        [
            "Event",
            "Assignment",
            "Fee payment",
            "Maintenance fee reminder mailed",
            "Lapse for failure to pay maintenance fees",
            "Expired due to failure to pay maintenance fee"
        ],
        [
            "Description",
            "Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW Y Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MELHEM, WASSIM;PARSONS, CECIL L.;SEELEMANN, DIRK A.;AND OTHERS;REEL/FRAME:012739/0555 Effective date: 20020205",
            "Year of fee payment: 4",
            "",
            "",
            "Effective date: 20130802"
        ]
    ],
    "pageTitle": "Patent US20030063124 - Customization of object property layout for a user interface - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US20030063124?ie=ISO-8859-1&dq=5,825,352",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 8,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042982745.46/warc/CC-MAIN-20150728002302-00263-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 486230871,
    "recordOffset": 486203703,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{43731=[0031] As illustrated in FIG. 11B, a process flow development tool may present a window-type user interface 1118 including a canvas 1120. In the canvas 1120 may be a node 1122 and a user may invoke a menu 1124 in respect of the node 1122, as shown., 55091=[0056] As is conventional, a left mouse click while a cursor rests over a cell displaying a first property name may select that first property. A further left click, in conjunction with holding down a \u201cShift\u201d key on the keyboard 1112, while the cursor rests over a cell displaying a second property name may select the second property, and all properties in the range between the first and second properties. An even further left click, in conjunction with holding down a \u201cCtrl\u201d key on the keyboard 1112, while the cursor rests over a cell displaying a third property name may add the third property to those selected. However, unlike the above mentioned \u201cShift\u201d key related left click, the \u201cCtrl\u201d key related left click does not select the range of properties between the third property and the most recently selected property., 59799=[0062] To invoke the Properties dialog, i.e., to view the property layout, of an instance of a given Flow Type, the user does not have to compose additional code. As is typical, an interaction between the user and a node 1122 on the canvas 1120 (FIG. 11B), say a right mouse click, can provide the user with a menu. When a menu corresponding to the node 1122 is invoked, the node 1122 may be examined to determine whether the Flow Type, of which the node 1122 is an instance, has an Attribute Organizer object declared in the plugin.xml file. If the Flow Type does have a declared Attribute Organizer object, a \u201cProperties\u201d menu item will be included in the menu that is provided responsive to the action of the user. The action corresponding to selecting the \u201cProperties\u201d menu item may be the presentation, by the tool, of a \u201cProperties\u201d dialog that lists the customized pages of the Flow Type object and shows the contents of a selected one of those customized pages., 71226=[0091] Once a Flow Type object is on the canvas 1120, it is represented by a node 1122 (FIG. 11B). A user may wish to review the properties of the Flow Type object. This wish may be indicated, for example, by directing a cursor, through the use of the mouse 1114 (FIG. 11A), to a position over the node 1122. A right mouse click may act as a request to view a menu related to the node 1122. From the perspective of the tool and in view of FIG. 13, the tool receives the request from the user to present a menu in respect of the Flow Type object (step 1302). The tool then determines whether the Flow Type object has an associated Attribute Organizer object (step 1304). If the Flow Type object has an associated organizer object, the tool presents the node-specific menu including a \u201cProperties\u201d menu item (step 1306). The tool may then receive an indication from the user of a selection of the \u201cProperties\u201d menu item (1308) and, in response to receiving the indication, the tool may display a Properties dialog with a layout specified by the associated Attribute Organizer object (step 1310). In the case where the node 1122 does not have an associated Attribute Organizer object, the node-specific menu presented to the user does not include a \u201cProperties\u201d menu item (step 1312). Should the user select an action from this menu, the tool reacts accordingly (step 1314)., 67113=[0088]FIG. 10 illustrates the relationship between an Attribute Organizer object 1004, a Model 1002 where the properties of a Flow Type are stored, an Attribute Organizer object Editor 1006 and an Attribute Organizer object Viewer 1008. The Attribute Organizer object 1004 receives a set of unassigned properties from the Model 1002. Through interaction with a user, the Attribute Organizer object Editor 1006 determines which of the properties are to be shown and the details of the layout and representation of the properties. The Attribute Organizer object Viewer 1008 may display the properties as specified through use of the Attribute Organizer object Editor 1006. In view of the above, it should be clear that an exemplary representation of the Attribute Organizer object Editor 1006 is the Customize Properties dialog 200 of FIG. 2 and that an exemplary representation of the Attribute Organizer object Viewer 1008 is the Properties dialog 500A of FIG. 5. Another relation, which is not shown, is the interaction, at run time, between the Attribute Organizer object Viewer 1008 and the Model 1002, from which properties may be read and to which properties may be written., 68441=[0089] The steps followed by a process flow development tool in allowing a user to customize a layout for object properties is illustrated in FIG. 12. The tool initially receives an indication of a Flow Type of interest (step 1202) from the underlying tool platform. It is then necessary for the tool to determine a set of properties for the Flow Type (step 1204). Where the Flow Type is a Java class, the process flow development tool may communicate with the underlying tool platform using an API, for instance, a Meta Object Facility (MOF) API. As will be apparent to a person skilled in the art, for Java objects there exists reflective APIs that will provide a list of the properties of a specified class. Once the set of properties for a particular Flow Type (class) have been determined, a dialog may be opened to display to the user, say, on the display monitor 1110 of FIG. 11A, the set of properties in a dialog like the Customize Properties dialog 200 of FIG. 2 (step 1206). Using the Customize Properties dialog 200, the user may then indicate a desire to create a group, say, by selecting the \u201cCreate Group . . . \u201d button 218 (FIG. 2). Responsive to receiving this group creation indication (step 1208), the tool may present a dialog like the Create Group Attributes dialog 300 of FIG. 3 (step 1210). It is through such a dialog that the tool may receive an indication which of properties to group (step 1212). Responsive to the Create Group Attributes dialog 300 being closed, say, though the selection of the \u201cOK\u201d button 312 (FIG. 3), an object property layout may be stored (step 1214) in an Attribute Organizer object associated with the particular Flow Type, including information about the properties grouped in step 1212. The association of an Attribute Organizer object with a Flow Type may be accomplished by specifying the Attribute Organizer object in a field of the Flow Type. Alternatively, the Attribute Organizer object can be stored and referenced by a plug-in file associated with the Flow Type., 53934=[0055] The properties listed in the Customize Properties dialog 200 of FIG. 2 represent all the properties of a given Flow Type (i.e., class). The display of these properties may be customized for any given instance of this Flow Type by first selecting groups of properties, such that each group of properties will be displayed on the same (display) page. Thus, to customize the Properties dialog of an instance of the Flow Type having the attributes listed in the Customize Properties dialog 200 of FIG. 2, it is initially necessary to create a grouping of the properties that are to be displayed on a particular page. This grouping is achieved by first selecting the properties that are to be grouped on the particular page and then selecting the \u201cCreate Group . . . \u201d button 218 on the Customize Properties dialog 200. As a result, the Create Group Attributes dialog 300 (illustrated in FIG. 3) may be displayed. The selection of the properties can be performed by the user through the use of such peripherals as the keyboard 1112 and the mouse 1114 (FIG. 11A)., 42656=[0030] A rudimentary view of a process flow development system 1100 is illustrated in FIG. 11A. The process flow development system 1100 includes a process flow development core 1102, which may be, for instance, the CPU of a conventional personal computer. The process flow development core 1102 typically includes a processor 1104, a memory 1106 for object storage and an interface 1108 to input and output peripherals. Such peripherals may include a display monitor 1110, a keyboard 1112 and a mouse 1114. It should be clear that alternative peripheral devices exist. For instance, a trackball device may be used as a pointing device in place of the mouse 1114. The processor 1104 may be loaded with object property layout customization software for executing methods exemplary of this invention from a software medium 1116 which could be a disk, a tape, a chip or a random access memory containing a file downloaded from a remote source., 70615=[0090] As discussed above, the user of the tool will select a Flow Type and create an instance, i.e., an object, of the selected Flow Type on the canvas 1120 (FIG. 11B). If the user has already customized the property layout for the selected Flow Type, a new Attribute Organizer object (a copy of the Attribute Organizer object associated with the Flow Type) is associated with the Flow Type object. If the user has not customized the property layout for the selected Flow Type, the Flow Type object is created without an associated Attribute Organizer object.}",
    "textBeforeTable": "Patent Citations [0096] Other modifications will be apparent to those skilled in the art and, therefore, the invention is defined in the claims. [0095] As will be apparent to a person skilled in the art, the structure of the Properties dialog need not necessarily be as illustrated herein. A departure from the left pane illustrated structure may include the well-known use of \u201ctabs\u201d protruding from the top of each page to identify the page and allow the selection of other pages. [0094] Another advantage of the present invention is an ability to change the property layout of a Flow Type object at runtime without having to rewrite the Properties dialog of the Flow Type. This can be achieved by updating the Attribute Organizer of the Flow Type to reflect a desired change in the property layout. Consequently, any instances of the Flow Type, which, naturally, have an association with the Attribute Organizer of the Flow Type, are affected by the change. Examples of changes to the property layout include property addition, property deletion, movement of properties from one page (group) to another and new page creation. [0093] Advantageously, where the underlying tool platform supports the creation, at runtime, of compounds of objects, i.e., an object made up of several objects of different Flow Types, embodiments of the present invention maintain the ability to allow the customization of",
    "textAfterTable": "Filing date Publication date Applicant Title US7421438 * Sep 24, 2004 Sep 2, 2008 Microsoft Corporation Metadata editing control US7676542 Dec 2, 2002 Mar 9, 2010 Sap Ag Establishing a collaboration environment US7810047 * Sep 4, 2007 Oct 5, 2010 Apple Inc. List item layouts system and method US7814426 * Jun 30, 2004 Oct 12, 2010 Sap Aktiengesellschaft Reusable component in a collaboration workspace US7900213 Oct 4, 2005 Mar 1, 2011 International Business Machines Corporation Generic markup specified object descriptor for a modularized computing application US8225221 * Apr 12, 2004 Jul 17, 2012 Microsoft Corporation Method and apparatus for constructing representations of objects and entities US8448069 Apr 23, 2004 May 21, 2013 International Business Machines Corporation Object set property viewer US8661036 * Jul 31, 2008",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}