{
    "relation": [
        [
            "Date",
            "May 17, 2001",
            "Jan 9, 2002",
            "Nov 3, 2003",
            "Jun 9, 2005",
            "Jun 9, 2009"
        ],
        [
            "Code",
            "FPAY",
            "AS",
            "AS",
            "FPAY",
            "FPAY"
        ],
        [
            "Event",
            "Fee payment",
            "Assignment",
            "Assignment",
            "Fee payment",
            "Fee payment"
        ],
        [
            "Description",
            "Year of fee payment: 4",
            "",
            "",
            "Year of fee payment: 8",
            "Year of fee payment: 12"
        ]
    ],
    "pageTitle": "Patent US5696945 - Method for quickly painting and copying shallow pixels on a deep frame buffer - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US5696945?ie=ISO-8859-1",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 9,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987174.71/warc/CC-MAIN-20150728002307-00323-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 469520291,
    "recordOffset": 469494395,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{22681=Control bits may be associated with each displayed pixel to determine how the data bits of that pixel should be interpreted. These control bits may be contained with the pixel data itself, or may be contained in a separate area of memory. In a 32 bit graphics system, one value for the control bits may specify that bits 23:16 of the pixel specify the red color intensity, bits 15:8 specify the green color intensity, and bits 7:0 specify the blue color intensity. Another value for the control bits may specify that bits 7:0 should be used to index a 256 entry by 24 bit table. The 24 bits found in the table are then used to specify 8 bits apiece for red, green, and blue color intensities., 20229=This application is a continuation of application Ser. No. 08/584,995, filed Jan. 11, 1996 now abandoned which is a continuation of application Ser. No. 08/270,194 filed July 1, 1994 now abandoned.}",
    "textBeforeTable": "Patent Citations The described graphics system utilizes the advantages of an atypical arrangement of pixel data in a video memory to increase the utilization of the video bus and thereby increase overall graphics system performance. In addition, graphics performance for some applications may be further improved by allowing for complete independence of the memory controllers which control the respective slices of video memory. Having described a preferred embodiment of the invention, it will now become apparent to one of skill in the art that other embodiments incorporating its concepts may be used. It is felt, therefore, that this embodiment should not be limited to the disclosed embodiment, but rather should be limited only by the spirit and scope of the appended claims. Three dimensional applications use Z buffers and Stencil buffers. In the graphics controller shown in FIG. 3, each 32 bit Z/Stencil buffer pixel comprises two fields: an 8-bit stencil field, and a 24-bit Z value field. The majority of 3 dimensional operations only read and write the Z value field, and not the stencil field, so operate on only three bytes of each 32-bit pixel. Accordingly, an access of 8 pixels of Z information may be accomplished in 3 memory access cycles as described above with reference to FIG. 4. Accessing fewer than all four bytes of each 32-bit pixel is quite common. Applications that use 24 bits of color information rarely modify the control bits,",
    "textAfterTable": "IBM Microelectronics Catalog, RGB561, Workstation Graphics, Preliminary Rev. 1.0, Mar. 23, 1994, pp. i 66. 2 IBM Microelectronics Catalog, RGB561, Workstation Graphics, Preliminary Rev. 1.0, Mar. 23, 1994, pp. i-66. * Cited by examiner Referenced by Citing Patent Filing date Publication date Applicant Title US5909225 * May 30, 1997 Jun 1, 1999 Hewlett-Packard Co. Frame buffer cache for graphics applications US5937204 * May 30, 1997 Aug 10, 1999 Helwett-Packard, Co. Dual-pipeline architecture for enhancing the performance of graphics memory US6002412 * May 30, 1997 Dec 14, 1999 Hewlett-Packard Co. Increased performance of graphics memory using page sorting fifos US6271867 * Oct 31, 1998 Aug 7, 2001 Duke University Efficient pixel packing US6275243 * Apr 8, 1998 Aug 14, 2001 Nvidia Corporation Method and apparatus for",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}