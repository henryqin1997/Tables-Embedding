{
    "relation": [
        [
            "Citing Patent",
            "US7055142 *",
            "US7181446 *",
            "US7454416 *",
            "US7574421",
            "US7707131",
            "US7725448 *",
            "US7734471",
            "US7873627 *",
            "US7885817",
            "US7966314",
            "US20040220896 *",
            "US20110010694 *",
            "US20140067789 *",
            "US20140379690 *",
            "CN100535905C"
        ],
        [
            "Filing date",
            "22 Nov 2002",
            "23 Jan 2004",
            "30 Apr 2003",
            "23 Jun 2006",
            "29 Jun 2005",
            "31 Aug 2007",
            "29 Jun 2005",
            "18 Jan 2006",
            "29 Jun 2005",
            "18 Aug 2008",
            "30 Apr 2003",
            "9 Jan 2009",
            "4 Sep 2012",
            "20 Jun 2013",
            "8 Jun 2007"
        ],
        [
            "Publication date",
            "30 May 2006",
            "20 Feb 2007",
            "18 Nov 2008",
            "11 Aug 2009",
            "27 Apr 2010",
            "25 May 2010",
            "8 Jun 2010",
            "18 Jan 2011",
            "8 Feb 2011",
            "21 Jun 2011",
            "4 Nov 2004",
            "13 Jan 2011",
            "6 Mar 2014",
            "25 Dec 2014",
            "2 Sep 2009"
        ],
        [
            "Applicant",
            "Microsoft Corporation",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "Hewlett-Packard Development Company, L.P.",
            "Microsoft Corporation",
            "International Business Machines Corporation",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "Thranx Investment B.V.",
            "Oracle International Corporation",
            "Oracle International Corporation",
            "\u5317\u4eac\u795e\u821f\u822a\u5929\u8f6f\u4ef6\u6280\u672f\u6709\u9650\u516c\u53f8"
        ],
        [
            "Title",
            "Permutation nuances of the integration of processes and queries as processes at queues",
            "Query transformation for queries involving correlated subqueries having correlation join predicates with local filtering predicates involving predicate transitive closure and predicate pull-out",
            "Method for aggregation subquery join elimination",
            "Explicit key paging",
            "Thompson strategy based online reinforcement learning system for action selection",
            "Method and system for disjunctive single index access",
            "Online learning for dialog systems",
            "Relational database scalar subquery optimization",
            "Easy generation and automatic training of spoken dialog systems using text-to-speech",
            "System for aggregation subquery join elimination",
            "System and method for optimizing queries on views defined by conditional expressions having mutually exclusive conditions",
            "Method for Creating Sub-Query Related Memory Stores",
            "Optimization technique of generalized disjunctive semi/anti join",
            "Transforming a query by eliminating a subquery",
            "Method for remove SQL inquiry statment constant condition"
        ]
    ],
    "pageTitle": "Patent US6826562 - Method of simplifying and optimizing scalar subqueries and derived tables ... - Google Patents",
    "title": "",
    "url": "http://www.google.com.au/patents/US6826562",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 11,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987127.36/warc/CC-MAIN-20150728002307-00028-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 478855835,
    "recordOffset": 478823934,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{55343=Some of the conditions summarized in the prior art are defined in the publication by Cliff Leung, Hamid Pirahesh, Praveen Seshadri, and Joseph Hellerstein entitled \u201cQuery Rewrite Optimization Rules in IBM DB2 Universal Database,\u201d Readings in Database Systems, 3rd Edition, edited by Stonebraker and Hellerstein-, 1998., 42990=A number of different types of QBR are known in the art. One of the more popular types of QBR is known as the Query Graph Model (QGM), well known in the art, and described in the following reference, which is incorporated by reference in its entirety: Pirahesh et al., \u201cExtensible/Rule Based Query Rewrite Optimization in Starburst,\u201d Proceedings of ACM SIGMOD '92 International Conference on Management of Data, San Diego, Calif., U.S.A., 1992., 55681=A more recent research demonstrates an optimization technique where a scalar subquery can be converted into a join using subsumption techniques. It is described in U.S. patent application 09/450,795, entitled \u201cExploitation of Subsumption in Optimizing Scalar Subqueries, with filing date (Aug. 13, 1998 Filed in US; Co-inventor: Pirahesh, M. H.), 90112=FIG. 12 is a flowchart illustrating the logic of optimizing SQL queries according to the present invention illustrating the quantifier merger. Block 1200 represents the RDMBS software accepting the query in the memory of the computer 102. Block 1202 represents the RDBMS software transforming a query into QGM format. Block 1204 represents the RDBMS software for performing the subsumption test, if the query includes at least two subselect expressions. Block 1206 represents the RDBMS software analyzing the query and performed subsumption test, if any. If so, block 1208 represents the RDBMS software testing whether each of the found identical subselect expressions returns at most one tuple, which may include scalar subqueries. If so, the identical subselect expressions are merged in block 1210 into a fewer number of query blocks, preferably a single query block. In block 1212 quantifiers are merged by merging quantified columns, thereby providing superior performance. This procedure may be repeated until no further quantifier merger is possible. After these steps, block 1214 returns control to block 204 in FIG. 3 or block 310 in FIG. 4 for subsequent processing steps, including the execution of the SQL query against the database and the output of the result set., 91487=FIG. 13 is a flowchart illustrating the logic of optimizing SQL queries according to the present invention illustrating the quantifier elimination. Block 1300 represents the RDMBS software accepting the query in the memory of the computer 102. Block 1302 represents the RDBMS software transforming a query into QGM format. Block 1304 represents the RDBMS software testing whether the subselect expression returns exactly one tuple, which may include a scalar subquery. If so, block 1306 represents the RDBMS software testing whether the result set from the subselect expression is not needed for the query answer set. If so, block 1308 represents the RDBMS software that eliminates the subselect and its quantifier from the query. Block 1310 represents the RDBMS software testing whether the eliminated quantifier is an existential quantifier. If so, if in block 1312 the existential predicate is determined to be an EXIST predicate it is replaced with a TRUE predicate in block 1314. If the existential predicate is determined in block 1316 to be a NOT EXIST predicate, it is replaced in block 1318 with a FALSE predicate. This procedure may be repeated until no further quantifier elimination is possible. After these steps, block 1320 returns control to block 204 in FIG. 3 or block 310 in FIG. 4 for subsequent processing steps, including the execution of the SQL query against the database and the output of the result set., 81548=The SELECT boxes X 910 and 950 correspond to the subquery Q21 whereas the SELECT boxes Y 920 and 960 correspond to the subquery Q22. Both subqueries reference the same table T 930. For each row of table X 940, the result set of Q21 is identical to the result set of Q22, except that the output column produced by subquery Q21 is MAX(C1) 950 whereas the output column produced by subquery Q22 is MIN(C2) 960. For this reason, boxes X 910 and Y 920 can be merged into a single box XY 1000, and boxes 950 and 960 can be merged into a single box 1010, as shown in FIG. 10. After the two subqueries are merged, the QGM contains two scalar quantifiers ranging over a common SELECT box 1010 which produces at most one row. Therefore, the scalar quantifiers can be subsequently merged into a single scalar quantifier 1100, as shown in FIG. 11.}",
    "textBeforeTable": "Patent Citations The foregoing description of the preferred embodiments of the present invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto. FIG. 13 is a flowchart illustrating the logic of optimizing SQL queries according to the present invention illustrating the quantifier elimination. Block 1300 represents the RDMBS software accepting the query in the memory of the computer 102. Block 1302 represents the RDBMS software transforming a query into QGM format. Block 1304 represents the RDBMS software testing whether the subselect expression returns exactly one tuple, which may include a scalar subquery. If so, block 1306 represents the RDBMS software testing whether the result set from the subselect expression is not needed for the query answer set. If so, block 1308 represents the RDBMS software that eliminates the subselect and its quantifier from the query. Block 1310 represents the RDBMS software testing whether the eliminated quantifier is an existential quantifier. If so, if in block 1312 the existential predicate is determined to be an EXIST predicate it is replaced with a TRUE predicate in block 1314. If the existential predicate is determined in block 1316",
    "textAfterTable": "US6199063 * 27 Mar 1998 6 Mar 2001 Red Brick Systems, Inc. System and method for rewriting relational database queries US6202063 * 28 May 1999 13 Mar 2001 Lucent Technologies Inc. Methods and apparatus for generating and using safe constraint queries US6345266 * 20 Sep 1999 5 Feb 2002 Novell, Inc. Predicate indexing for locating objects in a distributed directory US6349308 * 15 Feb 1999 19 Feb 2002 Korea Advanced Institute Of Science & Technology Inverted index storage structure using subindexes and large objects for tight coupling of information retrieval with database management systems US6349310 * 6 Jul 1999 19 Feb 2002 Compaq Computer Corporation Database management system and method for accessing rows in a partitioned table US6363387 * 31 Jul 1999 26 Mar 2002 Sybase, Inc. Database system providing methodology for enhancing concurrency using row update bit and deferred locking * Cited by examiner",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}