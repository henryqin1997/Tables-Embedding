{
    "relation": [
        [
            "Citing Patent",
            "US5878422 *",
            "US6026242 *",
            "US6085029 *",
            "US6097888 *",
            "US6134709 *",
            "US6252879",
            "US6298479",
            "US6301256",
            "US6308218 *",
            "US6324689 *",
            "US6351848 *",
            "US6363067",
            "US6377984 *",
            "US6442168",
            "US6442553 *",
            "US6446173",
            "US6617879",
            "US6738384",
            "US6738781 *",
            "US6744728",
            "US6751225",
            "US6795921 *",
            "US6816490",
            "US6978450 *",
            "US6980996",
            "US7047526 *",
            "US7281205",
            "US7316011 *",
            "US7356804 *",
            "US7404179",
            "US7672971 *",
            "US7954059",
            "US7966291",
            "US7970766",
            "US7975233 *",
            "US7984030",
            "US7991797",
            "US8122026",
            "US8239350",
            "US8244689",
            "US8260785",
            "US8316443 *",
            "US8347202",
            "US8468506 *",
            "US8650175",
            "US8682891",
            "US8682913",
            "US8700568",
            "US8738643",
            "US8751498",
            "US8769517",
            "US8812435",
            "US8825471",
            "US8996470",
            "US20080289039 *",
            "US20110055527 *",
            "US20140282373 *"
        ],
        [
            "Filing date",
            "Apr 9, 1997",
            "May 29, 1998",
            "Aug 21, 1996",
            "Apr 28, 1995",
            "Jun 29, 1998",
            "May 13, 1998",
            "May 29, 1998",
            "Apr 22, 1998",
            "Jun 9, 1998",
            "Sep 30, 1998",
            "May 29, 1998",
            "Mar 19, 1999",
            "Nov 2, 1999",
            "Feb 18, 1998",
            "Aug 28, 1995",
            "Feb 18, 1998",
            "Mar 19, 1999",
            "Mar 19, 1999",
            "Feb 8, 2001",
            "Mar 19, 1999",
            "Mar 19, 1999",
            "Jun 2, 1998",
            "Mar 19, 1999",
            "Oct 23, 2001",
            "Mar 12, 2004",
            "Jun 28, 2000",
            "Jun 29, 2001",
            "Oct 10, 2002",
            "Nov 26, 2003",
            "Sep 16, 2004",
            "Feb 17, 2006",
            "Oct 6, 2006",
            "Jun 26, 2007",
            "Jul 23, 2007",
            "Oct 6, 2006",
            "Jun 2, 2008",
            "Feb 17, 2006",
            "Oct 20, 2006",
            "May 8, 2007",
            "Feb 17, 2006",
            "Feb 17, 2006",
            "May 16, 2008",
            "Mar 14, 2007",
            "Nov 8, 2010",
            "Jul 13, 2012",
            "Sep 4, 2012",
            "Mar 31, 2005",
            "Mar 31, 2006",
            "Aug 2, 2007",
            "Feb 1, 2012",
            "Mar 15, 2002",
            "Nov 16, 2007",
            "Mar 31, 2006",
            "May 31, 2005",
            "May 16, 2008",
            "Nov 8, 2010",
            "Mar 15, 2013"
        ],
        [
            "Publication date",
            "Mar 2, 1999",
            "Feb 15, 2000",
            "Jul 4, 2000",
            "Aug 1, 2000",
            "Oct 17, 2000",
            "Jun 26, 2001",
            "Oct 2, 2001",
            "Oct 9, 2001",
            "Oct 23, 2001",
            "Nov 27, 2001",
            "Feb 26, 2002",
            "Mar 26, 2002",
            "Apr 23, 2002",
            "Aug 27, 2002",
            "Aug 27, 2002",
            "Sep 3, 2002",
            "Sep 9, 2003",
            "May 18, 2004",
            "May 18, 2004",
            "Jun 1, 2004",
            "Jun 15, 2004",
            "Sep 21, 2004",
            "Nov 9, 2004",
            "Dec 20, 2005",
            "Dec 27, 2005",
            "May 16, 2006",
            "Oct 9, 2007",
            "Jan 1, 2008",
            "Apr 8, 2008",
            "Jul 22, 2008",
            "Mar 2, 2010",
            "May 31, 2011",
            "Jun 21, 2011",
            "Jun 28, 2011",
            "Jul 5, 2011",
            "Jul 19, 2011",
            "Aug 2, 2011",
            "Feb 21, 2012",
            "Aug 7, 2012",
            "Aug 14, 2012",
            "Sep 4, 2012",
            "Nov 20, 2012",
            "Jan 1, 2013",
            "Jun 18, 2013",
            "Feb 11, 2014",
            "Mar 25, 2014",
            "Mar 25, 2014",
            "Apr 15, 2014",
            "May 27, 2014",
            "Jun 10, 2014",
            "Jul 1, 2014",
            "Aug 19, 2014",
            "Sep 2, 2014",
            "Mar 31, 2015",
            "Nov 20, 2008",
            "Mar 3, 2011",
            "Sep 18, 2014"
        ],
        [
            "Applicant",
            "Viasoft, Inc.",
            "Sun Microsystems, Inc.",
            "Parasoft Corporation",
            "Microsoft Corporation",
            "Cisco Technology, Inc.",
            "Sony Corporation",
            "Sun Microsystems, Inc.",
            "Sony Corporation",
            "Sony Corporation",
            "Compaq Computer Corporation",
            "Sun Microsystems, Inc.",
            "Sony Corporation",
            "Alta Vista Company",
            "Sony Corporation",
            "Fujitsu Limited",
            "Sony Corporation",
            "Sony Corporation",
            "Sony Corporation",
            "Cisco Technology, Inc.",
            "Sony Corporation & Sony Electronics, Inc.",
            "Sony Corporation",
            "Fujitsu Limited",
            "Sony Corporation",
            "Hewlett-Packard Development Company, L.P.",
            "Cisco Technology, Inc.",
            "Cisco Technology, Inc.",
            "Canon Kabushiki Kaisha",
            "Microsoft Corporation",
            "Sap Aktiengesellschaft",
            "International Business Machines Corporation",
            "Google Inc.",
            "National Instruments Corporation",
            "Google Inc.",
            "Google Inc.",
            "National Instruments Corporation",
            "International Business Machines Corporation",
            "Google Inc.",
            "Google Inc.",
            "Google Inc.",
            "Google Inc.",
            "Google Inc.",
            "Sap Ag",
            "Google Inc.",
            "Micron Technology, Inc.",
            "Google Inc.",
            "Google Inc.",
            "Google Inc.",
            "Google Inc.",
            "Google Inc.",
            "Google Inc.",
            "International Business Machines Corporation",
            "Google Inc.",
            "Google Inc.",
            "Google Inc.",
            "Sap Ag",
            "Klein Dean A",
            "Trinity Millennium Group, Inc."
        ],
        [
            "Title",
            "System for virtually converting data in a field between first and second format by using hook routines",
            "Methods, computer program products, and apparatus for initializing global registers",
            "Method using a computer for automatically instrumenting a computer program for dynamic debugging",
            "Method and system for reducing an intentional program tree represented by high-level computational constructs",
            "Method and apparatus for parsing commands",
            "Single counter for controlling multiple finite state machines in a multi-port bridge for local area network",
            "Method and system for compiling and linking source files",
            "Selection technique for preventing a source port from becoming a destination port in a multi-port bridge for a local area network",
            "Address look-up mechanism in a multi-port bridge for a local area network",
            "Mechanism for re-writing an executable having mixed code and data",
            "Unitary data structure systems, methods, and computer program products, for global conflict determination",
            "Staged partitioned communication bus for a multi-port bridge for a local area network",
            "Web crawler system using parallel queues for queing data sets having common address and concurrently downloading data associated with data set in each queue",
            "High speed bus structure in a multi-port bridge for a local area network",
            "Hash system and hash method for transforming records to be hashed",
            "Memory controller in a multi-port bridge for a local area network",
            "Transparently partitioned communication bus for multi-port bridge for a local area network",
            "Technique for optimizing cut-through for broadcast and multi-cast packets in a multi-port bridge for a local area network",
            "Generic command interface for multiple executable routines having character-based command tree",
            "Data pipeline timing optimization technique in a multi-port bridge for a local area network",
            "Port within a multi-port bridge including a buffer for storing routing information for data packets received in the port",
            "Apparatus and method for translating with decoding function",
            "Statistical learning technique in a multi-port bridge for a local area network",
            "Method and system for optimizing compilation time of a program by selectively reusing object code",
            "Generic command interface for multiple executable routines having character-based command tree",
            "Generic command interface for multiple executable routines",
            "Hash compact XML parser",
            "Memory reduction for object-oriented compilers",
            "Language integrated unit testing",
            "Fast source file to line number table association",
            "Modular architecture for entity normalization",
            "Automatic conversion of text-based code having function overloading and dynamic types into a graphical program for compiled execution",
            "Fact-based object merging",
            "Entity type assignment",
            "Automatic conversion of a textual language into a graphical program representation",
            "Fast source file to line number table association",
            "ID persistence through normalization",
            "Finding and disambiguating references to entities on web pages",
            "Date ambiguity resolution",
            "Attribute entropy as a signal in object normalization",
            "Automatic object reference identification and linking in a browseable fact repository",
            "Method and system for protecting a message from an XML attack when being exchanged in a distributed and decentralized network system",
            "Determining geographic locations for place names in a fact repository",
            "Method and system for generating object code to facilitate predictive memory retrieval",
            "User interface for facts query engine with snippets from information sources that include query terms and answer terms",
            "Automatic object reference identification and linking in a browseable fact repository",
            "Corroborating facts extracted from multiple sources",
            "Entity normalization via name normalization",
            "Learning synonymous object names from anchor texts",
            "Finding and disambiguating references to entities on web pages",
            "Generating a common symbol table for symbols of independent applications",
            "Learning objects and facts from documents",
            "Unsupervised extraction of facts",
            "System for ensuring the internal consistency of a fact repository",
            "Method and system for protecting a message from an xml attack when being exchanged in a distributed and decentralized network system",
            "Method and system for generating object code to facilitate predictive memory retrieval",
            "Automated business rule harvesting with abstract syntax tree transformation"
        ]
    ],
    "pageTitle": "Patent US5680622 - System and methods for quickly detecting shareability of symbol and type ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US5680622?dq=5,758,352",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 7,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987866.61/warc/CC-MAIN-20150728002307-00257-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 489146667,
    "recordOffset": 489112292,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{46371=Every programming language has a syntax--a set of grammar rules which specifies how statements and expression in that language are correctly written. A language's syntax dictates how compilers and interpreters translate programs. Knowledge about a source languages syntax is built into the \"parser\" of a compiler, such as compiler 153. The parser controls the translation process, since it analyzes the source program based on the syntax. It calls scanner routines to give it tokens, and it calls symbol table routines to enter and search for identifiers., 32485=Parse: The processing of text, recognizing a grammar, and translating the text into another form, such as a tree., 37760=In a preferred embodiment, the compiler includes Borland\ufffd C++ compiler. A description of the general operation of development system 150 is provided with Borland\ufffd C++, available directly from Borland International. In particular, the reader may consult the following manuals: (1) Borland C++ User's Guide, (2) Borland C++ Programmer's Guide, and (3) Borland C++ Tools and Utilities Guide, all available from Borland International. For a general introduction to the construction and operation of compilers, see Fischer et al., Crafting a Compiler with C, Benjamin/Cummings Publishing Company, Inc., 1991. The disclosures of each of the foregoing are hereby incorporated by reference., 38462=A debugging module 181 is provided for tracking and eliminating errors in the programs 165. During compilation of a program, a developer user may specify that the program is to be compiled with \"debug info.\" Debug info is used by the debugger 181 for tracking execution of the debuggee with the corresponding source listings. The general construction and operation of debuggers is well described in the technical, trade, and patent literature. See e.g., Pietrek, M., Writing a Windows Debugger, Windows/DOS Developer's Journal, pp. 6-12, June 1992. Particular user operation of the debugger 181 is described in Borland C++: User Guide Chapter 6: Using the integrated debugger, Part No. BCP1240WW21770, Borland International, 1993. Formats for debug info are described in the technical literature; see e.g., Borland Languages: Open Architecture Handbook, Part No. 14MN-RCH01-10, Borland International, 1991., 43213=A detailed discussion of the Object Module Format (OMF) standard, including Microsoft's extensions, is available in the technical literature: (1) 8086 Relocatable Object Module Formats, Intel Corporation, 1981; (2) Microsoft C Developer's Toolkit Reference, Microsoft Corporation, 1990; and (3) The MS-DOS Encyclopedia, Microsoft Press, 1988. The disclosures of each of the foregoing are hereby incorporated by reference., 50728=A general introduction to the topic may be found in Sedgewick, R., Algorithms in C, Addison-Wesley, 1990; and in Knuth, D., Sorting and Searching, The Art of Computer Programming: Vol. 3, Addison-Wesley, 1973. The disclosures of each of the foregoing are hereby incorporated by reference., 46956=The structure of a parser's routines is dictated largely from the syntax or formal grammar of the underlying language. The syntax describes how sentences can be formed in a general way. The parser's subroutines use the grammar to build a \"parse tree\"--a convenient way for a computer to represent a sentence diagram.}",
    "textBeforeTable": "Patent Citations ______________________________________int tabs = 0;void print-- hash( int h ) if( h == 0 || ht h!.str == 0 ) return; printf(\"%5d %d \", h, ht h!.visits ); ht h!.visits++; for( int x = 0; x < tabs; x++ ) printf(\" \"); printf(\"%s %d %d\\n\", ht h!.str, ht h!.1, ht h!.r ); tabs++; print-- hash( ht h!.1 ); print-- hash( ht h!.r ); tabs--;}void print-- tree( tree *t ){ if(t == 0 || t->name == 0 ) return; printf(\"0x%8.8x \", t ); for( int x = 0; x < tabs; x++ ) printf(\" \"); printf(\"%s 0x%8.8x 0x%8.8x\\n\", t->name, t->1, t->r ); tabs++; print-- tree( t->1 ); print-- tree( t->r ); tabs--;}tree * read-- tree( FILE *fd ){ char str 1024!, *s = str; int my-- node = ntrees++; *s = 0; for(;;) { int ch; do { ch = fgetc(fd); } while( isspace(ch) ); switch( ch ) { case '(': trees my-- node!.1 = read-- tree( fd ); do {ch = fgetc(fd);} while( isspace(ch) ); if( ch == ',' )trees my-- node!.r = read-- tree( fd ); else {trees my-- node!.r = 0;ungetc( ch, fd ); } trees my-- node!.name = new char strlen(str)+1!; strcpy( trees my-- node!.name, str ); do {ch = fgetc(fd);} while( isspace(ch) ); if(ch |= ')' ) {ungetc( ch, fd ); } return &trees my-- node!; case ',': case ')': ungetc( ch, fd ); case EOF: trees my-- node!.1 = 0;",
    "textAfterTable": "Determining geographic locations for place names in a fact repository US8468506 * Nov 8, 2010 Jun 18, 2013 Micron Technology, Inc. Method and system for generating object code to facilitate predictive memory retrieval US8650175 Jul 13, 2012 Feb 11, 2014 Google Inc. User interface for facts query engine with snippets from information sources that include query terms and answer terms US8682891 Sep 4, 2012 Mar 25, 2014 Google Inc. Automatic object reference identification and linking in a browseable fact repository US8682913 Mar 31, 2005 Mar 25, 2014 Google Inc. Corroborating facts extracted from multiple sources US8700568 Mar 31, 2006 Apr 15, 2014 Google Inc. Entity normalization via name normalization US8738643 Aug 2, 2007 May 27, 2014 Google Inc. Learning synonymous object names from anchor texts US8751498 Feb 1, 2012 Jun 10, 2014 Google Inc. Finding and disambiguating references to entities on web pages US8769517 Mar 15,",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}