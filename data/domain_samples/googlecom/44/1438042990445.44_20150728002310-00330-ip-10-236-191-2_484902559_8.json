{
    "relation": [
        [
            "Citing Patent",
            "US7587616 *",
            "US7610623 *",
            "US7620987 *",
            "US7627862 *",
            "US7627863 *",
            "US7644440 *",
            "US7661102 *",
            "US7680877",
            "US7725887 *",
            "US7747078 *",
            "US7757097 *",
            "US7770031",
            "US7778931 *",
            "US7779270",
            "US7779394",
            "US7788433",
            "US7818799 *",
            "US7823135",
            "US7873647",
            "US7886276 *",
            "US7904917",
            "US7975260 *",
            "US7987278",
            "US8046302 *",
            "US8056138 *",
            "US8112766",
            "US8127306",
            "US8161463 *",
            "US8166471 *",
            "US8181171 *",
            "US8209763",
            "US8217945",
            "US8239876",
            "US8271424 *",
            "US8321546 *",
            "US8327452 *",
            "US8341422",
            "US8364965 *",
            "US8365155 *",
            "US8370641",
            "US8387022 *",
            "US8423966 *",
            "US8429637 *",
            "US8447977",
            "US8453164",
            "US8458476 *",
            "US8510571 *",
            "US8510849",
            "US8522047 *",
            "US8522354",
            "US8527756 *",
            "US8527952 *",
            "US8607034",
            "US8613080",
            "US8615799",
            "US8621187 *",
            "US8646092 *",
            "US8671060 *",
            "US8689193 *",
            "US8707053 *",
            "US8726383 *",
            "US8752032 *",
            "US8762687",
            "US8789027",
            "US8791789",
            "US8793803",
            "US8811655",
            "US8819839",
            "US8826404",
            "US8832660 *",
            "US8838924",
            "US8875112 *",
            "US8886947",
            "US8910276",
            "US8914903",
            "US8930928 *",
            "US8949797",
            "US8955159 *",
            "US8959659 *",
            "US8978132",
            "US9002014",
            "US9064099",
            "US9069938 *",
            "US20070014394 *",
            "US20070220603 *",
            "US20080216051 *",
            "US20080243534 *",
            "US20090287706 *",
            "US20100058300 *",
            "US20100058303 *",
            "US20100192131 *",
            "US20100218257 *",
            "US20100229163 *",
            "US20100262839 *",
            "US20100306749 *",
            "US20100332759 *",
            "US20110035733 *",
            "US20110202996 *",
            "US20110252484 *",
            "US20110271104 *",
            "US20110313984 *",
            "US20120030668 *",
            "US20120075316 *",
            "US20120117661 *",
            "US20120144208 *",
            "US20120179898 *",
            "US20120180032 *",
            "US20120204038 *",
            "US20120210428 *",
            "US20120266249 *",
            "US20130151865 *",
            "US20130347109 *",
            "US20140047555 *",
            "US20140068078 *",
            "US20140189358 *",
            "US20140237622 *",
            "US20150067837 *",
            "US20150074803 *",
            "CN102467634A *",
            "CN102467634B *",
            "WO2012126083A1 *"
        ],
        [
            "Filing date",
            "25 Feb 2005",
            "6 Dec 2005",
            "12 Aug 2005",
            "13 Jan 2006",
            "13 Jan 2006",
            "6 Dec 2005",
            "20 Aug 2004",
            "18 Dec 2006",
            "22 Dec 2004",
            "6 Jul 2006",
            "27 Jul 2005",
            "19 Jun 2008",
            "18 May 2007",
            "13 May 2005",
            "11 May 2005",
            "31 Oct 2008",
            "30 May 2006",
            "7 Apr 2005",
            "18 Dec 2006",
            "27 Dec 2005",
            "18 Dec 2006",
            "27 Jan 2006",
            "18 Dec 2006",
            "7 Feb 2005",
            "26 Feb 2005",
            "21 Dec 2006",
            "18 Dec 2006",
            "31 Oct 2007",
            "23 Jul 2009",
            "14 Aug 2008",
            "31 Oct 2008",
            "2 Sep 2011",
            "12 Jun 2007",
            "15 May 2008",
            "10 Jan 2007",
            "19 Aug 2009",
            "20 Jul 2006",
            "15 Mar 2006",
            "24 May 2010",
            "31 Oct 2008",
            "11 Aug 2010",
            "5 Apr 2010",
            "2 Sep 2008",
            "9 Dec 2008",
            "27 Sep 2007",
            "24 Nov 2005",
            "24 Mar 2004",
            "14 Jun 2010",
            "25 Jun 2008",
            "31 Oct 2008",
            "27 Sep 2006",
            "25 Aug 2009",
            "31 Oct 2008",
            "7 Jun 2011",
            "31 Oct 2008",
            "9 Feb 2009",
            "18 Jul 2007",
            "7 Oct 2011",
            "1 Nov 2006",
            "9 Feb 2011",
            "14 Feb 2011",
            "23 Feb 2007",
            "31 Oct 2008",
            "14 Dec 2012",
            "24 May 2013",
            "31 Oct 2008",
            "4 Sep 2012",
            "31 Oct 2008",
            "29 Aug 2012",
            "7 Dec 2011",
            "31 Oct 2008",
            "22 Mar 2012",
            "20 Dec 2012",
            "31 Oct 2008",
            "12 Mar 2010",
            "31 Dec 2009",
            "16 Apr 2010",
            "9 Mar 2011",
            "19 Jan 2011",
            "31 Oct 2008",
            "31 Oct 2008",
            "25 Feb 2013",
            "27 Nov 2012",
            "3 Apr 2004",
            "12 Aug 2005",
            "23 Feb 2007",
            "25 Mar 2008",
            "",
            "25 Aug 2009",
            "",
            "5 Apr 2010",
            "",
            "31 Dec 2009",
            "25 Jun 2008",
            "",
            "9 Feb 2009",
            "",
            "15 Feb 2011",
            "",
            "27 Sep 2006",
            "23 Jul 2010",
            "",
            "",
            "19 Jan 2011",
            "",
            "",
            "",
            "",
            "14 Feb 2011",
            "13 Apr 2011",
            "27 Nov 2012",
            "21 Jun 2012",
            "13 Apr 2012",
            "31 Aug 2012",
            "17 Dec 2013",
            "12 Aug 2013",
            "28 Apr 2014",
            "30 Apr 2014",
            "14 Jan 2011",
            "14 Jan 2011",
            "24 Mar 2011"
        ],
        [
            "Publication date",
            "8 Sep 2009",
            "27 Oct 2009",
            "17 Nov 2009",
            "1 Dec 2009",
            "1 Dec 2009",
            "5 Jan 2010",
            "9 Feb 2010",
            "16 Mar 2010",
            "25 May 2010",
            "29 Jun 2010",
            "13 Jul 2010",
            "3 Aug 2010",
            "17 Aug 2010",
            "17 Aug 2010",
            "17 Aug 2010",
            "31 Aug 2010",
            "19 Oct 2010",
            "26 Oct 2010",
            "18 Jan 2011",
            "8 Feb 2011",
            "8 Mar 2011",
            "5 Jul 2011",
            "26 Jul 2011",
            "25 Oct 2011",
            "8 Nov 2011",
            "7 Feb 2012",
            "28 Feb 2012",
            "17 Apr 2012",
            "24 Apr 2012",
            "15 May 2012",
            "26 Jun 2012",
            "10 Jul 2012",
            "7 Aug 2012",
            "18 Sep 2012",
            "27 Nov 2012",
            "4 Dec 2012",
            "25 Dec 2012",
            "29 Jan 2013",
            "29 Jan 2013",
            "5 Feb 2013",
            "26 Feb 2013",
            "16 Apr 2013",
            "23 Apr 2013",
            "21 May 2013",
            "28 May 2013",
            "4 Jun 2013",
            "13 Aug 2013",
            "13 Aug 2013",
            "27 Aug 2013",
            "27 Aug 2013",
            "3 Sep 2013",
            "3 Sep 2013",
            "10 Dec 2013",
            "17 Dec 2013",
            "24 Dec 2013",
            "31 Dec 2013",
            "4 Feb 2014",
            "11 Mar 2014",
            "1 Apr 2014",
            "22 Apr 2014",
            "13 May 2014",
            "10 Jun 2014",
            "24 Jun 2014",
            "22 Jul 2014",
            "29 Jul 2014",
            "29 Jul 2014",
            "19 Aug 2014",
            "26 Aug 2014",
            "2 Sep 2014",
            "9 Sep 2014",
            "16 Sep 2014",
            "28 Oct 2014",
            "11 Nov 2014",
            "9 Dec 2014",
            "16 Dec 2014",
            "6 Jan 2015",
            "3 Feb 2015",
            "10 Feb 2015",
            "17 Feb 2015",
            "10 Mar 2015",
            "7 Apr 2015",
            "23 Jun 2015",
            "30 Jun 2015",
            "18 Jan 2007",
            "20 Sep 2007",
            "4 Sep 2008",
            "2 Oct 2008",
            "19 Nov 2009",
            "4 Mar 2010",
            "4 Mar 2010",
            "29 Jul 2010",
            "26 Aug 2010",
            "9 Sep 2010",
            "14 Oct 2010",
            "2 Dec 2010",
            "30 Dec 2010",
            "10 Feb 2011",
            "18 Aug 2011",
            "13 Oct 2011",
            "3 Nov 2011",
            "22 Dec 2011",
            "2 Feb 2012",
            "29 Mar 2012",
            "10 May 2012",
            "7 Jun 2012",
            "12 Jul 2012",
            "12 Jul 2012",
            "9 Aug 2012",
            "16 Aug 2012",
            "18 Oct 2012",
            "13 Jun 2013",
            "26 Dec 2013",
            "13 Feb 2014",
            "6 Mar 2014",
            "3 Jul 2014",
            "21 Aug 2014",
            "5 Mar 2015",
            "12 Mar 2015",
            "23 May 2012",
            "14 Jan 2015",
            "27 Sep 2012"
        ],
        [
            "Applicant",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "Smith Micro Software, Inc.",
            "Ricoh Company, Ltd.",
            "Intel Corporation",
            "Intel Corporation",
            "Purdue Research Foundation",
            "Intertrust Technologies Corp.",
            "Sap Ag",
            "Intertrust Technologies Corporation",
            "Intertrust Technologies Corporation",
            "Via Technologies, Inc.",
            "Microsoft Corporation",
            "Intertrust Technologies Corporation",
            "Ricoh Company, Ltd.",
            "International Business Machines Corporation",
            "Ricoh Company, Ltd.",
            "Symantec Corporation",
            "Ricoh Company, Ltd.",
            "Samsung Electronics Co., Ltd.",
            "International Business Machines Corporation",
            "Ricoh Company, Ltd.",
            "Ricoh Company, Ltd.",
            "Irdeto Canada Corporation",
            "Intel Corporation",
            "Fujitsu Limited",
            "Via Technologies, Inc.",
            "Metric Insights, Inc.",
            "Ricoh Company, Ltd.",
            "International Business Machines Corporation",
            "Ricoh Company, Ltd.",
            "Fuji Xerox Co., Ltd.",
            "Apple Inc.",
            "Apple Inc.",
            "Veracode, Inc.",
            "Via Technologies, Inc.",
            "Intertrust Technologies Corp.",
            "International Business Machines Corporation",
            "Apple Inc.",
            "Canon Kabushiki Kaisha",
            "Ricoh Company, Ltd.",
            "Telefonaktiebolaget L M Ericsson (Publ)",
            "Hoi Chang",
            "Intertrust Technologies Corporation",
            "Telefonaktiebolaget L M Ericsson (Publ)",
            "Via Technologies, Inc.",
            "Cisco Technology, Inc.",
            "International Business Machines Corporation",
            "Via Technologies, Inc.",
            "Veracode, Inc.",
            "Via Technologies, Inc.",
            "Nxp, B.V.",
            "Gemalto Sa",
            "Uniloc Luxembourg, S.A.",
            "At&T Intellectual Property Ii, L.P.",
            "Apple Inc.",
            "Ca, Inc.",
            "Irdeto Canada Corporation",
            "Via Technologies, Inc.",
            "Veracode, Inc.",
            "Verance Corporation",
            "Via Technologies, Inc.",
            "Verance Corporation",
            "Via Technologies, Inc.",
            "Huawei Technologies Co., Ltd.",
            "Ca, Inc.",
            "Via Technologies, Inc.",
            "Intel Corporation",
            "Apple Inc.",
            "Via Technologies, Inc.",
            "Amdocs Software System Limited",
            "Opera Software Asa",
            "International Business Machines Corporation",
            "Sony Corporation",
            "Industrial Technology Research Institute",
            "Via Technologies, Inc.",
            "Via Technologies, Inc.",
            "Intertrust Technologies Corporation",
            "Bluerisc, Inc.",
            "Wulf Harder",
            "Oberthur Card Systems Sa",
            "Harold Joseph Johnson",
            "Serdar Mutlu",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "Apple Inc.",
            "International Business Machines Corporation",
            "Fuji Xerox Co., Ltd.",
            "Rolland Morten",
            "Johan Eker",
            "Rioux Christien R",
            "Nxp B.V.",
            "Intertrust Technologies Corp.",
            "Thomson Licensing",
            "Sony Corporation",
            "Nds Limited",
            "Palo Alto Research Center Incorporated",
            "Uniloc Usa, Inc.",
            "Samsung Electronics Co., Ltd.",
            "Kao Ming-Chih",
            "The Industry & Academic Cooperation In Chungnam National University",
            "Apple Inc.",
            "Graunke Gary L",
            "Apple Inc.",
            "Computer Associates Think, Inc.",
            "Safenet, Inc.",
            "Bluerisc Inc.",
            "Cisco Technology, Inc.",
            "In-Webo Technologies Sas",
            "Radhakrishna Hiremane",
            "Conax As",
            "Arxan Technologies, Inc.",
            "Intertrust Technologies Corporation",
            "Irdeto Canada Corportation",
            "\u8d22\u56e2\u6cd5\u4eba\u5de5\u4e1a\u6280\u672f\u7814\u7a76\u9662",
            "\u8d22\u56e2\u6cd5\u4eba\u5de5\u4e1a\u6280\u672f\u7814\u7a76\u9662",
            "Irdeto Canada Corporation"
        ],
        [
            "Title",
            "System and method of iterative code obfuscation",
            "Integrity ordainment and ascertainment of computer-executable instructions with consideration for execution context",
            "Obfuscating computer code to prevent an attack",
            "Typed intermediate language support for languages with multiple inheritance",
            "Typed intermediate language support for languages with multiple inheritance",
            "Integrity ordainment and ascertainment of computer-executable instructions with consideration for execution context",
            "Method for reducing binary image update package sizes",
            "Implementing a web service application on a device with multiple threads",
            "Method and system for reducing program code size",
            "Substring detection system and method",
            "Method and system for tamperproofing software",
            "Data protection systems and methods",
            "Method and a system for securing processing of an order by a mobile agent within a network system",
            "Software self-defense systems and methods",
            "Software self-defense systems and methods",
            "Microprocessor apparatus providing for secure interrupts and exceptions",
            "Tamper response mechanism",
            "Software self-defense systems and methods",
            "Web services device profile on a multi-service device: device and facility manager",
            "Application program development assisting method, program, and information processing apparatus",
            "Processing fast and slow SOAP requests differently in a web service application of a multi-functional peripheral",
            "Method of direct access and manipulation of debuggee memory from debugger",
            "Web services device profile on a multi-service device: dynamic addition of services",
            "Digital rights management method and system for content copyright protection",
            "System, method, and service for detecting improper manipulation of an application",
            "Multi-threaded device and facility manager",
            "Integrating eventing in a web service application of a multi-functional peripheral",
            "System and method of interlocking to protect software\u2014mediated program and device behaviors",
            "Implementing portable content protection to secure secrets",
            "Method and apparatus for analyzing large scale program and generation of code from degenerated program dependence graph",
            "Processor with non-volatile mode enable register entering secure execution mode and encrypting secure program for storage in secure memory via private bus",
            "Social annotation of a single evolving visual representation of a changing dataset",
            "Efficient web services application status self-control system on image-forming device",
            "Privacy and confidentiality preserving reporting of URLs",
            "Integrating discovery functionality within a device and facility manager",
            "Program obfuscation apparatus, program obfuscation method and computer readable medium",
            "Method and apparatus for incremental code signing",
            "Optimized integrity verification procedures",
            "Software analysis framework",
            "Initialization of a microprocessor providing for execution of secure code",
            "Software self-defense systems and methods",
            "Using atomic sets of memory locations",
            "System and method for conditional expansion obfuscation",
            "Authenticating a device with a server over a network",
            "Method and apparatus for reduction of event notification within a web service application of a multi-functional peripheral",
            "Watermarking computer program code",
            "System and method for inserting security mechanisms into a software program",
            "Data protection systems and methods",
            "Obfuscating execution traces of computer program code",
            "Microprocessor apparatus for secure on-die real-time clock",
            "Security device and building block functions",
            "Test coverage analysis method and apparatus",
            "Apparatus and method for disabling a microprocessor that provides for a secure execution mode",
            "Assessment and analysis of software security flaws in virtual machines",
            "Microprocessor having secure non-volatile storage access",
            "Method of program obfuscation and processing device for executing obfuscated programs",
            "Method of dynamic protection of data during the execution of a software code in intermediate language in a digital apparatus",
            "Post-production preparation of an unprotected installation image for downloading as a protected software product",
            "Method and apparatus for protecting a software application against a virus",
            "Performing boolean logic operations using arithmetic operations by code obfuscation",
            "Flow data for security intrusion detection",
            "System and method of interlocking to protect software-mediated program and device behaviours",
            "Microprocessor providing isolated timers and counters for execution of secure code",
            "Software analysis framework",
            "Remote control signaling using audio watermarks",
            "Termination of secure execution mode in a microprocessor providing for execution of secure code",
            "Circumvention of watermark analysis in a host content",
            "Microprocessor having a secure execution mode with provisions for monitoring, indicating, and managing security levels",
            "Method and communication device for accessing to devices in security",
            "Advancing and rewinding a replayed program execution",
            "Microprocessor having internal secure memory",
            "Implementing portable content protection to secure secrets",
            "Optimized integrity verification procedures",
            "Apparatus and method for precluding execution of certain instructions in a secure execution mode microprocessor",
            "System, method, and computer program for validating receipt of digital content by a client device",
            "Method for modifying the assembly output of a compiler",
            "Optimizing performance of integrity monitoring",
            "Information processing apparatus, information processing system, information processing method, and program",
            "Software authorization system and method",
            "Apparatus and method for managing a microprocessor providing for a secure execution mode",
            "On-die cryptographic apparatus in a secure microprocessor",
            "Software self-defense systems and methods",
            "Securing microprocessors against information leakage and physical tampering",
            "Data processing method",
            "Data Processing Method and Device",
            "System and method of interlocking to protect software-mediated program and device behaviours",
            "Identity verification method",
            "Privacy and confidentiality preserving reporting of urls",
            "Test coverage analysis method and apparatus",
            "System and method for conditional expansion obfuscation",
            "Using atomic sets of memory locations",
            "Program obfuscation apparatus, program obfuscation method and computer readable medium",
            "Method for modifying the assembly output of a compiler",
            "Obfuscating Execution Traces of Computer Program Code",
            "Software Analysis Framework",
            "Method of program obfuscation and processing device for executing obfuscated programs",
            "Software Self-Defense Systems and Methods",
            "Method and apparatus for verifying the integrity of software code during execution and apparatus for generating such software code",
            "Information processing apparatus, information processing system, information processing method, and program",
            "Security device and building block functions",
            "System and method for parallel graph searching utilizing parallel edge partitioning",
            "Post-production preparation of an unprotected installation image for downloading as a protected software product",
            "Method and apparatus for compiling and executing an application using virtualization in a heterogeneous system",
            "Software authorization system and method",
            "Indexed table based code encrypting/decrypting device and method thereof",
            "System and method for enforcing software security through cpu statistics gathered using hardware features",
            "Implementing Portable Content Protection to Secure Secrets",
            "Performing boolean logic operations using arithmetic operations by code obfuscation",
            "Flow data for security intrusion detection",
            "Automatic Selection of Routines for Protection",
            "Securing microprocessors against information leakage and physical tampering",
            "Techniques for Detecting Program Modifications",
            "Method and system for securing a software program",
            "Enabling a Cloud to Effectively Assign Workloads to Servers",
            "Multimedia data protection",
            "System and method for inserting security mechanisms into a software program",
            "Software self-checking systems and methods",
            "System and method of interlocking to protect software-mediated program and device behaviours",
            "Software authorization system and method",
            "Software authorization system and method",
            "System and method providing dependency networks throughout applications for attack resistance"
        ]
    ],
    "pageTitle": "Patent US7430670 - Software self-defense systems and methods - Google Patents",
    "title": "",
    "url": "http://www.google.com.au/patents/US7430670",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 8,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990445.44/warc/CC-MAIN-20150728002310-00330-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 485032339,
    "recordOffset": 484902559,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{5878=One technique for obscuring external calls is to replace them with calls to a special internal routine that invokes external functions. Referring to FIG. 14, a code sequence 1400 is transformed into obfuscated code sequence 1402 by replacing external CALLs 1404 with PUSH routine-ID instructions 1406 followed by CALLs 1408 to a special handling routine 1410. Special handling routine 1410 is operable to pop the routine-ID off of the stack and call the corresponding external routine in, e.g., library 1412.}",
    "TableContextTimeStampAfterTable": "{306775=The PVT 2402 terminates (and virtual join 2418 occurs) when each of the component threads (2410, 2412, 2414) \u201cfinishes\u201d execution (e.g., when the VPC for each thread reaches its predetermined value). When this occurs, the exit virtual thread (EVT) 2403 is established (2420, 2422) and executed. The guards of EVT 2403 are preferably set one at a time by statements in the component threads of PVT 2402 (for example, after each thread has executed a loop a predetermined number of times). In one embodiment an EVT guard is set to a distinctive value by PVT 2402 when too much real time has elapsed since the prologue was started (e.g., a predefined value such as a few hundred milliseconds, or any other suitable value for the given application). Thus, if any of the threads, O1 . . . ON, (2410, 2412, 2414) is delayed by an attacker, the prologue will never get around to exiting, as the guard value can, e.g., preclude virtual join 2418 and/or 2430 from occurring., 337464=In one embodiment, TEST_FOR_TAMPERING 2612 and/or TAMPERING_DETECTED 2614 include IMPORTANT_CODE 2610, since self-testing is typically an important target for tampering. In such an embodiment TEST_FOR_TAMPERING will thus typically check the validity of more than one block of code., 76012=The following U.S. patents and applications, each of which is assigned to the assignee of the current application, are hereby incorporated in their entirety by reference: Ginter et al., \u201cSystems and Methods for Secure Transaction Management and Electronic Rights Protection,\u201d U.S. Pat. No. 5,915,019, issued Jun. 22, 1999 (\u201cthe Ginter '019 patent\u201d); Ginter et al., \u201cTrusted Infrastructure Support Systems, Methods and Techniques for Secure Electronic Commerce, Electronic Transactions, Commerce Process Control Automation, Distributed Computing, and Rights Management,\u201d U.S. patent application Ser. No. 08/699,712, filed Aug. 12, 1996 (\u201cthe Ginter '712 application\u201d); Van Wie et al., \u201cSteganographic Techniques for Securely Delivering Electronic Digital Rights Management Control Information Over Insecure Communications Channels,\u201d U.S. Pat. No. 5,943,422, issued Aug. 24, 1999 (\u201cthe Van Wie '422 patent\u201d); Ginter et al., \u201cSystems and Methods for Secure Transaction Management and Electronic Rights Protection,\u201d U.S. Pat. No. 5,892,900, issued Apr. 6, 1999 (\u201cthe Ginter '900 patent\u201d); Shear et al., \u201cSystems and Methods Using Cryptography to Protect Secure Computing Environments,\u201d U.S. patent application Ser. No. 08/689,754, filed Aug. 12, 1996 (\u201cthe Shear '754 application\u201d); Maheshwari et al., \u201cTrusted Storage Systems and Methods,\u201d U.S. patent application Ser. No. 09/617,148, filed Jul. 17, 2000 (\u201cthe Maheshwari application\u201d); Sibert, \u201cSystems and Methods for Using Cryptography to Protect Secure and Insecure Computing Environments,\u201d U.S. patent application Ser. No. 09/628,692, filed Jul. 28, 2000 (\u201cthe Sibert application\u201d); Shear et al., \u201cCryptographic Methods, Apparatus & Systems for Storage Media Electronic Rights Management in Closed & Connected Appliances,\u201d U.S. patent application Ser. No. 08/848,077, filed May 15, 1997 (\u201cthe Shear '077 application\u201d); Collberg et al., \u201cObfuscation Techniques for Enhancing Software Security,\u201d U.S. patent application Ser. No. 09/095,346, filed Jun. 9, 1998 (\u201cthe Collberg application\u201d); and Shear, \u201cDatabase Usage Metering and Protection System and Method,\u201d U.S. Pat. No. 4,827,508, issued May 2, 1989 (\u201cthe Shear '508 patent\u201d)., 58600=This application claims priority from U.S. Provisional Patent Application Ser. No. 60/146,419, entitled \u201cSoftware Self-Defense Systems and Methods,\u201d filed Jul. 29, 1999, and is related to commonly-assigned U.S. patent application Ser. No. 09/629,807, entitled \u201cSystems and Methods for Watermarking Software and Other Media,\u201d filed Jul. 31, 2000 (\u201cthe Software Watermarking application\u201d), each of which is hereby incorporated in its entirety by reference., 177731=The invalid instructions 1106 can be chosen to confuse static analysis. Thus, invalid instructions 1106 may, for example, include the opcodes for instructions of different lengths than the valid instructions that they replace (e.g., INC AX instead of MOV AX, BX), operand specifiers that cause the instruction length of the invalid instruction to be different than the instruction length of the valid instruction (e.g., INC AX instead of INC AH), and/or different operand values (e.g., MOV AX, BX instead of MOV CX, BX). As yet another example, the invalid instructions may replace branches with non-branches and vice versa (e.g., JMP target instead of INC CX)., 182132=Thus, when code sequence 1200 is executed, a call to support function 1206 is made before encrypted code 1202 is executed. The support function obtains the cryptographic key (1205) and uses it to decrypt encrypted code 1202. Decrypted code 1207 is then written into the portion of memory occupied by encrypted code 1202. Support function 1206 then returns control to code sequence 1200, and the decrypted code is executed., 307907=In one embodiment genuine statements in the component threads 2410, 2412, and 2414 of PVT 2402 are operable to store words that become all or part of the code of EVT 2403. In addition, genuine statements in PVT 2402 are also preferably operable to construct a key 2419 that can be used to decrypt the main body of EVT 2403. Each real thread, O1 . . . ON (2410, 2412, 2414) and E1 . . . EN, (2424, 2426, 2428) can also keep a count of the number of times it has gone around its loop, and from time-to-time compare this with the count(s) maintained by some of the other real threads. If any real thread gets unreasonably ahead or behind (e.g., by more than can be accounted for by vagaries of scheduling), another thread can exit its loop, thus spoiling the other threads' chance to complete. Note that since a debugger typically executes one real thread at a time (or all but one), each virtual thread should have one or more segments in each real thread., 178439=To further confound static analysis, an additional MOV instruction 1108 can be inserted in instruction stream 1101 after target instruction 1103 is executed, the additional MOV instruction 1108 being operable to turn memory location 1104 back into an invalid instruction 1110. Such a change ensures that the memory image will be incorrect almost all of the time, thus making the memory image more difficult to analyze. The value 1110 written back to memory location 1104 need not be a constant, but may consist of any available value (e.g., a register value, etc.), since such a variable value will almost certainly not be equal to the correct value 1103. It will be appreciated, however, that the technique described in this paragraph generally does not interact well with multithreaded or multiprocessor operation, since if two threads are executing the same region, one may change the target instruction back to an invalid value before the other thread is able to execute the valid instruction. Thus, when this technique is used in a multithreaded or multiprocessor application, it is preferably applied within a critical section, or to code that is protected by a locking mechanism., 91941=Illustrative examples of well-known binary modification tools include the technologies underlying the Purify memory-use tracing tool, a product of Rational Software Corp. (formerly Pure Atria Software) of 18880 Homestead Road, Cupertino, California; the TracePoint framework for binary instrumentation of programs for test coverage and performance measurement (a product of TracePoint Technology Inc. that is believed to no longer be marketed); the Etch program performance optimization and evaluation system developed at the University of Washington, Box 352350, Seattle, Wash. (see also http://memsys.cs.washington.edu/memsys/html/etch.html, and Romer et al., \u201cInstrumentation and Optimization of Win32/Intel Executables Using Etch,\u201d Proceedings of the Usenix NT Conference (1997), which is hereby incorporated by reference in its entirety); and EEL, a research project for manipulating SPARC architecture programs conducted by James Larus at the University of Washington (see Larus et al., \u201cEEL: Machine-Independent Executable Editing,\u201d Proceedings of the 1995 ACM SIGPLAN Conference on Programming Languages Design and Implementation (June 1995))., 305987=In one embodiment the virtual threads (2410, 2412, 2414, etc.) have different sets of batons and disjoint sets of genuine variables, yet share obfuscation guards and obfuscation variables. Each virtual thread preferably loops a relatively large number of times without using an obvious loop counter. For example, the loop can use a compiled-in pseudo-random sequence generator to generate a new value on each iteration, and the loop can do something different when the resulting value equals the nth value in that sequence (as computed in advance by the obfuscator). The loop can then perform part of the virtual join, discussed below, and continue looping so that it is not obvious that anything of special significance has happened., 256809=It will be appreciated that tamper response code 2218 can be implemented in any suitable manner, including, for example, using the techniques set forth herein. If the tamper response is made strong enough to disable the code permanently, an attacker that simply tries a few things is likely to get caught by this mechanism., 184709=A one-time pad 1308 is generated by applying a transformation that maps sequence 1306 onto sequence 1303. For example, the exclusive-or (XOR) function can be used for this purpose, the one-time pad comprising the XOR of the desired instructions 1303 and the invalid instructions 1306. The one time pad is then stored in memory. In a preferred embodiment, the amount of storage needed to store the one-time pad can be reduced using compression. For example, a Lempel-Ziv encoding, run-length encoding, or any other suitable compression scheme can be used., 197531=The routine-ID can comprise any suitable mechanism for identifying the external routine that is to be called. For example, the routine-ID may consist of the name of the external routine or, for greater obfuscation, its address. Because the name or address will not appear with a CALL in the program binary, it can make the job of finding calls to external routines more difficult. Having multiple instances of target code 1410 can make the analysis still more complex, since even if the functionality of one instance of code 1410 is figured out, the other instances will still remain, thus obscuring additional CALLs to external routines in program 1402., 174028=Because interrupts and other system processes will occasionally affect thread interleaving, it is typically only possible to give a high probability that race conditions will resolve consistently. However, that assurance can be strengthened by using appropriate loops. For example, block 1026 could test a counter and branch back to the start 1005 unless the counter exceeds a preset amount, in which case an attack could be reported., 224712=In transformed program fragment 1702, code sequence X 1708 b in block B 1712 has been replaced by a jump 1720 to code sequence X 1708 a in block A. In addition, block A has been modified to include a conditional jump 1722 from the end of code sequence X 1708 a back to the appropriate location in block B., 256326=Note that obfuscating code 2213, 2215 can be added between jump 2212 and jumps 2214 and 2216, respectively, in order to make the relationship between those jumps less clear. Such code should, however, preserve the condition code for the second jump, either by avoiding instructions that set it, by saving and restoring it as necessary, and/or by making the second condition code a predictable function of the first., 225120=There are a variety of ways to ensure that test 1722 exits to the correct one of A2 1710 and B2 1716. One simple way is to push the appropriate return address (i.e., the address of A2 or B2) at the end of A1 and B1, respectively. In this embodiment, test 1722 simply pops the address off the stack and branches to it. Alternatively, if the number of calls is known\u2014which is the case in the example shown in FIG. 17A\u2014a boolean, integer, or other appropriate variable could be set such that test 1722 branches correctly. A more powerful approach is to use special variables added for the purposes of obfuscation. If an obfuscation variable (OV) has different values in A and B (at least through X), this fact can be used to choose the appropriate branch from test 1722. For example, if OV7 is 3 in A and 5 in B, test 1722 can compare OV7 to a constant equal to 4 and use the result to decide which way to branch. As a further example, if some other OV is known to have the same value in both nodes, this fact can also be used by test 1722. For example, if OV2 is 9 in both A and B, the value of OV7+5 could be tested against it. Moreover, if no known OV (or combination of OV) has different values in A and B, an OV that is dead in both A and B can be selected and set to different values in A1 and B1, although this may be easier for an attacker to detect., 205353=In most well-formed programs, all of the nodes, Ai, in the input graph are live. That is, all of the nodes in the input graph can be reached by one or more paths from root 1603. In general, each edge is also realizable. In other words, there exists at least one program execution that follows that edge. While an obfuscating transformation need not test for these properties\u2014and indeed, can be applied to programs that do not possess one or both of these properties\u2014it is preferable to substantially preserve these properties to the extent they are true in the original program, as it is desirable to avoid providing clues to a deobfuscator by adding obviously dead nodes or clearly unrealizable edges., 181545=A call 1204 to a support function 1206 is inserted in code sequence 1200. Support function 1206 decrypts code sequences 1202 using a decryption key that reverses the encryption to recover code sequences 1207. The cryptographic key can be stored in a variety of places. For example, the key can be embedded in the call 1204 (at the point of modification), statically embedded in transformation function 1206, or derived from a mapping table in, or accessible to, transformation function 1206., 309036=In a preferred embodiment a second phase of the attempt to lose an attacker involves the use of stronger, or different, forms of cryptography. EVT 2403 can use keys (e.g., 2433) constructed by its threads (2424, 2426, 2428) to decrypt components (2432) of code. The code can be concurrency-obfuscated, although it is operable to play more than an obfuscatory role. In addition, virtual threads may decrypt pieces of code for their own segments that will be executed later, and overwrite code for their own segments that will not be executed again, as well as decrypting other keys for future use.}",
    "textBeforeTable": "Patent Citations Although the foregoing invention has been described in some detail for purposes of clarity of understanding, it will be apparent that certain changes and modifications may be practiced within the scope of the appended claims. It should also be noted that there are many alternative ways of implementing the systems and the methods of the present invention. Accordingly, the present embodiments are to be considered as illustrative and not restrictive, and the invention is not to be limited to the details given herein, but may be modified within the scope and equivalents of the appended claims. Relatively weak obfuscation, tamper resistance, and/or watermarking techniques can be used to decoy the operation of more effective techniques. For example, decoys can be used to lure the attacker into making program modifications that will break the program or trigger detection of the attacker's activity. For example, having detected a weak watermark or obfuscation technique, the attacker might press forward with eradicating or counteracting it, and not realize that in so doing, he has triggered other, more subtle defensive measures. For example, when removing a weak watermark, the attacker could be lured into making changes to the program binary that would cause the program to fail built-in self-checks, crash or yield incorrect results, and/or trigger communication with an external detection agent. 4.4. Decoys , the manipulation of condition codes at the ends of basic blocks (e.g., using",
    "textAfterTable": "29 Douglas Low, \"Protecting Java Code Via Code Obfuscation,\" ACM Crossroads, 1998, 6 pages, http://www.acm.org/crossroads/xrd4-3/codeob.html. 30 Douglas Low, Java Control Flow Obfuscation, Thesis in Master of Science in Computer Science, University of Auckland, Mar. 19, 1998, 137 pages. 31 Enrique I. Oviedo, Control Flow, Data Flow, and Program Complexity, Proceedings of IEEE COMPSAC, Oct. 27-31, 1980, pp. 146-152. 32 Eron Jokippi, \"Jobe-The Java Obfuscator,\" Newsgroup: comp.lang.java.announce, Jan. 14, 1997, http://www.meurrens.org/ip-links/java/codeengineering/jobe-doc.html, 3 pages. 33 EtchDescription: Instrumentation and Optimization of WIN32/Intel Executables, University of Washington, at http://memsys.cs.washington.edu/memsys/html/description.html (last visited Oct. 21, 1999). 34 Frank Tip, A Survey of Program Slicing Techniques, Journal of Programming Languages, vol. 3, No. 3, Sep. 1995, pp. 121-189. 35 Frederick B. Cohen, \"Operating System Protection Through Program Evolution,\" 1992, http://all.net/books/IP/evolve.html. 36 Frederick B. Cohen, Operating System Protection Through Program Evolution, Computers and Security, vol. 12, No. 6, Oxford, 1993, pp. 565-584. 37 Fritz Hohl, Time Limited Blackbox Security: Protection Mobile Agents from Malicious Hosts, Mobile Agents and Security, Giovanni Vigna, Ed., Lecture Notes",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}