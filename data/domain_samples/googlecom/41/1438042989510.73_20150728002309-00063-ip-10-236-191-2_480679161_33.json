{
    "relation": [
        [
            "Citing Patent",
            "US7302679 *",
            "US7401329 *",
            "US7512938 *",
            "US7712076 *",
            "US7761406",
            "US7810080 *",
            "US7814142",
            "US7818729 *",
            "US7831625",
            "US7856624",
            "US7861226 *",
            "US7886272 *",
            "US7917899 *",
            "US7945898 *",
            "US7996798",
            "US8041760",
            "US8060553",
            "US8095571",
            "US8095963",
            "US8145673",
            "US8190661",
            "US8296744 *",
            "US8307109",
            "US8392464",
            "US8453132 *",
            "US8453217",
            "US9064042 *",
            "US20050086360 *",
            "US20050097527 *",
            "US20080028179 *",
            "US20100088665 *",
            "US20140137083 *"
        ],
        [
            "Filing date",
            "Oct 31, 2003",
            "Apr 25, 2005",
            "Mar 18, 2005",
            "Sep 13, 2006",
            "Mar 16, 2005",
            "Nov 2, 2005",
            "Feb 24, 2005",
            "Jun 23, 2006",
            "May 16, 2007",
            "May 6, 2005",
            "Jun 28, 2006",
            "Jun 28, 2006",
            "Feb 28, 2006",
            "Jun 28, 2006",
            "May 24, 2007",
            "Feb 24, 2005",
            "Feb 24, 2005",
            "Jun 22, 2009",
            "Apr 30, 2008",
            "May 16, 2007",
            "Jan 24, 2007",
            "Oct 3, 2008",
            "Aug 24, 2004",
            "Mar 7, 2012",
            "Jun 20, 2007",
            "Nov 2, 2011",
            "Oct 22, 2013",
            "Aug 24, 2004",
            "Oct 31, 2003",
            "Jun 20, 2007",
            "Oct 3, 2008",
            "Oct 22, 2013"
        ],
        [
            "Publication date",
            "Nov 27, 2007",
            "Jul 15, 2008",
            "Mar 31, 2009",
            "May 4, 2010",
            "Jul 20, 2010",
            "Oct 5, 2010",
            "Oct 12, 2010",
            "Oct 19, 2010",
            "Nov 9, 2010",
            "Dec 21, 2010",
            "Dec 28, 2010",
            "Feb 8, 2011",
            "Mar 29, 2011",
            "May 17, 2011",
            "Aug 9, 2011",
            "Oct 18, 2011",
            "Nov 15, 2011",
            "Jan 10, 2012",
            "Jan 10, 2012",
            "Mar 27, 2012",
            "May 29, 2012",
            "Oct 23, 2012",
            "Nov 6, 2012",
            "Mar 5, 2013",
            "May 28, 2013",
            "May 28, 2013",
            "Jun 23, 2015",
            "Apr 21, 2005",
            "May 5, 2005",
            "Jan 31, 2008",
            "Apr 8, 2010",
            "May 15, 2014"
        ],
        [
            "Applicant",
            "Hewlett-Packard Development Company, L.P.",
            "Arm Limited",
            "Microsoft Corporation",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "Thomas Plum",
            "International Business Machines Corporation",
            "Thomas Plum",
            "Microsoft Corporation",
            "Thomas Plum",
            "Avaya Inc.",
            "Avaya Inc.",
            "Kabushiki Kaisha Toshiba",
            "Avaya Inc.",
            "Microsoft Corporation",
            "International Business Machines Corporation",
            "International Business Machines Corporation",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "Microsoft Corporation",
            "International Business Machines Corporation",
            "Microsoft Corporation",
            "Hewlett-Packard Development Company, L.P.",
            "Microsoft Corporation",
            "Riverbed Technology, Inc.",
            "Ascential Software Corporation",
            "Chakrabarti Dhruva R.",
            "Hewlett-Packard Development Company, L.P.",
            "Microsoft Corporation",
            "Riverbed Technology, Inc."
        ],
        [
            "Title",
            "Scalable cross-file inlining through locality-based transformation ordering",
            "Compiling computer programs to exploit parallelism without exceeding available processing resources",
            "Typed intermediate representation for object-oriented languages",
            "Register indirect access of program floating point registers by millicode",
            "Regenerating data integration functions for transfer from a data integration platform",
            "Automated safe secure techniques for eliminating undefined behavior in computer software",
            "User interface service for a services oriented architecture in a data integration platform",
            "Automated safe secure techniques for eliminating undefined behavior in computer software",
            "Data model for a common language",
            "Automated safe secure techniques for eliminating undefined behavior in computer software",
            "Constraint solver to code based test data generation for improving software reliability and security",
            "Prioritize code for testing to improve code coverage of complex software",
            "Program development apparatus, method for developing a program, and a computer program product for executing an application for a program development apparatus",
            "Handling loops in programs and examining feasible software behavior for detecting malicious code",
            "Representing binary code as a circuit",
            "Service oriented architecture for a loading function in a data integration platform",
            "Service oriented architecture for a transformation function in a data integration platform",
            "Partitioning modeling platform data",
            "Securing resource stores with claims-based security",
            "Easily queriable software repositories",
            "Using virtual repository items for customized display",
            "Tree-based directed graph programming structures for a declarative programming language",
            "Methods and systems for real time integration services",
            "Easily queriable software repositories",
            "System and method for recompiling code based on locality domain and thread affinity in NUMA computer systems",
            "Securing resource stores with claims-based security",
            "Instrumenting computer program code by merging template and target code methods",
            "Methods and systems for real time integration services",
            "Scalable cross-file inlining through locality-based transformation ordering",
            "System and method for recompiling code based on locality domain and thread affinity in NUMA computer systems",
            "Tree-based directed graph programming structures for a declarative programming language",
            "Instrumenting computer program code by merging template and target code methods"
        ]
    ],
    "pageTitle": "Patent US7146606 - General purpose intermediate representation of software for software ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US7146606?dq=6335678",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 33,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989510.73/warc/CC-MAIN-20150728002309-00063-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 480747119,
    "recordOffset": 480679161,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6445=FIG. 11 shows an exemplary hierarchy 1100 (e.g., for use in a class hierarchy) for operand types. The operand hierarchy represents the variables, memory references, immediates (constants) and modref (modify/reference) side-effects used by an instruction. The operands are flexible enough to describe source level concepts like variables down to machine level concepts like registers and address modes. Other hierarchies, or a flat arrangement (e.g., no hierarchy) can be used.}",
    "TableContextTimeStampAfterTable": "{226116=The computer 1420 further includes a hard disk drive 1427, a magnetic disk drive 1428, e.g., to read from or write to a removable disk 1429, and an optical disk drive 1430, e.g., for reading a CD-ROM disk 1431 or to read from or write to other optical media. The hard disk drive 1427, magnetic disk drive 1428, and optical disk drive 1430 are connected to the system bus 1423 by a hard disk drive interface 1432, a magnetic disk drive interface 1433, and an optical drive interface 1434, respectively. The drives and their associated computer-readable media provide nonvolatile storage of data, data structures, computer-executable instructions, etc. for the computer 1420. Although the description of computer-readable media above refers to a hard disk, a removable magnetic disk and a CD, it should be appreciated by those skilled in the art that other types of media which are readable by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, and the like, may also be used in the exemplary operating environment., 91859=MemOpnds 1130 refer to the address or content of memory locations. It is the operand used for denoting memory indirections or calculating effective addresses depending on the access attribute. It can be capable of expressing the most powerful address mode on any target machine., 92330=ModRefOpnds 1150 interact with the Alias package and are used to describe may-use or may-def information which are side-effects of a particular instruction. A common usage is for ModRefOpnds to specify register kill sets and global variable ref/def information for function calls., 44666=A portion of the disclosure of this patent document is submitted on one compact disc and is hereby incorporated herein by reference as Computer Program Listing Appendix F. The compact disc contains exactly one file created Jul. 15, 2003, named \u201cAppendixF.txt\u201d (232 kilobytes in size) (Appendix F). An additional, identical compact disc is also included herewith., 43915=This application is a continuation-in-part of U.S. patent application Ser. No. 10/607,601 to Plesko et al., \u201cAN EXTENSIBLE TYPE SYSTEM FOR REPRESENTING AND CHECKING CONSISTENCY OF PROGRAM COMPONENTS DURING THE PROCESS OF COMPILATION,\u201d filed Jun. 27, 2003, U.S. patent application Ser. No. 10/609,275 to Grover et al., \u201cAN INTERMEDIATE REPRESENTATION FOR MULTIPLE EXCEPTION HANDLING MODELS,\u201d filed Jun. 26, 2003, and U.S. patent application Ser. No. 10/610,692 to Burger, \u201cGENERATING SOFTWARE DEVELOPMENT TOOLS VIA TARGET ARCHITECTURE SPECIFICATION,\u201d filed Jun. 30, 2003, all of which are hereby incorporated herein by reference., 91531=The base class operand 1110 can be an abstract class. VarOpnds 1120 can represent a user variable or compiler temporary in a register or in memory. In addition, VarOpnds can be marked with an attribute that denotes whether they indicate the address or the contents of the variable., 92650=LabelOpnds 1160 can be used to indicate a label within software (e.g., for branching or looping statements)., 227621=A user may enter commands and information into the computer 1420 through a keyboard 1440 and pointing device, such as a mouse 1442. These and other input devices are often connected to the processing unit 1421 through a serial port interface 1446 that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port or a universal serial bus (USB). A monitor 1447 or other type of display device is also connected to the system bus 1423 via an interface, such as a video adapter 1448. In addition to the monitor, computers typically include other peripheral output devices (not shown), such as speakers and printers., 229077=When used in a LAN networking environment, the computer 1420 is connected to the local network 1451 through a network interface or adapter 1453. When used in a WAN networking environment, the computer 1420 typically includes a modem 1454 or other means for establishing communications (e.g., via the LAN 1451 and a gateway or proxy server 1455) over the wide area network 1452, such as the Internet. The modem 1454, which may be internal or external, is connected to the system bus 1423 via the serial port interface 1446. In a networked environment, program modules depicted relative to the computer 1420, or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used., 227312=A number of program modules may be stored in the drives and RAM 1425, including an operating system 1435, one or more application programs 1436, other program modules 1437, and program data 1438; in addition to an implementation 1456., 93242=The instruction hierarchy is broken down into real instructions 1222 (instructions that have dataflow), pseudo instructions 1220 (labels 1232 and pragmas 1233) and data 1224 (allocated or embedded data). The most basic form of instruction is a ValueInstr 1241. A ValueInstr 1241 can represent any arithmetic or logical operation that produces a value. CallInstr/RetumInstr 1242/1243 can be used for procedure invocation., 93758=BranchInstr/SwitchInstr/LabelInstr 1244/1245/1232 can be used for intra-procedural control flow. BoundaryInstr/OutlineInstr 1246/1247 can be used to define regions in the IR such as procedure entry/exit and inline assembly blocks of code respectively., 92177=ImmOpnds 1140 represent integer, floating point, string, or other constants referenced by the instruction stream., 222339=In the example, which uses an IR format incorporating any combination of the technologies described in the examples herein, an assembler 1311, a disassembler 1312, a compiler 1322, a JIT compiler 1324, an optimizer (e.g., a whole program optimizer) 1332, a profiler 1336, a simulator 1342, a debugger 1352, and an analyzer 1362 can all understand (e.g., traverse and modify) the IR format. Other tools (e.g., Pre-JIT compiler) can be included. In this way, the software development tools can work together more harmoniously. Also, from an engineering standpoint, using a common IR format greatly reduces duplication of effort and opportunity for error., 228369=The computer 1420 operates in a networked environment using logical connections to one or more remote computers, such as a remote computer 1449. The remote computer 1449 may be a server, a router, a peer device or other common network node, and typically includes many or all of the elements described relative to the computer 1420, although only a memory storage device 1450 has been illustrated. The logical connections depicted include a local area network (LAN) 1451 and a wide area network (WAN) 1452. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet., 225510=The system bus may be any of several types of bus structure including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of conventional bus architectures such as PCI, VESA, AGP, Microchannel, ISA and EISA, to name a few. The system memory includes read only memory (ROM) 1424 and random access memory (RAM) 1425. A basic input/output system (BIOS), containing the basic routines that help to transfer information between elements within the computer 1420, such as during start-up, is stored in ROM 1424.}",
    "textBeforeTable": "Patent Citations } return(0); #endif } #ifdef NTR4000 \u2003printf (\u201cpass\\n\u201d); \u2003} /* doitagain loop*/ } \u2003exit (0); \u2003printf (\u201cfail\\n\u201d); { else } \u2003i = i+1; \u2003while (i <= 8) { i = 1; if (q =\u2009= true) try(1, &q, b, a); } \u2003i = i + 1; \u2003if (i <= 14) c[i] = true; \u2003if (i >= 2) b[i] = true; \u2003if ((i >= 1) && (i <=",
    "textAfterTable": "US6625804 Jul 6, 2000 Sep 23, 2003 Microsoft Corporation Unified event programming model US6625808 Dec 10, 1999 Sep 23, 2003 Microsoft Corporation Method and apparatus for facilitating memory management in a program comprised of heterogeneous components US6662356 Jun 30, 1999 Dec 9, 2003 Microsoft Corporation Application program interface for transforming heterogeneous programs US6678805 May 25, 2000 Jan 13, 2004 Microsoft Corporation Structure organization for improved cache performance US6745383 Dec 29, 1999 Jun 1, 2004 Veritas Operating Corporation Early warning mechanism for enhancing enterprise availability US6748584 Dec 29, 1999 Jun 8, 2004 Veritas Operating Corporation Method for determining the degree to which changed code has been exercised US20020083425 Dec 21, 2000 Jun 27, 2002 Microsoft Corporation System and method for obtaining scratch registers in computer executable binaries US20020095667 * Sep 27, 2001 Jul 18, 2002 Archambault Roch Georges Optimizing compilation by forward store movement",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}