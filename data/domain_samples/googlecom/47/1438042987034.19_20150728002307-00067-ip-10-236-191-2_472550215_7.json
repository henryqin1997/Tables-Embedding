{
    "relation": [
        [
            "Citing Patent",
            "US4964035 *",
            "US5091853 *",
            "US5130797 *",
            "US5136702 *",
            "US5197138 *",
            "US5210834 *",
            "US5226135 *",
            "US5274777 *",
            "US5517666 *",
            "US5590291 *",
            "US5680568 *",
            "US6035296 *",
            "US7739480 *",
            "US7908460",
            "US8504806 *",
            "US8762690 *",
            "US20100042807 *",
            "US20120239911 *"
        ],
        [
            "Filing date",
            "Apr 7, 1988",
            "Feb 22, 1989",
            "Feb 23, 1990",
            "May 17, 1990",
            "Dec 26, 1989",
            "Feb 20, 1992",
            "Sep 22, 1988",
            "Mar 29, 1991",
            "Jan 24, 1994",
            "Jan 4, 1993",
            "Jun 15, 1994",
            "Mar 21, 1996",
            "Jan 11, 2005",
            "May 3, 2010",
            "May 31, 2012",
            "Jun 30, 2009",
            "Jun 30, 2009",
            "May 31, 2012"
        ],
        [
            "Publication date",
            "Oct 16, 1990",
            "Feb 25, 1992",
            "Jul 14, 1992",
            "Aug 4, 1992",
            "Mar 23, 1993",
            "May 11, 1993",
            "Jul 6, 1993",
            "Dec 28, 1993",
            "May 14, 1996",
            "Dec 31, 1996",
            "Oct 21, 1997",
            "Mar 7, 2000",
            "Jun 15, 2010",
            "Mar 15, 2011",
            "Aug 6, 2013",
            "Jun 24, 2014",
            "Feb 18, 2010",
            "Sep 20, 2012"
        ],
        [
            "Applicant",
            "Hitachi, Ltd.",
            "Mitsubishi Denki Kabushiki Kaisha",
            "Mitsubishi Denki Kabushiki Kaisha",
            "Hitachi, Ltd.",
            "Digital Equipment Corporation",
            "Digital Equipment Corporation",
            "Hitachi, Ltd.",
            "Fuji Xerox Co., Ltd.",
            "Matsushita Electric Industrial Co., Ltd.",
            "Mitsubishi Denki Kabushiki Kaisha",
            "Mitsubishi Denki Kabushiki Kaisha",
            "Mitsubishi Denki Kabushiki Kaisha",
            "Nintendo Co., Ltd.",
            "Nintendo Co., Ltd.",
            "Apple Inc.",
            "Apple Inc.",
            "Apple Inc.",
            "Apple Inc."
        ],
        [
            "Title",
            "Vector processor capable of high-speed access to processing results from scalar processor",
            "Chained addressing mode pipelined processor which merges separately decoded parts of a multiple operation instruction",
            "Digital signal processing system for parallel processing of subsampled data",
            "Buffer storage control method and apparatus",
            "Reporting delayed coprocessor exceptions to code threads having caused the exceptions by saving and restoring exception state during code thread switching",
            "High speed transfer of instructions from a master to a slave processor",
            "Method for sorting vector data on the basis of partial vectors and vector processor",
            "Digital data processor executing a conditional instruction within a single machine cycle",
            "Program controlled processor wherein vector distributor and vector coupler operate independently of sequencer",
            "Digital signal processing system for limiting a result to be predetermined bit count",
            "Instruction format with sequentially performable operand address extension modification",
            "Sorting method, sort processing device and data processing apparatus",
            "Method and apparatus for obtaining a scalar value directly from a vector register",
            "Method and apparatus for obtaining a scalar value directly from a vector register",
            "Instruction for comparing active vector elements to preceding active elements to determine value differences",
            "Increment-propagate and decrement-propagate instructions for processing vectors",
            "Increment-propagate and decrement-propagate instructions for processing vectors",
            "Value check instruction for processing vectors"
        ]
    ],
    "pageTitle": "Patent US4890220 - Vector processing apparatus for incrementing indices of vector operands of ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US4890220?dq=7069184",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 7,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987034.19/warc/CC-MAIN-20150728002307-00067-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 472576027,
    "recordOffset": 472550215,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{72813=When a fetch request is issued from the execution unit 1005 to the buffer storage control unit 1001 and the OP2 and OP3 are fetched, the fetched data of the OP2 is set in the ROBA 1708 through the path 1015a of FIG. 11, the WAR 1500 and the path 1057a . The data of the OP3 is set in the ROBB 1709 through the path 1015b, the WAR 1501 and the path 1057b. Then, they are compared. The decision of the decision circuit 1721 is encoded by the encoder 1742 and the encoded data is set in the decision queue register 1724 at a position pointed by the in-pointer 1723. The decision is also sent to the execution unit 1005 through the path 1075a., 67013=When the execution unit 1005 receives the compare result signal indicating that the rear parts of the OP2 and OP3 are equal through the path 1075a, it sends a store request to the store request control circuit 1109 of the buffer storage control unit 1001 through the store request control circuit 1505 and the path 1051. It also sets the stored data sent from the vector processor 1007 through the path 1075 in the FR 1108 of the buffer storage control unit 1001 through the WCR 1502 and the path 1051a. It further sends the store address in the store address register (DAR) 1202 of the address control unit 1002 to the buffer storage control unit 1001. The DAR 1202 now points to the start address of the OP1 unprocessed elements. The buffer storage control unit 1001 translates the address sent from the address control unit 1002, and if the translated address is in the BSO 1104 or BS1 1105, it writes the content of the FR 1108 into the corresponding BS. It also sends the store request to the main storage control unit 1008 through the path 1001a and sends the store data through the path 1001c to write it into the main storage 1009. After the storage of the data into the main storage 1009, an end of store signal is sent from the main storage control unit 1008 to the buffer storage control unit 1001 through the path 1001b., 71261=Numeral 1713 denotes a comparator for comparing the second four bytes of the operand data, numeral 1714 denotes a comparator for comparing the element designated by the OP2 counter CNT2P 1703 and the next element, and numeral 1715 denotes a comparator for comparing the element designated by the OP3 counter CNT3 1704 and the next element. When the rear parts (second four bytes of the data) of the OP2 and OP3 are equal, a register 1716 combines the front parts (first four bytes of the data) of the OP2 and OP3 into an 8-byte data by the control signal from a path 1725 and a selector 1717 and sends the 8-byte data to the execution unit 1005 through the path 1075, and reads out the contents of the counter CNT2S1 1727, CNT3S 1728, CNT1S 1729 and CNT2S2 1730 and writes them into the GPR 1004 through the paths 1075 and 1054 (FIG. 11). A decision circuit 1721 receives the compare result of the rear part of the OP2 and OP3 and the compare result of the counters CNT2P 1703, CNT3 1704 and CNT1 1705 and the registers MAX2 1700, MAX3 1701 and MAX1 1702 to determine whether it is an end or not and which counter is to be incremented. The decision of the decision circuit 1721 is set in a decision queue register 1724 through an encoder 1742. A set position and an output position of the decision queue register 1724 are pointed to by an in-pointer 1723 and an out-pointer 1725. The output of the queue register 1724 is supplied to a decoder 1743 through a selector 1744. The output of the decoder 1743 controls counters 1727-1730., 65934=Because the ATO 1100, BSARO 1102, BSO 1104, DRO 1106, and AT1 1101, BSAR1 1103, BS1 1105, DR1 1107 of the buffer storage control unit 1001 are operable in parallel, the compare operation in the vector processor 1007 is not delayed and the data can be supplied without delay., 64331=FIG. 13 shows an internal configuration of the vector processor 1007. The maximum numbers of elements of the operands sent from the execution unit 1005 through the path 1057 are set in maximum number of element registers MAX2 1700, MAX3 1701 and MAXl 1702, and the counts of the operands are set in the element counters CNT2P 1703, CNT3 1704, CNT1 1705 and CNT2S 1706 which determine the end, and in CNT2S1 1727, CNT3S 1728, CNT1S 1729 and CNT2S2 1730 which count the numbers of processed elements., 70837=In the vector processor of FIG. 13, ROBA 1708 is an operand buffer for storing the OP2 data, ROPA 1707 is an out-pointer for the ROBA 1708, ROBB 1709 is an operand buffer for storing the OP3 data and ROPB 1710 is an out-pointer for the ROBB 1709. In FIG. 13, in-pointers for the operand buffers 1708 and 1709 are omitted although similar in-pointers to the in-pointers 719 and 720 in FIG. 6 are provided., 79817=(3) Increment the CNT1 1705 by one by the output 1739., 66578=When the vector processor 1007 receives the vector operand data sent through the paths 1057a and 1057b, it starts to compare the rear parts (second four bytes) of the operands, and if the rear parts of the OP2 and OP3 are equal, it combines front parts of the operands into an 8-byte data and sends to the execution unit 1005 a compare result signal through the path 1075a and the stored data through the path 1075., 54168=FIG. 8 shows another embodiment of the present invention. The configuration of FIG. 8 is similar to that of FIG. 1. Numeral 1011 denotes a scalar processor which comprises a buffer storage control unit 1001, an address control unit 1002, an instruction unit 1003, general purpose registers (GPR) 1004 and an execution control unit 1005. The scalar processor 1011 reads and writes data from and to a main storage 1009 through a storage control unit 1008 together with an input/output processor 1010. A vector processor 1007 is connected to the execution control unit 1005 of the scalar processor 1011. The vector processor 1007 performs a new type of vector operation in which an element number to be processed is determined by an operation result of the previous vector elements., 80102=(2) Instruct setting of the content of the SASR 1206 into the SAA 1200 by the output 1072C., 66228=The execution unit 1005 reads out the content of the DRO 1106 through the path 1015a and sets it in the WAR 1500. It also reads out the content of the DR1 1107 through the path 1015b and sets it in the WBR 1501. Then, the execution unit 1005 instructs the vector processor 1007 to fetch the data through the paths 1057a and 1057b., 60153=FIG. 11 shows a detail of the buffer storage control unit 1001, address control unit 1002 and execution unit 1005 of FIG. 8. In FIG. 11, the path 1035 is connected to a control circuit 1036 which comprises the registers 508 and 510, selector 509 and operation unit 512 shown in FIG. 4. The control circuit 1036 sends the register number in the R2 field to the GPR 1004 through the path 1054E. The DTO sent from the GPR 1004 through the path 1045 is set in a work register (WBR) 1501 in the execution unit 1005. The content (OP2 first counter) of the GPR 1004 specified by the R1 field of the MERGE JOIN instruction is set in a work register (WAR) 1500. The DTO set in the WAR 1501 is set in a fetch-only address register (SAB) 1201 in the address control unit 1002 through the path 1052. The content DTO of the SAB 1201 is sent to the buffer storage control unit 1001 through a path 1021b. The DTO is translated by an address translation unit (AT1) 1101 from a virtual address to a real address, and the translated real address is set in a buffer address register (BSAR 1) 1103. A buffer storage (BS1) 1105 is accessed by the content (DTO) of the BSAR1 1103 and the read data is set in an 8-byte data register (DR1) 1107. As a result, the first four bytes of the DR1 1107 contain the OP2 start address and the second four bytes contains the maximum number of elements of the OP2. The data of the DR1 1107 is sent to the execution unit 1005 through the path 1015b., 59545=In FIG. 8, the instruction fetched from the buffer storage control unit 1001 through the path 1013 is decoded by the instruction unit 1003. If it is decoded as the MERGE JOIN instruction, the instruction unit 1003 informs the execution unit 1005 through the path 1035 that it is the MERGE JOIN instruction and sends the register numbers (R1 and R2 fields) to be used to the execution unit 1005, which sends the register numbers of the R1 and R2 fields sent from the instruction unit 1003 to the GPR 1004 through the path 1054 to read out the content of the GPR 1004 through the path 1045., 62219=The execution unit 1005 sets the data sent through the path 1015b in the WBR 1501, adds the content of the general purpose register specified by the R1 field set in the WAR 1500, multiplied by the length of the element (that is, 8) to the first four bytes (OP2 start address) of the WBR 1501 by an adder 1503, and sets the resulting sum in a work address register (WCR) 1502. The content of the WCR 1502 is selected by a selector 1504 and transferred to a fetch-only address register (SAA) 1200 in the address control unit 1002 through a path 1052. The second four bytes (maximum number of elements of the OP2) of the WBR 1501 are transferred the vector processor 1007 through a path 1057., 79990=(1) Instruct setting of the content of the CNT2S 1706 into the CNT2P 1703 by the output 1741, 79710=(2) Selects the front parts of the OP2 and OP3 by the selector 1717 by the output 1725., 65103=A fetch request addressed by the SAA 1200 and SAB 1201 is issued to the buffer storage control unit 1001 from the address control unit 1002. The SAA 1200 and SAB 1201 contain the start address of the OP2 unprocessed elements and the start address of the OP3 unprocessed elements. The buffer storage control unit 1001 translates the content of the SAA 1200 sent through the path 1021a by the ATO 1100, sets the translated address in the BSAR 1102, accesses the BSO 1104 by that address and sets the read data in the DRO 1106. It also accesses the BS1 1105 by the content of the SAB 1201 sent through the path 1021b and sets the read data in the DR1 1107. As a result, DRO 1106 contains the start element of the OP2 unprocessed elements and the DR1 1107 contains the start element of the OP3 unprocessed elements., 80358=(4) Increment the CNT1 1705 by one by the output 1739., 63863=As shown in FIG. 12, the vector operands to start the first processing are set in the SAA 1200, SAB 1201 and DAR 1202 in the address register control unit 1002. The contents of four general purpose registers having serial numbers starting from the number specified by the R1 field of the instruction are sequentially read into the execution unit 1005 through the path 1045 and sent to the processor 1007 through the selector 1504 and the path 1057., 73472=The execution unit 1005 adds valid or invalid information to the store request by the store control circuit 1505 and sends the store request to the store request control circuit 1109 in the buffer storage control unit 1001. Whether the additional information indicates valid or invalid, the store request control circuit 1109 sets the store request in a first-in first out queue. If no store request is being processed by the main storage control unit 1008 or if the end of processing of the previous store request is indicated to the store request control circuit 1109 through the path 1001b, the store request control circuit 1109 reads out the store request and the additional information from the queue in the first-in first out scheme. If the additional information indicates that the store request is valid, the store request control circuit 1109 sends the store request to the main storage control unit 1008. If it indicates invalid, the end of store request processing signal is sent to the execution unit 1005 through the path 1016. If the store request is valid and the store request is issued to the main storage control unit 1008, the store request control circuit 1109 suspends the fetching of the next request from the queue until the end of store is indicated through the path 1001b to prevent the overrun of the processing. The presence or absence of the store access exception detected by the buffer storage control unit 1001 is also sent to the execution unit 1005 through the path 1016 together with the end of store request processing signal. The store request control circuit 1505 in the execution unit 1005 sends the end of store request processing signal sent from the buffer storage control unit 1001, to the vector processor 1007 through the path 1058., 70693=FIG. 13 shows a configuration of the vector processor 1007 for processing the vector elements of the MERGE JOIN instruction., 80213=(3) Select the front part of the element #1 of the OP2 and the element #1 of the OP3 by the selector 1717 by the output 1725., 76962=When the execution unit 1005 is informed of the occurrence of back-track by the vector processor 1007, it sends the fetch request addressed by the SAA 1200 having the content of the SASR 1206 set therein, to the buffer storage control unit 1001. The vector processor 1007 withholds the decision until the fetch data by the request arrives. The updating of the counters CNT2P 1703, CNT3 1704, CNT1 1705 and CNT2S 1706 is suppressed but the updating of the counters CNT2S1 1727, CNT3S 1728, CNT1S 1729 and CNT2S2 1730 by the end of store request processing signal sent through the path 1058 is effected in a normal way., 78450=(1) Increment the ROPA 1707, CNT2P 1703 and CNT2S 1706 by one by the outputs 1722, 1741 and 1738, respectively., 77599=FIG. 14 shows a time chart which illustrates the execution of the MERGE JOIN instruction in the vector processor 1007. In FIG. 14, it is assumed that the OP2 and OP3 are as shown in FIG. 9 and the start element numbers of the unprocessed elements of the OP2 and OP3 are \"0\", respectively. It is also assumed that the input data for the MERGE JOIN instruction has been sorted with respect to their rear parts and the fetch data of the operands arrive at the buffers 1708 and 1709 in the vector processor in the cycle 0 to be ready for comparison., 61636=The buffer storage control unit 1001 includes address translation unit AT0 1100, buffer storage address register BSARO 1102, buffer storage BSO 1104 and data register DRO 1106 which are functionally identical to the AT1 1101, BSAR1 1103, BS1 1105 and DR1 1107, as the previous embodiment does. The BSO 1104 and BS1 1105 are high speed memories for storing partial copies of the main storage 1009. If the data to be accessed is not contained in the BSO or BS1, it is transferred from the main storage 1009 under the control of the buffer storage control unit 1001., 78997=(1) Increment the ROPB 1710 and CNT3 by one by the outputs 1723 and 1740, respectively., 76279=In this manner, the correctly processed element numbers are held in the counters CNT2S1 1727, CNT3S 1728, CNT1S 1729 and CNT2S2 1730., 79104=(2) Suppress the updating of the DAR 1202 and SAA 1200 in the next cycle by the outputs 1072a and 1072b, respectively., 79242=Thus, in the cycle 2, the element #1 of the OP2 and the element #1 of the OP3 are compared. This corresponds to P9 in FIG. 10. Since (rear part of OP2)=(rear part of OP3), the comparator 1714 compares A(i).REAR and A(i+1).REAR, and B(i).REAR and B(i+1).REAR. The decision circuit 1721 instructs the following operations in the cycle 2., 78581=(2) Suppress the updating of the DAR 1202 and SAB 1201 in the next cycle by the outputs 1072a and 1072b, respectively., 80574=In the present example, they are returned to the immediately previous element address and element number. In certain cases, they may return by more than one element. Thus, if the execution unit 1005 is informed of the occurrence of a back-track from the vector processor 1007 through the path 1075a, it reissues a fetch request. In this case, the address held in the SAA 1200 having the content of the SASR 1206 set therein is used. The cycles 5-7 of FIG. 14 show waiting for the arrival of data for the fetch request., 75269=When the end of store request processing signal and the access exception signal are sent from the execution unit 1005 through the path 1058, the decision circuit in the vector processor 1007 detects the presence or absence of the access exception, and if it is absent, it increments the out-pointer 1725 of the decision queue register 1724 by one, and takes out one of the decisions held in the queue 1724. It is decoded by a decoder 1743 and an operation designated by the decoded content (increment the corresponding counter by one, copy the content of the CNT2 1727 into the CNT2S2 1730, or suppress the updating of the counter) is carried out. If the decision taken out indicates the end of processing, the counters CNT2S1 1727, CNT3S 1728, CNT1S 1729 and CNT2S2 1730 are not adapted. If the end of store request processing signal accompanied by the access exception is taken out, the counters are not updated and the access exception processing is delegated to the execution unit 1005., 68365=On the other hand, if the rear parts of the OP2 and OP3 are not equal, the store request control circuit 1505 of the execution unit 1005 responds to the compare result signal sent from the vector processor 1007 through the path 1075a to add an \"invalid\" additional information to the tore request and sends it to the buffer storage control unit 1001 through the path 1051. When the rear parts of the OP2 and OP3 are not equal, the vector processor 1007 sends a suppress signal for the updating of the store address to the address control unit 1002 through the path 1072a., 68966=In a virtual storage scheme computer, desired data is not always present in the main storage but it may be swept out to an auxiliary storage. Accordingly, during the course of the processing of the vector operation, it may be necessary to interrupt the processing by a page translation exception. In accordance with the present invention, when such an interruption is required, the count corresponding to the processed element can be written back to the GPR 1004 because the operand counters corresponding to the elements which have been stored into the main storage are provided. After the interruption operation, the instruction is restarted and the count is read out from the GPR 1004 to resume the processing. Such a function is effective in specifying the exceptional element number in the vector operation which causes the data exception or operation exception in the execution. When the operation exception takes places, the counter which is used to compare the processing element number with the initially set maximum element number may overrun, and in the vector operation, the processing element number does not always increase in a fixed cycle on all operands. Accordingly, the correct number of elements cannot be determined by subtracting a fixed number from the counters CNT2P 1703, CNT3 1704, CNT1 1705 and CNT2S 1706 of FIG. 13. Since the counters CNT2S1 1727, CNT3S 1728, CNT1S 1729 and CNT2S2 1730 which count the numbers of processed elements are counted up late (more specifically, after the determination of the presence or absence of the exception), if the exception is detected, the counting up can be suppressed and the element members of the normally processed elements can be held., 55150=FIG. 9 shows a format of the MERGE JOIN instruction and the operation thereof. The MERGE JOIN instruction has a 4-byte length and the format thereof is identical to that of the MERGE SORT instruction. The bits 16-23 of the instruction have no meaning. The general purpose registers having four serial numbers starting from the number specified by the bits 24-27 (R1 field) of the instruction designates a primary element counter of a second operand (OP2 first counter), an element counter of a third operand (OP3 counter), an element counter of a first operand (OP1 counter) and a secondary element counter of the second operand (OP2 second counter). Two counters are required for the second operand to enable back tracking. The general purpose register specified by the bit 28-31 (R2 field) designates a description table origin (DTO) which is a start address of a description table (DT). The DT is in the main storage 1009 and contains the start address of the vector operand and the maximum number of elements. The vector operand indirectly specified by the DT is a dual vector data in which the first four bytes contain an integer without a sign to identify the data and the second four bytes contain the data to be compared. In a simple example, the first four bytes contain a name code and the second four bytes contain his or her payroll. In another example, the first four bytes contain a mechanical part code and the second four bytes contains a price thereof. In FIG. 9, the MERGE JOIN instruction is used with:, 78174=In FIG. 14, the elements #0 of the OP2 and OP3 are compared by the comparator 1713 in the cycle 0. This corresponds to P10 in FIG. 10. Because (rear part of OP2)<(rear part of OP3), the decision circuit instructs the following operations in the cycle 1., 79597=(1) Increment the ROPA 1707 and CNT2P 1703 by one by the outputs 1722 and 1741, respectively., 81525=If the OP1 store condition is not (that is, the rear parts of the OP2 and OP3 are equal) when the contents of the counter CNT2P 1703 in the vector processor 1007 is equal to the contents of the MAX2 1700 and the contents of the counter CNT3 1704 is equal to the contents of the MAX3 1701, or the contents of the CNT1 1705 and the contents of the MAXl 1702 are equal, or if the occurrence of an exception is indicated to the decision circuit, an end of processing condition is met and the decision circuit 1721 issues an instruction to end the processing. When the execution unit 1005 receives the end of processing instruction, it waits for the clearing of the processing for the store request in the buffer storage control unit 1001, that is, the send-out of all of the end of store request processing signals for the store request to the vector processor 1007. When all of the end of store request processing signals have been sent to the vector processor 1007, the counters CNT2S1 1727, CNT3S 1728, CNT1S 1729 and CNT2S2 1730 in the vector processor 1007 holds the element numbers corresponding to the processed elements. Thereafter, the counters CNT2S1 1727, CNT3S 1728, CNT1S 1729 and CNT2S2 1730 in the vector processor 1007 are sequentially read under the control of the execution unit 1005 and their contents are set in the WCR 1502 through the selector 1717, register 1716 and path 1075, and written into four general purpose registers having serial numbers starting from the number designated by the R1 field of the instruction, through the path 1054. After the four counts have been written into the general purpose registers, the execution unit 1005 informs the instruction unit 1003 of the end of the MERGE JOIN instruction., 78719=Thus, in the next cycle 1, the element #1 of the OP2 and the element #0 of the OP3 are compared. This corresponds to P11 in FIG. 10. Since (rear part of OP2) >(rear part of OP3), the decision circuit 1721 instructs the following operations in the cycle 2., 76432=If the decision circuit 1271 detects the occurrence of \"back-track\" (which will be explained later), the vector processor 1007 sends a set signal for the SAA 1200 of the fetch address same register (SASR) 1206, to the address control unit 1002 through the path 1072C. A set signal for setting the content of the CNT2S 1706 to the CNT2P 1703 is also sent from the decision circuit 1721 through the path 1741. The occurrence of back-track is indicated to the execution unit 1005 through the path 1075a.}",
    "textBeforeTable": "Patent Citations The post-processing for an interruption such as a page translation exception occurring during the processing of the vector elements is similar to the post-processing described above. As a result, the counters are updated for the normally processed elements, and the counts for the unprocessed elements are held in the GPR. When the instruction is restarted after the processing of the interruption, the execution of the vector instruction can be resumed by carrying out the same pre-processing to start vector processing as that of the first time. If the OP1 store condition is not (that is, the rear parts of the OP2 and OP3 are equal) when the contents of the counter CNT2P 1703 in the vector processor 1007 is equal to the contents of the MAX2 1700 and the contents of the counter CNT3 1704 is equal to the contents of the MAX3 1701, or the contents of the CNT1 1705 and the contents of the MAXl 1702 are equal, or if the occurrence of an exception is indicated to the decision circuit, an end of processing condition is met and the decision circuit 1721 issues an instruction to end the processing. When the execution unit 1005 receives the end of processing instruction, it waits for the clearing of the processing for the store request in the buffer storage control unit 1001, that is, the send-out of all of the end of store request processing signals",
    "textAfterTable": "US4651274 * Mar 28, 1984 Mar 17, 1987 Hitachi, Ltd. Vector data processor EP0126247A2 * Mar 30, 1984 Nov 28, 1984 International Business Machines Corporation Computer system * Cited by examiner Non-Patent Citations Reference 1 * IBM Technical Disclosure Bulletin, vol. 27, No. 7A, Dec. 1984, pp. 4061 4063. 2 IBM Technical Disclosure Bulletin, vol. 27, No. 7A, Dec. 1984, pp. 4061-4063. * Cited by examiner Referenced by Citing Patent Filing date Publication date Applicant Title US4964035 * Apr 7, 1988 Oct 16, 1990 Hitachi, Ltd. Vector processor capable of high-speed access to processing results from scalar processor US5091853 * Feb 22, 1989 Feb 25, 1992 Mitsubishi Denki Kabushiki",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}