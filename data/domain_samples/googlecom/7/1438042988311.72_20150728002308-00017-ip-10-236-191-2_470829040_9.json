{
    "relation": [
        [
            "Date",
            "Nov 30, 1999",
            "Nov 18, 2005",
            "May 3, 2010",
            "Sep 24, 2010",
            "Nov 16, 2010"
        ],
        [
            "Code",
            "AS",
            "FPAY",
            "REMI",
            "LAPS",
            "FP"
        ],
        [
            "Event",
            "Assignment",
            "Fee payment",
            "Maintenance fee reminder mailed",
            "Lapse for failure to pay maintenance fees",
            "Expired due to failure to pay maintenance fee"
        ],
        [
            "Description",
            "",
            "Year of fee payment: 4",
            "",
            "",
            "Effective date: 20100924"
        ]
    ],
    "pageTitle": "Patent US6457154 - Detecting address faults in an ECC-protected memory - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US6457154?dq=inassignee:integral+inassignee:peripherals",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 9,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988311.72/warc/CC-MAIN-20150728002308-00017-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 470859135,
    "recordOffset": 470829040,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{81046=FIG. 8 depicts the logic used in determining the location of single symbol errors and the presence of multiple symbol errors. In this regard, each of the syndrome patterns shown in FIG. 8 corresponds to a sub-column of the decode table of FIG. 11, and as alluded to above, each sub-column indicates that either a single bit is in error, or that two bits in a single symbol are in error. To illustrate, sub-column 0 indicates that the first bit of symbol 0 is in error, sub-column 1 indicates that the second bit of symbol 0 is in error, and sub-column 3 indicates that both the first and the second bits of symbol 0 are in error. Accordingly, the generated syndrome may be compared against the syndrome patterns shown in FIG. 8 to determine the location of any single symbol errors. For instance, a generated syndrome of 000000101010 matches with the bottom syndrome pattern and indicates that the first bit of symbol 0, or in other words, bit 0 is in error. Similarly, a generated syndrome of 001100110011 matches with the sixth syndrome pattern from the bottom and indicates that both the first and the second bit of symbol 1, or in other words, bits 2 and 3 are in error. If, however, there are no matches between the generated syndrome and the sub-columns of the decode table and if all of the syndrome bits are not 0, then a multiple symbol error is determined to exist and an appropriate error message must be generated, as discussed in greater detail below., 83803=In accordance with another aspect of the present invention, address faults from data transmitted to or retrieved from an incorrect memory address are detected. The occurrence of such an address fault is illustrated below with reference to FIG. 14. In FIG. 14, data intended to be stored at a target location, or memory address 000556830 (hex), is erroneously stored to failure location 1, or memory address 004556830 (hex). This type of error could occur due to, for instance, the failure of an address bit corresponding to the third digit in the memory address which results in 0 being changed to 4. Similarly, as another example, the failure of an address bit corresponding to the sixth digit in the memory address resulting in 6 being changed to 2 would result in the storage of data to failure location 2, or memory address 000552830 (hex)., 85567=Referring again to FIG. 14, the memory address of the target location 000556830 (hex) may be represented in binary as: 0000 0000 0000 0101 0101 0110 1000 0011. In the embodiment depicted, only the rightmost bit of the first hex digit (0), and the next seven nibbles (i.e., a collection of four bits) (0000 0000 0101 0101 0110 1000 0011) are utilized. In this particular system, the remaining bits are utilized for other purposes and are not further discussed. In addition, it is to be understood that although a particular arrangement of bits is described as being utilized for illustrative purposes in this embodiment, the present invention is not to be construed as being limited to only the utilization of those particular bits. Rather, any arrangement of bits may be utilized without departing from the principles of the instant invention., 92912=Subsequent to the generation of the syndrome bits, the syndrome is decoded to detect any correctable memory data failures (e.g. one or more bit failures occurring in a single symbol); detect uncorrectable memory data failures (e.g. multiple symbol failures); and, in the case of embodiments having the address fault detection feature of the instant invention, identify uncorrectable errors resulting from address faults. The syndrome in embodiments having the address fault detection feature is decoded in a manner similar to embodiments lacking the address fault detection feature (as previously described with reference to FIGS. 8 and 11). Therefore, only the differences between the two will be discussed. In this regard, the columns and sub-columns of the syndrome decode table of FIG. 11 corresponding to the unused data bits (bits 128 and 129 in this example) are generated in the manner described previously, except with the extra parity bits (i.e. the extra storage parity bits) substituted in place of the unused data bits. Hence, because each extra parity bit is associated with an address, a discrepancy will exist between the extra parity bits generated during storage (i.e. extra storage parity bits) and between the extra parity bits generated during retrieval (i.e. extra retrieval parity bits) when an address fault occurs. As a result, decoding a syndrome generated with these extra storage and retrieval parity bits will reveal an error in either or both of the unused/extra parity bits (i.e. bits 128 and 129). For example, referring to FIG. 19, in this example, a syndrome of 101110101100 indicates an address fault in bit 128. Similarly, syndromes of 011001011000 and 110111110100 indicate errors in bit 129 and bits 128 and 129, respectively.}",
    "textBeforeTable": "Patent Citations Although preferred embodiments have been depicted and described in detail herein, it will be apparent to those skilled in the relevant art that various modifications, additions, substitutions and the like can be made without departing from the spirit of the invention and these are therefore considered to be within the scope of the invention as defined in the following claims. The flow diagrams depicted herein are merely exemplary. There may be many variations to these diagrams or the steps (or operations) described therein without departing from the spirit of the invention. For instance, the steps may be performed in a differing order, or steps may be added, deleted or modified. All of these variations are considered a part of the claimed invention. Additionally, at least one program storage device readable by a machine, tangibly embodying at least one program of instructions executable by the machine to perform the capabilities of the present invention can be provided. The present invention can be included in an article of manufacture (e.g., one or more computer program products) having, for instance, computer usable media. The media has embodied therein, for instance, computer readable program code means for providing and facilitating the capabilities of the present invention. The article of manufacture can be included as a part of a computer system or sold separately. Furthermore, it should be noted that the specific OR or XOR operations described in the embodiments above",
    "textAfterTable": "May 12, 1998 Gorca Memory Systems Error detection and correction system for use with address translation memory controller US5774481 Mar 31, 1995 Jun 30, 1998 International Business Machines Corporation Reduced gate error detection and correction circuit US5841795 Feb 12, 1996 Nov 24, 1998 Compaq Computer Corporation Error correction codes US5978953 * Dec 19, 1996 Nov 2, 1999 Compaq Computer Corporation error detection and correction * Cited by examiner Non-Patent Citations Reference 1 Chen, C.L., and Hsiao, M.Y., Error-Correcting Codes for Semiconductor Memory Applications: A State-of-the-Art Review, 28 IBM Journal of Research and Development, 124 (Mar., 1984). Referenced by Citing Patent Filing date Publication date Applicant Title US6751769 * Jan 23, 2003 Jun 15, 2004 International Business Machines Corporation (146,130) error correction",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}