{
    "relation": [
        [
            "Architecture",
            "x86",
            "x86",
            "x86",
            "x86",
            "x86",
            "x86",
            "PowerPC",
            "PowerPC",
            "PowerPC",
            "PowerPC64",
            "Sparc",
            "Sparc",
            "x86_64",
            "x86_64",
            "Mips64",
            "IA-64",
            "Alpha",
            "Alpha",
            "HPPA",
            "S/390",
            "m68k"
        ],
        [
            "OS",
            "Windows",
            "Linux",
            "FreeBSD",
            "OpenBSD",
            "NetBSD",
            "MacOS X",
            "AIX",
            "Linux",
            "MacOS X",
            "Linux",
            "Solaris",
            "Linux",
            "Linux",
            "OpenBSD",
            "Irix",
            "Linux",
            "Dec OSF",
            "Linux",
            "Linux",
            "Linux",
            "Linux"
        ],
        [
            "Registerised",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "No",
            "Yes",
            "No",
            "No",
            "No",
            "No",
            "No"
        ],
        [
            "GHCi",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "",
            "Yes",
            "Yes",
            "",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "No",
            "Yes",
            "No",
            "No",
            "No",
            "No",
            "No"
        ],
        [
            "NCG",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "No",
            "No(*1)",
            "No(*1)",
            "Yes",
            "Yes",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No"
        ],
        [
            "f.i. wrapper",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "Yes",
            "No",
            "Yes",
            "Yes",
            "Yes",
            "No",
            "No",
            "No"
        ],
        [
            "Dynamic libraries",
            "No(*2)",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "Yes",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No",
            "No"
        ]
    ],
    "pageTitle": "Platforms \u2013 GHC",
    "title": "",
    "url": "https://ghc.haskell.org/trac/ghc/wiki/Platforms?version=1",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 1,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988922.24/warc/CC-MAIN-20150728002308-00168-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 891149646,
    "recordOffset": 891141444,
    "tableOrientation": "VERTICAL",
    "textBeforeTable": "Support for generating dynamically-linked sharable libraries from Haskell code. Dynamic libraries Support for foreign import \"wrapper\" (ghc/rts/Adjustor.c). f.i. wrapper Native code generator: GHC can generate assemply code directly for this platform, bypassing gcc. NCG The interactive environment, including dynamic linking of object code and dynamic generation of FFI calls. GHCi A catch-all term for a number of optimisations, which collectively require the mangler (a Perl script that post-processes the assembly output from gcc). Unregisterised builds require only a working C compiler and are hence far more portable. The registerised optimisations include: direct tail calls (as opposed to using the \"mini-interpreter\"), info-tables adjacent to entry code, and virtual machine registers mapped to real machine registers. Registerised The following table describes to what extent GHC currently supports various platforms. Definitions: Platforms -- Version 1 (modified by simonmar, 9 years ago) (diff) Wiki Notes Recent Changes Title Index Wiki \u00a0 New Feature Req New Task New Bug Create Ticket \u00a0 Patches for review By Architecture",
    "textAfterTable": "*1 Sparc NCG bitrotted, but still in the tree *2 Win32 DLL support bitrotted Download in other formats: Plain Text Powered by Trac 1.0.7 By Edgewall Software. Visit the Trac open source project at http://trac.edgewall.org/",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}