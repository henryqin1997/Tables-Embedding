{
    "relation": [
        [
            "Ticket",
            "#29",
            "#91",
            "#155",
            "#219",
            "#20",
            "#98",
            "#99",
            "#100",
            "#101",
            "#106",
            "#110",
            "#114",
            "#119",
            "#126",
            "#131",
            "#139",
            "#140",
            "#141",
            "#142",
            "#143",
            "#148",
            "#149",
            "#153",
            "#154",
            "#158",
            "#159",
            "#161",
            "#162",
            "#178",
            "#180",
            "#185",
            "#190",
            "#191",
            "#192",
            "#193",
            "#197",
            "#199",
            "#201",
            "#202",
            "#203",
            "#204",
            "#205",
            "#207",
            "#208",
            "#209",
            "#210",
            "#211",
            "#216",
            "#220",
            "#221",
            "#231",
            "#232",
            "#234",
            "#235",
            "#238",
            "#239",
            "#240",
            "#243",
            "#244",
            "#245",
            "#246",
            "#247",
            "#249",
            "#252",
            "#254",
            "#258",
            "#264",
            "#273",
            "#278",
            "#285",
            "#3",
            "#4",
            "#5",
            "#6",
            "#8",
            "#9",
            "#11",
            "#12",
            "#14",
            "#15",
            "#18",
            "#21",
            "#22",
            "#23",
            "#24",
            "#25",
            "#26",
            "#27",
            "#30",
            "#31",
            "#36",
            "#37",
            "#39",
            "#40",
            "#41",
            "#43",
            "#46",
            "#48",
            "#49",
            "#50"
        ],
        [
            "Summary",
            "Keeping mapping keys ordered",
            "emit no anchors and aliases",
            "Cannot install PyYAML on WIndows 7 64 bit",
            "A tab inside a scalar is not accepted",
            "Better Support for Numeric, and NumPy",
            "(minor) improve code readability",
            "remove unused variable",
            "remove unused variable in scaner.scan_plain_spaces()",
            "YAMLObject interacts poorly with __slots__",
            "remove unused variables",
            "remove unused \"if\" statements",
            "Comments in the emitter",
            "Implicit resolver is not respected (the order is important)",
            "how to do INI-file-like substitution in pyYAML",
            "remove unused 'line' variable from emitter",
            "please update for yaml-1.2 support",
            "Plain equal sign (=) as node content results in an error",
            "easy_install failure on 64 bit ubuntu",
            "decimal type support in pyYAML",
            "implicit_resolver does not work with literal block scalars, here is the test",
            "relative imports required for inter-package imports",
            "Throws wrong ValueError exception on bad time stamps",
            "remove reduntant code in Reader",
            "libyaml parser does not recognise custom tags",
            "Require ': ' to separate keys from values in the flow context",
            "Yaml failed to restore loops in objects when __setstate__ is defined",
            "Recipie for using collections.OrderedDict as the primary pyyaml mapping type",
            "Error encountered during PyYAML install after Python 26 successfully found in registry",
            "Problem with parsing ':",
            "\"on\" or \"off\" as node name becomes \"True\" or \"False\"",
            "cyaml doesn't work on Mac OS X.6.6 with Python 2.6 or 3.2",
            "PyYAML always uses pickle protocol 2 although Python 2.6 only supports 0 and 1",
            "CSafeLoader and CSafeDumper are missing a dispose method in 3.10 and trunk",
            "ignore_aliases breaks with numy arrays",
            "PyYAML doesn't use __float__, etc.",
            "Non-BMP unicode characters are dumped using surrogate code units if python was not configured with UCS4",
            "\"\\U\"-style escape sequences cannot be loaded if python was not compiled with UCS4",
            "PyYAML cannot load set with an object of a class with custom __hash__",
            "cannot roundtrip offset-aware datetime instances",
            "reading yaml from socket may block in determine_encoding()",
            "In pure-python implementation yaml.load cannot read files generated by yaml.dump/safe_dump when allow_unicode=True",
            "Anchor names and aliases can only contain numbers and ASCII letters, but 1.2 allows more",
            "improve unable to represent object error message",
            "Yaml doesn't parse ISO8601 datetimes if they do not include seconds.",
            "YAMLObject to work with any loader",
            "Impossible to copy the properties of one branch to another",
            "PyYAML in Python 3.2 Stackless 3.1b3 060516",
            "Representer error",
            "yaml.dump indent parameter not affecting scalars in sequences",
            "add_implicit_resolver on a subclass may affect super_class resolvers",
            "problems with windows installer",
            "Constructor.set_python_instance_state defect with object without __setstate__ function",
            "yaml module does not have dumps/loads functions",
            "setup.py need better jython detection",
            "objects which have type checks in __eq__ or __cmp__ break serialization",
            "Using yaml.dump() after yaml.load() creates different document for block and folded literals",
            "Block and / or folded literal dumps fail on trailing space",
            "loads_all produces an error when yaml loads classes serialization in file",
            "kwargs in dumper represent methods?",
            "support for Abstract Base Classes",
            "scientific notation resolver bug",
            "PyYaml uses int instead of size_t in ext",
            "load() interprets \"1e-10\" as string",
            "Sub-classing yaml.YAMLObject bypasses __init__",
            "Errors with Numpy Dtypes",
            "Any interest in tox and/or Travis CI for testing?",
            "yaml.load() fails to load a dict just saved by yaml.dump()",
            "PyYAML doesn't dump python dictionary correctly if it only contains strings, numbers and/or booleans",
            "Cannot load __hash__able objects in mapping keys",
            "List items printed as dict",
            "allow_unicode missing in emitter?",
            "Inf and NaN handling needs re-vamp",
            "PYYAML3000 does not load recursive structures.",
            "pyyaml 3000 is not in the Python cheese shop",
            "Comparison operations fail with floats (NaN and +/- Inf) in PyYAML3000 on WinXP (SP2)",
            "Forcing block style",
            "Unicode support",
            "PyYAML is slow",
            "Inf and NaN handling needs re-vamp",
            "pyyaml discards '-' sign on negative floats",
            "[bug] nested dictionnary load works dump doesn't",
            "yaml emitter bug",
            "Aliases break if there are temporary objects",
            "Dictionary output not sorted.",
            "dictionaries without at least one list element as values seem not to work",
            "Constructor and representer for datetimes with timezone do not match",
            "yaml.load(\"a: n\") raises exception (problem with bool)",
            "yaml.dump seems to be broken",
            "Timestamp support has floating-point roundoff",
            "PyYAML for Python 2.5",
            "PyYaml and WebWare Don't Play Nicely...",
            "Cross referenced aliases unsupported ?",
            "yaml.load(\"\") raises an exception",
            "incomplete dict constructor",
            "Patch: Use types module instead of hand crafted entities and type().",
            "path resolver has bug",
            "syck.dump is not here !",
            "yaml.load does not call __init__ of objects",
            "yaml confused by python float repr()",
            "ScannerError TypeError"
        ],
        [
            "Owner",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi",
            "xi"
        ],
        [
            "Type",
            "enhancement",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "enhancement",
            "defect",
            "enhancement",
            "enhancement",
            "enhancement",
            "defect",
            "task",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "enhancement",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "enhancement",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect",
            "defect",
            "defect",
            "enhancement",
            "defect"
        ],
        [
            "Status",
            "reopened",
            "reopened",
            "reopened",
            "reopened",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed",
            "closed"
        ],
        [
            "Priority",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "low",
            "low",
            "low",
            "normal",
            "low",
            "low",
            "low",
            "normal",
            "normal",
            "low",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "low",
            "normal",
            "low",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "high",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "low",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "high",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "high",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "high",
            "normal",
            "normal",
            "normal",
            "normal",
            "high",
            "normal",
            "normal",
            "normal",
            "normal"
        ],
        [
            "Severity",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "trivial",
            "trivial",
            "trivial",
            "normal",
            "minor",
            "minor",
            "normal",
            "normal",
            "normal",
            "trivial",
            "normal",
            "normal",
            "major",
            "normal",
            "normal",
            "normal",
            "normal",
            "minor",
            "normal",
            "minor",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "major",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "minor",
            "major",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "major",
            "normal",
            "blocker",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "major",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "normal",
            "blocker",
            "normal",
            "normal",
            "major",
            "normal",
            "major",
            "normal",
            "normal",
            "normal",
            "normal"
        ]
    ],
    "pageTitle": "Custom Query \u2013 PyYAML",
    "title": "",
    "url": "http://pyyaml.org/query?component=pyyaml&desc=1&order=status",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 2,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988317.67/warc/CC-MAIN-20150728002308-00096-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 195810839,
    "recordOffset": 195794390,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "\u2192 2 1 Results (1 - 100 of 149) Max items per page Show under each result: Description Group results by Component Owner Priority Reporter Resolution Severity Status Type descending Cc Keywords Reporter Modified Created Resolution Severity Priority Status Type Owner Component Summary Columns",
    "textAfterTable": "1 2 \u2192 Note: See TracQuery for help on using queries. Download in other formats: RSS Feed Comma-delimited Text Tab-delimited Text Powered by Trac 0.12.2 By Edgewall Software. Visit the Trac open source project at http://trac.edgewall.org/",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}