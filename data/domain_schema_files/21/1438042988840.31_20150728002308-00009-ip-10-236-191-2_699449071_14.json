{
    "relation": [
        [
            "Command",
            "ioRsltSuccess",
            "ioRsltInProgress",
            "ioRsltReqPIN",
            "ioRsltNoMoreHandles",
            "ioRsltNoSpace",
            "ioRsltNoMoreFiles",
            "ioRsltEofExpected",
            "ioRsltEndOfFile",
            "ioRsltNotLinearFile",
            "ioRsltFileNotFound",
            "ioRsltHandleAlreadyClosed",
            "ioRsltNoLinearSpace",
            "ioRsltUndefinedError",
            "ioRsltFileIsBusy",
            "ioRsltNoWriteBuffers",
            "ioRsltAppendNotPossible",
            "ioRsltFileIsFull",
            "ioRsltFileExists",
            "ioRsltModuleNotFound",
            "ioRsltOutOfBoundery",
            "ioRsltIllegalFilename",
            "ioRsltIllegalHandle",
            "ioRsltBTBusy",
            "ioRsltBTConnectFail",
            "ioRsltBTTimeout",
            "ioRsltFileTxTimeout",
            "ioRsltFileTxDSTExists",
            "ioRsltFileTxSRCMissing",
            "ioRsltFileTxStreamError",
            "ioRsltFileTxCloseError",
            "ioRsltCommChannelBusError",
            "ioRsltCommBufferFull",
            "ioRsltCommChannelBad",
            "ioRsltCommChannelNotReady",
            "ERR_COMM_BUFFER_FULL",
            "ERR_COMM_CHAN_INVALID",
            "ERR_INVALID_PORT",
            "ERR_INVALID_FIELD",
            "ERR_INVALID_QUEUE",
            "ERR_INVALID_SIZE",
            "ioRsltCommPending",
            "ioRsltEmptyMailbox",
            "ioRsltBadArgs"
        ],
        [
            "Comments",
            "= (0x00FF & (SUCCESS >> 8))",
            "= (0x00FF & (0x01))",
            "= (0x00FF & (0x02))",
            "= (0x00FF & (NOMOREHANDLES >> 8))",
            "= (0x00FF & (NOSPACE >> 8))",
            "= (0x00FF & (NOMOREFILES >> 8))",
            "= (0x00FF & (EOFEXSPECTED >> 8))",
            "= (0x00FF & (ENDOFFILE >> 8))",
            "= (0x00FF & (NOTLINEARFILE >> 8))",
            "= (0x00FF & (FILENOTFOUND >> 8))",
            "= (0x00FF & (HANDLEALREADYCLOSED >> 8))",
            "= (0x00FF & (NOLINEARSPACE >> 8))",
            "= (0x00FF & (UNDEFINEDERROR >> 8))",
            "= (0x00FF & (FILEISBUSY >> 8))",
            "= (0x00FF & (NOWRITEBUFFERS >> 8))",
            "= (0x00FF & (APPENDNOTPOSSIBLE >> 8))",
            "= (0x00FF & (FILEISFULL >> 8))",
            "= (0x00FF & (FILEEXISTS >> 8))",
            "= (0x00FF & (MODULENOTFOUND >> 8))",
            "= (0x00FF & (OUTOFBOUNDERY >> 8))",
            "= (0x00FF & (ILLEGALFILENAME >> 8))",
            "= (0x00FF & (ILLEGALHANDLE >> 8))",
            "= (0x00FF & (BTBUSY >> 8))",
            "= (0x00FF & (BTCONNECTFAIL >> 8))",
            "= (0x00FF & (BTTIMEOUT >> 8))",
            "= (0x00FF & (FILETX_TIMEOUT >> 8))",
            "= (0x00FF & (FILETX_DSTEXISTS >> 8))",
            "= (0x00FF & (FILETX_SRCMISSING >> 8))",
            "= (0x00FF & (FILETX_STREAMERROR >> 8))",
            "= (0x00FF & (FILETX_CLOSEERROR >> 8))",
            "= (0x00FF & -35). (0xDD Something went wrong on the communications bus)",
            "= (0x00FF & -34). (0xDE No room in comm buffer)",
            "= (0x00FF & -33). (0xDF Specified channel/connection is not valid)",
            "= (0x00FF & -32). (0xE0 Specified channel/connection not configured or busy)",
            "= ((short) ioRsltCommBufferFull)",
            "= ((short) ioRsltCommChannelBad)",
            "= (0x00FF & -16)",
            "= (0x00FF & -17)",
            "= (0x00FF & -18)",
            "= (0x00FF & -19)",
            "= (0x00FF & STAT_COMM_PENDING)",
            "= (0x00FF & STAT_MSG_EMPTY_MAILBOX)",
            "= (0x00FF & ERR_ARG)"
        ],
        [
            "[arduino 328]",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        [
            "[arduino Mega]",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        [
            "[cortex]",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        [
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]",
            "[nxt]"
        ],
        [
            "[pic]",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        [
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]",
            "[tetrix]"
        ]
    ],
    "pageTitle": "Difference between revisions of \"Data Types\" - ROBOTC API Guide",
    "title": "",
    "url": "http://www.robotc.net/w/index.php?title=Data_Types&diff=3124&oldid=3123",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 14,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988840.31/warc/CC-MAIN-20150728002308-00009-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 699465465,
    "recordOffset": 699449071,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "Standard C data types: 2.17 TVexReceiverState 2.16 TVexJoysticks 2.15 TUARTs 2.14 TTimers 2.13 TSynchedMotors 2.12 TSounds 2.11 tSensors 2.10 TPCJoystick 2.9 TNxtRunState 2.8 TMotorRegulation 2.7 TMailboxIDs 2.6 TI2CStatus 2.5 TFileIOResult 2.4 TFileHandle 2.3 TButtons 2.2 TBTCommands 2.1 TBaudRate 2 ROBOTC data types: 1 Standard C data types: Contents The ROBOTC Compiler supports several different data types. Some are standard C return types and others are custom created for ROBOTC. Data Types will be marked with the following tags if applicable: [arduino 328], [arduino Mega], [cortex], [nxt], [pic], [tetrix]. General Programming \u2192 Data",
    "textAfterTable": "OPENSTREAM = 9 [nxt] [tetrix] SENDDATA = 10 (For Internal use only!) [nxt] [tetrix] FACTORYRESET = 11 [nxt]",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}