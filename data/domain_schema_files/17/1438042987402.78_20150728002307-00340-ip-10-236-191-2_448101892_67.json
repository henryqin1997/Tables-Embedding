{
    "relation": [
        [
            "srid",
            "2000",
            "2001",
            "2002",
            "2003",
            "2004"
        ],
        [
            "auth_name",
            "epgs",
            "epgs",
            "epgs",
            "epgs",
            "epgs"
        ],
        [
            "auth_srid",
            "2000",
            "2001",
            "2002",
            "2003",
            "2004"
        ],
        [
            "ref_sys_name",
            "Anguilla 1957 / British West Indies Grid",
            "Antigua 1943 / British West Indies Grid",
            "Dominica 1945 / British West Indies Grid",
            "Grenada 1953 / British West Indies Grid",
            "Montserrat 1958 / British West Indies Grid"
        ],
        [
            "proj4text",
            "+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +units=m +no_defs",
            "+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +units=m +no_defs",
            "+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=725,685,536,0,0,0,0 +units=m +no_defs",
            "+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=72,213.7,93,0,0,0,0 +units=m +no_defs",
            "+proj=tmerc +lat_0=0 +lon_0=-62 +k=0.9995000000000001 +x_0=400000 +y_0=0 +ellps=clrk80 +towgs84=174,359,365,0,0,0,0 +units=m +no_defs"
        ]
    ],
    "pageTitle": "SpatiaLite v.2.2 tutorial",
    "title": "",
    "url": "http://www.gaia-gis.it/spatialite-2.2/spatialite-2.2_tutorial.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 67,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987402.78/warc/CC-MAIN-20150728002307-00340-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 448146095,
    "recordOffset": 448101892,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Fri, 10 Oct 2008 04:31:50 GMT",
    "textBeforeTable": "spatialite> SELECT * FROM towns LIMIT 5; test-2.2.sqlite database: now that the SQLite session is started, we can execute our first SQL query on the internal commands set some option or mode for SQLite, and have nothing to do with real data processing. internal command, and not as an SQL expression. i.e. headers is interpreted by SQLite as an .mode or dot [.], as All command starting with a spatialite> .help nothing of very interesting in this; you are simply selecting some trivial operative options: if you are curious to discover what exactly they means, you can discover it by yourself just typing: spatialite> .nullvalue NULL spatialite> .headers on spatialite> .mode column Now type the following commands: test-2.2.sqlite database; congratulations. OK, you have just started you first SQLite working session, that is currently connected to the SpatiaLite version ..: 2.2 Supported Extensions: \u00a0\u00a0\u00a0\u00a0- 'VirtualShape' [direct Shapefile access] \u00a0\u00a0\u00a0\u00a0- 'VirtualText [direct CSV/TXT access] \u00a0\u00a0\u00a0\u00a0- 'RTree' [Spatial Index - R*Tree] \u00a0\u00a0\u00a0\u00a0- 'MbrCache' [Spatial Index - MBR cache] \u00a0\u00a0\u00a0\u00a0- 'SpatiaLite' [Spatial SQL - OGC] PROJ.4 version ......: Rel. 4.6.1, 21 August 2008 GEOS version ........: 3.0.0-CAPI-1.4.1 SQLite version ......: 3.6.2 Enter \".help\" for instructions spatialite> you should receive this prompt: sqlite3, and in exactly the same way. spatialite.exe includes a complete support for SQLite;",
    "textAfterTable": "0 5 Magliano Alfieri 1674 1 0 0 spatialite> A few points to understand: the SELECT statement requests SQLite to perform a query fetching all columns [*] FROM the database table of name towns retrieving only the first five rows [LIMIT 5] note the any SQL statement must end with a semicolon [;] now try this second SQL query: spatialite> select name AS Town, peoples as Population from towns ORDER BY name LIMIT 5; Town Population Abano Terme 18206 Abbadia Cerreto 276 Abbadia Lariana 3151 Abbadia San Salvatore 6832 Abbasanta 2815 spatialite> in SQL constructs using lower- or upper-case has identical effects; SELECT is the same of select, FROM and from are equivalents. you can freely choose which one columns has to be fetched, determine at your will their order, and even rename then if you want to do so by using the AS clause. you can order the fetched rows by using the ORDER BY clause. a more complex SQL query: spatialite> select name, peoples from towns WHERE peoples > 350000 order by peoples DESC; TownName Population Roma 2546804 Milano 1256211 Napoli 1004500",
    "hasKeyColumn": true,
    "keyColumnIndex": 3,
    "headerRowIndex": 0
}