{
    "relation": [
        [
            "Patente citada",
            "US4635189 *",
            "US4769772 *",
            "US4774661 *",
            "US4972367 *",
            "US5058000 *",
            "US5185887 *",
            "US5193110 *",
            "US5278978 *",
            "US5329626 *",
            "US5345587 *",
            "US5374234 *",
            "US5377309 *",
            "US5377350 *",
            "US5379424 *",
            "US5388258 *",
            "US5402474 *",
            "US5448634 *",
            "US5469503 *",
            "EP0490465A2 *"
        ],
        [
            "Fecha de presentaci\ufffdn",
            "1 Mar 1984",
            "28 Feb 1985",
            "19 Nov 1985",
            "23 Oct 1987",
            "15 Jun 1989",
            "2 Jul 1990",
            "9 Oct 1990",
            "26 Mar 1990",
            "23 Oct 1990",
            "7 Sep 1989",
            "7 Feb 1994",
            "27 Nov 1991",
            "30 Abr 1993",
            "12 May 1993",
            "12 Ago 1994",
            "11 Abr 1994",
            "8 Mar 1991",
            "14 Oct 1993",
            "4 Jul 1991"
        ],
        [
            "Fecha de publicaci\ufffdn",
            "6 Ene 1987",
            "6 Sep 1988",
            "27 Sep 1988",
            "20 Nov 1990",
            "15 Oct 1991",
            "9 Feb 1993",
            "9 Mar 1993",
            "11 Ene 1994",
            "12 Jul 1994",
            "6 Sep 1994",
            "20 Dic 1994",
            "27 Dic 1994",
            "27 Dic 1994",
            "3 Ene 1995",
            "7 Feb 1995",
            "28 Mar 1995",
            "5 Sep 1995",
            "21 Nov 1995",
            "17 Jun 1992"
        ],
        [
            "Solicitante",
            "Measurex Corporation",
            "Honeywell Bull, Inc.",
            "American Telephone And Telegraph Company, At&T Information Systems",
            "Allen-Bradley Company, Inc.",
            "Prime Computer, Inc.",
            "Hitachi, Ltd.",
            "Boston Technology, Incorporated",
            "International Business Machines Corporation",
            "Digital Equipment Corporation",
            "Digital Equipment Corporation",
            "Alfa-Laval Separation A/S",
            "Fujitsu Limited",
            "International Business Machines Corporation",
            "Kabushiki Kaisha Toshiba",
            "Telefonaktiebolaget Lm Ericsson",
            "International Business Machines Corporation",
            "Hitachi, Ltd.",
            "Aspect Telecommunications Corporation",
            "Digital Equipment Corporation"
        ],
        [
            "T\ufffdtulo",
            "Real-time distributed data-base management system",
            "Automated query optimization method using both global and parallel local optimizations for materialization access planning for distributed databases",
            "Database management system with active data dictionary",
            "System for generating unsolicited messages on high-tier communication link in response to changed states at station-level computers",
            "System for accessing remote heterogeneous database including formatting retrieved data into applications program format",
            "Database generation management method and system",
            "Integrated services platform for telephone communication system",
            "Method and system for describing and exchanging data between heterogeneous database systems with data converted by the receiving database system",
            "System for distributed computation processing includes dynamic assignment of predicates to define interdependencies",
            "Extensible entity management system including a dispatching kernel and modules which independently interpret and execute commands",
            "Decanter centrifuge with energy dissipating inlet",
            "Software work tool",
            "System for cooperative communication between local object managers to provide verification for the performance of remote calls by object messages",
            "Distributed database management system for retrieving data files from databases selected based upon retrieval time",
            "Software structure for telecommunication switching systems",
            "System, data processing method and program to provide a programmable interface between a workstation and an archive server to automatically store telephone transaction information",
            "Method and apparatus for data transfer and circuit setting for communication network system",
            "Method for resynchronizing secondary database and primary database with preservation of functionality of an automatic call distribution system",
            "Methods and apparatus for accessing non-relational data files using relational queries"
        ]
    ],
    "pageTitle": "Patente US5721909 - Distributed database architecture and distributed database management system ... - Google Patentes",
    "title": "",
    "url": "http://www.google.es/patents/US5721909?dq=flatulence",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 5,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981525.10/warc/CC-MAIN-20150728002301-00162-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 478783835,
    "recordOffset": 478728932,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{122940=The application is now in a position to commit (routine 940), whereupon decision block 1005 of FIG. 10 is entered. If the decision is not to commit, then the transaction is canceled by entering routine 1105 of FIG. 11. However, if the decision is commit, then routine 1010 is invoked as follows:, 148171=The Translation Tables 1710 contain mappings for the following: object names; attribute names; key names; and symbolic names., 123482=REFUSE-- TA (lead 1018): this indicates that the transaction is not known, a lack of resources, END-- TA was not performed, or END-- TA was performed with a REFUSE-- TA indication, so an abort is initiated (routine 1025) and carried out by routine 1105 of FIG. 11; or, 125209=First, with reference to FIG. 12, the coordinator CTC is initiated upon routine 1205 receiving END-- TA on lead 931. Then, a PREPARE-- TA indication (lead 1206) is sent to the participant CTC, and an await response routine is entered (routine 1210). The participant CTC responds with either a READY-- TA (lead 1211) or a REFUSE-- TA (lead 1212) or there is a timeout. In the latter two cases, abort routine 1310 of FIG. 13 is invoked. Presuming a READY-- TA is returned for all participant(s), routine 1215 is entered to send a READY-- TA (lead 1216) to the application, whereupon the coordinator CTC awaits a Do request (routine 1220). When a DO-- TA (lead 1221) is received, a REQUEST-- TA (lead 1226) is sent to the participant, whereupon an awaiting request routine 1305 of FIG. 13 is entered. Again, either a READY-- TA (lead 1306) or a REFUSE-- TA (lead 1307) or timeout response is received. Again, in the latter two cases, abort routine 1310 is invoked. Upon a READY-- TA, Should Commit routine 1315 is entered to emit COMMIT-- TA (lead 1316) to the participant(s). The participant(s) respond to Will Commit routine 1325 with either a READY-- TA (lead 1326) or a REFUSE-- TA (lead 1327). The latter invokes abort routine 1310. The former invokes Update routine 1330 and, via READY-- TA lead 1331, wait routine 1335 to await RELEASE-- TA (lead 1336) from the application. The release is received in routine 1340 which, in turn, sends a RELEASE-- TA (lead 1341) to the participant(s). Normal termination is completed by routine 1345. Abnormal termination is completed by abort routine 1320 after a ROLLBACK-- TA (lead 1311) is sent to the participant(s)., 152478=With reference to FIG. 18, the application request flows into sequencer 305 of DDBMS 300 via link 1821. This initiates a GET-- LOCATION to DDI 304 on link 1801. The transaction processing of CTC 513 is then invoked by sequencer 305 via link 1802. Next, link 1803 between sequencer 305 and GDGW module 522 initiates an request to identify table data. Link 1807 causes a check of the data tables in DDI 304. Link 1810 invokes DA 523 to cause link 1808 to access address information and allocate space in memory 1817. Link 1804 then causes the update of data values, including a check of the correct application identifier over link 1807, and the updating of copy 1813 via link 1808. Link 1805 ends the database operation. Link 1801 is again used to close the transaction and commit, with link 1821 serving to provide the appropriate response., 150109=The Definition Tables, composed of attribute definition table 1722, attribute key definition table 1723, access right table 1724, service routine table 1725, and trigger/exit table 1726, contain the total description of the object classes in the database logical model. These tables specify each object class individually, as well as the hierarchical relationships between object classes, also known as name-binding, or containment., 42360=More detailed information relating to DDBMSs in a commercial computing network environment may be found in the literature, such as the text \"Object Data Management\", written by R. G. G. Cattell and published by Addison-Wesley, 1991. Recent journal articles that provide expositions representative of the general approach to designing and implementing distributed database technology include the following: (a) \"An Introduction to Distributed Database Systems,\" by M. A. Newton, dated Dec. 11, 1992, IEE Colloquium on `Distributed Databases` (Digest No. 229); and (b) \"Distributed Database Systems: Where are We Now?\", by M. T. Ozsu, dated August, 1991, Computer, Vol. 24, Issue 8. The latter article is particularly informative in tracing the historical development of distributed database technology, including DDBMSs. However, the available literature merely addresses DDBMS issues as they relate to specific, individual computer operating systems/platforms. The following exposition places in perspective the shortcomings and limitations of the DDBMS approaches heretofore presented in the literature when applied to the public switching environment., 39940=This is a continuation of Ser. No. 08/678,451 filed Jul. 3, 1996 now abandoned which is a continuation of Ser. No. 08/221,320 filed Mar. 30, 1994, now abandoned., 127087=Referring now the FIG. 14, which is a flow diagram for each participating CTC interacting with the coordinator CTC, the starting point is a BEGIN-- TA (lead 1404) into database update routine 1405. Upon a PREPARE-- TA (lead 1406) from the coordinator, End Update sequence routine 1410 is entered. A READY-- TA (lead 1411) issues from routine 1410 to invoke Willing-to-Continue routine 1415. A normal exit from routine 1415 occurs upon reception of REQUEST-- TA (lead 1416), causing a transition to request receive routine 1420; READY-- TA (lead 1421) is emitted by routine 1420. The next normal stage is processing by Willing-to-Commit routine 1430, whereupon COMMIT-- TA (lead 1430) issues to Commit Approved routine 1440. As a result of routine 1440, COMM/T-- TA (lead 1441) is emitted to Committed routine 1450. When a RELEASE-- TA (lead 1451) is received, the transaction is completed by routine 1455. A RELEASE-- TA on lead 1451 indicates to CTC 512 that a previous transaction is to be released; i.e., the history of the specified transaction is no longer visible to CTC. After a RELEASE-- TA on lead 1451, a CANCEL-- TA (lead 1106 of FIG. 11) can no longer be performed. Abort routines 1425 and 1445 terminate the transaction whenever ROLLBACK-- TA is received from routines 1415 and 1430, or REFUSE-- TA from routines 1420 and 1440. Recover routine 1435 attempts to recover from any timeout (leads 1417, 1431, and 1453), 135740=The interpretation is illustrated in FIG. 15. Assume three object classes 1501-1503 (A, B, and C) are contained in the database. Also assume three object instances 1511-1513 are defined in A (1, 2, and 3, respectively). Associated with data in A1 is data in B1, C1a, and C1b. For example, A could represent subscriber access data. B could represent subscriber directory number data, and C could represent directory number, call type data. The instances 1 through 3 could represent 3 subscribers., 147938=As shown in FIG. 17, the on-line DDI comprises several tables in three categories: (1) Translation Tables 1710; (2) Definition Tables 1720; and (3) Location Tables 1730., 145639=The diagram of FIG. 16 shows the relation among the key table, the indirection table, and the physical database. In particular, the table address provided on lead 1601 and the primary key (E.g., PKEY=xx) on lead 1602 allow for a search of B-tree 1611. It is presumed that the node located for the given input information is node 1612, that is, an object instance (OI) for PKEY=xx, and node 1612 provides an index into indirection table 1620 at location 1621. The associated pointer at location 1621. points to physical database 1630 and, for the particular pointer, to mandatory attributes 1631, optional attributes 1632, and transient data 1633., 124039=Presuming READY-- TA is received, the application completes the update via routing 1020, whereupon RELEASE-- TA (lead 1021) is issued to the coordinator CTC. After the coordinator CTC responds (routine 1030) with a READY-- TA (lead 1031), the transaction is wrapped-up (routine 1035)., 124819=REFUSE-- TA (lead 1112): lack of resources, unknown transaction identification, etc., whereupon recovery routine 1115 is executed., 153349=With reference to FIG. 19, the application request flows into sequencer 305 of DDBMS 300 via link 1902. This initiates a GET-- LOCATION over link 1903 between application 301 and DDI 304. Sequencer 105 is then invoked to identify the selected service via link 1907. A call service procedure is initiated in SDGW module 521 via link 1904 between sequencer 305 and SDGW module 521. Link 1905 is then used to read semi-permanent data and transient data as requested by GDGW module 521 accessing DA 523 and data 1901 via link 1906. Links 1908 and 1909 are used as above in FIG. 18 (links 1807 and 1808) to check application identifier and update the copy. Finally, the application response is returned over lead 1902., 123255=DO-- TA (lead 1011 of FIG. 10) This is a request to commit a transaction. Coordinator CTC 512, after executing routine 1015, responds with:}",
    "textBeforeTable": "Citas de patentes Accordingly, it is to be understood that the above-described embodiments are simply illustrative of the application of the principles in accordance with the present invention. Such embodiments which may new be readily devised by those in the art may embody the principles in spirit, and such embodiments are limited only by the scope of the following claims. With reference to FIG. 19, the application request flows into sequencer 305 of DDBMS 300 via link 1902. This initiates a GET-- LOCATION over link 1903 between application 301 and DDI 304. Sequencer 105 is then invoked to identify the selected service via link 1907. A call service procedure is initiated in SDGW module 521 via link 1904 between sequencer 305 and SDGW module 521. Link 1905 is then used to read semi-permanent data and transient data as requested by GDGW module 521 accessing DA 523 and data 1901 via link 1906. Links 1908 and 1909 are used as above in FIG. 18 (links 1807 and 1808) to check application identifier and update the copy. Finally, the application response is returned over lead 1902. With reference to FIG. 18, the application request flows into sequencer 305 of DDBMS 300 via link 1821. This initiates a GET-- LOCATION to DDI 304 on link 1801. The transaction processing of CTC 513 is then invoked by sequencer 305 via link 1802. Next, link 1803 between sequencer 305 and GDGW module 522",
    "textAfterTable": "* Citada por examinador Otras citas Referencia 1 \"A Taxonomy and Current Issues in Multidatabase Systems\", M.W. Bright et al., IEEE Computer, Mar. 1992, pp. 50-59. 2 \"An Interactive Graphics Editor With Integrated Data Dictionary for IDEFo Structured Analysis Diagrams\", Hartrum et al., IEEE, 1988, pp. 765-770. 3 \"An Interface for Rapid Prototyping and Evolutionary Support of Database-Intensive Applications\", Kevin Lynch et al., IEEE, Jun. 1989, pp. 344-348. 4 \"Application Program Interface Design Based on On-Line Processing Types\", Nakatani et al. IEEE, Apr. 1992, pp. 517-524. 5 \"Four References Architectures for Distributed Database Management Systems\", James A. Larson, Computer Standards and Interfaces vol. 9, No. 3, Jan. 1, 1989, pp. 209-221. 6 \"Introduction to a System for Distributed Databases (SDD-1)\", J.B. Rothnie, Jr. et al., ACM Transactions on Database Systems, vol. 5, No. 1, Mar. 1980, pp. 1-17. 7 \"Transaction Management in the R* Distributed Database Management System\", C. Mohan et al., ACM Transactions on Database",
    "hasKeyColumn": true,
    "keyColumnIndex": 3,
    "headerRowIndex": 0
}