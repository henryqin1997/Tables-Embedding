{
    "relation": [
        [
            "Ticket",
            "#13528",
            "#13666",
            "#13677",
            "#13757",
            "#13768",
            "#13771",
            "#13906",
            "#14094",
            "#14217",
            "#14287",
            "#14357",
            "#14368",
            "#14518",
            "#14645",
            "#14705",
            "#14887",
            "#14891",
            "#14904",
            "#15020",
            "#15049",
            "#15130",
            "#15279",
            "#15497",
            "#15559",
            "#15648",
            "#15678",
            "#15787",
            "#15804",
            "#15844",
            "#15940",
            "#16025",
            "#16043",
            "#16055",
            "#16135",
            "#16176",
            "#16211",
            "#16376",
            "#16487",
            "#16505",
            "#16508",
            "#16549",
            "#16603",
            "#16682",
            "#16732",
            "#16735",
            "#16745",
            "#16752",
            "#16893",
            "#16920",
            "#16955",
            "#16979",
            "#17002",
            "#17015",
            "#17043",
            "#17143",
            "#17232",
            "#17276",
            "#17337",
            "#17344",
            "#17345",
            "#17520",
            "#17564",
            "#17653",
            "#17688",
            "#17695",
            "#17761",
            "#17854",
            "#17917",
            "#17930",
            "#17990",
            "#18081",
            "#18100",
            "#18174",
            "#18201",
            "#18207",
            "#18283",
            "#18305",
            "#18332",
            "#18378",
            "#18480",
            "#18514",
            "#18543",
            "#18580",
            "#18631",
            "#18669",
            "#18726",
            "#18844",
            "#18931",
            "#19040",
            "#19149",
            "#19193",
            "#19263",
            "#19396",
            "#19434",
            "#19493",
            "#19513",
            "#19531",
            "#19544",
            "#19580",
            "#19750"
        ],
        [
            "Summary",
            "db_table truncation is applied based on the properties of the default database",
            "Updates with F objects on decimal fields raise MySQL warnings",
            "wrong backend with multidb and modelformset",
            "Signal inconsistency between auto_created and manually defined intermediate models for m2m fields",
            "Bug in Django ORM when filtering with 'in' lookup and None in values list (1.1.x and 1.2.x)",
            "ForeignKey and Many2Many validation fails between databases",
            "REPEATABLE READ (as used by default on MySQL) breaks atleast QuerySet.get_or_create().",
            "Cannot define CharField with unlimited length",
            "Fieldname cannot be the same as the Modelname when using model inheritance",
            "TEST_MIRROR is not respected in routers",
            "Prevent innapropriate order-based grouping on values+annotate queries",
            "Reverse relation attribute for OneToOneField fails when set to None",
            "Field.to_python not called on foreign key IDs",
            "Exclude query with multiple conditions for the same multi-value relation not correct",
            "Model Field Order not influenced by MRO of superclasses",
            "select_related() does not work with Proxy models and multi-table inheritance",
            "use_for_related_fields=False is not honored by reverse FK or M2M related managers",
            "TextField with unique (or in unique_together) constraint breaks for large inputs in Postgres",
            "Redundant joins generated when using reverse foreign key",
            "Using annotation before and after filter gives wrong results",
            "Model.validate_unique method doesn't take in account multi-db",
            "Inheritance of fields from a single abstract base class through multiple abstract classes causes errors.",
            "BooleanField should work for all PostgreSQL expressions",
            "Distinct queries will cause errors with some custom model fields",
            "[Feature request] NamedTupleQuerySet",
            "Different behaviour for DecimalField on MySQL and SQLite",
            "select_related with nested fields affects query result",
            "Query lookup types should be scoped to the last joined field's model",
            "Filtering by related objects causes unnecessary extra db hits when using model inheritance",
            "use strict mode with mysql",
            "distinct does not apply to aggregated querysets",
            "Specialization cache should be filled/shared with parent object cache (multitable inheritance)",
            "Filtering over funky generic relations breaks in postgres",
            "Model 'Child' is inherited from 'Parent', expecting to get only Child results with Parent.objects.filter(child__isnull=False), but does not work.",
            "Overwriting a property with field during model inheritance.",
            "using negated F()-expression in update query",
            "Support for database links",
            "F expression with timedelta does not work with __range query filter",
            "Consider a different interface for get_next_by_FOO and get_previous_by_FOO",
            "Provide real support for virtual fields",
            "In Django models, save/delete preconditions would help in handling optimistic concurrency control problems",
            "Unnecessary join when using a reverse foreign-key filter and reverse foreign-key aggregate call",
            "KeyboardInterrupt not handled properly in transaction aborting",
            "Unable to have abstract model with unique_together",
            "Queryset values should be aliasable",
            "Different times on fields with auto_now and auto_now_add",
            "Multi-db without a 'default' database",
            "negation of Q object returns the same thing",
            "Models with GenericRelation are unnecessarily validated for clashes in reverse manager accessor",
            "Querying on the reverse of a FK with the wrong class silently returns bad data",
            "adds Q objects for related fields.",
            "ManyToManyField through a model which extends some other model",
            "IntegrityError: ORA-01400: cannot insert NULL into (....\"AUTH_PERMISSION\".\"ID\") when running syncdb with Oracle",
            "Model subclass field named the same as one of the parent model subclasses clashes",
            "select_related makes base __init__ unsafe",
            "Multitable multi-inheritance: Deadly Diamond of Death",
            "Slow anti-join query against Postgres",
            "[nonrel] Support for non-integer AutoFields",
            "A away to tell ManyToManyField to use ordering on intermediate field",
            "Allow ordering override on ManyToManyField",
            "write queries on related managers use the db_for_read database",
            "django.db.models.Sum does not work on BooleanField",
            "using id = 0 on get_or_create",
            "No m2m_changed signal sent to when referenced object is deleted",
            "model grandchild joins to top instead of the middle first",
            "save_base() does not properly detect when MTI parent key is unset",
            "Problem with DecimalField and big vlues of max_digits, decimal_places, sqlite3 backend",
            "Pickling queryset with annotations on related fields with callable defaults fails",
            "Error in Queryset with operator | (union queryset) + slice",
            "Distinct + Random + Postgres = Bug",
            "Proxy model foreign keys not created properly by syncdb",
            "Deleting model instances with deferred fields don't trigger deletion signals",
            "Model inheritance pointers doesn't refer to parent to refer to grandparents",
            "smallint and tinyint fields + auto increment",
            "concrete inheritence, mysql defer bug",
            "FileField should not reuse FieldFiles",
            "force_update/force_insert not passed up the inheritance chain in .save()",
            "No generic way to get database backend version",
            "Q() combined with annotate() can produce bad SQL",
            "Inherited model fails to handle blank field properly",
            "Syncdb + Oracle + custom table name with quotes = Oracle 01741 error",
            "Non image file can be saved to ImageField",
            "Avoiding SQLite update+annotations \"only a single result allowed for a SELECT that is part of an expression\"",
            "A way to get handle to the generated query for terminal queryset methods",
            "QuerySet.bulk_create should batch if no AutoField",
            "Combination of F() expression with query seems to confuse sql compiler's table aliases",
            "Allow Oracle DatabaseWrapper to support session options extra kwargs as settings.DATABASE_OPTIONS",
            "Add predicate functionality to Q objects",
            "models.Manager on class-level of models.Model does not work",
            "Generic Relation not cascading with Multi table inheritance.",
            "Save only one field to database which refereced to FieldFile",
            "DatabaseError on using empty Page .object_list in __in clause in a query",
            "Allow customized ModelState classes",
            "Some QuerySet methods not aware of fields added on \"extra\"",
            "annotate(Count()) does not work properly with django.db.backends.oracle",
            "Annotate broken django.db.backends.oracle while updating",
            "Surprising impact of defer()",
            "IntegrityError during Many To Many add()",
            "Unify reverse foreign key and m2m querying behavior",
            "Postgres conflict on CREATE INDEX: \"relation exists\""
        ],
        [
            "Status",
            "new",
            "new",
            "new",
            "new",
            "new",
            "assigned",
            "new",
            "new",
            "assigned",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "assigned",
            "new",
            "assigned",
            "new",
            "new",
            "assigned",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "assigned",
            "new",
            "new",
            "new",
            "new",
            "assigned",
            "new",
            "new",
            "new",
            "new",
            "assigned",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "assigned",
            "new",
            "new",
            "new",
            "new",
            "new",
            "assigned",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "assigned",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "assigned",
            "assigned",
            "new",
            "assigned",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new",
            "new"
        ],
        [
            "Owner",
            "",
            "nobody",
            "dgouldin",
            "nobody",
            "nobody",
            "andrewsk",
            "",
            "nobody",
            "niall",
            "nobody",
            "",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "anonymous",
            "",
            "melinath",
            "nobody",
            "nobody",
            "paulmillr",
            "nobody",
            "nobody",
            "mtredinnick",
            "nobody",
            "nobody",
            "",
            "nobody",
            "nobody",
            "",
            "Thomas_Moronez",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "pirosb3",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nate_b",
            "michaelmior",
            "nobody",
            "nobody",
            "nobody",
            "dgouldin",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "calvinspealman",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "slafs",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "charettes",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "vanessagomes",
            "nobody",
            "",
            "nobody",
            "deprince",
            "nobody",
            "nobody",
            "jdunck",
            "nobody",
            "nobody",
            "ptone",
            "jelenak",
            "nicolas",
            "nobody",
            "biern",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            "nobody",
            ""
        ],
        [
            "Type",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Cleanup/optimization",
            "New feature",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "New feature",
            "New feature",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "New feature",
            "Bug",
            "New feature",
            "New feature",
            "Bug",
            "Bug",
            "Bug",
            "New feature",
            "Bug",
            "Cleanup/optimization",
            "Bug",
            "Bug",
            "Bug",
            "New feature",
            "New feature",
            "Bug",
            "New feature",
            "New feature",
            "New feature",
            "Bug",
            "Bug",
            "Bug",
            "New feature",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "New feature",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Cleanup/optimization",
            "Bug",
            "New feature",
            "New feature",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "Bug",
            "New feature",
            "Bug",
            "Bug",
            "New feature",
            "New feature",
            "Bug",
            "Bug",
            "New feature",
            "Bug",
            "Cleanup/optimization",
            "Bug",
            "Bug",
            "Bug",
            "Cleanup/optimization",
            "Cleanup/optimization",
            "Cleanup/optimization",
            "Bug"
        ],
        [
            "Component",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)",
            "Database layer (models, ORM)"
        ],
        [
            "Version",
            "master",
            "1.7",
            "1.2",
            "1.2",
            "1.2",
            "master",
            "master",
            "1.2",
            "1.2",
            "1.2",
            "",
            "1.2",
            "master",
            "master",
            "master",
            "1.2",
            "1.2",
            "1.2",
            "master",
            "master",
            "1.2",
            "master",
            "master",
            "master",
            "master",
            "1.3",
            "1.3",
            "1.3",
            "master",
            "1.3",
            "1.6",
            "master",
            "1.3",
            "1.3",
            "master",
            "master",
            "1.3",
            "1.3",
            "1.3",
            "master",
            "1.3",
            "master",
            "1.3",
            "1.3",
            "master",
            "1.3",
            "1.3",
            "1.2",
            "1.3",
            "1.3",
            "master",
            "master",
            "1.3",
            "1.3",
            "master",
            "1.3",
            "1.3",
            "master",
            "1.3",
            "1.3",
            "1.3",
            "master",
            "1.3",
            "1.3",
            "1.4-alpha-1",
            "1.3",
            "1.3",
            "master",
            "1.3",
            "1.4",
            "1.4",
            "1.4",
            "1.4",
            "1.4",
            "1.3",
            "1.4",
            "master",
            "1.3",
            "1.3",
            "1.4",
            "1.2",
            "1.4",
            "1.4",
            "1.4",
            "1.4",
            "1.4",
            "1.4",
            "master",
            "master",
            "master",
            "master",
            "1.4",
            "master",
            "master",
            "1.4",
            "1.4",
            "1.4",
            "1.4",
            "master",
            "1.5-beta-1"
        ]
    ],
    "pageTitle": "Custom Query \u2013 Django",
    "title": "",
    "url": "https://code.djangoproject.com/query?status=!closed&needs_tests=0&page=5&order=component",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 2,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981525.10/warc/CC-MAIN-20150728002301-00319-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 857589343,
    "recordOffset": 857575125,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{66783=\u00a9 2005-2015 Django Software Foundation unless otherwise noted. Django is a registered trademark of the Django Software Foundation.}",
    "textBeforeTable": "\u2192 11 10 9 8 7 6 5 4 3 2 1 \u2190 Results (401 - 500 of 1086) Max items per page Show under each result: Description Group results by Component Owner Reporter Resolution Severity Status Triage Stage Type Version descending Cc Keywords Reporter UI/UX Easy pickings Patch needs improvement Needs documentation",
    "textAfterTable": "\u2190 1 2 3 4 5 6 7 8 9 10 11 \u2192 Note: See TracQuery for help on using queries. Download in other formats: RSS Feed Comma-delimited Text Tab-delimited Text Back to Top Django Links Learn More About Django Getting Started with Django Django Software Foundation Code of Conduct Get Involved Join a Group Contribute to Django Submit a Bug Report a Security Issue Follow Us GitHub Twitter News RSS Django Users Mailing List Django Hosting by",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}