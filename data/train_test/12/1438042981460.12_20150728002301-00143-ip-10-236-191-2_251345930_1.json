{
    "relation": [
        [
            "Method",
            "Method",
            "Method",
            "Method",
            "Method",
            "Method",
            "Method",
            "Method",
            "Method",
            "Instance Variable",
            "Instance Variable",
            "Instance Variable",
            "Instance Variable",
            "Instance Variable",
            "Method",
            "Method"
        ],
        [
            "__init__",
            "addReader",
            "addWriter",
            "removeReader",
            "removeWriter",
            "removeAll",
            "getReaders",
            "getWriters",
            "doPoll",
            "_poller",
            "_selectables",
            "_reads",
            "_writes",
            "_continuousPolling",
            "_add",
            "_remove"
        ],
        [
            "Initialize epoll object, file descriptor tracking dictionaries, and the base class.",
            "Add a FileDescriptor for notification of data available to read.",
            "Add a FileDescriptor for notification of data available to write.",
            "Remove a Selectable for notification of data available to read.",
            "Remove a Selectable for notification of data available to write.",
            "Remove all selectables, and return a list of them.",
            "Return the list of file descriptors currently monitored for input events by the reactor.",
            "Return the list file descriptors currently monitored for output events by the reactor.",
            "Poll the poller for new events.",
            "A epoll which will be used to check for I/O readiness.",
            "A dictionary mapping integer file descriptors to instances of FileDescriptor which have been registered with the reactor. All FileDescriptors which are currently receiving read or write readiness notifications will be present as values in this dictionary.",
            "A dictionary mapping integer file descriptors to arbitrary values (this is essentially a set). Keys in this dictionary will be registered with _poller for read readiness notifications which will be dispatched to the corresponding FileDescriptor instances in _selectables.",
            "A dictionary mapping integer file descriptors to arbitrary values (this is essentially a set). Keys in this dictionary will be registered with _poller for write readiness notifications which will be dispatched to the corresponding FileDescriptor instances in _selectables.",
            "A _ContinuousPolling instance, used to handle file descriptors (e.g. filesytem files) that are not supported by epoll(7).",
            "Private method for adding a descriptor from the event loop.",
            "Private method for removing a descriptor from the event loop."
        ]
    ],
    "pageTitle": "twisted.internet.epollreactor.EPollReactor : API documentation",
    "title": "",
    "url": "http://twistedmatrix.com/documents/12.2.0/api/twisted.internet.epollreactor.EPollReactor.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 1,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981460.12/warc/CC-MAIN-20150728002301-00143-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 251354132,
    "recordOffset": 251345930,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Sat, 01 Sep 2012 06:16:22 GMT",
    "textBeforeTable": "A reactor that uses epoll(7). Implements interfaces: twisted.internet.interfaces.IReactorFDSet Part of twisted.internet.epollreactor View Source View In Hierarchy t.i.e.EPollReactor(posixbase.PosixReactorBase, posixbase._PollLikeMixin) : class documentation Go to the latest version of this document.",
    "textAfterTable": "Inherited from PosixReactorBase: Method installWaker Install a `waker' to allow threads and signals to wake up the IO thread. Method spawnProcess Spawn a process, with a process protocol. Method listenUDP Connects a given DatagramProtocol to the given numeric UDP port. Method listenMulticast Connects a given DatagramProtocol to the given numeric UDP port. Method connectUNIX Method listenUNIX Method listenUNIXDatagram Connects a given DatagramProtocol to the given path. Method connectUNIXDatagram Connects a ConnectedDatagramProtocol instance to a path. Method adoptStreamPort Create a new IListeningPort from an already-initialized socket. Method adoptStreamConnection Method listenTCP Method connectTCP Method connectSSL Method listenSSL Method listenWith Undocumented Method connectWith Undocumented Instance Variable _childWaker None or a reference to the _SIGCHLDWaker which is used to properly notice child process termination. Method _handleSignals Extend the basic signal handling logic to also support handling SIGCHLD to know when to try to reap child processes. Method _uninstallHandler If a child waker was",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}