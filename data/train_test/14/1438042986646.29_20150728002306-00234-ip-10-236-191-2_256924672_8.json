{
    "relation": [
        [
            "Property",
            "Contacts",
            "Description",
            "Enabled",
            "Label",
            "Maven Mappings"
        ],
        [
            "Value(s)",
            "*",
            "",
            "true false",
            "",
            "*"
        ],
        [
            "Default Value",
            "-",
            "-",
            "true",
            "-",
            "-"
        ],
        [
            "Comment",
            "Zero or more references to Contacts defined in the given Aggregation model. The referenced contacts will be notified if aggregation errors related to the contribution as a whole occur.",
            "Optional description of the contribution. This is for documentation purposes only and will not end up in the aggregated repository.",
            "Disables (false) or enables (true) the contribution to be considered in the aggregation process. Note that this may lead to missing dependencies and hence verification errors.",
            "Mandatory label for this contribution.",
            "See Maven Mapping for details ..."
        ]
    ],
    "pageTitle": "Difference between revisions of \"Eclipse b3/aggregator/manual\" - Eclipsepedia",
    "title": "",
    "url": "http://wiki.eclipse.org/index.php?title=Eclipse_b3/aggregator/manual&diff=330470&oldid=214019",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 8,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986646.29/warc/CC-MAIN-20150728002306-00234-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 256962907,
    "recordOffset": 256924672,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{232901=Copyright \u00a9 2014 The Eclipse Foundation. All Rights Reserved.}",
    "textBeforeTable": "A powerful feature of the Aggregator is the ability to create aggregated repos that can be consumed as Maven repos, (i.e. providing the directory/file structure and artifacts required by Maven). An aggregated repository that supports Maven can be consumed both as a p2 and a Maven repo (at the same time). This flexibility is possible thanks to p2's separation of dependency meta-data and the actual location of the referenced artifacts. In order to create a Maven-conformant aggregate repo all that is required is to set the property Maven Result property of the Aggregator to true. The aggregation deployed to the Build Root location will be a Maven repo. The sample buckminster_helios_maven.b3aggr is a variation of the previous aggregations configured to produce a Maven repo. Headless support You will need a headless installation of b3 with the Aggregator feature installed. Running from the command line Just type: b3 aggregate <options> Note: if you install the aggregator into an Eclipse SDK or Platform (rather than a pure headless installation), you can run from the command line, by using eclipse -application org.eclipse.b3.cli.headless aggregate <options> For a detailed listing of the available options consult the next section. Command line options Mirroring all repo artifacts of your aggregated contributions is a very valuable and important feature when performing aggregation, but there are also many cases where this is not necessary. It is possible to",
    "textAfterTable": "--agentLocation <path to directory> <buildRoot>/p2 Controls the location of the p2 agent. When specified as outside of the build root, the agent will not be cleaned out by the aggregator and thus retain its cache. --production N/A N/A Indicates that the build is running in real production. That means that no mock emails will be sent. Instead, the contacts listed for each contribution will get emails when things go wrong. CAUTION: Use this option only if you are absolutely sure that you know what you are doing, especially when using models \"borrowed\" from other production builds without changing the emails first. --emailFrom <email> Address of build master Becomes the sender of the emails sent from the aggregator. --emailFromName <name> If --emailFrom is set then this option sets the real name of the email sender. --mockEmailTo <email> no value Becomes the receiver of the mock-emails sent from the aggregator. If not set, no mock emails are sent. --mockEmailCC <email> no value Becomes the CC receiver of the mock-emails sent from the aggregator. If not set, no mock CC address is used. --logURL <url>",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}