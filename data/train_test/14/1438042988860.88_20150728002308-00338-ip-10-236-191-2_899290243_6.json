{
    "relation": [
        [
            "Formats a..",
            "Number",
            "Number",
            "Money",
            "Money",
            "Date",
            "Time",
            "Date and time"
        ],
        [
            "From a..",
            "String",
            "Integer, double",
            "String",
            "Number",
            "String",
            "QTime",
            "QDateTime"
        ],
        [
            "Function Prototype",
            "QString formatNumber( const QString & numStr )",
            "formatNumber( double num, int precision = -1 )",
            "formatMoney( const QString & numStr )",
            "formatMoney( double num, const QString & currency, int digits = -1 )",
            "formatDate( const QDate & pDate, bool shortFormat=false )",
            "formatTime( const QTime & pTime, bool includeSecs=false)",
            "formatDateTime( const QDateTime &pDateTime, bool shortFormat = true, bool includeSecs = false )"
        ]
    ],
    "pageTitle": "Difference between revisions of \"Development/Tutorials/Localization/i18n\" - KDE TechBase",
    "title": "Functions to Format Numbers",
    "url": "https://techbase.kde.org/index.php?title=Development/Tutorials/Localization/i18n&diff=11274&oldid=9031",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 6,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988860.88/warc/CC-MAIN-20150728002308-00338-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 899311247,
    "recordOffset": 899290243,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "\u00a0 QString's native Unicode support ensures that all translations are represented correctly. All string handling done by your application should therefore use QString. [...] QPushButton* myButton = new QPushButton(i18n(\"Translate this!\")); include <klocalizedstring.h> Translations are made possible by the QString i18n(const char*) method, defined in klocalizedstring.h, which you must wrap all strings that should be displayed in. The QString returned by i18n() is the translated (if necessary) string. This makes creating translatable widgets as simple as in this example: Access to a global KLocale object is provided via KGlobal::locale(). This KLocale object is created automatically by KInstance for you and take care of all user i18n related settings. It is deleted automatically on application exit. KDE provides the KLocale class as part of libkdecore to facilitate the technical details of localization. KLocale makes it as easy as possible for developers to make their code i18n aware, but there are some things you need to be aware of so that applications are usable in other languages and countries. To ensure your application is ready to be localized you have to follow a few simple rules. All user-visible strings in your application should be translated before they are displayed on the user's screen, exceptions to this being debugging messages, configuration keys and similar types of text data.",
    "textAfterTable": "Phrase Context i18nc Call Example Busy Refering to a person i18nc(\"A person is busy\", \"Busy\") Busy Refering to a thing i18nc(\"A thing is busy\", \"Busy\") Color Color mode, as opposed to Grayscale i18nc(\"Color mode\", \"Color\") Creator Refering to a person i18nc(\"A person who creates\", \"Creator\") Creator Refering to software i18nc(\"Software\", \"Creator\") Display Refering to hardware i18nc(\"Hardware display\", \"Display\") Editor Refering to a person i18nc(\"A person who edits\", \"Editor\") Editor Refering to software i18nc(\"Software\", \"Editor\") Line Refering to drawing i18nc(\"Draw a line\", \"Line\") Line Refering to text i18nc(\"Line of text\", \"Line\") Name Refering to a name of thing i18nc(\"A thing's name\", \"Name\") In theme change dialog: i18nc(\"Theme name\", \"Name\") Name Refering to first name and last name of person i18nc(\"Person's first and last name\", \"Name\") In KAddessbook contact edit dialog: i18nc(\"Person's first and last name\", \"Name\") No",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}