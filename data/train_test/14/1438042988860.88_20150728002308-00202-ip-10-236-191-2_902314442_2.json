{
    "relation": [
        [
            "USB Host Shield",
            "RESET",
            "GND",
            "INT",
            "SS",
            "MOSI",
            "MISO",
            "SCK",
            "3.3V",
            "GND"
        ],
        [
            "Teensy 3.0",
            "3.3V",
            "GND",
            "9",
            "10",
            "11",
            "12",
            "13",
            "3.3V",
            "GND"
        ]
    ],
    "pageTitle": "USB Shield \u00ab Circuits@Home",
    "title": "",
    "url": "https://www.circuitsathome.com/category/mcu/arduino/usb-shield",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 2,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988860.88/warc/CC-MAIN-20150728002308-00202-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 902337991,
    "recordOffset": 902314442,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{25379=Update 18. January 2014 A USB version of the library is now also available., 24663=For more information take a look at my blog post: http://blog.tkjelectronics.dk/2014/01/ps4-controller-now-supported-by-the-usb-host-library/. This explains how to pair with the controller and have some background information as well., 65814=Circuits@Home 2006-2015 Powered by WordPress & Atahualpa, 28330=For more specific instructions on how to use the library I recommend taking a look at the blog post at my own blog: http://blog.tkjelectronics.dk/2013/12/bluetooth-hid-devices-now-supported-by-the-usb-host-library/., 54689=At present, the code example, also featuring Andrew\u2019s FAT and extended memory implementation, can only be run on \u201cbig\u201d Arduinos such as Mega and Mega 2560. Another FAT implementation, developed by Alex Glushchenko, is being tested \u2013 there is a slight possibility that at least some functionality can be demonstrated on a regular UNO board. On the other hand, the mass storage component can be used without a file system by simply reading/writing physical sectors; this approach can save a lot of memory. The documentation for the mass storage class code is available here.}",
    "textBeforeTable": "In order to use the Teensy 3.0 you will need to connect the Teensy 3.0 to the USB Host shield like so: To use the Teensy 3.0 with the library I recommend using the Mini variant of the USB Host Shield as it is much more compact and a bit cheaper too. Since the Teensy 3.0 is running at 3.3V no logic conversion is needed. Note it is very important than you do not connect a 5V microcontroller to the Mini variant of the USB Host Shield, as this might damage the board. If you are planning to use a 5V microcontroller like the Arduino Uno I recommend getting the full sized version of the shield. I am pleased to announce that the first ARM processor is now supported by the USB Host library. It is the Teensy 3.0 which features an 32 bit Cortex-M4 ARM processor running at up to 96MHz. This is a huge increase in speed if you are used to the Arduino Uno running at 16MHz. The Teensy 3.0 is created by the Paul Stoffregen which is also a dedicated contributor to the Arduino IDE. If you are looking for a ARM based board for your next project, I recommend taking a look at the Teensy 3.0. A more detailed overview can be found at the official page. Layout of the Teensy 3.0",
    "textAfterTable": "The images to the right shows both the pinout for the Teensy 3.0 as well as the Mini USB Host Shield. Layout of the USB Host Shield Mini variant Furthermore I recommend cutting the VBUS jumper and then soldering a wire from the provided pad on the USB Host shield. This wire can then be connected to the VIN on the Teensy 3.0. The USB Host shield will then get powered directly from the same USB port as the Teensy 3.0 and the VBUS will be 5V as required by most devices \u2013 note that you might need a separate 5V regulator depending on which device you are using with the shield, as it might draw too much current. More information about how to modify the shield can be found at the hardware manual. Also take a look at the guide for the other Teensy boards, as the wiring is almost the identical. Hopefully this is just the first of many ARM based boards that is going to be supported by the USB Host shield library. If you got any questions or comments, then feel free to write a comment below and I will answer as fast as possible. Update Both the Teensy 3.1 and Arduino Due is now",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}