{
    "relation": [
        [
            "Name",
            "ACM Integral",
            "ALARM_HANDLER",
            "ALARMSEQ",
            "BEAMINT",
            "BL_INTRLK",
            "BOOSTER_FDBK",
            "BPMRACKTEMP",
            "CALSERVER",
            "CONF_MANAGEMENT",
            "CRATE_MONITOR",
            "CURMON2",
            "CURR_INTRLK",
            "",
            "HISTORYLOG_CA",
            "HISTORYLOG_RDB",
            "HISTORYPLOT",
            "INJECTOR_SERVER",
            "IVUN_GAP_INTRLK",
            "LINAC_FDBK",
            "MSG_HANDLER",
            "MCC_POWER",
            "PVSERVER",
            "SPEAR_SERVER",
            "TC_INTRLK",
            "TSP",
            "WC_FDBK",
            "XCAMAC"
        ],
        [
            "Description",
            "Read linac and BTS ACM values (from local injector control system) and calculate different electron charge integrals. Use the reset mini-procedure to reset the integrals before a new run.",
            "Read and store alarm messages, generate notifications as required.",
            "Manages alarms.",
            "Calculate SPEAR beam integrals every second. Use the reset mini-procedure to reset the integrals before a new run.",
            "Calculate the integrated bremsstrahlung for each beamline (around the beamline source point). Calculate a 1 hour boxcar average and a 24 hour boxcar average. The interlock part of this program is disabled.",
            "Booster Extraction Septum Feedback",
            "Turn B116 and B132 BPM rack fans on and off to control temperature.",
            "Return PV values to webserver applications. Steps for editing web pages with PV values.",
            "Topoff PS configuration control and resistance monitoring, certification",
            "Reboot MicroVax and generate an alarm message when a crash is detected.",
            "Beam current monitor and interlocks.",
            "Limit maximum SPEAR beam current and dump beam if beam current discrepancy",
            "",
            "History Log Channel Access",
            "History Log RDB Update. Use PV Database web page to make changes to history. Changes can also be made using SQL commands.",
            "History Plot Viewer. When a new PV is added to history, historyplot needs to be restarted (or an old run accessed and then the new run). If 5 minutes has elapsed and historyplot still cannot access the new PV, a spear system manager must restart the SQL server.",
            "Channel access server for the injector control system.How to start INJECTOR_SERVER.",
            "Protect the BL12-2 and BL15 insertion device in vacuum magnets from radiation from uncontrolled beam.",
            "Gun Heater, Linac RFDD, Gun Phase, Linac Klystron Phase and Power Feedbacks",
            "Message handler. How to start MSG_HANDLER.",
            "Get values from Motor Control Center Interfaces and update PVs on soft-iocpsspr.",
            "Get record list from each IOC and reply with all corresponding PV setpoints",
            "The SPEAR Control System Upgrade",
            "Monitor all SPEAR thermocouple readouts.",
            "TSP flashing. IG list per TSP.",
            "White Circuit Feedback",
            "XCAMAC, cnaf instructions."
        ],
        [
            "Machine",
            "INJ02",
            "SPEAR1,2,3,INJ02",
            "SPEAR1",
            "SPEAR3",
            "SPEAR3",
            "INJ02",
            "SPEAR3",
            "SPEAR1",
            "SPEAR1",
            "SPEAR3",
            "SPEAR1",
            "SPEAR3",
            "",
            "SPEAR1",
            "SPEAR1",
            "SPEAR1/2/3/SSRL",
            "INJ02",
            "SPEAR3",
            "INJ02",
            "SPEAR1",
            "SPEAR2",
            "SPEAR1",
            "SPEAR3",
            "SPEAR3",
            "SPEAR3",
            "INJ02",
            "SPEAR3"
        ],
        [
            "Source",
            "[INJECTOR.CMSLIB.KERNEL]ACM.C",
            "spear_root:[monitoring]alarm_handler.c",
            "spear_root:[alarms]alarmseq.c",
            "spear_root:[beamint]beamint.c",
            "spear_root:[monitoring]bl_intrlk.c",
            "user_disk:[wermelsk.injector]booster_fdbk.c",
            "spear_root:[monitoring]bpmracktemp.c",
            "spear_root:[epics.calserver]calserver.c",
            "spear_root:[configuration_control]conf_management.c",
            "spear_root:[monitoring]crate_monitor.c",
            "spear_root:[curmon2]curmon.c",
            "spear_root:[monitoring]curr_intrlk.c",
            "",
            "spear_root:[history]historylog_ca.c",
            "spear_root:[history]historylog_rdb.c",
            "spear_root:[history]historyplot.c",
            "Unknown",
            "spear_root:[monitoring]ivun_gap_intrlk.c",
            "user_disk:[wermelsk.injector]linac_fdbk.c",
            "spear_root:[monitoring]msg_handler.c",
            "spear_root:[mcc_power]mcc_power.c",
            "spear_root:[history]pvserver.c",
            "user_disk:[cox.epics2005.ssrl_servers]",
            "spear_root:[monitoring]tc_intrlk.c",
            "spear_root:[tsp]tsp.c",
            "user_disk:[wermelsk.injector]wc_fdbk.c",
            "spear_root:[xcamac]xcamac.for"
        ]
    ],
    "pageTitle": "SPEAR Apps",
    "title": "",
    "url": "http://www.slac.stanford.edu/grp/ssrl/spear/epics/app/",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 1,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989018.48/warc/CC-MAIN-20150728002309-00092-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 723315827,
    "recordOffset": 723299433,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{42614=Contact: Stephanie Allison Last Modified: May 18, 2015}",
    "lastModified": "Thu, 30 Jul 2015 15:45:21 GMT",
    "textBeforeTable": "mms production <program name> mms <program name> set def <path to source code> @spear_root:[epics.3_14_8_2epics]setup To rebuild a program: OpenVMS Host Programs To restart a program running on SPEAR1/2/3 or INJ02, a SPEAR system manager must log onto the machine running the program, get all privileges, and type the program name which will stop and restart the program. Contact a SSRL system manager to restart a program running on SSRL. N/A BxB IOCs iGp12-372F Signal Processor User Manual, Operator Instructions Bunch-By-Bunch Feedback $EPICS/app/BPM/ BPM, MCOR,FOFB IOCs Fast corrector and BPM features / control (PDF document here) 4kHz Controls TBD TBD Engineering Specification Booster RF Project Docs Booster RF PDR Docs Booster RF (proposed) $EPICS/app/RF-SPEAR/ SPEAR RF IOC LLRF hardware interface and slow controls. SPEAR RF $EPICS/app/BPM/transBpmApp LTB/BTS BPM IOC On/off control of chopper timing delay generator and ALARA chopper interlock. Chopper Control and Interlock $EPICS/app/Bpm-ICD soft-iocbpminj BTS Electron BPM aquisition using SLAC",
    "textAfterTable": "Linux Host and Console Programs Most of the following programs run using the spear AFS account. When one machine (connie or beldar) is down, the other machine is used instead. Name Description Machine Config Files and Scripts iocLogMsgServer Receive messages from iocLog clients and send them to the RDB event log via msg_handler connie $EPICS/app/iocLog/ caRepeater Forward IOC beacons to CA clients on this host all N/A alh Send PV alarms to iocLogMsgServer connie $EPICS/app/alh/ autoFill Compiled matlab script for automatic injection into SPEAR (ake, frequent fill, trickle-charge) connie $SPEAR_MATLAB/automatedFill/ blds Compiled matlab script for beam line dynamic steering connie $SPEAR_MATLAB/blds/ feedbackBooRF Compiled matlab script for booster RF phase stabilization feedback connie $SPEAR_MATLAB/feedbackBooRF/ Xvfb Virtual framebuffer X server required for alh and autoFill all $EPICS/app/alh/ channelWatcher Store PV setpoints and send setpoint changes to iocLogMsgServer connie $EPICS/app/cw/ gateway (public) Serve SPEAR PVs to clients outside the firewall beldar $EPICS/app/gtw/ gateway (SPEAR RF) Serve SPEAR RF (b132-iocrf) PVs to all SPEAR clients",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}