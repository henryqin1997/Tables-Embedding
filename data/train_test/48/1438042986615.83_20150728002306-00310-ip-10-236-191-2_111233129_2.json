{
    "relation": [
        [
            "HTTP verb",
            "GET",
            "GET",
            "POST",
            "GET",
            "GET",
            "PUT",
            "DELETE"
        ],
        [
            "URL",
            "/photos",
            "/photos/new",
            "/photos",
            "/photos/1",
            "/photos/1/edit",
            "/photos/1",
            "/photos/1"
        ],
        [
            "controller",
            "Images",
            "Images",
            "Images",
            "Images",
            "Images",
            "Images",
            "Images"
        ],
        [
            "action",
            "index",
            "new",
            "create",
            "show",
            "edit",
            "update",
            "destroy"
        ],
        [
            "used for",
            "display a list of all images",
            "return an HTML form for creating a new image",
            "create a new image",
            "display a specific image",
            "return an HTML form for editing a image",
            "update a specific image",
            "delete a specific image"
        ]
    ],
    "pageTitle": "Ruby on Rails Guides: Rails Routing from the Outside In",
    "title": "",
    "url": "http://guides.rubyonrails.org/v2.3.8/routing.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 2,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986615.83/warc/CC-MAIN-20150728002306-00310-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 111250627,
    "recordOffset": 111233129,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{55971=This route would respond to URLs such as /photo/A12345. You can more succinctly express the same route this way:}",
    "lastModified": "Fri, 20 Aug 2010 02:34:07 GMT",
    "textBeforeTable": "creates seven different routes in your application: map.resources :photos In Rails, a RESTful route provides a mapping between HTTP verbs, controller actions, and (implicitly) CRUD operations in a database. A single entry in the routing file, such as 3.2 CRUD, Verbs, and Actions would be understood to refer to a photo resource with the ID of 17, and to indicate a desired action \u2013 deleting that resource. REST is a natural style for the architecture of web applications, and Rails makes it even more natural by using conventions to shield you from some of the RESTful complexities. DELETE /photos/17  For example, to a Rails application a request such as this:  Transferring representations of the state of that resource between system components. Using resource identifiers (which, for the purposes of discussion, you can think of as URLs) to represent resources  The foundation of RESTful routing is generally considered to be Roy Fielding\u2019s doctoral thesis, Architectural Styles and the Design of Network-based Software Architectures. Fortunately, you need not read this entire document to understand how REST works in Rails. REST, an acronym for Representational State Transfer, boils down to two main principles for our purposes: 3.1 What is REST? RESTful routing is the current standard for routing in Rails, and it\u2019s the one that you should prefer for new applications. It can take a little while to understand how RESTful routing works,",
    "textAfterTable": "For the specific routes (those that reference just a single resource), the identifier for the resource will be available within the corresponding controller action as params[:id]. If you consistently use RESTful routes in your application, you should disable the default routes in routes.rb so that Rails will enforce the mapping between HTTP verbs and routes. 3.3 URLs and Paths Creating a RESTful route will also make available a pile of helpers within your application: photos_url and photos_path map to the path for the index and create actions new_photo_url and new_photo_path map to the path for the new action edit_photo_url and edit_photo_path map to the path for the edit action photo_url and photo_path map to the path for the show, update, and destroy actions Because routing makes use of the HTTP verb as well as the path in the request to dispatch requests, the seven routes generated by a RESTful routing entry only give rise to four pairs of helpers. In each case, the _url helper generates a string containing the entire URL that the application will understand, while the _path helper generates a string containing the relative path from the root of the application. For example: photos_url # => \"http://www.example.com/photos\" photos_path # => \"/photos\" 3.4 Defining Multiple Resources at the Same Time If you need to create routes for more than one RESTful resource, you can save a bit of",
    "hasKeyColumn": true,
    "keyColumnIndex": 3,
    "headerRowIndex": 0
}