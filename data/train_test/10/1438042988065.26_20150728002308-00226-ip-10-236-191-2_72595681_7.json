{
    "relation": [
        [
            "Constant",
            "SQLDIAG_FINDINGS_ALL",
            "SQLDIAG_FINDINGS_VALIDATION",
            "SQLDIAG_FINDINGS_FEATURES",
            "SQLDIAG_FINDINGS_FILTER_PLANS",
            "SQLDIAG_FINDINGS_CR_DIFF",
            "SQLDIAG_FINDINGS_MASK_VARIANT",
            "SQLDIAG_FINDINGS_OBJ_FEATURES",
            "SQLDIAG_FINDINGS_BASIC_INFO"
        ],
        [
            "Type",
            "NUMBER",
            "NUMBER",
            "NUMBER",
            "NUMBER",
            "NUMBER",
            "NUMBER",
            "NUMBER",
            "NUMBER"
        ],
        [
            "Value",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8"
        ],
        [
            "Description",
            "Show all possible findings",
            "Show status of validation rules over structures",
            "Show only features used by the query",
            "Show the alternative plans generated by the advisor",
            "Show difference between two plans",
            "Mask info for testing",
            "Show features usage history",
            "Show the alternative plans generated by the advisor"
        ]
    ],
    "pageTitle": "DBMS_SQLDIAG",
    "title": "",
    "url": "http://docs.oracle.com/cd/E11882_01/appdev.112/e10577/d_sqldiag.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 7,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988065.26/warc/CC-MAIN-20150728002308-00226-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 72621187,
    "recordOffset": 72595681,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{4338=1800}",
    "lastModified": "Tue, 19 May 2015 17:54:04 GMT",
    "textBeforeTable": "Table 138-8 DBMS_SQLDIAG Constants - Findings Filter Constants User to explore all alternative plans 5 NUMBER PROBLEM_TYPE_ALT_PLAN_GEN User sees a crash in execution 4 NUMBER PROBLEM_TYPE_EXECUTION_ERROR User sees a crash in compilation 3 NUMBER PROBLEM_TYPE_COMPILATION_ERROR User suspects the query is giving inconsistent results 2 NUMBER PROBLEM_TYPE_WRONG_RESULTS User suspects this is a performance problem 1 NUMBER PROBLEM_TYPE_PERFORMANCE Description Value Type Constant Table 138-7 DBMS_SQLDIAG Constants - Problem Type Constants Summary",
    "textAfterTable": "Examples Patch Pack / Unpack Patches can be exported out of one system and imported into another by means of a staging table, provided by subprograms in this package. Like with SQL diagnosis sets, the operation of inserting into the staging table is called a \"pack\", and the operation of creating patches from staging table data is termed the \"unpack\". DBAs should perform a pack/unpack as follows: Create a staging table owned by user 'SH' through a call to CREATE_STGTAB_SQLPATCH:  EXEC DBMS_SQLDIAG.CREATE_STGTAB_SQLPATCH( table_name => 'STAGING_TABLE', schema_name => 'SH'); Call PACK_STGTAB_SQLPATCH one or more times to write SQL patch data into the staging table. In this case, copy data for all SQL patches in the DEFAULT category into a staging table owned by the current schema owner:  EXEC DBMS_SQLDIAG.PACK_STGTAB_SQLPATCH( staging_table_name => 'STAGING_TABLE'); In this case, only a single SQL patch SP_FIND_EMPLOYEE is copied into a staging table owned by the current schema owner:  EXEC DBMS_SQLDIAG.PACK_STGTAB_SQLPATCH( patch_name => 'SP_FIND_EMPLOYEE', staging_table_name => 'STAGING_TABLE'); The staging table can then be moved to another system using either datapump, import/export commands or through a databaselink. Call UNPACK_STGTAB_SQLPATCH to create SQL patches on the new system from the patch data in the staging table. In this case, change the name in the data for the SP_FIND_EMPLOYEE patch stored in the staging table to 'SP_FIND_EMP_PROD':",
    "hasKeyColumn": true,
    "keyColumnIndex": 3,
    "headerRowIndex": 0
}