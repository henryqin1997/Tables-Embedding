{
    "relation": [
        [
            "Citing Patent",
            "US5828884 *",
            "US5898896 *",
            "US5907865 *",
            "US5935232 *",
            "US6014720 *",
            "US6587897 *",
            "US6691307 *",
            "US7685407 *",
            "US7934077",
            "US8095776",
            "US8316217",
            "US8504801",
            "US8700885",
            "US8966227",
            "US20010038348 *",
            "US20050066146 *",
            "US20110191569 *"
        ],
        [
            "Filing date",
            "May 23, 1996",
            "Apr 10, 1997",
            "Sep 8, 1997",
            "Nov 14, 1997",
            "May 5, 1997",
            "Jun 16, 2000",
            "Aug 3, 1999",
            "",
            "",
            "",
            "Dec 16, 2011",
            "Oct 28, 2012",
            "Jun 19, 2013",
            "Mar 5, 2014",
            "Apr 25, 2001",
            "Sep 19, 2003",
            "May 28, 2009"
        ],
        [
            "Publication date",
            "Oct 27, 1998",
            "Apr 27, 1999",
            "May 25, 1999",
            "Aug 10, 1999",
            "Jan 11, 2000",
            "Jul 1, 2003",
            "Feb 10, 2004",
            "Mar 23, 2010",
            "Apr 26, 2011",
            "Jan 10, 2012",
            "Nov 20, 2012",
            "Aug 6, 2013",
            "Apr 15, 2014",
            "Feb 24, 2015",
            "Nov 8, 2001",
            "Mar 24, 2005",
            "Aug 4, 2011"
        ],
        [
            "Applicant",
            "Advanced Micro Devices, Inc.",
            "International Business Machines Corporation",
            "Motorola, Inc.",
            "Advanced Micro Devices, Inc.",
            "Intel Corporation",
            "Unisys Corporation",
            "Sun Microsystems, Inc.",
            "Renesas Technology Corp.",
            "Renesas Electronics Corporation",
            "Renesas Electronics Corporation",
            "Renesas Electronics Corporation",
            "Renesas Electronics Corporation",
            "Renesas Electronics Corporation",
            "Renesas Electronics Corporation",
            "Nec Corporation",
            "Intel Corporation",
            "Naoshi Ishikawa"
        ],
        [
            "Title",
            "Method for compiling a software program and executing on a system which converts data between different endian formats",
            "Method and apparatus for data ordering of I/O transfers in Bi-modal Endian PowerPC systems",
            "Method and data processing system for dynamically accessing both big-endian and little-endian storage schemes",
            "Variable latency and bandwidth communication pathways",
            "Dynamically sizing a bus transaction for dual bus size interoperability based on bus transaction signals",
            "Method for enhanced I/O in an emulated computing environment",
            "Interpreter optimization for native endianness",
            "Semiconductor device and data processing system selectively operating as one of a big endian or little endian system",
            "Semiconductor device and data processing system selectively operating as one of a big endian or little endian system",
            "Semiconductor device and data processing system selectively operating as one of a big endian or little endian system",
            "Semiconductor device and data processing system selectively operating as one of a big endian or little endian system",
            "Semiconductor device and data processing system selectively operating as one of a big endian or little endian system",
            "Semiconductor device and data processing system selectively operating as one of a big endian or little endian system",
            "Semiconductor device and data processing system selectively operating as one of a big endian or little endian system",
            "Endian conversion apparatus and an endian conversion method in which a trouble is never induced in a recognition at a plural-byte unit without any delay in an endian process",
            "Endian conversion",
            "Data processing device and semiconductor integrated circuit device"
        ]
    ],
    "pageTitle": "Patent US5627975 - Interbus buffer for use between a pseudo little endian bus and a true little ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US5627975?dq=6,563,928",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 7,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042991019.80/warc/CC-MAIN-20150728002311-00263-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 470885543,
    "recordOffset": 470866013,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{18065=Programmed byte-swapping is a solution which incorporates a certain number of multiplexers interposed in the data path connecting the two different devices. These multiplexers perform the byte reordering depending upon the data transfer size and data path size. For instance, if both devices transfer data in up to four byte quanta (both have 32-bit data buses), then each byte must have a 4:1 multiplexer connected to it to route any one of the four incoming bytes to any one of the four byte lanes., 36402=The four bytes output by local data low latch 28 are byte swapped again and connected to one set of inputs of a thirty-two bit 2:1 multiplexer (\"MUX\") 32. Multiplexer 32 also receives the thirty-two bits output by local data low latch 28 which are not byte swapped. The four bytes output by local data high latch 30 are byte swapped again and connected to one set of inputs of a thirty-two bit 2:1 multiplexer (\"MUX\") 34. Multiplexer 34 also receives the thirty-two bits output by local data high latch 30 which are not byte swapped. A control signal LE-- MODE selects the outputs of multiplexers 32 and 34. In particular, the control signal LE-- MODE is asserted when the local device sourcing the data is a LE device (and the processor bus devices are PLE devices). The control signal LE-- MODE is de-asserted when the local device sourcing the data is a BE device (and the processor bus devices are BE devices). When asserted, the control signal LE-- MODE causes multiplexers 32 and 34 to output the non-swapped outbuts of local data low latch 28 and local data high latch 30. (The bytes are swapped only once when input, resulting in byte reordering). When de-asserted, the control signal LE-- MODE causes multiplexers 32 and 34 to output the byte swapped outputs of local data low latch 28 and local data high latch 30. (The bytes are swapped twice, resulting in no byte reordering). The thirty-two bits output by multiplexer 32 are concatenated with the thirty-two bits output by multiplexer 34 to a form a sixty-four bit data signal. This data signal is connected to the processor data bus depicted in FIG. 1., 39188=The more significant half of bytes output by multiplexer 44 are byte swapped and connected to one set of inputs of a thirty-two bit 2:1 multiplexer (\"MUX\") 46. Multiplexer 46 also receives the more significant half of bytes output by multiplexer 44 which are not byte swapped. The less significant half of bytes output by multiplexer 44 are byte swapped and connected to one set of inputs of a thirty-two bit 2:1 multiplexer (\"MUX\") 48. Multiplexer 48 also receives the less significant half of bytes output by multiplexer 44 which are not byte swapped. The control signal LE-- MODE selects the outputs of multiplexers 46 and 48. When asserted, the control signal LE-- MODE causes multiplexers 46 and 48 to output the non-swapped more significant and less significant halves output by multiplexer 44. When de-asserted, the control signal LE-- MODE causes multiplexers 46 and 48 to output the byte swapped more significant and less significant halves output by multiplexer 44. The outputs of multiplexers 46 and 48 are connected to two sets of inputs of a thirty-two bit 3:1 multiplexer (\"MUX\") 50. Multiplexer 50 also receives the address signals present on the processor address bus. This connection provides a path for a pair of control signals PROCESSOR-- LOW-- SELECT and PROCESSOR-- HIGH-- SELECT which select one of the three inputs to multiplexer 50. Control unit 24 generates the control signals PROCESSOR-- LOW-- SELECT and PROCESSOR-- HIGH-- SELECT. The operation of control unit 24 is described below in connection with FIGS. 9 and 10. The output of multiplexer 50 is latched by a latch 52. An output of latch 52 is byte swapped before it is connected to the local bus., 38113=Continuing with right-hand portion 22 depicted in FIG. 8, data from the processor bus enters at the top and flows downwards to the local bus. Specifically, sixty-four data bits enter right-hand portion 22 and are latched by one of four double word latches 36, 38, 40, and 42 depending upon the fourth and fifth least significant bits of the transaction address, ADDRESS(27, 28). (Data processor 12 often performs bus transactions in aligned double quad-word data units (256 bits). This strategy balances the constraints of bus bandwidth and address translation granularity.) A sixty-four bit 4:1 multiplexer (\"MUX\") 44 receives each the outputs of double word latches 36, 38, 40, and 42. The fourth and the fifth least significant bits of the address associated with the transaction, ADDRESS(27, 28), select one particular input of multiplexer 44. The sixty-four bit output of multiplexer 44 is split into a more significant half (bits 0:31) and a less significant half (bits 32:63). Each half is the same size as the local bus, thirty-two bits.}",
    "textBeforeTable": "Patent Citations Although the present invention has been described with reference to a specific embodiment, further modifications and improvements will occur to those skilled in the art. For instance, the disclosed invention may be incorporated into data processor 12. It is to be understood therefore, that the invention encompasses all such modifications that do not depart from the spirit and scope of the invention as defined in the appended claims. If the local bus device is operating in BE mode and the transaction starts in the first word of a double-word (ADDRESS(29) is zero), then the logic function E is false. Multiplexer 44 outputs bytes ABCD to multiplexer 46 and bytes EFGH to multiplexer 48. (Data processor 12 is operating in BE mode.) Multiplexers 46 and 48 select their byte swapped inputs and route their outputs to multiplexer 50. Control unit 24 causes multiplexer 50 to select the output of multiplexer 46, bytes DCBA. As described above, the outgoing data is always byte-swapped after multiplexer 50. Therefore, the local bus device stores the bytes ABCD at the addresses XX000 through XX011. After a transfer of four data bytes, the logic function B is true. Control unit 24 causes multiplexer 50 to select the output of multiplexer 48, bytes HGFE. As described above, the outgoing data is byte-swapped. Therefore, the local bus device stores the bytes EFGH at the addresses XX100 through XX111. The ultimate byte ordering, ABCDEFGH, is",
    "textAfterTable": "US5907865 * Sep 8, 1997 May 25, 1999 Motorola, Inc. Method and data processing system for dynamically accessing both big-endian and little-endian storage schemes US5935232 * Nov 14, 1997 Aug 10, 1999 Advanced Micro Devices, Inc. Variable latency and bandwidth communication pathways US6014720 * May 5, 1997 Jan 11, 2000 Intel Corporation Dynamically sizing a bus transaction for dual bus size interoperability based on bus transaction signals US6587897 * Jun 16, 2000 Jul 1, 2003 Unisys Corporation Method for enhanced I/O in an emulated computing environment US6691307 * Aug 3, 1999 Feb 10, 2004 Sun Microsystems, Inc. Interpreter optimization for native endianness US7685407 * Mar 23, 2010 Renesas Technology Corp. Semiconductor device and data processing system selectively operating as one of a big endian or little endian system US7934077 Apr 26, 2011 Renesas Electronics Corporation",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}