{
    "relation": [
        [
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "String",
            "int"
        ],
        [
            "ACCESSIBILITY_LIVE_REGION_ASSERTIVE",
            "ACCESSIBILITY_LIVE_REGION_NONE",
            "ACCESSIBILITY_LIVE_REGION_POLITE",
            "DRAWING_CACHE_QUALITY_AUTO",
            "DRAWING_CACHE_QUALITY_HIGH",
            "DRAWING_CACHE_QUALITY_LOW",
            "FIND_VIEWS_WITH_CONTENT_DESCRIPTION",
            "FIND_VIEWS_WITH_TEXT",
            "FOCUSABLES_ALL",
            "FOCUSABLES_TOUCH_MODE",
            "FOCUS_BACKWARD",
            "FOCUS_DOWN",
            "FOCUS_FORWARD",
            "FOCUS_LEFT",
            "FOCUS_RIGHT",
            "FOCUS_UP",
            "GONE",
            "HAPTIC_FEEDBACK_ENABLED",
            "IMPORTANT_FOR_ACCESSIBILITY_AUTO",
            "IMPORTANT_FOR_ACCESSIBILITY_NO",
            "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS",
            "IMPORTANT_FOR_ACCESSIBILITY_YES",
            "INVISIBLE",
            "KEEP_SCREEN_ON",
            "LAYER_TYPE_HARDWARE",
            "LAYER_TYPE_NONE",
            "LAYER_TYPE_SOFTWARE",
            "LAYOUT_DIRECTION_INHERIT",
            "LAYOUT_DIRECTION_LOCALE",
            "LAYOUT_DIRECTION_LTR",
            "LAYOUT_DIRECTION_RTL",
            "MEASURED_HEIGHT_STATE_SHIFT",
            "MEASURED_SIZE_MASK",
            "MEASURED_STATE_MASK",
            "MEASURED_STATE_TOO_SMALL",
            "NO_ID",
            "OVER_SCROLL_ALWAYS",
            "OVER_SCROLL_IF_CONTENT_SCROLLS",
            "OVER_SCROLL_NEVER",
            "SCREEN_STATE_OFF",
            "SCREEN_STATE_ON",
            "SCROLLBARS_INSIDE_INSET",
            "SCROLLBARS_INSIDE_OVERLAY",
            "SCROLLBARS_OUTSIDE_INSET",
            "SCROLLBARS_OUTSIDE_OVERLAY",
            "SCROLLBAR_POSITION_DEFAULT",
            "SCROLLBAR_POSITION_LEFT",
            "SCROLLBAR_POSITION_RIGHT",
            "SCROLL_AXIS_HORIZONTAL",
            "SCROLL_AXIS_NONE",
            "SCROLL_AXIS_VERTICAL",
            "SOUND_EFFECTS_ENABLED",
            "STATUS_BAR_HIDDEN",
            "STATUS_BAR_VISIBLE",
            "SYSTEM_UI_FLAG_FULLSCREEN",
            "SYSTEM_UI_FLAG_HIDE_NAVIGATION",
            "SYSTEM_UI_FLAG_IMMERSIVE",
            "SYSTEM_UI_FLAG_IMMERSIVE_STICKY",
            "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN",
            "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION",
            "SYSTEM_UI_FLAG_LAYOUT_STABLE",
            "SYSTEM_UI_FLAG_LOW_PROFILE",
            "SYSTEM_UI_FLAG_VISIBLE",
            "SYSTEM_UI_LAYOUT_FLAGS",
            "TEXT_ALIGNMENT_CENTER",
            "TEXT_ALIGNMENT_GRAVITY",
            "TEXT_ALIGNMENT_INHERIT",
            "TEXT_ALIGNMENT_TEXT_END",
            "TEXT_ALIGNMENT_TEXT_START",
            "TEXT_ALIGNMENT_VIEW_END",
            "TEXT_ALIGNMENT_VIEW_START",
            "TEXT_DIRECTION_ANY_RTL",
            "TEXT_DIRECTION_FIRST_STRONG",
            "TEXT_DIRECTION_INHERIT",
            "TEXT_DIRECTION_LOCALE",
            "TEXT_DIRECTION_LTR",
            "TEXT_DIRECTION_RTL",
            "VIEW_LOG_TAG",
            "VISIBLE"
        ],
        [
            "Live region mode specifying that accessibility services should interrupt ongoing speech to immediately announce changes to this view.",
            "Live region mode specifying that accessibility services should not automatically announce changes to this view.",
            "Live region mode specifying that accessibility services should announce changes to this view.",
            "Enables automatic quality mode for the drawing cache.",
            "Enables high quality mode for the drawing cache.",
            "Enables low quality mode for the drawing cache.",
            "Find find views that contain the specified content description.",
            "Find views that render the specified text.",
            "View flag indicating whether addFocusables(ArrayList, int, int) should add all focusable Views regardless if they are focusable in touch mode.",
            "View flag indicating whether addFocusables(ArrayList, int, int) should add only Views focusable in touch mode.",
            "Use with focusSearch(int).",
            "Use with focusSearch(int).",
            "Use with focusSearch(int).",
            "Use with focusSearch(int).",
            "Use with focusSearch(int).",
            "Use with focusSearch(int).",
            "This view is invisible, and it doesn't take any space for layout purposes.",
            "View flag indicating whether this view should have haptic feedback enabled for events such as long presses.",
            "Automatically determine whether a view is important for accessibility.",
            "The view is not important for accessibility.",
            "The view is not important for accessibility, nor are any of its descendant views.",
            "The view is important for accessibility.",
            "This view is invisible, but it still takes up space for layout purposes.",
            "View flag indicating that the screen should remain on while the window containing this view is visible to the user.",
            "Indicates that the view has a hardware layer.",
            "Indicates that the view does not have a layer.",
            "Indicates that the view has a software layer.",
            "Horizontal layout direction of this view is inherited from its parent.",
            "Horizontal layout direction of this view is from deduced from the default language script for the locale.",
            "Horizontal layout direction of this view is from Left to Right.",
            "Horizontal layout direction of this view is from Right to Left.",
            "Bit shift of MEASURED_STATE_MASK to get to the height bits for functions that combine both width and height into a single int, such as getMeasuredState() and the childState argument of resolveSizeAndState(int, int, int).",
            "Bits of getMeasuredWidthAndState() and getMeasuredWidthAndState() that provide the actual measured size.",
            "Bits of getMeasuredWidthAndState() and getMeasuredWidthAndState() that provide the additional state bits.",
            "Bit of getMeasuredWidthAndState() and getMeasuredWidthAndState() that indicates the measured size is smaller that the space the view would like to have.",
            "Used to mark a View that has no ID.",
            "Always allow a user to over-scroll this view, provided it is a view that can scroll.",
            "Allow a user to over-scroll this view only if the content is large enough to meaningfully scroll, provided it is a view that can scroll.",
            "Never allow a user to over-scroll this view.",
            "Indicates that the screen has changed state and is now off.",
            "Indicates that the screen has changed state and is now on.",
            "The scrollbar style to display the scrollbars inside the padded area, increasing the padding of the view.",
            "The scrollbar style to display the scrollbars inside the content area, without increasing the padding.",
            "The scrollbar style to display the scrollbars at the edge of the view, increasing the padding of the view.",
            "The scrollbar style to display the scrollbars at the edge of the view, without increasing the padding.",
            "Position the scroll bar at the default position as determined by the system.",
            "Position the scroll bar along the left edge.",
            "Position the scroll bar along the right edge.",
            "Indicates scrolling along the horizontal axis.",
            "Indicates no axis of view scrolling.",
            "Indicates scrolling along the vertical axis.",
            "View flag indicating whether this view should have sound effects enabled for events such as clicking and touching.",
            "This constant was deprecated in API level 14. Use SYSTEM_UI_FLAG_LOW_PROFILE instead.",
            "This constant was deprecated in API level 14. Use SYSTEM_UI_FLAG_VISIBLE instead.",
            "Flag for setSystemUiVisibility(int): View has requested to go into the normal fullscreen mode so that its content can take over the screen while still allowing the user to interact with the application.",
            "Flag for setSystemUiVisibility(int): View has requested that the system navigation be temporarily hidden.",
            "Flag for setSystemUiVisibility(int): View would like to remain interactive when hiding the navigation bar with SYSTEM_UI_FLAG_HIDE_NAVIGATION.",
            "Flag for setSystemUiVisibility(int): View would like to remain interactive when hiding the status bar with SYSTEM_UI_FLAG_FULLSCREEN and/or hiding the navigation bar with SYSTEM_UI_FLAG_HIDE_NAVIGATION.",
            "Flag for setSystemUiVisibility(int): View would like its window to be layed out as if it has requested SYSTEM_UI_FLAG_FULLSCREEN, even if it currently hasn't.",
            "Flag for setSystemUiVisibility(int): View would like its window to be layed out as if it has requested SYSTEM_UI_FLAG_HIDE_NAVIGATION, even if it currently hasn't.",
            "Flag for setSystemUiVisibility(int): When using other layout flags, we would like a stable view of the content insets given to fitSystemWindows(Rect).",
            "Flag for setSystemUiVisibility(int): View has requested the system UI to enter an unobtrusive \"low profile\" mode.",
            "Special constant for setSystemUiVisibility(int): View has requested the system UI (status bar) to be visible (the default).",
            "Flags that can impact the layout in relation to system UI.",
            "Center the paragraph, e.g.",
            "Default for the root view.",
            "Default text alignment.",
            "Align to the end of the paragraph, e.g.",
            "Align to the start of the paragraph, e.g.",
            "Align to the end of the view, which is ALIGN_RIGHT if the view\u2019s resolved layoutDirection is LTR, and ALIGN_LEFT otherwise.",
            "Align to the start of the view, which is ALIGN_LEFT if the view\u2019s resolved layoutDirection is LTR, and ALIGN_RIGHT otherwise.",
            "Text direction is using \"any-RTL\" algorithm.",
            "Text direction is using \"first strong algorithm\".",
            "Text direction is inherited thru ViewGroup",
            "Text direction is coming from the system Locale.",
            "Text direction is forced to LTR.",
            "Text direction is forced to RTL.",
            "The logging tag used by this class with android.util.Log.",
            "This view is visible."
        ]
    ],
    "pageTitle": "DigitalClock | Android Developers",
    "title": "",
    "url": "https://developer.android.com/reference/android/widget/DigitalClock.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 5,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042982013.25/warc/CC-MAIN-20150728002302-00092-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 848233927,
    "recordOffset": 848168167,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "From class android.widget.TextView Inherited XML Attributes [Expand] Summary Like AnalogClock, but digital. Shows seconds. Class Overview This class was deprecated in API level 17. It is recommended you use TextClock instead. android.widget.DigitalClock \u00a0\u00a0\u00a0\u21b3 \u00a0 \u00a0 android.widget.TextView \u00a0\u00a0\u00a0\u21b3 \u00a0 android.view.View \u00a0\u00a0\u00a0\u21b3 java.lang.Object TextView DigitalClock API level 17 API level 1 [Expand All]Inherited MethodsProtected MethodsMethodsCtorsInherited FieldsInherited ConstantsInherited XML Attrs }); scrollIntoView(\"classes-nav\"); scrollIntoView(\"packages-nav\"); $(document).ready(function() { // scroll the selected page into view } } init_default_navtree(\"/\"); if ($(\"#nav-tree\").is(':visible')) extends public class Deprecated since Added in | | | | | | | Summary:",
    "textAfterTable": "android:accessibilityTraversalBefore setAccessibilityTraversalBefore(int) Sets the id of a view before which this one is visited in accessibility traversal.\u00a0 android:alpha setAlpha(float) alpha property of the view, as a value between 0 (completely transparent) and 1 (completely opaque).\u00a0 android:background setBackgroundResource(int) A drawable to use as the background.\u00a0 android:backgroundTint setBackgroundTintList(ColorStateList) Tint to apply to the background.\u00a0 android:backgroundTintMode setBackgroundTintMode(PorterDuff.Mode) Blending mode used to apply the background tint.\u00a0 android:clickable setClickable(boolean) Defines whether this view reacts to click events.\u00a0 android:contentDescription setContentDescription(CharSequence) Defines text that briefly describes content of the view.\u00a0 android:drawingCacheQuality setDrawingCacheQuality(int) Defines the quality of translucent drawing caches.\u00a0 android:duplicateParentState When this attribute is set to true, the view gets its drawable state (focused, pressed, etc.) from its direct parent rather than from itself.\u00a0",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}