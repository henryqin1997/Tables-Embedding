{
    "relation": [
        [
            "Date",
            "Nov 21, 1988",
            "Oct 5, 1993",
            "Apr 24, 1995",
            "Apr 14, 1999",
            "Jun 28, 2002",
            "Apr 8, 2003",
            "Oct 31, 2003"
        ],
        [
            "Code",
            "AS",
            "CC",
            "FPAY",
            "FPAY",
            "AS",
            "FPAY",
            "AS"
        ],
        [
            "Event",
            "Assignment",
            "Certificate of correction",
            "Fee payment",
            "Fee payment",
            "Assignment",
            "Fee payment",
            "Assignment"
        ],
        [
            "Description",
            "Owner name: XEROX CORPORATION, A CORP. OF NY, CONNECTICUT Free format text: ASSIGNMENT OF ASSIGNORS INTEREST.;ASSIGNOR:ABBOTT, CURTIS;REEL/FRAME:005005/0756 Effective date: 19881118",
            "",
            "Year of fee payment: 4",
            "Year of fee payment: 8",
            "Owner name: BANK ONE, NA, AS ADMINISTRATIVE AGENT, ILLINOIS Free format text: SECURITY INTEREST;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:013153/0001 Effective date: 20020621",
            "Year of fee payment: 12",
            "Owner name: JPMORGAN CHASE BANK, AS COLLATERAL AGENT,TEXAS Free format text: SECURITY AGREEMENT;ASSIGNOR:XEROX CORPORATION;REEL/FRAME:015134/0476 Effective date: 20030625"
        ]
    ],
    "pageTitle": "Patent US5070478 - Modifying text data to change features in a region of text - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US5070478?dq=5,579,517",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 9,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990217.27/warc/CC-MAIN-20150728002310-00097-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 483980623,
    "recordOffset": 483937395,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{45119=A number of conventional techniques relating to punctuation of natural language text are discussed in copending, coassigned U.S. patent application Ser. No. 07/274,158 filed Nov. 21, 1988, entitled \"Processing Natural Language Text Using Autonomous Punctuational Structure\" (\"the Trollope application\"), and incorporated herein by reference., 49001=Text Editing and Processing, Symbolics, Inc., #999020, July 1986, pp. 24-31 and 63-111, describes text editing features of a version of Emacs called \"Zmacs.\" Pages 67-70 describe mouse operations, including clicking on a word to copy the whole word; on a parenthesis to copy it, its matching parenthesis, and the text between them; on a quotation mark to copy it, its matching quotation mark, and the text between them; or after or before a line to copy the whole line. Appropriate spaces are placed before inserted objects, so that spaces are automatically inserted around an inserted word or sentence. Pages 71-75 describe motion commands, including motion by word, meaning a string of alphanumeric characters; by sentence, ending with a question mark, period, or exclamation point that is followed by a newline or by a space and a newline or another space, with any number of closing characters between the sentence ending punctuation and the white space that follows; and by line, delimited by a newline. Page 79 describes motion by paragraph, delimited by a newline followed by blanks, a blank line, or a page character alone on a line; page 80 describes motion by page, delimited by a page character. Chapter 5, pages 83-97, describes deleting and transposing text, with pages 97-89 describing how contents of a history are retrieved. Chapter 6, pages 99-111, describes working with regions, and discusses point and mark., 122935=10:30, 63294=The invention solves this problem through punctuator functions that identify certain features of the textual type punctuational structure of a selection using a grammar of textual types; data relating to these features is subsequently used to determine an appropriate sequence of operations to correct textual type punctuational structure. The use of a grammar of textual types in relation to punctuational structure is discussed in greater detail in the Trollope application incorporated herein be reference. In the present invention, the punctuator functions can infer the textual type punctuational structure of the text in the region of each end of a selection based on a grammar of textual types applied to the text codes from those regions. For example, a punctuator function can tokenize the text codes, and then identify textual type boundaries by matching the token stream against a predefined set of token patterns derived from the grammar of textual types., 72579=A \"grammar of textual types\" is a set of textual types rules in which each rule indicates, for a respective textual type, textual types of textual type units into which a textual type unit of the respective textual type can be divided. In addition, a \"grammar of textual types\" defines all and only the acceptable divisions of textual type units., 50458=Kucera et al., U.S. Pat. No. 4,773,009, describe a text analyzer that analyzes strings of digitally coded text to determine paragraph and sentence boundaries. As shown and described in relation to FIGS. 3-4, each string is broken down into component words. Possible abbreviations are identified and checked against a table of common abbreviations to identify abbreviations that cannot end a sentence. End punctuation and the following string are analyzed to identify the terminal word of a sentence. When sentence boundaries have been determined, a grammar checker, punctuation analyzer, readability analyzer, or other higher-level text processing can be applied., 45500=Text Editing, VP Series Reference Library, Version 1.0, Xerox Corporation, 1985, pp. 47-56, describes features of the ViewPoint Document Document Editor available from Xerox Corporation. Pages 49-52 described the multiple clicking method of selection, in which the number of mouse button clicks indicates the desired unit of text, with one click selecting a character, two clicks selecting a word, three clicks selecting a sentence, and four clicks selecting a paragraph. The editor uses special rules to interpret text as words or sentences. As described at page 49, a selection of a character, word, sentence, or paragraph by the multiple clicking method clicking method can be extended by a select adjust method to includes additional characters, words, sentences, or paragraphs, respectively. Move, copy, and delete operations can be applied to the selection. In the case of move or copy operations, a selection by the multiple clicking method will be positioned between other text units of the same level, so that a word will be positioned between words, a sentence between sentences, and a paragraph between paragraphs. A selection by the multiple clicking method also includes the preceding or following space or spaces; therefore, a word can be moved or deleted from a sentence, for example, leaving the remaining words and punctuation marks in the sentence correctly spaced; similarly, a sentence can be moved or deleted from a paragraph, leaving the remaining sentences in the paragraph correctly spaced.}",
    "textBeforeTable": "Patent Citations Although the invention has been described in relation to various implementations, together with modifications ,variations and extensions thereof, other implementations, modifications, variations and extensions are within the scope of the invention. The invention is therefore not limited by the description contained herein or by the drawings, but only by the claims. ##SPC1## If the host editor had access to functions like spell checking or search and find, the results of calling such functions might have implications for punctuational structure. Therefore, additional fix-up functions could be added to TIAB to handle such operations. In the implementation of Appendices A-D, TIAB assumes that positions in the host editor's character buffer can be described by a 32-bit integer. This could be generalized by using a more abstract notion of buffer position, so that it would be more easily adaptable to a greater diversity of host editors. In general, the rules and patterns applied by the implementation of Appendices A-D are implicit in the functions, but the rules and patterns could alternatively be included in separate data structures as shown for the patterns in FIG. 2, if that would be convenient. The rules and patterns in Appendices A-D resolve all ambiguities in punctuation in a predetermined manner, but it would alternatively be possible to prompt the user to resolve certain troublesome ambiguities. The implementation of Appendices A-D is appropriate for the cut-copy-paste paradigm of text editing. It could easily be",
    "textAfterTable": "4 Inside Macintosh, Apple Computer, Inc., 1985, pp. I-1373 through I-391. 5 Leibowitz, M. B., \"A Process for Automated Logic-Syntatic Analysis of Natural English Sentences\", presented to Graduate Committee of Lehigh University, 1970, pp. 58-101. 6 * Leibowitz, M. B., A Process for Automated Logic Syntatic Analysis of Natural English Sentences , presented to Graduate Committee of Lehigh University, 1970, pp. 58 101. 7 Rosenthal, S., \"Yes PC Fans, They Still Make Typewriters\", San Francisco Examiner, Mar. 27, 1988. 8 * Rosenthal, S., Yes PC Fans, They Still Make Typewriters , San Francisco Examiner , Mar. 27, 1988. 9 * Text Editing , VP Series Reference Library, Version 1.0, Xerox Corporation, 1985, pp. 47 56. 10 * Text Editing and Processing , Symbolics, Inc. 999020, Jul. 1986, pp. 24 31 and 63 111. 11 Text Editing and Processing, Symbolics, Inc. #999020, Jul. 1986, pp. 24-31 and 63-111. 12 Text Editing, VP Series Reference",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}