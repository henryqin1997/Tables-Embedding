{
    "relation": [
        [
            "Zitiert von Patent",
            "US7512956 *",
            "US8250552 *",
            "US8438609",
            "US8495708",
            "US8695021 *",
            "US8832679 *",
            "US8874425",
            "US20100125835 *",
            "US20110302274 *",
            "US20150020084 *",
            "WO2012129639A2 *"
        ],
        [
            "Eingetragen",
            "14. Aug. 2003",
            "17. Nov. 2008",
            "28. Juni 2007",
            "22. M\ufffdrz 2007",
            "31. Aug. 2011",
            "28. Aug. 2007",
            "28. Juni 2007",
            "17. Nov. 2008",
            "26. Febr. 2010",
            "4. Apr. 2014",
            "31. M\ufffdrz 2011"
        ],
        [
            "Ver\ufffdffentlichungsdatum",
            "31. M\ufffdrz 2009",
            "21. Aug. 2012",
            "7. Mai 2013",
            "23. Juli 2013",
            "8. Apr. 2014",
            "9. Sept. 2014",
            "28. Okt. 2014",
            "20. Mai 2010",
            "8. Dez. 2011",
            "15. Jan. 2015",
            "4. Okt. 2012"
        ],
        [
            "Antragsteller",
            "Hewlett-Packard Development Company, L.P.",
            "International Business Machines Corporation",
            "The Invention Science Fund I, Llc",
            "The Invention Science Fund I, Llc",
            "Microsoft Corporation",
            "Red Hat, Inc.",
            "The Invention Science Fund I, Llc",
            "International Business Machine Corporation",
            "Joon Hui Lee",
            "Microsoft Corporation",
            "Irdeto Canada Corporation"
        ],
        [
            "Titel",
            "System and method for supporting non-standard procedure calls",
            "High efficiency compilation framework for streamlining the execution of compiled code",
            "Resource authorizations dependent on emulation environment isolation policies",
            "Resource authorizations dependent on emulation environment isolation policies",
            "Projecting native application programming interfaces of an operating system into other programming languages",
            "Registration process for determining compatibility with 32-bit or 64-bit software",
            "Implementing performance-dependent transfer or execution decisions from service emulation indications",
            "High efficiency compilation framework",
            "Architecture of a network device for processing applications, and control method for the network device",
            "Projecting native application programming interfaces of an operating system into other programming languages",
            "Method of securing non-native code"
        ]
    ],
    "pageTitle": "Patent US20050102129 - Kernel emulator for non-native program modules - Google Patente",
    "title": "",
    "url": "http://www.google.de/patents/US20050102129?hl=de",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 6,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990217.27/warc/CC-MAIN-20150728002310-00221-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 481188711,
    "recordOffset": 481157162,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{16928=This application stems from and claims priority to U.S. Provisional Application Ser. No. 60/244,410, titled \u201cKernel Emulator for Non-Native Program Modules\u201d filed on Oct. 30, 2000, the disclosure of which is incorporated by reference herein. This application is a continuation of U.S. patent application Ser. No. 09/847,535, filed May 1, 2001, the disclosure of which is incorporated by reference herein., 19754=An example of a program-module target platform (or simply \u201ctarget platform\u201d) is the platform an executable program (e.g., program module, application, program) was targeted to run. For a program module, its target platform is also its native platform. For example, if one builds a Microsoft\ufffd Office\ufffd application to run under Windows\ufffd 2000 32-bit X86 OS environment then for that image target platform would be 32-bit x86., 19208=Specific versions of applications are designed to operate under a specific platform. These applications may be called \u201cnative\u201d when they execute under their specific platform. For example, Microsoft\ufffd Office 2000 is an application designed to operate on 32-bit platform. In other words, Microsoft\ufffd Office\ufffd 2000 is a native application relative to its 32-bit platform. However, these 32-bit applications may be called \u201cnon-native\u201d when they execute under a different platform, such as a 64-bit platform., 36154=This provisional application is incorporated by reference herein: U.S. Provisional Patent Application Ser. No. 60/244,410, titled \u201cKernel Emulator for Non-Native Program Modules\u201d filed on Oct. 30, 2000., 18364=A computing platform typically includes an operating system (OS) and computing hardware architecture. Examples of OSs include these Microsoft\ufffd operating systems: MS-DOS\ufffd, Windows\ufffd 2000, Windows NT\ufffd 4.0, Windows\ufffd ME, Windows\ufffd 98, and Windows\ufffd 95. Examples of computing hardware architecture include those associated with these Intel\ufffd microprocessors: 80286, Pentium\ufffd, Pentium\ufffd II, Pentium\ufffd III, and Itanium\u2122.}",
    "textBeforeTable": "Patentzitate Although the invention has been described in language specific to structural features and/or methodological steps, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or steps described. Rather, the specific features and steps are disclosed as preferred forms of implementing the claimed invention. Conclusion The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above are also included within the scope of computer readable media. \u201cCommunication media\u201d typically embodies computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as carrier wave or other transport mechanism. Communication media also includes any information delivery media. \u201cComputer storage media\u201d include volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory",
    "textAfterTable": "US5623617 * 7. Juni 1995 22. Apr. 1997 Apple Computer, Inc. Method for decoding sequences of guest instructions for a host computer US5652876 * 18. Sept. 1996 29. Juli 1997 Apple Computer, Inc. Method and apparatus for launching files created by non-resident application programs US5761477 * 4. Dez. 1995 2. Juni 1998 Microsoft Corporation Methods for safe and efficient implementations of virtual machines US5768593 * 22. M\ufffdrz 1996 16. Juni 1998 Connectix Corporation Dynamic cross-compilation system and method US5802373 * 29. Jan. 1996 1. Sept. 1998 Digital Equipment Corporation Method for providing a pipeline interpreter for a variable length instruction set US5842017 * 29. Jan. 1996 24. Nov. 1998 Digital Equipment Corporation Method and apparatus for forming a translation unit US5860072 * 11. Juli 1996 12. Jan. 1999 Tandem Computers Incorporated Method and",
    "hasKeyColumn": true,
    "keyColumnIndex": 3,
    "headerRowIndex": 0
}