{
    "relation": [
        [
            "Test Case",
            "Only upper limit",
            "",
            "",
            "",
            "Start and end",
            "",
            "",
            "",
            "Also step given",
            "",
            "",
            "",
            "Negative step",
            "",
            ""
        ],
        [
            "Action",
            "[Documentation]",
            ":FOR",
            "",
            "",
            "[Documentation]",
            ":FOR",
            "",
            "",
            "[Documentation]",
            ":FOR",
            "",
            "",
            "[Documentation]",
            ":FOR",
            ""
        ],
        [
            "Argument",
            "Loops over",
            "${index}",
            "Log",
            "",
            "Loops over",
            "${index}",
            "Log",
            "",
            "Loops over",
            "${index}",
            "Log",
            "",
            "Loops over",
            "${index}",
            "Log"
        ],
        [
            "Argument",
            "values",
            "IN RANGE",
            "${index}",
            "",
            "values",
            "IN RANGE",
            "${index}",
            "",
            "values",
            "IN RANGE",
            "${index}",
            "",
            "values",
            "IN RANGE",
            "${index}"
        ],
        [
            "Arg",
            "from 0",
            "10",
            "",
            "",
            "from 1",
            "1",
            "",
            "",
            "5, 15,",
            "5",
            "",
            "",
            "13, 3,",
            "13",
            ""
        ],
        [
            "Arg",
            "to 9",
            "",
            "",
            "",
            "to 10",
            "11",
            "",
            "",
            "and 25",
            "26",
            "",
            "",
            "and -7",
            "-13",
            ""
        ],
        [
            "Arg",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "10",
            "",
            "",
            "",
            "-10",
            ""
        ]
    ],
    "pageTitle": "Robot Framework User Guide",
    "title": "For in range examples",
    "url": "http://robotframework.googlecode.com/svn/tags/robotframework-2.0.4/doc/userguide/RobotFrameworkUserGuide.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 72,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988650.53/warc/CC-MAIN-20150728002308-00064-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 203012811,
    "recordOffset": 202902520,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{21652=Robot Framework requires Jython version 2.2. The earlier Jython version 2.1 is not compatible with Robot Framework, and Jython 2.2 betas and alphas are not supported either. Unfortunately, also Jython 2.2.1 has certain Unicode problems (for more information, see http://bugs.jython.org/issue1802339 and http://bugs.jython.org/issue1032).}",
    "TableContextTimeStampAfterTable": "{537942=Generated on: 2009-01-13 14:30 UTC., 292411=With Jython 2.2 you need to modify the Jython start-up script (jython shell script or jython.bat batch file) by adding the needed options (e.g. -Xmx1024m which sets the maximum memory to 1024 megabytes) to the java command. On Windows the final command could look like this:, 349142=Times must be given as timestamps in the format YYYY-MM-DD hh:mm:ss.mil, where all separators are optional and the parts from milliseconds to hours can be omitted. For example, 2008-06-11 17:59:20.495 is equivalent both to 20080611-175920.495 and 20080611175920495, and also mere 20080611 would work.}",
    "lastModified": "Tue, 13 Jan 2009 14:32:27 GMT",
    "textBeforeTable": "In HTML files, the test data is defined in separate tables (see the example below). Robot Framework recognizes these test data tables based on the text in their first cell. Everything outside recognized tables is ignored. HTML format Different test data templates are available to make it easier to get started writing tests. Robot Framework test data is defined in tabular format, using either the HTML (hypertext markup language) or TSV (tab-separated values) format. Robot Framework selects a parser for the test data based on the file extension. The extension is case-insensitive, and the recognized extensions are .html, .htm and .xhtml for HTML, and .tsv for TSV. 2.1.2\u00a0\u00a0\u00a0Supported file formats Variable files to provide more flexible ways to create variables than resource files Resource files with variables and higher-level user keywords Test libraries containing the lowest-level keywords In addition to this, there are: Test suite directories can have a special initialization file. A test suite directory can also contain other test suite directories, and this hierarchical structure can be as deeply nested as needed. A directory containing test case files forms a higher-level test suite. Such a test suite directory has suites created from test case files as its sub test suites. A test case file automatically creates a",
    "textAfterTable": "Using the TSV format *Setting* *Value* *Value* *Value* Library OperatingSystem *Variable* *Value* *Value* *Value* ${MESSAGE} Hello, world! *Test Case* *Action* *Argument* *Argument* My Test [Documentation] Example test Log ${MESSAGE} My Keyword /tmp Another Test Should Be Equal ${MESSAGE} Hello, world! *Keyword* *Action* *Argument* *Argument* My Keyword [Argument] ${path} Directory Should Exist ${path} You can create and edit TSV files in any spreadsheet program, such as Microsoft Excel. Select the tab-separated format when you save the file and remember to set the file extension to .tsv. The TSV format can be used in Robot Framework's test data for all the same purposes as HTML. Robot Framework parses TSV data by first splitting all the content into rows and then rows into cells on the basis of the tabular characters. Spreadsheet programs sometimes surround cells with quotes (for example, \"my value\") and Robot Framework removes them. Possible quotes inside the data are doubled",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}