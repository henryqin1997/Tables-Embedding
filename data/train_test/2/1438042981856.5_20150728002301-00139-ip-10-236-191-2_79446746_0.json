{
    "relation": [
        [
            "Address",
            "00",
            "01",
            "02",
            "03",
            "04",
            "05",
            "06",
            "07",
            "08",
            "09",
            "10",
            "11",
            "12"
        ],
        [
            "Name",
            "Configuration Register A",
            "Configuration Register B",
            "Mode Register",
            "Data Output X MSB Register",
            "Data Output X LSB Register",
            "Data Output Z MSB Register",
            "Data Output Z LSB Register",
            "Data Output Y MSB Register",
            "Data Output Y LSB Register",
            "Status Register",
            "Identification register A",
            "Identification register B",
            "Identification register C"
        ],
        [
            "Access",
            "Read/Write",
            "Read/Write",
            "Read/Write",
            "Read",
            "Read",
            "Read",
            "Read",
            "Read",
            "Read",
            "Read",
            "Read",
            "Read",
            "Read"
        ]
    ],
    "pageTitle": "Sparkfun: HMC5883L Magnetometer - eLinux.org",
    "title": "",
    "url": "http://elinux.org/index.php?title=Sparkfun:_HMC5883L_Magnetometer&oldid=180818",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 0,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981856.5/warc/CC-MAIN-20150728002301-00139-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 79464295,
    "recordOffset": 79446746,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{9571=The new values for each axis can be read from registers 03-08 as shown above. By default the measurements correspond to 1090 LSB/Gauss, but this can be changed by modifying the gain in Configuration Register B.}",
    "textBeforeTable": "the HMC5883L has 13 8-bit registers: Communicating with the HMC5883L Using the Shell The address should be 0x1e 70: -- -- -- -- -- -- -- -- 60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 50: -- -- -- -- UU UU UU UU -- -- -- -- -- -- -- -- 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 10: -- -- -- -- -- -- -- -- -- -- -- UU -- -- 1e -- 00: -- -- -- -- -- -- -- -- -- -- -- -- -- 0 1 2 3 4 5 6 7 8 9 a b c d e f beagle$ i2cdetect -y -r 3 The address of the magnetometer can be found by using the i2cdetect command from the shell. I get:    The Beagle Bone can be connected to the magnetometer via the I2C bus. Ground and Vcc on the breakout board should be connected to pins 1 and 2 respectively on the bone's P9 header, and the SCL and SDA pins should be connected to one of the I2C pairs on the bone. I",
    "textAfterTable": "The sensor values for each axis are 16-bit and are stored across 2 registers each assuming the devise is connected to I2C bus 3. beagle$ i2cget -y 3 0x1e 3 beagle$ i2cget -y 3 0x1e 4 will get the two halves of the 16-bit signed measurement along the +x axis. By default the magnetometer takes a single sample and enters idle mode.The lowest two bits of the mode register (register 02) control the measurement mode. Setting these to 0x01 will cause the device to take one measurement and then enter idle mode again. Setting to 0x00 should cause the device to enter continuous measurement mode where measurements are taken periodically at a sampling rate set by configuration register A (register 00), beagle$ i2cset -y 3 0x1e 2 1 writes a 1 to register 02 and this will cause a single measurement to be taken. The new values for each axis can be read from registers 03-08 as shown above. By default the measurements correspond to 1090 LSB/Gauss, but this can be changed by modifying the gain in Configuration Register B. Note: reading a value of 0xF000 (-4096) in a data output register indicates an overflow or underflow error in the ADC or a math error. Using C the I2C code from exercise 12 should work for the magnetometer, but it produces an error trying to read from or write to the device. This is",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}