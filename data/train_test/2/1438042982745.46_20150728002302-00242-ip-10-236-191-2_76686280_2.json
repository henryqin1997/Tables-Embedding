{
    "relation": [
        [
            "Knowledge Module",
            "CKM Get Oracle BAM Metadata",
            "IKM SQL to Oracle BAM (delete)",
            "IKM SQL to Oracle BAM (insert)",
            "IKM SQL to Oracle BAM (looksert natural)",
            "IKM SQL to Oracle BAM (looksert surrogate)",
            "IKM SQL to Oracle BAM (update)",
            "IKM SQL to Oracle BAM (upsert)",
            "LKM Get Source Metadata",
            "LKM Oracle BAM to SQL",
            "RKM Oracle BAM"
        ],
        [
            "Description",
            "A check knowledge module that is used internally before integration knowledge module steps. This check knowledge module is the default knowledge module in Oracle BAM technology, and it is automatically acquired by Oracle Data Integrator. This check knowledge module creates two arrays which are later used by Oracle BAM-specific integration knowledge modules in the same Java session. This knowledge module has no options.",
            "An integration knowledge module that can delete rows from Oracle BAM data objects by sending matching key column values. It has the following options: COMMIT_SIZE BATCH_SIZE DATETIME_PATTERN KEY_CONDITION LAST_BAM_TASK LOCALE_COUNTRY LOCALE_LANGUAGE LOCALE_VARIANT",
            "An integration knowledge module that can insert rows to Oracle BAM data objects from heterogeneous data sources. It has the following options: BATCH_SIZE COMMIT_SIZE CREATE_TARG_TABLE DATETIME_PATTERN LAST_BAM_TASK LOCALE_COUNTRY LOCALE_LANGUAGE LOCALE_VARIANT",
            "An integration knowledge module that can insert rows into Oracle BAM data objects from heterogeneous data sources. It differs from IKM SQL to Oracle BAM (insert) by also inserting new entries in dimension tables (that is, the data object to which the lookup column refers) if it does not yet exist. Looksert integration knowledge modules do an insert into an Oracle BAM target based on a lookup field. Typically, this is used to load a fact table in a star schema. (A star schema is characterized by one or more very large fact tables that contain the primary information in the data warehouse, and some much smaller dimension tables (or lookup tables), each of which contains information about the entries for a particular attribute in the fact table.) This integration knowledge module is provided for better performance. It has the following options: BATCH_SIZE COMMIT_SIZE DATETIME_PATTERN LAST_BAM_TASK LOCALE_COUNTRY LOCALE_LANGUAGE LOCALE_VARIANT NON_KEY_MATCHING",
            "An integration knowledge module that can insert rows into Oracle BAM data objects from heterogeneous data sources. It is similar to IKM SQL to Oracle BAM (looksert natural) and differs in using a surrogate key instead of a natural key between a fact data object and dimension object. Looksert integration knowledge modules do an insert into an Oracle BAM data object based on a lookup field. Typically, this used to load a fact table in a star schema. (A star schema is characterized by one or more very large fact tables that contain the primary information in the data warehouse, and some much smaller dimension tables (or lookup tables), each of which contains information about the entries for a particular attribute in the fact table.) If the value for a lookup field does not exist in the relevant dimension table, the value is automatically inserted. This integration knowledge module must be used with LKM Get Source Metadata and CKM Get Oracle BAM Metadata. This knowledge module has the following options: BATCH_SIZE COMMIT_SIZE DATETIME_PATTERN LAST_BAM_TASK LOCALE_COUNTRY LOCALE_LANGUAGE LOCALE_VARIANT NON_KEY_MATCHING",
            "An integration knowledge module that can update rows in Oracle BAM data objects from heterogeneous data sources. It has the following options: BATCH_SIZE COMMIT_SIZE DATETIME_PATTERN LAST_BAM_TASK LOCALE_COUNTRY LOCALE_LANGUAGE LOCALE_VARIANT",
            "An integration knowledge module that can merge (upsert) rows (that is, update a data object if matching row exists or insert data object if a new row) to Oracle BAM data objects from heterogeneous data sources. It has the following options: BATCH_SIZE COMMIT_SIZE DATETIME_PATTERN LAST_BAM_TASK LOCALE_COUNTRY LOCALE_LANGUAGE LOCALE_VARIANT Note: During execution, the number of upsert operations are reported in the No. of Updates field, because the Oracle Data Integrator Operator user interface does not have a No. of Upserts field. Furthermore, the count for all of the inserts and updates to the Oracle BAM database are reported in the Updates field, and are not reported separately.",
            "A loading knowledge module. This is not a traditional loading knowledge module because it does not load any data from the source to staging area. Instead it simply gathers the metadata that is required by the integration knowledge module IKM SQL to Oracle BAM (looksert surrogate). IKM ORACLE to BAM (looksert surrogate) performs the task of loading directly from a SQL source into the Oracle BAM target. In doing so, it uses the metadata provided by LKM Get Source Metadata. This knowledge module has no options.",
            "A loading knowledge module that allows client applications to load data from Oracle BAM. If using an Oracle BAM loading knowledge module as a source in an interface (for example LKM Oracle BAM to SQL), the user must change the default execute on button for each mapped field in the target to staging area. If left at the default source, erroneous results may occur. Technologies that do not allow for a staging area, such as Oracle BAM, should not have transformations performed on them. It has the following options: DELETE_TEMPORARY_OBJECTS DROP_PURGE LAST_BAM_TASK",
            "A customized reverse engineering knowledge module for Oracle BAM. It has the following options: GET_COLUMNS GET_FOREIGN_KEYS GET_INDEXES GET_PRIMARY_KEYS LOG_FILE_NAME USE_LOG"
        ]
    ],
    "pageTitle": "Using Oracle\u00a0Data\u00a0Integrator With Oracle\u00a0BAM",
    "title": "",
    "url": "http://docs.oracle.com/cd/E23943_01/dev.1111/e10224/bam_odi.htm",
    "hasHeader": true,
    "headerPosition": "MIXED",
    "tableType": "RELATION",
    "tableNum": 2,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042982745.46/warc/CC-MAIN-20150728002302-00242-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 76703067,
    "recordOffset": 76686280,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{9439=The default memory settings for Oracle Data Integrator are included in the odiparams.sh script (or odiparams.bat for windows). The values for the ODI_INIT_HEAP and ODI_MAX_HEAP properties default to 32M and 256M. It is recommended that you change these values to 256 M and 1024 M respectively. This enhances Oracle Data Integrator performance. Otherwise, Oracle Data Integrator OutOfMemory errors may occur, especially when running memory intensive tasks.}",
    "TableContextTimeStampAfterTable": "{22841=Default value: 1024}",
    "lastModified": "Wed, 13 May 2015 05:20:37 GMT",
    "textBeforeTable": "Table 57-3 Oracle BAM Knowledge Modules http://www.oracle.com/technetwork/middleware/data-integrator  For information about importing knowledge modules, see \"Importing a KM\" in Oracle Data Integrator User's Guide. Oracle Data Integrator documentation is located on the Oracle Technology Network web site at the following location: There is a set of knowledge modules specific to Oracle BAM functionality within Oracle Data Integrator. These knowledge modules are installed in the ODI_HOME/oracledi/impexp directory when the integration files are installed. To use these Oracle BAM-specific knowledge modules, you must import them into the appropriate projects in the Oracle Data Integrator Designer application. Table 57-3 describes the Oracle BAM-specific knowledge modules. There are different knowledge modules for loading (from the source data store), integration (to target data store), checking, reverse-engineering, journalizing and creating services. All knowledge modules work by generating code to be executed at runtime by knowledge module Interpreter. Knowledge modules are generic code templates containing the sequence of commands necessary for a data integration pattern. A knowledge module contains the knowledge required by Oracle Data Integrator to perform a specific set of tasks against a specific storage technology. It defines methods related to a given storage technology and it enables processes generation for that technology. 57.3 Using Oracle BAM Knowledge Modules       The bam_odi.logging.properties file is used to configure logging for messages that occur when Oracle Data Integrator is running with",
    "textAfterTable": "Table 57-4 describes the parameters used in Oracle BAM knowledge modules. Table 57-4 Oracle BAM Knowledge Module Parameters Parameter Description BATCH_SIZE The maximum number of records which are sent as a batch across from the client to the server. The batch size that is used to send batches from the client to the server. As larger hosts are used with bigger Java Virtual Machine sizes, this parameter can be increased to improve performance. Default value: 1024 COMMIT_SIZE The maximum number of records in a single transaction. The default, 0, means commit all input records in one transaction. A positive, nonzero, value denotes that the maximum number of records to be committed at a time.Negative values for this option are invalid. Default value: 0 CREATE_TARG_TABLE Select this option to create the target data object on Oracle BAM Server. DATETIME_PATTERN This option and Locale specifications (for example, LOCALE_LANGUAGE, LOCALE_COUNTRY, and LOCALE_VARIANT) are used to construct a Java SimpleDateFormat object which is used in parsing the date and time data",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}