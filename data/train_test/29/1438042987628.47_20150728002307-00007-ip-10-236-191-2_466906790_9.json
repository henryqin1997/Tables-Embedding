{
    "relation": [
        [
            "Date",
            "Sep 5, 2001",
            "Oct 3, 2002",
            "Apr 23, 2003",
            "Jan 6, 2006",
            "Jan 27, 2009",
            "Feb 6, 2013"
        ],
        [
            "Code",
            "AS",
            "AS",
            "AS",
            "AS",
            "FPAY",
            "FPAY"
        ],
        [
            "Event",
            "Assignment",
            "Assignment",
            "Assignment",
            "Assignment",
            "Fee payment",
            "Fee payment"
        ],
        [
            "Description",
            "Owner name: CHIPWRIGHTS DESIGN, INC., MASSACHUSETTS Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:REDFORD, JOHN;REEL/FRAME:012133/0116 Effective date: 20010821",
            "Owner name: BANCBOSTON INVESTMENTS INC., MASSACHUSETTS Free format text: SECURITY AGREEMENT;ASSIGNOR:CHIPWRIGHTS DESIGN, INC.;REEL/FRAME:013350/0578 Effective date: 20020913 Owner name: ESSEX REGIONAL RETIREMENT BOARD, MASSACHUSETTS Free format text: SECURITY AGREEMENT;ASSIGNOR:CHIPWRIGHTS DESIGN, INC.;REEL/FRAME:013350/0578 Effective date: 20020913 Owner name: MASSACHUSETTS TECHNOLOGY DEVELOPMENT CORP. (MTDC), Free format text: SECURITY AGREEMENT;ASSIGNOR:CHIPWRIGHTS DESIGN, INC.;REEL/FRAME:013350/0578 Effective date: 20020913 Owner name: NEW ENGLAND PARTNERS CAPITAL, L.P., MASSACHUSETTS Free format text: SECURITY AGREEMENT;ASSIGNOR:CHIPWRIGHTS DESIGN, INC.;REEL/FRAME:013350/0578 Effective date: 20020913 Owner name: TECHFARM VENTURES (Q), L.P., CALIFORNIA Free format text: SECURITY AGREEMENT;ASSIGNOR:CHIPWRIGHTS DESIGN, INC.;REEL/FRAME:013350/0578 Effective date: 20020913 Owner name: TECHFARM VENTURES L.P., CALIFORNIA Free format text: SECURITY AGREEMENT;ASSIGNOR:CHIPWRIGHTS DESIGN, INC.;REEL/FRAME:013350/0578 Effective date: 20020913",
            "Owner name: CHIPWRIGHTS DESIGN, INC., MASSACHUSETTS Free format text: TERMINATION/RELEASE OF INTEREST IN PATENTS;ASSIGNORS:BANCBOSTON INVESTMENTS INC.;TECHFARM VENTURES,L.P.;NEW ENGLAND PARTNERS CAPITAL, L.P.;AND OTHERS;REEL/FRAME:013989/0652 Effective date: 20030401",
            "Owner name: ADG ACQUISITION CORP., MASSACHUSETTS Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:FINN, JR., MR. JOSEPH F.;REEL/FRAME:016976/0533 Effective date: 20050523",
            "Year of fee payment: 4",
            "Year of fee payment: 8"
        ]
    ],
    "pageTitle": "Patent US6931518 - Branching around conditional processing if states of all single instruction ... - Google Patents",
    "title": "",
    "url": "http://www.google.com/patents/US6931518?dq=patent:+7360079",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 9,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987628.47/warc/CC-MAIN-20150728002307-00007-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 466933340,
    "recordOffset": 466906790,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "Patent Citations Embodiments of the invention have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the invention. Accordingly, other embodiments are within the scope of the following claims. Another branch process may be inserted at the start of conditional processing block 42 to determine whether the current PE states of all datapaths 18 (i.e. the PE states prior to performing any conditional processing statement) are disabled. If all PE states are disabled, none of datapaths 18 will perform either if-processing block 44 or else-processing block 46. Accordingly, this branch process will branch around the entire conditional processing block 42. As with branch processes 50, 60, branching is not performed if the deterministic bet DET is set. For example, branch processes 50, 60 may be used with other instructions that save and manipulate PE states during conditional processing. Other embodiments are within the scope of the following claims. As described in the copending application, a datapath's PE state is, under some conditions, inverted (i.e., from 0 to 1 or 1 to 0) prior to an else-processing block. The instruction for doing so is called a \u201cFLIP\u201d instruction in the copending application. Branch process 60 combines the FLIP instruction with the branching operation, and is of the following form: if (FLIP_PE (Px)) go to Y Branch process 60",
    "textAfterTable": "Highly parallel reconfigurable computer architecture for robotic computation having plural processor cells each having right and left ensembles of plural processors US5430854 Oct 27, 1993 Jul 4, 1995 Intel Corp Simd with selective idling of individual processors based on stored conditional flags, and with consensus among all flags used for conditional branching US5479624 Oct 14, 1992 Dec 26, 1995 Lee Research, Inc. High-performance interleaved memory system comprising a prime number of memory modules US5497478 Jan 31, 1995 Mar 5, 1996 Hewlett-Packard Company Memory access system and method modifying a memory interleaving scheme so that data can be read in any sequence without inserting wait cycles US5524223 Jun 12, 1995 Jun 4, 1996 Motorola, Inc. Instruction accelerator for processing loop instructions with address generator using multiple stored increment values US5542074 Oct 22, 1992 Jul 30, 1996 Maspar Computer Corporation Parallel processor system with highly flexible local control capability, including selective inversion of instruction signal and control of bit shift amount US5551039 Sep 30, 1994 Aug 27, 1996 Thinking Machines Corporation Compiling",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}