{
    "relation": [
        [
            "Component",
            "Help",
            "Update Manager",
            "Text",
            "Forms",
            "Welcome Page (aka Intro)",
            "Cheat Sheets",
            "Resources",
            "Console",
            "Outline and Properties views",
            "Graphical Editing Framework (GEF)",
            "Eclipse Modeling Framework (EMF) and Service Data Objects (SDO)"
        ],
        [
            "Description",
            "Web-app-based Help UI, with support for dynamic content.",
            "Allows users to discover and install updated versions of products and extensions.",
            "Framework for building high-function text editors.",
            "Forms-based control library and editor framework.",
            "Initial welcome experience and guided assistance.",
            "A Cheat Sheet guides the user through a long-running, multi-step task.",
            "Workspace resource model, with managed projects, folders and files.",
            "Extensible console view.",
            "Outline and Properties views",
            "Framework for building graphical editors. Includes Draw2D, a vector graphics framework.",
            "EMF is a modeling framework and code generation facility for building tools and other applications based on a structured data model. SDO is a framework that simplifies and unifies data application development in a service oriented arcecture (SOA)."
        ],
        [
            "Plug-ins",
            "org.eclipse.help.appserver org.eclipse.help.base org.eclipse.help.ui org.eclipse.help.webapp org.eclipse.tomcat org.apache.lucene",
            "org.eclipse.update.configurator org.eclipse.update.core org.eclipse.update.scheduler org.eclipse.update.ui + platform-specific fragments",
            "org.eclipse.text org.eclipse.jface.text org.eclipse.workbench.texteditor",
            "org.eclipse.ui.forms",
            "org.eclipse.ui.intro",
            "org.eclipse.ui.cheatsheets",
            "org.eclipse.core.resources",
            "org.eclipse.ui.console",
            "org.eclipse.ui.views",
            "org.eclipse.draw2d org.eclipse.gef",
            "EMF plug-in list from CVS"
        ],
        [
            "Documentation",
            "Platform Help home page Dev guide: Plugging in help",
            "Platform Update home page Dev guide: Updating a product or extension",
            "Platform Text home page Dev guide: Text editors and platform text",
            "Eclipse Forms Programming Guide (draft)",
            "Dev guide: Intro support",
            "Dev guide: Cheat Sheets",
            "Platform Core home page Dev guide: Resources overview",
            "Javadoc: org.eclipse.ui.console, org.eclipse.ui.console.actions",
            "TBD",
            "GEF home page Overview, FAQ",
            "EMF home page Overviews:EMF, EMF.Edit, SDO"
        ]
    ],
    "pageTitle": "Difference between revisions of \"Rich Client Platform/FAQ\" - Eclipsepedia",
    "title": "",
    "url": "http://wiki.eclipse.org/index.php?title=Rich_Client_Platform/FAQ&diff=prev&oldid=1833",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 2,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987171.38/warc/CC-MAIN-20150728002307-00141-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 257902239,
    "recordOffset": 257877789,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{53397=Copyright \u00a9 2014 The Eclipse Foundation. All Rights Reserved.}",
    "textBeforeTable": "The Eclipse Rich Client Platform consists of the following components: What is included in the Rich Client Platform? <div id=\"contents\"/> Eclipse whitepaper also applies, and is a good high-level overview of what is available in the Rich Client Platform. Although it speaks of the Eclipse IDE (which is itself an RCP application), almost all of the functionality described in Part 1 is available in the RCP. Exceptions are the Workspace model and Team support, which are components in the IDE, not the RCP. Part 2's discussion of JDT is specific to the Eclipse IDE, however it is a good illustration of how an application would be structured on top of the RCP. Also note that Part 1 of the original RCP page. For more details, see the main Rich Client Platform. While the Eclipse platform is designed to serve as an open tools platform, it is architected so that its components could be used to build just about any client application. The minimal set of plug-ins needed to build a rich client application is collectively known as the What is the Eclipse Rich Client Platform? 19 How can I define key bindings for commands? 18 How do I get my app to use Windows XP themes? 17 How",
    "textAfterTable": "Component Description Plug-ins Documentation Help Web-app-based Help UI, with support for dynamic content. org.eclipse.help.appserver org.eclipse.help.base org.eclipse.help.ui org.eclipse.help.webapp org.eclipse.tomcat org.apache.lucene Platform Help home page Dev guide: Plugging in help Update Manager Allows users to discover and install updated versions of products and extensions. org.eclipse.update.configurator org.eclipse.update.core org.eclipse.update.scheduler org.eclipse.update.ui + platform-specific fragments Platform Update home page Dev guide: Updating a product or extension Text Framework for building high-function text editors. org.eclipse.text org.eclipse.jface.text org.eclipse.workbench.texteditor Platform Text home page Dev guide: Text editors and platform text Forms Forms-based control library and editor framework. org.eclipse.ui.forms Eclipse Forms Programming Guide (draft) Welcome Page (aka Intro) Initial welcome experience and guided assistance. org.eclipse.ui.intro Dev guide: Intro support Cheat Sheets A Cheat Sheet guides the user through a long-running, multi-step task. org.eclipse.ui.cheatsheets Dev guide: Cheat Sheets Resources",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}