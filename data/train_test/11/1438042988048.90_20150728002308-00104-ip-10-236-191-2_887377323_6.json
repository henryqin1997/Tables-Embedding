{
    "relation": [
        [
            "File",
            "Resource file - local assembly",
            "Resource file in subfolder - local assembly",
            "Resource file - referenced assembly",
            "Resource file in subfolder - referenced assembly",
            "Content file",
            "Content file in subfolder"
        ],
        [
            "Relative pack URI",
            "Uri uri = new Uri(\"/ResourceFile.xaml\", UriKind.Relative);",
            "Uri uri = new Uri(\"/Subfolder/ResourceFile.xaml\", UriKind.Relative);",
            "Uri uri = new Uri(\"/ReferencedAssembly;component/ResourceFile.xaml\", UriKind.Relative);",
            "Uri uri = new Uri(\"/ReferencedAssembly;component/Subfolder/ResourceFile.xaml\", UriKind.Relative);",
            "Uri uri = new Uri(\"/ContentFile.xaml\", UriKind.Relative);",
            "Uri uri = new Uri(\"/Subfolder/ContentFile.xaml\", UriKind.Relative);"
        ]
    ],
    "pageTitle": "Pack URIs in Windows Presentation Foundation",
    "title": "",
    "url": "https://msdn.microsoft.com/en-us/library/vstudio/aa970069(v=vs.90)",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 6,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988048.90/warc/CC-MAIN-20150728002308-00104-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 887398011,
    "recordOffset": 887377323,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{11985=To identify parts, the OPC specification leverages the extensibility of RFC 2396 (Uniform Resource Identifiers (URI): Generic Syntax) to define the pack URI\u00a0scheme., 14445=The authority component of a pack URI is an embedded URI that points to a package and must conform to RFC 2396. Additionally, the \"/\" character must be replaced with the \",\" character, and reserved characters such as \"%\" and \"?\" must be escaped. See the OPC for details.}",
    "textBeforeTable": "To access these types of files, WPF supports two authorities: application:/// and siteoforigin:///. The application:/// authority identifies application data files that are known at compile time, including resource and content files. The siteoforigin:/// authority identifies site of origin files. The scope of each authority is shown in the following figure. Site of origin files. Content files. Resource files that are compiled into a referencing assembly. Resource files that are compiled into a referenced assembly. Resource files that are compiled into the local assembly. Packages and parts are analogous to applications and files, where an application (package) can include one or more files (parts), including: This concept is illustrated by the following figure: The authority specifies the type of package that a part is contained by, while the path specifies the location of a part within a package. pack://authority/path The scheme that is specified by a URI is defined by its prefix; http, ftp, and file are well-known examples. The pack URI\u00a0scheme uses \"pack\" as its scheme, and contains two components: authority and path. The following is the format for a pack URI. To identify parts, the OPC specification leverages the extensibility of RFC 2396 (Uniform Resource Identifiers (URI): Generic Syntax) to define the pack URI\u00a0scheme.",
    "textAfterTable": "Authority: application:///. Path: The name of the resource file, including its path, relative to the local assembly project folder root. The following example shows the pack URI for a XAML resource file that is located in the root of the local assembly's project folder. pack://application:,,,/ResourceFile.xaml The following example shows the pack URI for a XAML resource file that is located in a subfolder of the local assembly's project folder. pack://application:,,,/Subfolder/ResourceFile.xaml Referenced Assembly Resource File The pack URI for a resource file that is compiled into a referenced assembly uses the following authority and path: Authority: application:///. Path: The name of a resource file that is compiled into a referenced assembly. The path must conform to the following format: AssemblyShortName[;Version][;PublicKey];component/Path AssemblyShortName: the short name for the referenced assembly. ;Version [optional]: the version of the referenced assembly that contains the resource file. This is used when two or more referenced assemblies with the same short name are loaded. ;PublicKey [optional]: the public key that was used to sign the referenced assembly. This is used when two or more referenced assemblies with the same short name are loaded. ;component: specifies that the assembly being referred to is referenced from the local assembly. /Path: the name of the resource file, including its path, relative to the root of the referenced assembly's project folder. The following example shows the pack",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}