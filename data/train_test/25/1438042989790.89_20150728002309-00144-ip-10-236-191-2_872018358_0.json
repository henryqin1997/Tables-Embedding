{
    "relation": [
        [
            "Name",
            "analyzer",
            "failOnWarning",
            "ignoreNonCompile",
            "ignoredDependencies",
            "ignoredUnusedDeclaredDependencies",
            "ignoredUsedUndeclaredDependencies",
            "outputXML",
            "scriptableFlag",
            "scriptableOutput",
            "skip",
            "usedDependencies",
            "verbose"
        ],
        [
            "Type",
            "String",
            "boolean",
            "boolean",
            "String[]",
            "String[]",
            "String[]",
            "boolean",
            "String",
            "boolean",
            "boolean",
            "String[]",
            "boolean"
        ],
        [
            "Since",
            "2.2",
            "2.0-alpha-3",
            "2.0-alpha-3",
            "2.10",
            "2.10",
            "2.10",
            "2.0-alpha-5",
            "2.0-alpha-5",
            "2.0-alpha-5",
            "2.7",
            "2.6",
            "2.0-alpha-3"
        ],
        [
            "Description",
            "Specify the project dependency analyzer to use (plexus component role-hint). By default, maven-dependency-analyzer is used. To use this, you must declare a dependency for this plugin that contains the code for the analyzer. The analyzer must have a declared Plexus role name, and you specify the role name here. Default value is: default. User property is: analyzer.",
            "Whether to fail the build if a dependency warning is found. Default value is: false. User property is: failOnWarning.",
            "Ignore Runtime/Provided/Test/System scopes for unused dependency analysis. Default value is: false. User property is: ignoreNonCompile.",
            "List of dependencies that will be ignored. Any dependency on this list will be excluded from the \"declared but unused\" and the \"used but undeclared\" list. The filter syntax is: [groupId]:[artifactId]:[type]:[version] where each pattern segment is optional and supports full and partial * wildcards. An empty pattern segment is treated as an implicit wildcard. * For example, org.apache.* will match all artifacts whose group id starts with org.apache., and :::*-SNAPSHOT will match all snapshot artifacts.",
            "List of dependencies that will be ignored if they are declared but unused. The filter syntax is: [groupId]:[artifactId]:[type]:[version] where each pattern segment is optional and supports full and partial * wildcards. An empty pattern segment is treated as an implicit wildcard. * For example, org.apache.* will match all artifacts whose group id starts with org.apache., and :::*-SNAPSHOT will match all snapshot artifacts.",
            "List of dependencies that will be ignored if they are used but undeclared. The filter syntax is: [groupId]:[artifactId]:[type]:[version] where each pattern segment is optional and supports full and partial * wildcards. An empty pattern segment is treated as an implicit wildcard. * For example, org.apache.* will match all artifacts whose group id starts with org.apache., and :::*-SNAPSHOT will match all snapshot artifacts.",
            "Output the xml for the missing dependencies (used but not declared). Default value is: false. User property is: outputXML.",
            "Flag to use for scriptable output. Default value is: $$$%%%. User property is: scriptableFlag.",
            "Output scriptable values for the missing dependencies (used but not declared). Default value is: false. User property is: scriptableOutput.",
            "Skip plugin execution completely. Default value is: false. User property is: mdep.analyze.skip.",
            "Force dependencies as used, to override incomplete result caused by bytecode-level analysis. Dependency format is groupId:artifactId.",
            "Output used dependencies. Default value is: false. User property is: verbose."
        ]
    ],
    "pageTitle": "Apache Maven Dependency Plugin \u2013 dependency:analyze",
    "title": "",
    "url": "https://maven.apache.org/plugins/maven-dependency-plugin/analyze-mojo.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 0,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989790.89/warc/CC-MAIN-20150728002309-00144-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 872026560,
    "recordOffset": 872018358,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Sat, 24 Jan 2015 15:16:00 GMT",
    "textBeforeTable": "Optional Parameters Invokes the execution of the lifecycle phase test-compile prior to executing itself. Since version: 2.0-alpha-3. The goal is thread-safe and supports parallel builds. Requires dependency resolution of artifacts in scope: test. Requires a Maven project to be executed. Attributes: By default, maven-dependency-analyzer is used to perform the analysis, with limitations due to the fact that it works at bytecode level, but any analyzer can be plugged in through analyzer parameter. dependency:analyze-only goal instead when participating in the build lifecycle. test-compile phase - use the Analyzes the dependencies of this project and determines which are: used and declared; used and undeclared; unused and declared. This goal is intended to be used standalone, thus it always executes the Description: org.apache.maven.plugins:maven-dependency-plugin:2.10:analyze Full name: dependency:analyze Thanks Sponsoring Apache Foundation How Apache Works ASF Wagon Surefire Skins Shared Components SCM Resource Bundles Plugin Tools Plugin Testing Plugins Parent POMs Maven",
    "textAfterTable": "Parameter Details analyzer: Specify the project dependency analyzer to use (plexus component role-hint). By default, maven-dependency-analyzer is used. To use this, you must declare a dependency for this plugin that contains the code for the analyzer. The analyzer must have a declared Plexus role name, and you specify the role name here. Type: java.lang.String Since: 2.2 Required: No User Property: analyzer Default: default failOnWarning: Whether to fail the build if a dependency warning is found. Type: boolean Since: 2.0-alpha-3 Required: No User Property: failOnWarning Default: false ignoreNonCompile: Ignore Runtime/Provided/Test/System scopes for unused dependency analysis. Type: boolean Since: 2.0-alpha-3 Required: No User Property: ignoreNonCompile Default: false ignoredDependencies: List of dependencies that will be ignored. Any dependency on this list will be excluded from the \"declared but unused\" and the \"used but undeclared\" list. The filter syntax is:  [groupId]:[artifactId]:[type]:[version] where each pattern segment is optional and supports full and partial * wildcards. An empty pattern segment is treated as an implicit wildcard. * For example, org.apache.* will match all artifacts whose group id starts with org.apache., and :::*-SNAPSHOT will match all snapshot artifacts. Type: java.lang.String[] Since: 2.10 Required: No ignoredUnusedDeclaredDependencies: List of dependencies that will be ignored if they are declared but unused. The filter syntax is:  [groupId]:[artifactId]:[type]:[version]",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}