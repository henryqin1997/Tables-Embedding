{
    "relation": [
        [
            "Argument",
            "name",
            "entityType",
            "ignoreSessions",
            "timeOut",
            "force",
            "block"
        ],
        [
            "Definition",
            "Optional. Name of the server or cluster to shutdown. This argument defaults to the server to which WLST is currently connected.",
            "Optional. Type, Server or Cluster. This argument defaults to Server. When shutting down a cluster, you must set this argument explicitly to Cluster, or the command will fail.",
            "Optional. Boolean value specifying whether WLST should drop all HTTP sessions immediately or wait for HTTP sessions to complete or timeout while shutting down. This argument defaults to false, indicating that all HTTP sessions must complete or timeout.",
            "Optional. Time (in seconds) that WLST waits for subsystems to complete in-process work and suspend themselves before shutting down the server. This argument defaults to 0 seconds, indicating that there is no timeout.",
            "Optional. Boolean value specifying whether WLST should terminate a server instance or a cluster without waiting for the active sessions to complete. This argument defaults to false, indicating that all active sessions must complete before shutdown.",
            "Optional. Boolean value specifying whether WLST should block user interaction until the server is shutdown. This argument defaults to false, indicating that user interaction is not blocked. In this case, WLST returns control to the user after issuing the command and assigns the task MBean associated with the current task to a variable that you can use to check its status. If you are importing WLST as a Jython module, as described in \"Importing WLST as a Jython Module\" in Oracle WebLogic Scripting Tool, block is always set to true."
        ]
    ],
    "pageTitle": "WLST Command and Variable Reference",
    "title": "",
    "url": "https://docs.oracle.com/cd/E17904_01/web.1111/e13813/reference.htm",
    "hasHeader": true,
    "headerPosition": "MIXED",
    "tableType": "RELATION",
    "tableNum": 73,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988718.8/warc/CC-MAIN-20150728002308-00254-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 881772739,
    "recordOffset": 881709168,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{357045=The following example instructs WLST to wait 1000 seconds for HTTP sessions to complete or timeout (at 1000 seconds) before shutting down myserver:}",
    "lastModified": "Wed, 13 May 2015 05:16:48 GMT",
    "textBeforeTable": "shutdown([name], [entityType], [ignoreSessions], [timeOut], [force], [block])  Syntax      In the event of an error, the command returns a WLSTException. WLST uses Node Manager to shut down a Managed Server. When shutting down a Managed Server, Node Manager must be running. When connected to a Managed Server instance, you only use the shutdown command to shut down the Managed Server instance to which WLST is connected; you cannot shut down another server while connected to a Managed Server instance. You shut down a server to which WLST is connected by entering the shutdown command without any arguments. Gracefully shuts down a running server instance or a cluster. The shutdown command waits for all the in-process work to be completed before shutting down the server or cluster. Description    Use with WLST: Online Command Category: Life Cycle Commands shutdown    wls:/mydomain/serverConfig> Server 'managed1' resumed successfully. wls:/mydomain/serverConfig> resume('managed1', block='true')  The following example resumes a Managed Server instance. Example       Optional. Boolean value specifying whether WLST should block user interaction until the server is resumed. This argument defaults to false, indicating that user interaction is not blocked. In this case, WLST returns control to the",
    "textAfterTable": "Example The following example instructs WLST to shutdown the server to which you are connected:  wls:/mydomain/serverConfig> shutdown() Shutting down the admin server that you are currently connected to ....... Disconnected from weblogic server: AdminServer The following example instructs WLST to wait 1000 seconds for HTTP sessions to complete or timeout (at 1000 seconds) before shutting down myserver:  wls:/mydomain/serverConfig> shutdown('myserver','Server','false',1000, block='false') The following example instructs WLST to drop all HTTP sessions immediately while connected to a Managed Server instance:  wls:/mydomain/serverConfig> shutdown('MServer1','Server','true',1200) Shutting down a managed server that you are connected to ... Disconnected from weblogic server: MServer1 The following example instructs WLST to shutdown the cluster mycluster:  wls:/mydomain/serverConfig> shutdown('mycluster','Cluster') Shutting down the cluster with name mycluster Shutdown of cluster mycluster has been issued, please refer to the logs to check if the cluster shutdown is successful. Use the state(<server-name>) or state(<cluster-name>,\"Cluster\") to check the status of the server or cluster wls:/mydomain/serverConfig> state('mycluster','Cluster') There are 3 server(s) in cluster: mycluster States of the servers are MServer1---SHUTDOWN MServer2---SHUTDOWN MServer3---SHUTDOWN wls:/mydomain/serverConfig> start Command Category: Life Cycle Commands Use with WLST: Online Description Starts a Managed Server instance or a cluster using Node Manager. WLST must be connected to the Administration Server",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}