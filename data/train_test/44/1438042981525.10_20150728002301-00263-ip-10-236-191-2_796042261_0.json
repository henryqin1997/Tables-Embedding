{
    "relation": [
        [
            "SRML Domain",
            "Simulations, Simulation",
            "Item",
            "Property",
            "Sub Item",
            "Items",
            "Location",
            "ItemClass",
            "Script (Behavior)",
            "Links, Link",
            "EventClass",
            "EventSink",
            "Events",
            "ItemEvent",
            "Parameter"
        ],
        [
            "Implicit",
            "Y",
            "Y",
            "Y",
            "Y",
            "Y",
            "Y",
            "N",
            "N",
            "N",
            "N",
            "N",
            "N",
            "N",
            "Y"
        ],
        [
            "XML Domain",
            "Document",
            "Element",
            "Attribute",
            "Child Element",
            "childNodes in the DOM",
            "Parent Element, parentNode in the DOM",
            "(Roughly corresponds to a Schema definition)",
            "-",
            "IDREF(s) and XPath",
            "-",
            "-",
            "-",
            "-",
            "-"
        ]
    ],
    "pageTitle": "SRML - Simulation Reference Markup Language",
    "title": "",
    "url": "http://www.w3.org/TR/2002/NOTE-SRML-20021218/",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 0,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981525.10/warc/CC-MAIN-20150728002301-00263-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 796071259,
    "recordOffset": 796042261,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{746=Copyright \u00a9 2001-2002 Boeing. This document is available under the W3C Document License, see the W3C Intellectual Rights Notices and Disclaimers for additional information., 117341=[11] ID and IDREFS are XML data types that are used for providing and validating non-hierarchical links in XML documents ( http://www.w3.org/TR/2000/REC-xml-20001006#sec-attribute-types), 117659=[12] Kay, Alan, \"Microelectronics and the Personal Computer\", Scientific American, September 1977, pp. 230-244., 2950=This NOTE was submitted to the World Wide Web Consortium (see Submission Request, W3C Staff Comment) on 2002-09-27 with the intention that the W3C use it as a basis for furthering the work. For a full list of all acknowledged Submissions, please see Acknowledged Submissions to W3C., 116373=[8] XML Schema: Datatypes is part 2 of the specification of the XML Schema language. It defines facilities for defining datatypes to be used in XML Schemas as well as other XML specifications. ( http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/datatypes.html), 43894=The things you describe when modeling in SRML are referred to as items. An item can represent a physical thing, such as a piece of equipment, or a person, or an entire system of other items. An item may also represent a process or a step in a process. Items can have properties. For example, a piece of equipment might have a 'serial number' property and a process might have 'duration' property. SRML provides a natural way to express items, their properties, and complex item relationships, using the grammar of XML with a small set of pre-defined elements and attributes that have specific meanings and rules. The general structure of a simulation in SRML looks like this:}",
    "lastModified": "Wed, 18 Dec 2002 13:46:54 GMT",
    "textBeforeTable": "SRML to XML mapping: The XML domain specifies documents, elements, attributes, child elements and parent elements. The Simulation Reference domain specifies simulations, items, properties, sub-items, and locations. An SRML Simulator (or SR Simulator) creates simulations from documents, items from elements, properties from attributes, sub-items from child elements, and locations from parent elements. In addition to the things that correspond between the two domains, the SRML domain specifies item classes, behaviors, links, event classes, event sinks, events, and parameters. 1.4 Relationship of SRML to XML Use of plain XML does not imply semantic interpretation, presentation, or behavior of the data. Rather, schemas and higher-level specifications, such as Semantic-web for semantics, and XSLT [5] for presentation provide those. Typically behavior comes from other markup language like DHTML [6] and XHTML [7]. However, those languages couple presentation and behavior. Node (BaseName='embedded-element1') Attribute (BaseName='attribute2', NodeTypedValue='value2') Attribute (BaseName='attribute1', NodeTypedValue='value1') Node (NodeName='elementname1')  These constructs form a structure for describing any kind of hierarchically related discrete data. An XML Schema permits a modeler to specify rules about element relationships and attributes that can be validated with software. The XML Document Object Model (DOM) [4] is an Application Programming Interface (API) that enables programming languages and scripts to load, validate, navigate, modify, and save XML structures with code. Software libraries and components for the DOM are freely available from several sources, including Microsoft. DOM software implements elements and attributes with linked Node objects. For example, the previous XML construct can",
    "textAfterTable": "1.5 Language goals The Simulation Reference Markup Language is designed according to the following goals: Specify a flexible reference standard for representing simulations. Provide enough expressive power to model most anything for purposes of simulation. Choose constructs that are simple, yet expressive, such that models can be developed and maintained using a text editor at minimum. Specify only a small set of predefined element names; maximize use of elements in user-defined schemas. Support models defined in both single and multiple source files. Maximize use of widely accepted standards: XML, JavaScript, and allow other languages to be \"plugged in\". Define semantics that are neutral and flexible, so as not to stifle simulation software vendors. Provide a language similar to XHTML, with individual element behavior and dynamic DOM functionality, yet targeted for simulations. Provide object-oriented capabilities for modeling generalization and containment relationships, as well as multiplicity. Maintain presentation independence. 2. SRML Elements This section defines the elements of the Simulation Reference Markup Language (SRML). SRML defines a small number of elements and attributes for describing abstract structures, properties, and behaviors to support specific domains under simulation. Thus, SRML is typically used in conjunction with domain-specific schemas that add structural rules and data types to elements and attributes. 2.1 The Simulations element  <!ELEMENT Simulations (#PCDATA | Script | Simulation | ItemClass | ANY)*> <!ATTLIST Simulations ANY> The Simulations element is the root of a group of simulations specified in the same document.",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}