{
    "relation": [
        [
            "F-Key",
            "",
            "core.analyte.analyteid",
            "",
            "",
            "",
            "core.contact.contactid",
            "",
            ""
        ],
        [
            "Name",
            "gelpreparationid",
            "analyteid",
            "uri",
            "preparationdocument",
            "preparationdescription",
            "contactid",
            "userstamp",
            "update"
        ],
        [
            "Type",
            "serial",
            "integer",
            "character varying(4096)",
            "text",
            "text",
            "integer",
            "character varying(128)",
            "timestamp without time zone"
        ],
        [
            "Description",
            "PRIMARY KEY",
            "",
            "This may include URLs to local or external gel preparation protocols (e.g. \"PSI::MIAPE\")",
            "",
            "",
            "",
            "DEFAULT \"current_user\"()",
            "DEFAULT now()"
        ]
    ],
    "pageTitle": "The Make2D-DB II Tool - Index for test_2dpage",
    "title": "core.gelpreparation Structure",
    "url": "http://world-2dpage.expasy.org/swiss-2dpage/data/readme/database_schema/all.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 86,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986148.56/warc/CC-MAIN-20150728002306-00324-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 275521503,
    "recordOffset": 275449940,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{481258=By convention: any database not present in XrefDB has an XrefDBCode > 1000, this is ensured by the update interface! * Applied Trigger: Trigger_XrefDBDynamic_insensitiveName *, 1539=A Make2D-DB II DATABASE: version 2.50, built 18-Jul-2006 Dumped on 2006-07-18}",
    "textBeforeTable": "To do: generate and send automatically a unique - hidden - database identifier from ExPASy to the remote database, then LOCK table. Make also this identifier queriable from the remote main interface. Table: common.database Schema common xrefdbparent xrefdbdynamic xrefdb viewspotentrylast viewspotentry viewref viewmapentrylist viewentry tmp_last_entry tissuesptissuemapping tissuespaliase tissuesp tissue studygroup study spotidentificationtandemmssubset spotidentificationtandemms spotidentificationpeptmassf spotidentificationparent spotidentificationother spotidentificationaacid spotentrytopicparent spotentrymappingtopic spotentrygeneraltopic spotentry spotdatatandemms spotdatapeptmassf spotdataparent spotdataother spotdataaacid spot secondaryac samplepreparation sample release referencework referencetype referencelocationunpubobservations referencelocationthesis referencelocationsubmission referencelocationpatent referencelocationparent referencelocationother referencelocationjournal referencelocationbook referencedsample referencedproject referencedobjectparent referencedgel referencedentry reference project organism molecularfunction mappingtopicdefinition make2ddbtool journal genesynonym generaltopicentrydata generaltopicdefinition geneorf geneorderedlocus geneontologyparent genename geltissuesp gelpreparation gelinformatics gelimage geldynamic gelcomputabledynamic gel externalmainxrefdata enzymenomenclature entryxrefdbparent entryxrefdbdynamic entryxrefdb entryversionparent entryversiongeneral entryversion2d entrytheoreticalpimw entrygene entrygelmaster entrygelimage entry dynamicremotemake2ddbinterface contact commenttopic commententryparent commententryfreetext commententry2d citer cellularcomponent book biosourcepreparation biosourceinformation biosource biologicalprocess authorparent authorgroup",
    "textAfterTable": "databaseinterfaceuri text databaseinterfaceurinumber smallint DEFAULT 1 copyright text contact text \u00a0 Permissions which apply to common.database User Select Insert Update Delete Reference Rule Trigger mostaguir \u2666 \u2666 \u2666 \u2666 \u2666 \u2666 \u2666 select2d \u2666 Index - Schema common Function: common.array_dim_length( text[], character varying[], integer[], double precision[], integer ) Returns: smallint Language: PLPGSQL FUNCTION TO RETURN THE LENGTH OF THE N-DIMENSION OF AN ARRAY Needed with postgreSQL prior to 7.4, otherwise use array_upper (array_lower) Call function by 2 arguments, and use void {} for the others (there is a postgreSQL problem casting _TYPES[]) ex: array_dim_length(CAST('{}' AS TEXT[]), CAST(my_mappingTechniques AS VARCHAR[]), CAST('{}' AS INTEGER[]), CAST('{}' AS FLOAT[]), 1); to",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}