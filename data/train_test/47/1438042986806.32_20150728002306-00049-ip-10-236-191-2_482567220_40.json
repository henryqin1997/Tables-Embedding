{
    "relation": [
        [
            "Date",
            "27 mars 2003",
            "14 mai 2003",
            "14 avr. 2010",
            "26 mars 2014",
            "9 d\ufffdc. 2014"
        ],
        [
            "Code",
            "AS",
            "AS",
            "FPAY",
            "FPAY",
            "AS"
        ],
        [
            "\ufffdv\ufffdnement",
            "Assignment",
            "Assignment",
            "Fee payment",
            "Fee payment",
            "Assignment"
        ],
        [
            "Description",
            "Owner name: MICROSOFT CORPORATION, WASHINGTON Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BEDA, JOSEPH S.;SCHNEIDER, GERHARD A.;GALLO, KEVIN T.;AND OTHERS;REEL/FRAME:013925/0463;SIGNING DATES FROM 20030325 TO 20030326",
            "Owner name: MICROSOFT CORPORATION, WASHINGTON Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BEDA, JOSEPH S.;SCHNEIDER, GERHARD A.;GALLO, KEVIN T.;AND OTHERS;REEL/FRAME:013656/0331;SIGNING DATES FROM 20030325 TO 20030326",
            "Year of fee payment: 4",
            "Year of fee payment: 8",
            "Owner name: MICROSOFT TECHNOLOGY LICENSING, LLC, WASHINGTON Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MICROSOFT CORPORATION;REEL/FRAME:034541/0477 Effective date: 20141014"
        ]
    ],
    "pageTitle": "Brevet US7126606 - Visual and scene graph interfaces - Google\ufffdBrevets",
    "title": "",
    "url": "http://www.google.fr/patents/US7126606",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 40,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986806.32/warc/CC-MAIN-20150728002306-00049-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 482622811,
    "recordOffset": 482567220,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{6283=Another brush object represented in FIG. 15 is a VisualBrush object. Conceptually, the VisualBrush provides a way to have a visual drawn in a repeated, tiled fashion as a fill. This is represented in FIG. 14 by the visual brush referencing a visual (and any child visuals) that specifies a single circular shape 1420, with that circular shape filling a rectangle 1422. Thus, the VisualBrush object may reference a visual to define how that brush is to be drawn, which introduces a type of multiple use for visuals. In this manner, a program may use an arbitrary graphics \u201cmetafile\u201d to fill an area via a brush or pen. Since this is a compressed form for storing and using arbitrary graphics, it serves a graphics resource. The following sets forth an example VisualBrush object:}",
    "TableContextTimeStampAfterTable": "{333678=Note that if any part of size is zero, nothing is drawn, and if Stretch is \u201cNone,\u201d the transform for the viewbox is set up such that one unit in the new coordinate frame is equal to one unit in the old coordinate frame. The transform essentially becomes an offset based on the align attributes and the size of the ViewBox. As described above at steps 2010 and 2012, Stretch and the alignment properties only apply when there is a ViewBox specified. The ViewBox specifies a new coordinate system for the contents, and Stretch helps to specify how those contents map into the Viewbox. The alignment options align the ViewBox, not the contents. Thus, for example, if the viewbox is set to \u201c0 0 10 10\u201d and something is drawn at \u221210,\u221210 and aligned to the upper left corner, that thing will be clipped out., 332701=If there is no ViewBox specified, then a new coordinate system is established for drawing the content at step 2014., 333003=A clip is applied at step 2018 based on the Size property such that this tile will not draw outside of the bounds of the cell. The Origin and Size are modified appropriately based on the DestinationUnits property., 333256=The coordinate system is then modified, based on the SourceUnits property. To this end, if at step 2020 the SourceUnits property is ObjectBoundingBox, the appropriate scaling transform is applied at step 2026, otherwise it is UserSpaceOnUse, and no new transform is applied. The Transform property is applied at step 2024, and the content is drawn at step 2026., 67035=The present invention is related to the following copending U.S. patent applications: Ser. No. 10/184,795 entitled Multiple-Level Graphics Processing System and Method; Ser. No. 10/184,796, entitled Generic Parameterization for a Scene Graph; Ser. No. 10/185,775 entitled \u201cIntelligent Caching Data Structure for Immediate Mode Graphics;\u201d each filed on Jun. 27, 2002; and United States Patent Application entitled \u201cMarkup Language and Object Model for Vector Graphics\u201d Ser. No. 10/693,633, filed concurrently herewith. Each related application is assigned to the assignee of the present patent application and hereby incorporated by reference in its entirety., 331058=A coordinate frame is set up based on the DestinationUnits property. To this end, if at step 2000, the DestinationUnits property is UserSpaceOnUse, the current coordinate frame at the time the brush was used is the starting coordinate frame, via step 2002. If instead at step 2004 the property is ObjectBoundingBox, the bounding box of the geometry to which this brush is applied is used, as represented by step 2004, to set a new coordinate frame such that the upper left corner of the bounding box maps to (0,0) and the lower left corner of the bounding box maps to (1,1). In either case, at step 2006 the Transform property is applied to this coordinate frame, which essentially defines a grid.}",
    "textBeforeTable": "Citations de brevets While the invention is susceptible to various modifications and alternative constructions, certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood, however, that there is no intention to limit the invention to the specific forms disclosed, but on the contrary, the intention is to cover all modifications, alternative constructions, and equivalents falling within the spirit and scope of the invention. As can be seen from the foregoing detailed description, there is provided a system, method and object model that provide program code with the ability to interface with a scene graph. The system, method and object model are straightforward to use, yet powerful, flexible and extensible. CONCLUSION }; public double M21 { get; set; } public double M20 { get; set; } public double M11 { get; set; } public double M10 { get; set; } public double M01 { get; set; } public double M00 { get; set; }",
    "textAfterTable": "6 nov. 2001 Hewlett Packard Company System and method for asynchronously accessing a graphics system for graphics application evaluation and control US6717599 29 juin 2000 6 avr. 2004 Microsoft Corporation Method, system, and computer program product for implementing derivative operators with graphics hardware US6741242 17 juil. 2000 25 mai 2004 Famotik Kabushikikaisha Multimedia documents integrating and displaying system US20020116417 20 sept. 2001 22 ao\ufffdt 2002 Weinberg Paul N. Method and apparatus for dynamically formatting and displaying tabular data in real time US20030005045 30 mai 2002 2 janv. 2003 Murata Kikai Kabushiki Kaisha Device and program for structured document generation data structure of structural document US20030110297 29 oct. 2002 12 juin 2003 Tabatabai Ali J. Transforming multimedia data for delivery to multiple heterogeneous devices US20030120823 29 avr. 2002 26 juin 2003 Kim Sung Ye Client system for implementing 3-dimensional virtual reality and method for implementing virtual reality using same US20030126557 5 d\ufffdc. 2001 3 juil. 2003",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}