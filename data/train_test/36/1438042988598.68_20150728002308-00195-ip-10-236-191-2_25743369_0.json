{
    "relation": [
        [
            "Prefix",
            "bean",
            "util",
            "util",
            "lang",
            "tx",
            "aop",
            "context"
        ],
        [
            "Namespace",
            "http://www.springframework.org/schema/bean",
            "http://www.springframework.org/schema/util",
            "http://www.springframework.org/schema/jee",
            "http://www.springframework.org/schema/lang",
            "http://www.springframework.org/schema/tx",
            "http://www.springframework.org/schema/aop",
            "http://www.springframework.org/schema/context"
        ],
        [
            "Description",
            "Original bean schema",
            "Utilities: constants, property paths and collections",
            "JNDI lookup",
            "Use of other languages",
            "Transactions",
            "AOP",
            "ApplicationContext manipulation"
        ]
    ],
    "pageTitle": "validation Archives > A Java geek",
    "title": "",
    "url": "http://blog.frankel.ch/tag/validation",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 0,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988598.68/warc/CC-MAIN-20150728002308-00195-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 25768927,
    "recordOffset": 25743369,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{10817=Though Struts tightly integrates Commons Validator, you can use the latter entirely separately. However, the last stable version (1.3.1) was released late 2006. The current developed version is 1.4 but the Maven site hasn\u2019t been updated since early 2008. It is a bit left aside for my own tatse so I rule it out for my validation needs save when I am forced to use Struts., 9126=Struts was the framework to learn and use on the presentation layer in 2001-2002. Struts uses the MVC model and focus on Controllers, which are represented in Struts with Action.\u00a0 Views are plain JSP and Struts uses ActionForm in order to pass data from Controllers to Views and vice-versa. In short, those are POJO that the framework uses to interact with the View.}",
    "textBeforeTable": "In fact, there are many namespaces now available:  Spring made it possible, but realize it\u2019s only a trick to expose the constant as a bean. However, since Spring 2.0, the framework let you use the util namespace so that the previous example becomes:  I will begin with a simple example taken from Spring\u2019s documentation. Before version 2.0, only a single XML schema was available. So, in order to make a constant available as a bean, and thus inject it in other beans, you had to define the following: Spring namespaces In this article, I will describe a useful but much underused feature of Spring, the definition of custom tags in the Spring beans definition files.    No comments Nicolas Frankel December 29th, 2009  Discover Spring authoring   jsr, validation Tags:  Java Categories:    Send to Kindle Hibernate Validator extensions API JSR 303 specification JSR 303 and Struts integration JSR 303 API JSR 303 Reference Implementation (Hibernate Validator v4) documentation To",
    "textAfterTable": "Each of these is meant to reduce verbosity and increase readibility like the first example showed. Authoring What is still unknown by many is that this feature is extensible that is Spring API provides you with the mean to write your own. In fact, many framework providers should take advantage of this and provide their own namespaces so that integrating thier product with Spring should be easier. Some already do: CXF with its many namespaces comes to mind but there should be others I don\u2019t know of. Creating you own namespace is a 4 steps process: 2 steps about the XML validation, the other two for creating the bean itself. In order to illustrate the process, I will use a simple example: I will create a schema for EhCache, the Hibernate\u2019s default caching engine. The underlying bean factory will be the existing EhCacheFactoryBean. As such, it won\u2019t be as useful as a real feature but it will let us focus on the true authoring plumbing rather than EhCache implementation details. Creating the schema Creating the schema is about describing XML syntax and more importantly restrictions. I want my XML to look something like the following:    Since I won\u2019t presume to teach anyone about XML, here\u2019s the schema.",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}