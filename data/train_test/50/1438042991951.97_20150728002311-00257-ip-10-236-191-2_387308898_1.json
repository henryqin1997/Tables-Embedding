{
    "relation": [
        [
            "Convention",
            "Italics",
            "Boldface",
            "Constant Width",
            "UPPER-CASE",
            "Single Quotes (' ')",
            "Brackets ([ ])",
            "Vertical bar ( | )",
            "A parameter enclosed by braces ({ })",
            "A value enclosed by braces ({ })",
            "Braces with ellipsis ({ }...)",
            "Angle brackets (< >)"
        ],
        [
            "Description",
            "Italics type represents variable names and user-defined values (system, database, table, column and file) in examples.",
            "Boldface type represents names such as the member function name, class name, constants, CUBRID keyword or names such as other required characters.",
            "Constant Width type represents segments of code example or describes a command's execution and results.",
            "UPPER-CASE represents the CUBRID keyword (see Boldface).",
            "Single quotes (' ') are used with braces and brackets and represent the necessary sections of a syntax. Single quotes are also used to enclose strings.",
            "Brackets ([ ]) represents optional parameters or keywords.",
            "Vertical bar (|) represents that one or another option can be specified.",
            "A parameter enclosed by braces represents that one of those parameters must be specified in a statement syntax.",
            "A value enclosed by braces an element consisting of collection.",
            "Braces before an ellipsis represents that a parameter can be repeated.",
            "Angle brackets represent a single key or a series of key strokes."
        ],
        [
            "Example",
            "persistent : stringVariableName",
            "fetch ( ) member function",
            "csql database_name",
            "SELECT",
            "{'{' const_list '}'}",
            "[ ONLY ]",
            "[ COLUMN | ATTRIBUTE ]",
            "CREATE { TABLE | CLASS }",
            "{2, 4, 6}",
            "{, class_name }...",
            "}..."
        ]
    ],
    "pageTitle": "Introduction to Manual \u2014 CUBRID 9.3.0 documentation",
    "title": "",
    "url": "http://www.cubrid.org/manual/93/en/toc.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 1,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042991951.97/warc/CC-MAIN-20150728002311-00257-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 387316697,
    "recordOffset": 387308898,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Tue, 19 May 2015 16:30:01 GMT",
    "textBeforeTable": "CUBRID is an object-relational database management system (ORDBMS), which supports object-oriented concepts such as inheritance. In this manual, relational database terminologies are also used along with object-oriented terminologies for better understanding. Object-oriented terminologies such as class, instance and attribute is used to describe concepts including inheritance, and relational database terminologies are mainly used to describe common SQL syntax. Glossary\u00b6 Release Notes: This chapter provides a description of additions, changes, improvements and bug fixes. API Reference: The \"Performance Tuning\" chapter provides instructions on setting system parameters that may influence the performance. This chapter provides information on how to use the configuration file for the server and broker, and describes the meaning of each parameter. Administrator's Guide: This chapter provides instructions on how to create, drop, back up, restore and migrate a database, configuring globalization, and executing CUBRID HA and CUBRID SHARD. Also it includes instructions on how to use the cubrid utility, which starts and stops the server, broker, and CUBRID Manager server, etc. Also, this chapter provides instructions on setting system parameters that may influence the performance. It provides information on how to use the configuration file for the server and broker, and describes the meaning of each parameter. CUBRID SQL Guide: This chapter describes SQL syntaxes such as data types, functions and operators, data retrieval or table manipulation. The chapter also provides SQL syntaxes used for",
    "textAfterTable": "Single quotes (' ') are used with braces and brackets and represent the necessary sections of a syntax. Single quotes are also used to enclose strings. {'{' const_list '}'} Brackets ([ ]) Brackets ([ ]) represents optional parameters or keywords. [ ONLY ] Vertical bar ( | ) Vertical bar (|) represents that one or another option can be specified. [ COLUMN | ATTRIBUTE ] A parameter enclosed by braces ({ }) A parameter enclosed by braces represents that one of those parameters must be specified in a statement syntax. CREATE { TABLE | CLASS } A value enclosed by braces ({ }) A value enclosed by braces an element consisting of collection. {2, 4, 6} Braces with ellipsis ({ }...) Braces before an ellipsis represents that a parameter can be repeated. {, class_name }... Angle brackets (< >) Angle brackets represent a single key or a series of key strokes. <Ctrl+n> }... Version Name and Version String Conventions\u00b6 Rules for version naming and string since CUBRID 9.0 are as follows: Version name: CUBRID x.x Patch x (major version, minor version, patch version if necessary) CUBRID 9.2 Patch 1 (CUBRID 9.2 P1 in short) Version string: x.x.x.x (major version, minor version, patch version, build number) 9.2.1.0012 Rules for version naming and string before CUBRID 9.0 are",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}