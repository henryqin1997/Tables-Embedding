{
    "relation": [
        [
            "Software",
            "Microsoft Exchange Server",
            "Microsoft Exchange Server",
            "Microsoft Windows Server",
            "Microsoft Windows Server",
            "Microsoft Windows Server",
            "Microsoft SQL Server",
            "SharePoint",
            "Microsoft System Center Operations Manager",
            "Microsoft System Center Virtual Machine Manager",
            "Microsoft System Center Data Protection Manager",
            "Microsoft Windows Compute Cluster Server",
            "Microsoft Transporter Suite for Lotus Domino[7]",
            "Microsoft PowerTools for Open XML[8]",
            "IBM WebSphere MQ[9]",
            "Quest Management Shell for Active Directory[10]",
            "Special Operations Software Specops Command[11]",
            "VMware Infrastructure Toolkit[12]",
            "Internet Information Services[13]",
            "Microsoft Windows 7 Troubleshooting Center",
            "Microsoft Deployment Toolkit",
            "LOGINventory",
            "Citrix XenApp",
            "Citrix XenDesktop"
        ],
        [
            "Version",
            "2007",
            "2010",
            "2008",
            "2008 Core",
            "2008 R2 Core",
            "2008",
            "2010, 2013",
            "2007",
            "2007",
            "2007",
            "2007",
            "08.02.0012",
            "1.0",
            "6.0.2.2",
            "1.1",
            "1.0",
            "1.0 Update 1",
            "7.0",
            "6.1",
            "2010",
            "5.x",
            "seit v5.x",
            "seit v5.x"
        ],
        [
            "Cmdlets",
            "Ja (402)",
            "Ja",
            "Ja",
            "Nein",
            "Ja",
            "Ja",
            "Ja",
            "Ja (74)",
            "Ja",
            "Ja",
            "Ja",
            "Ja (47)",
            "Ja (33)",
            "Ja (44)",
            "Ja (40)",
            "Ja",
            "Ja (125)",
            "Ja (54)",
            "Ja",
            "Ja",
            "Ja",
            "Ja",
            "Ja"
        ],
        [
            "Provider",
            "Ja",
            "Ja",
            "Ja",
            "Nein",
            "Nein",
            "Ja",
            "Ja",
            "Ja",
            "Ja",
            "Nein",
            "Ja",
            "Nein",
            "Nein",
            "Nein",
            "Nein",
            "Nein",
            "Nein",
            "Ja",
            "Nein",
            "Nein",
            "Ja",
            "Ja",
            "Ja"
        ],
        [
            "Grafische Benutzeroberfl\u00e4che",
            "Ja",
            "Ja",
            "Nein",
            "Nein",
            "Nein",
            "Nein",
            "Nein",
            "Nein",
            "Ja",
            "Nein",
            "Nein",
            "Nein",
            "Nein",
            "Nein",
            "Nein",
            "Ja",
            "Nein",
            "Nein",
            "Ja",
            "Nein",
            "Ja",
            "Ja",
            "Ja"
        ]
    ],
    "pageTitle": "Windows PowerShell \u2013 Wikipedia",
    "title": "",
    "url": "https://de.wikipedia.org/wiki/Windows_PowerShell",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 5,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988250.59/warc/CC-MAIN-20150728002308-00192-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 866718747,
    "recordOffset": 866689253,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{11356=Anfang April 2014 wurde eine Vorabversion des Management Framework 5.0 bereitgestellt.[3] Die wichtigsten Neuerungen ist die M\u00f6glichkeit Softwarepakete \u00fcber NuGet-Repositories wie etwa Chocolatey zu installieren, sowie die M\u00f6glichkeit Switches zu verwalten, welche den CIM-Standard unterst\u00fctzen. Eine weitere Neuerung ist die M\u00f6glichkeit Klassen mit Hilfe des Schl\u00fcsselwortes class zu erstellen., 10837=Das Management Framework 4.0 f\u00fcr Windows 7 SP1 und Windows Server 2008 R2 SP1 wurde am 24. Oktober 2013 als finale Version ver\u00f6ffentlicht. Es wird mit Windows Server 2012 R2, sowie Windows 8.1 standardm\u00e4\u00dfig ausgeliefert und enth\u00e4lt als bedeutendste Neuerung das Desired State of Configuration, mit dem Administratoren Serverkonfigurationen beschreiben, implementieren und \u00fcberpr\u00fcfen k\u00f6nnen.[2], 9185=Die Versionen 1.0 und 2.0[1] werden auch f\u00fcr die Betriebssysteme Windows XP, Windows Server 2003 und Windows Vista zum kostenlosen Herunterladen angeboten., 10066=Windows 8 wird mit der Version 3.0 der PowerShell geliefert. Als wesentliche Neuerungen bringt sie die Unterst\u00fctzung f\u00fcr Workflows auf Basis der Windows Workflow Foundation, Remote-Sessions, die unterbrochen und sp\u00e4ter auch von einem anderen PC aus wiederaufgenommen werden k\u00f6nnen, sowie die M\u00f6glichkeit, Scripts zeitgesteuert oder abh\u00e4ngig von Ereignissen auszuf\u00fchren. PowerShell 3.0 ist als Teil des Windows Management Framework 3.0 auch f\u00fcr Windows 7 SP1 und Windows Server 2008 R2 SP1 verf\u00fcgbar; f\u00fcr XP und Vista jedoch nicht., 8612=Urspr\u00fcnglich war die erste Ver\u00f6ffentlichung der PowerShell als Bestandteil von Windows Vista am 30. November 2006 geplant. Sie wurde aber nur mit dem gleichzeitig ver\u00f6ffentlichten Microsoft Exchange Server 2007 ausgeliefert. Auf allen nachfolgenden PC-Betriebssystemen von Microsoft ist die PowerShell bereits vorinstalliert.}",
    "lastModified": "Thu, 23 Jul 2015 21:25:12 GMT",
    "textBeforeTable": "PowerShell bietet implizite Typkonvertierung. Dabei kommen Typkonverter zum Einsatz, von denen einige vorgegeben sind: $powerTime = New-Object System.Management.Automation.PSObject($time) # Aufruf eines Konstruktors $powerTime = [System.Management.Automation.PSObject] $time # Variable $powerTime ist implizit typisiert # explizites Typecasting nach PSObject [System.DateTime]$time = [System.DateTime]::UtcNow # Variable $time ist explizit typisiert # Aufruf einer statischen Methode mit [ClassName]::Method   In PowerShell:   } } } var powerTime = new PSObject(time); var time = DateTime.UtcNow; { public void Main() { public class PSObjectExample { namespace PowerShell using System.Management.Automation; using System;   In C#:   PowerShell-Skripte sind dynamisch typisiert. Dabei kommt ein erweitertes Typsystem (englisch: extended type system, ETS) zum Einsatz, bei dem .NET-Objekte in der Klasse PSObject gekapselt werden. PSObject stellt hierbei die Basisklasse f\u00fcr PowerShell-Objekte dar. PSObject entspricht damit einer Monade. Erweitertes Typsystem[Bearbeiten]",
    "textAfterTable": ".SYNOPSIS Hello World Application. .Description This script is a more complex Hello World function that intends to show some of the syntax of PowerShell. To use it, write \". ./Write-Hello.ps1\" (dot, space, filename) into your PowerShell first, so that the script gets loaded. .NOTES File Name: Write-Hello.ps1 .EXAMPLE Write-Hello Hello World! .EXAMPLE Write-Hello \"World\" Hello World! .EXAMPLE greet \"World\" Hello World! .EXAMPLE Write-Hello -Name \"World\" Hello World! .EXAMPLE \"World\" | Write-Hello Hello World! .EXAMPLE @(\"Jack\", \"Jill\") | Write-Hello Hello Jack! Hello Jill! .ALIAS greet .LINK http://de.wikipedia.org/wiki/PowerShell .INPUTTYPE Takes a name of type [string]. .RETURNVALUE Output a greeting of type [string]. .PARAMETER Name A list of names of the persons to greet. Greets the world by default. #> function Write-Hello { [CmdletBinding()] param( # get name parameter from the pipeline or as a parameter [Parameter(Mandatory = $False, Position = 0, ValueFromPipeline = $True, HelpMessage = \"The name to greet.\")] [string]$Name = \"World\" ) begin {",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}