{
    "relation": [
        [
            "Object type",
            "Articulations",
            "Beams",
            "Dynamics (vertically)",
            "Dynamics (horizontally)",
            "Fingerings",
            "Rehearsal / Text marks",
            "Slurs",
            "Text e.g. ^\"text\"",
            "Ties",
            "Tuplets"
        ],
        [
            "Object name",
            "Script",
            "Beam",
            "DynamicLineSpanner",
            "DynamicText",
            "Fingering",
            "RehearsalMark",
            "Slur",
            "TextScript",
            "Tie",
            "TupletBracket"
        ]
    ],
    "pageTitle": "LilyPond Learning Manual: 4.6.1 Moving objects",
    "title": "",
    "url": "http://www.lilypond.org/doc/v2.19/Documentation/learning/moving-objects",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 1,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989510.73/warc/CC-MAIN-20150728002309-00069-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 553847053,
    "recordOffset": 553838851,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{16148=This page is for LilyPond-2.19.24 (development-branch).}",
    "lastModified": "Sun, 26 Jul 2015 14:52:00 GMT",
    "textBeforeTable": "Here is a list of the objects which are most likely to be involved in collisions, together with the name of the object which should be looked up in the IR in order to discover which properties should be used to move them. A particular object may not have all of these properties. It is necessary to go to the IR to look up which properties are available for the object in question. This is most useful for manually adjusting the slope and height of beams, slurs, and tuplets. It takes a pair of numbers giving the position of the left and right ends of the beam, slur, etc. relative to the center line of the staff. Units are staff-spaces. Note, though, that slurs and phrasing slurs cannot be repositioned by arbitrarily large amounts. LilyPond first generates a list of possible positions for the slur and by default finds the slur that \u201clooks best\u201d. If the positions property has been overridden the slur that is closest to the requested positions is selected from the list. positions This property applies to any layout object supporting the grob-interface. It takes a pair of numbers which specify the extra displacement in the horizontal and vertical directions. Negative numbers move the object to the left or down. The units are staff-spaces. The extra displacement is made after the typesetting of objects is finished, so an object may be repositioned anywhere without",
    "textAfterTable": "[ << Tweaking output\u00a0] [Top][Contents][Index][ ? ] [\u00a0Templates >> ] [ < Collisions of objects\u00a0] [\u00a0 Up :\u00a0Collisions of objects\u00a0] [\u00a0Fixing overlapping notation > ] This page is for LilyPond-2.19.24 (development-branch). We welcome your aid; please help us by reporting errors to our bug list. Other languages: catal\u00e0, \u010desky, deutsch, espa\u00f1ol, fran\u00e7ais, italiano, \u65e5\u672c\u8a9e, nederlands. About automatic language selection. << Back to Documentation Index LilyPond \u2014 Learning Manual v2.19.24 (development-branch). 1. Tutorial 1.1 Compiling a file 1.2 How to write input files",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}