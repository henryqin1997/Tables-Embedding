{
    "relation": [
        [
            "Language",
            "Anonymous functions",
            "Multiple assignments",
            "Types",
            "Type signatures",
            "Type declarations",
            "Parametrised types",
            "Pattern matching"
        ],
        [
            "Haskell",
            "\\x y -> ...",
            "let x = 4 y = 5 in ...",
            "Int, Bool, (Double, Char), a",
            "const :: a -> b -> a",
            "data A = B Int | C Char Bool x = B 3 y = C 'a' True",
            "data D a = D (a -> a) data E a b = L a | R b",
            "case x of A x -> ... C a b -> ..."
        ],
        [
            "OCaml",
            "fun x y -> ...",
            "let x = 4 and y = 5 in ...",
            "int, bool, float * char, 'a",
            "const : 'a -> 'b -> 'a",
            "type a = B of int | C of char * bool let x = B 3 and y = C ('a', true)",
            "type 'a d = D of ('a -> 'a) type ('a, 'b) e = L of 'a | R of 'b",
            "match x with B x -> ... C (a, b) -> ..."
        ],
        [
            "Comments",
            "",
            "",
            "float is a double type",
            "Signatures usually omitted in OCaml",
            "",
            "",
            ""
        ]
    ],
    "pageTitle": "OCaml - HaskellWiki",
    "title": "",
    "url": "https://wiki.haskell.org/index.php?title=OCaml&diff=prev&oldid=54906",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 1,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438044160065.87/warc/CC-MAIN-20150728004240-00093-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 882717339,
    "recordOffset": 882709137,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "1 Syntactic dictionary This page aims to cover some of its differences from Haskell. OCaml is a functional programming language in the ML family, an extension of the Caml language with object-oriented constructs. Revision as of 23:08, 11 December 2012 Newer edit \u2192 (\u2192\u200eSyntactic differences) (Talk | contribs) Benmachine Revision as of 23:08, 11 December 2012 (view source) \u2190 Older edit (\u2192\u200eSyntactic differences) (Talk | contribs) Benmachine Revision as of 22:50, 11 December 2012 (view source) searchnavigation From HaskellWiki OCaml History View source Discussion Page Views , Jump to: (Difference between revisions)",
    "textAfterTable": "2 Conceptual differences OCaml's let is non-recursive and strict by default, but has keywords rec (as in let rec) and lazy to introduce the Haskell behaviour. OCaml is impure. Although it makes heavy use of immutable data, it also has mutable references and arrays available, and IO is performed by ordinary functions. Retrieved from \" https://wiki.haskell.org/index.php?title=OCaml&oldid=54906\" Navigation Haskell Wiki community Recent changes Random page Tools What links here Related changes Special pages Printable version Permanent link Recent content is available under a simple permissive license. Privacy policy About HaskellWiki Disclaimers",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}