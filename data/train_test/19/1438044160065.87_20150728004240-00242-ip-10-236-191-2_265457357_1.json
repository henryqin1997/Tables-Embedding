{
    "relation": [
        [
            "Part Types",
            "DataItem1",
            "Function2, 5",
            "Top-level function2, 5",
            "Delegate2",
            "Record6",
            "Structured Record6",
            "ExternalType",
            "Handler",
            "Library",
            "Service",
            "Interface3",
            "Enumeration",
            "Program4",
            "Array",
            "Deployment Descriptor7",
            "DataTable",
            "Form",
            "FormGroup"
        ],
        [
            "Core",
            "2d",
            "done",
            "done",
            "done",
            "done",
            "5d",
            "done",
            "1d bug 353769",
            "done",
            "1d bug 353769",
            "done",
            "1d",
            "done",
            "done",
            "done",
            "done",
            "1d",
            "2d"
        ],
        [
            "JavaScript",
            "JS: DataItem2d",
            "JS: Function overloading4d",
            "JS:Top-level functions 1d",
            "JS:Delegates2d",
            "JS:Record1d",
            "N/S",
            "JS:ExternalType1d",
            "JS:Handler1d",
            "done",
            "1d",
            "1d",
            "JS: Enumeration",
            "N/S",
            "JS: Array1d",
            "RUIhandlers",
            "N/S",
            "N/S",
            "N/S"
        ],
        [
            "Java",
            "2d",
            "done",
            "1d",
            "1d bug 353641",
            "done",
            "N/S",
            "done",
            "1d bug 353642",
            "done",
            "1d bug 353643",
            "1d bug 353644",
            "1d bug 353645",
            "1d bug 353646",
            "done",
            "REST RPC SOAP",
            "N/S",
            "N/S",
            "N/S"
        ]
    ],
    "pageTitle": "Difference between revisions of \"EDT:EGL Language Part Types\" - Eclipsepedia",
    "title": "",
    "url": "http://wiki.eclipse.org/index.php?title=EDT:EGL_Language_Part_Types&diff=263541&oldid=263540",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 1,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438044160065.87/warc/CC-MAIN-20150728004240-00242-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 265470575,
    "recordOffset": 265457357,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{21841=Copyright \u00a9 2014 The Eclipse Foundation. All Rights Reserved.}",
    "textBeforeTable": "Part Types (Table 1) Please see the parent of this page, EDT:EGL Language. Revision as of 10:14, 3 August 2011 | 1d {{bug|353643}}<br> \u00a0 | 1d {{bug|353643}}<br> \u00a0 | 1d<br> \u00a0 | 1d<br> \u00a0 | 1d {{bug|353769}}<br> + | 1d {{bug|353769}}<br> \u00a0 \u2212 | bgcolor=\"#cccccc\" | ''Service''<br> \u00a0 | bgcolor=\"#cccccc\" | ''Service''<br> \u00a0 |- \u00a0 |- \u00a0 Line 62: Line 62: | bgcolor=\"#ffff00\" | 2d<br> \u00a0 | bgcolor=\"#ffff00\" | 2d<br> \u00a0 | bgcolor=\"#ffff00\" | <span style=\"text-decoration: underline\">[https://bugs.eclipse.org/bugs/show_bug.cgi?id=352111 JS: DataItem]</span>2d<br> \u00a0 | bgcolor=\"#ffff00\" | <span style=\"text-decoration: underline\">[https://bugs.eclipse.org/bugs/show_bug.cgi?id=352111 JS: DataItem]</span>2d<br> \u00a0 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; \u00a0 | bgcolor=\"#ffff00\" | <br>2d + | bgcolor=\"#ffff00\" | <br>2d&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \u00a0 \u2212 | bgcolor=\"#ffff00\" | ''DataItem<sup>1</sup>'' \u00a0 \u00a0 | bgcolor=\"#ffff00\" | ''DataItem<sup>1</sup>'' \u00a0 \u00a0 |-",
    "textAfterTable": "Notes on Table 1 In RBD a DataItem can only be used for primitive types. In EDT it can be used for any type. See also Table 2: Function Parameters. Interfaces can be implemented by services and handlers (every kind of \"logic part\" which can be instantiated). There are no called programs in EDT. Use libraries for \"local calls\" and services for \"remote calls\". We intend to support function overloading in all implementations, even JavaScript. Records (including structured records) are value types, so record variables may be declared with a question mark following the name of the type to indicate that they're nullable. Nullability means that a variable may really be null. It's not an \"I'm null\" flag like in RBD. A NullValueException will be thrown if you try to access a field or function of a null variable, even a record. A NullValueException will be thrown if a null variable is an operand to a math operator, an array access, a substring access, a comparison, or a bitwise operator. The string concatenation operators will work the same as in RBD with respect to nulls. \u00a0:: treats null as the empty string, and\u00a0?: results in null if either operand is null. A question mark won't be allowed on the second operand of the AS and ISA operators (the name of the type). The deployment descriptor will ONLY be",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}