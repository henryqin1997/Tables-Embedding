{
    "relation": [
        [
            "Event Type",
            "action",
            "dialog",
            "disclosure",
            "disclosure",
            "focus",
            "launch",
            "launchPopup",
            "load",
            "poll",
            "popupOpened",
            "popupOpening",
            "popupClosed",
            "propertyChange",
            "queryEvent",
            "queryOperation",
            "rangeChange",
            "regionNavigation",
            "return",
            "returnPopupData",
            "returnPopup",
            "rowDisclosure",
            "selection",
            "sort",
            "valueChange"
        ],
        [
            "Component Trigger",
            "All command components",
            "dialog",
            "showDetail, showDetailHeader",
            "showDetailItem",
            "tree, treeTable",
            "All command components",
            "inputListOfValues, inputComboboxListOfValues",
            "document",
            "poll",
            "popup",
            "popup",
            "popup",
            "All components",
            "query, quickQuery",
            "query, quickQuery",
            "table",
            "region",
            "All command components",
            "inputListOfValues, inputComboboxListOfValues",
            "inputListOfValues, inputComboboxListOfValues",
            "tree, treeTable",
            "tree, treeTable, table",
            "treeTable, table",
            "All input and select components (components that implement EditableValueHolder)"
        ],
        [
            "Is Event Root",
            "false",
            "false",
            "true",
            "true",
            "true",
            "NA",
            "true",
            "NA",
            "true",
            "NA",
            "NA",
            "NA",
            "NA",
            "true",
            "true",
            "NA",
            "NA",
            "true",
            "true",
            "true",
            "true",
            "true",
            "true",
            "true"
        ]
    ],
    "pageTitle": "Handling Events",
    "title": "",
    "url": "https://docs.oracle.com/cd/E17904_01/web.1111/b31973/af_event.htm",
    "hasHeader": true,
    "headerPosition": "MIXED",
    "tableType": "RELATION",
    "tableNum": 0,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438044160065.87/warc/CC-MAIN-20150728004240-00223-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 881389779,
    "recordOffset": 881364206,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{100958=To avoid this issue, the web.xml configuration file contains the oracle.adf.view.rich.poll.TIMEOUT context-parameter, which specifies how long a page should run before it times out. A page is considered eligible to time out if there is no keyboard or mouse activity. The default timeout period is set at ten minutes. So if user is inactive for 10 minutes, that is, does not use the keyboard or mouse, then the framework stops polling, and from that point on, the page participates in the standard server-side session timeout (for more information, see Section A.2.3.20, \"Session Timeout Warning\").}",
    "lastModified": "Wed, 13 May 2015 05:16:50 GMT",
    "textBeforeTable": "Table 5-1 Events and Event Root Components Table 5-1 shows the event types in ADF Faces, and whether or not the source component is an event root. Additionally, certain events indicate a specific component as an event root component. For example, the disclosure event sent when a expanding or collapsing a showDetail component (see Section 8.8, \"Displaying and Hiding Contents Dynamically\"), indicates that the showDetail component is a root. The lifecycle is run only on the showDetail component (and any child components or other components that point to this as a trigger), and only they are rerendered when it is expanded or collapsed. Certain components are considered event root components. Event root components determine boundaries on the page, and so allow the lifecycle to run just on components within that boundary (for more information about this aspect of the lifecycle, see Section 4.3, \"Using the Optimized Lifecycle\"). When an event occurs within an event root, only those components that are children to the root are refreshed on the page. An example of an event root component is a popup. When an event happens within a popup, only the popup and its children are rerendered, and not the whole page. Unlike standard JSF events, ADF Faces events support AJAX-style partial postbacks to enable partial page rendering (PPR). Instead of full page rendering, ADF Faces events and components can trigger partial page rendering, that is, only portions",
    "textAfterTable": "Tip: If components outside of the event root need to be processed when the event root is processed, then you must set the partialTrigger attribute on those components to the ID of the event root component. 5.1.2 Client-Side Event Model In addition to server-side action and value change events, ADF\u00a0Faces components also invoke client-side action and value change events, and other kinds of server and client events. Some events are generated by both server and client components (for example, selection events); some events are generated by server components only (for example, launch events); and some events are generated by client components only (for example, load events). By default, most client events are propagated to the server. Changes to the component state are automatically synchronized back to the server to ensure consistency of state, and events are delivered, when necessary, to the server for further processing. However, you can configure your event so that it does not propagate. In addition, any time you register a client-side event listener on the server-side Java component, the RCF assumes that you require a JavaScript component, so a client-side component is created. Client-side JavaScript events can come from several sources: they can be derived automatically from DOM events, from property change events, or they can be manually created during the processing of other events.",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}