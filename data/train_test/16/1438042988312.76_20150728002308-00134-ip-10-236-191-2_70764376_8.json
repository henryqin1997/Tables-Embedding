{
    "relation": [
        [
            "Property",
            "DB_LOCATION",
            "DEFERRABLE",
            "DEPLOYABLE",
            "ENABLECONSTRAINT",
            "EXCEPTIONSINTO",
            "INITIALLY",
            "ONDELETE",
            "RELY",
            "SUBSTITUTE_KEY",
            "VALIDATECONSTRAINT"
        ],
        [
            "Type",
            "STRING",
            "STRING",
            "BOOLEAN",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "STRING",
            "BOOLEAN",
            "STRING"
        ],
        [
            "Choices",
            "none",
            ", DEFERRABLE, NOT DEFERRABLE",
            "true, false",
            ", DISABLE, ENABLE",
            "none",
            ", DEFERRED, IMMEDIATE",
            ", CASCADE, SET NULL",
            ", NORELY, RELY",
            "true, false",
            ", NOVALIDATE, VALIDATE"
        ],
        [
            "Min",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none"
        ],
        [
            "Max",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none",
            "none"
        ],
        [
            "Default",
            "empty string",
            "empty string",
            "true",
            "empty string",
            "empty string",
            "empty string",
            "empty string",
            "empty string",
            "false",
            "empty string"
        ],
        [
            "Description",
            "Location for referenced database objects.",
            "Specify DEFERRABLE to indicate that in subsequent transactions you can use the SET CONSTRAINT[S] clause to defer checking of this constraint until after the transaction is committed. Specify NOT DEFERRABLE to indicate that in subsequent transactions you cannot use the SET CONSTRAINT[S] clause to defer checking of this constraint until the transaction is committed. The default is NOT DEFERRABLE.",
            "Warehouse Builder generates a set of scripts to create an object only for those object marked as Deployable = true",
            "Specify ENABLE if you want the constraint to be applied to the data in the table. Specify DISABLE to disable the integrity constraint. The default is ENABLE.",
            "Specify an exceptions table ([schema.]table). The EXCEPTIONS table or the table you specify must exist on your local database. If you create your own exceptions table, then it must follow the format prescribed by one of the two scripts supplied by Oracle. Do not use this property with NOVALIDATE option.",
            "Specify (INITIALLY) IMMEDIATE to indicate that Oracle should check a DEFERRABLE constraint at the end of each subsequent SQL statement. Specify (INITIALLY) DEFERRED to indicate that Oracle should check a DEFERRABLE constraint at the end of subsequent transactions. The default is (INITIALLY) IMMEDIATE.",
            "Specify CASCADE if you want Oracle to remove dependent foreign key values. Specify SET NULL if you want Oracle to convert dependent foreign key values to NULL.",
            "Specify RELY to activate an existing constraint in NOVALIDATE mode for query rewrite in an unenforced query rewrite integrity mode. The default is NORELY.",
            "This is related to Streams Support. If this is true, deployment will result only in creation of the key metadata. The constraint itself will not be enforced. This will be done by creating a Streams substitute key.",
            "The behavior of VALIDATE and NOVALIDATE always depends on whether the constraint is enabled or disabled, either explicitly or by default. (ENABLE) VALIDATE specifies that all old and new data must compliy with the constraint. (ENABLE) NOVALIDATE only ensures that all new DML operations on the constrained data comply with the constraint. (DISABLE) VALIDATE disables the constraint and drops the index on the constraint, but keeps the constraint valid. (DISABLE) NOVALIDATE signifies that Oracle makes no effort to maintain the constraint (because it is disabled) and cannot guarantee that the constraint is true (because it is not being validated). The default is NOVALIDATE."
        ]
    ],
    "pageTitle": "OMBCREATE TABLE",
    "title": "",
    "url": "http://docs.oracle.com/cd/E18283_01/owb.112/e14406/chap9019.htm",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 8,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988312.76/warc/CC-MAIN-20150728002308-00134-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 70784131,
    "recordOffset": 70764376,
    "tableOrientation": "HORIZONTAL",
    "lastModified": "Sat, 14 Aug 2010 15:00:51 GMT",
    "textBeforeTable": "Table 9-103 FOREIGN_KEY Object FOREIGN_KEY Object The behavior of VALIDATE and NOVALIDATE always depends on whether the constraint is enabled or disabled, either explicitly or by default. (ENABLE) VALIDATE specifies that all old and new data must compliy with the constraint. (ENABLE) NOVALIDATE only ensures that all new DML operations on the constrained data comply with the constraint. (DISABLE) VALIDATE disables the constraint and drops the index on the constraint, but keeps the constraint valid. (DISABLE) NOVALIDATE signifies that Oracle makes no effort to maintain the constraint (because it is disabled) and cannot guarantee that the constraint is true (because it is not being validated). The default is NOVALIDATE. empty string none none , NOVALIDATE, VALIDATE STRING VALIDATECONSTRAINT Specify True to create a constraint as an index. false none none true, false BOOLEAN USING_INDEX This is related to Streams Support.",
    "textAfterTable": "CHECK_CONSTRAINT Object Table 9-104 CHECK_CONSTRAINT Object Property Type Choices Min Max Default Description DB_LOCATION STRING none none none empty string Location for referenced database objects. DEFERRABLE STRING , DEFERRABLE, NOT DEFERRABLE none none empty string Specify DEFERRABLE to indicate that in subsequent transactions you can use the SET CONSTRAINT[S] clause to defer checking of this constraint until after the transaction is committed. Specify NOT DEFERRABLE to indicate that in subsequent transactions you cannot use the SET CONSTRAINT[S] clause to defer checking of this constraint",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}