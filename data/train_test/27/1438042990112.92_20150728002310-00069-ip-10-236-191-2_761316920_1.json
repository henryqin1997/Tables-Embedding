{
    "relation": [
        [
            "#",
            "BT01-001",
            "BT01-002",
            "BT01-003",
            "BT01-004",
            "BT01-005",
            "BT01-006",
            "BT01-007",
            "BT01-008",
            "BT01-009",
            "BT01-010",
            "BT01-011",
            "BT01-012",
            "BT01-013",
            "BT01-014",
            "BT01-015",
            "BT01-016",
            "BT01-017",
            "BT01-018",
            "BT01-019",
            "BT01-020",
            "BT01-021",
            "BT01-022",
            "BT01-023",
            "BT01-024",
            "BT01-025",
            "BT01-026",
            "BT01-027",
            "BT01-028",
            "BT01-029",
            "BT01-030",
            "BT01-031",
            "BT01-032",
            "BT01-033",
            "BT01-034",
            "BT01-035",
            "BT01-036",
            "BT01-037",
            "BT01-038",
            "BT01-039",
            "BT01-040",
            "BT01-041",
            "BT01-042",
            "BT01-043",
            "BT01-044",
            "BT01-045",
            "BT01-046",
            "BT01-047",
            "BT01-048",
            "BT01-049",
            "BT01-050",
            "BT01-051",
            "BT01-052",
            "BT01-053",
            "BT01-054",
            "BT01-055",
            "BT01-056",
            "BT01-057",
            "BT01-058",
            "BT01-059",
            "BT01-060",
            "BT01-061",
            "BT01-062",
            "BT01-063",
            "BT01-064",
            "BT01-065",
            "BT01-066",
            "BT01-067",
            "BT01-068",
            "BT01-069",
            "BT01-070",
            "BT01-071",
            "BT01-072",
            "BT01-073",
            "BT01-074",
            "BT01-075",
            "BT01-076",
            "BT01-077",
            "BT01-078",
            "BT01-079",
            "BT01-080",
            "BT01-S01",
            "BT01-S02",
            "BT01-S03",
            "BT01-S04",
            "BT01-S05",
            "BT01-S06",
            "BT01-S07",
            "BT01-S08",
            "BT01-S09",
            "BT01-S10",
            "BT01-S11"
        ],
        [
            "Name",
            "King of Knights, Alfred",
            "Blaster Blade",
            "Barcgal",
            "Dragonic Overlord",
            "Embodiment of Victory, Aleph",
            "CEO Amaterasu",
            "Battle Sister, Cocoa",
            "Asura Kaiser",
            "Demon Slaying Knight, Lohengrin",
            "Solitary Knight, Gancelot",
            "Flash Shield, Iseult",
            "Future Knight, Llew",
            "Vortex Dragon",
            "Dragon Knight, Aleph",
            "Wyvern Guard, Barri",
            "Lizard Soldier, Conroe",
            "Maiden of Libra",
            "Battle Sister, Mocha",
            "Battle Sister, Chocolat",
            "Juggernaut Maximum",
            "Knight of Silence, Gallatin",
            "Dragon Knight, Nehalem",
            "Wyvern Strike, Tejas",
            "Embodiment of Spear, Tahr",
            "Oracle Guardian, Apollon",
            "Oracle Guardian, Wiseman",
            "Lozenge Magus",
            "Mr. Invincible",
            "Brutal Jack",
            "King of Sword",
            "Queen of Heart",
            "Battleraizer",
            "Tyrant, Deathrex",
            "Assault Dragon, Blightops",
            "Stealth Dragon, Voidmaster",
            "Demon Eater",
            "Monster Frank",
            "Commodore Blueblood",
            "Hell Spider",
            "Bloody Hercules",
            "Covenant Knight, Randolf",
            "Little Sage, Marron",
            "Lake Maiden, Lien",
            "Wingal",
            "Weapons Dealer, Govannon",
            "Flogal",
            "Yggdrasil Maiden, Elaine",
            "Embodiment of Armor, Bahr",
            "Dragon Monk, Gojo",
            "Wyvern Strike, Jarran",
            "Dragon Dancer, Monica",
            "Lizard Soldier, Ganlu",
            "Dragon Monk, Genjo",
            "Oracle Guardian, Gemini",
            "Weather Girl, Milk",
            "Oracle Guardian, Nike",
            "Dream Eater",
            "Miracle Kid",
            "Hungry Dumpty",
            "Tough Boy",
            "Screamin' and Dancin' Announcer, Shout",
            "Clay-doll Mechanic",
            "Shining Lady",
            "Lucky Girl",
            "Ring Girl, Clara",
            "Sonic Noa",
            "Ironclad Dragon, Shieldon",
            "Stealth Beast, Chigasumi",
            "Stealth Dragon, Dreadmaster",
            "Stealth Beast, Hagakure",
            "Blue Dust",
            "Nightmare Baby",
            "Rock the Wall",
            "Highspeed, Brakki",
            "Wonder Boy",
            "Redshoe, Milly",
            "Dandy Guy, Romario",
            "Guiding Zombie",
            "Karma Queen",
            "Madame Mirage",
            "King of Knights, Alfred [SP]",
            "Blaster Blade [SP]",
            "Barkgal",
            "Dragonic Overlord [SP]",
            "CEO Amaterasu [SP]",
            "Battle Sister, Cocoa [SP]",
            "Asura Kaiser [SP]",
            "Solitary Knight, Gancelot [SP]",
            "Maiden of Libra [SP]",
            "Lozenge Magus [SP]",
            "Battleraizer [SP]"
        ],
        [
            "Type",
            "Royal Paladin",
            "Royal Paladin",
            "Royal Paladin",
            "Kager\u014d",
            "Kager\u014d",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Nova Grappler",
            "Royal Paladin",
            "Royal Paladin",
            "Royal Paladin",
            "Royal Paladin",
            "Kager\u014d",
            "Kager\u014d",
            "Kager\u014d",
            "Kager\u014d",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Spike Brothers",
            "Royal Paladin",
            "Kager\u014d",
            "Kager\u014d",
            "Kager\u014d",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Nova Grappler",
            "Nova Grappler",
            "Nova Grappler",
            "Nova Grappler",
            "Nova Grappler",
            "Tachikaze",
            "Tachikaze",
            "Nubatama",
            "Dark Irregulars",
            "Granblue",
            "Granblue",
            "Megacolony",
            "Megacolony",
            "Royal Paladin",
            "Royal Paladin",
            "Royal Paladin",
            "Royal Paladin",
            "Royal Paladin",
            "Royal Paladin",
            "Royal Paladin",
            "Kager\u014d",
            "Kager\u014d",
            "Kager\u014d",
            "Kager\u014d",
            "Kager\u014d",
            "Kager\u014d",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Nova Grappler",
            "Nova Grappler",
            "Nova Grappler",
            "Nova Grappler",
            "Nova Grappler",
            "Nova Grappler",
            "Nova Grappler",
            "Tachikaze",
            "Tachikaze",
            "Nubatama",
            "Nubatama",
            "Nubatama",
            "Dark Irregulars",
            "Dark Irregulars",
            "Dark Irregulars",
            "Spike Brothers",
            "Spike Brothers",
            "Spike Brothers",
            "Granblue",
            "Granblue",
            "Megacolony",
            "Megacolony",
            "Royal Paladin",
            "Royal Paladin",
            "Royal Paladin",
            "Kager\u014d",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Nova Grappler",
            "Royal Paladin",
            "Oracle Think Tank",
            "Oracle Think Tank",
            "Nova Grappler"
        ],
        [
            "Rarity",
            "RRR",
            "RRR",
            "RRR",
            "RRR",
            "RRR",
            "RRR",
            "RRR",
            "RRR",
            "RR",
            "RR",
            "RR",
            "RR",
            "RR",
            "RR",
            "RR",
            "RR",
            "RR",
            "RR",
            "RR",
            "RR",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "R",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "C",
            "SP",
            "SP",
            "SP",
            "SP",
            "SP",
            "SP",
            "SP",
            "SP",
            "SP",
            "SP",
            "SP"
        ],
        [
            "Average Price",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
        ],
        [
            "",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search",
            "search"
        ]
    ],
    "pageTitle": "Booster Set 1: Descent Of The King of Knights at Trade Cards Online",
    "title": "Booster Set 1: Descent Of The King of Knights: 91 cards",
    "url": "http://www.tradecardsonline.com/?action=selectCard&series_id=1746&goal=&cards_lang=&sort=cASC&new_sort=n",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 1,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990112.92/warc/CC-MAIN-20150728002310-00069-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 761337467,
    "recordOffset": 761316920,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "or click on the price tag to purchase that card at the best prices: Use the 'search' link for the card you're interested in, to find those users who have or want that card, extended format Printer-friendly checklist \u00a0\u00a0 } x_request_card_prices.arguments); sajax_do_call(\"request_card_prices\", function x_request_card_prices() { // wrapper for request_card_prices } x_report_content.arguments); sajax_do_call(\"report_content\", function x_report_content() { // wrapper for report_content } x_add_item_to_collection.arguments); sajax_do_call(\"add_item_to_collection\", function x_add_item_to_collection() { // wrapper for add_item_to_collection } x_report_missing_set.arguments); sajax_do_call(\"report_missing_set\", function x_report_missing_set() { // wrapper for report_missing_set } return true; delete x; sajax_debug(func_name + \" waiting..\"); x.send(post_data); sajax_debug(func_name + \" uri = \" + uri + \"/post = \" + post_data); } } } } } sajax_debug(\"Caught error \" + e + \": Could not eval \" + data ); } catch (e) { callback(eval(data), extra_data, {'duration':call_duration, 'status':x.status}); sajax_debug('duration: '+call_duration); var call_duration = (return_time.getTime()-sent_time.getTime()); var return_time = new Date(); } callback = args[args.length-1]; } else { extra_data = args[args.length-1].extra_data; callback = args[args.length-1].callback; if (typeof args[args.length-1] == \"object\") { var extra_data = false; var callback; try { else { document.getElementById(target_id).innerHTML = eval(data); if (target_id != \"\") else { alert(\"Error: \" + data); } else if (status == \"-\") // let's just assume this is a pre-response bailout and let",
    "textAfterTable": "Total price for whole set: Add a new card top",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}