{
    "relation": [
        [
            "r022695f",
            "45",
            "46",
            "",
            "47",
            "48",
            "\u2026",
            "154",
            "155",
            "156",
            "",
            "157",
            "158",
            "\u2026",
            "193",
            "194",
            "",
            "195",
            "196",
            "\u2026",
            "198",
            "199",
            "",
            "",
            "",
            "",
            "",
            "200",
            "201",
            "\u2026",
            "427",
            "428",
            "",
            "429",
            "430"
        ],
        [
            "rec240f3",
            "45",
            "46",
            "47",
            "48",
            "49",
            "\u2026",
            "155",
            "156",
            "",
            "157",
            "158",
            "159",
            "\u2026",
            "194",
            "195",
            "196",
            "197",
            "198",
            "\u2026",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "\u2026",
            "434",
            "435",
            "436",
            "437",
            "438"
        ],
        [
            "",
            "struct ping_payload {",
            "uuid_t checkid;",
            "u_int32_t generation;",
            "struct timeval whence;",
            "int check_no;",
            "",
            "} from;",
            "unsigned int from_len;",
            "struct ip *ip = (struct ip *)packet; ;",
            "struct ip *ip = (struct ip *)packet;",
            "struct icmp *icp;",
            "struct ping_payload *payload;",
            "",
            "}",
            "check = noit_poller_lookup(payload->checkid);",
            "/* make sure this check is from this generation! */",
            "if(!check) {",
            "char uuid_str[37];",
            "",
            "noitLT(nlerr, now,",
            "\"ping_icmp response for unknown check '%s'\\n\", uuid_str);",
            "continue;",
            "}",
            "if(check->generation != payload->generation) {",
            "noitLT(nldeb, now,",
            "\"ping_icmp response in generation gap\\n\");",
            "continue;",
            "}",
            "",
            "",
            "uuid_copy(payload->checkid, check->checkid);",
            "payload->generation = check->generation;",
            "payload->check_no = ci->check_no;",
            "payload->check_pack_no = i;"
        ]
    ],
    "pageTitle": "Reconnoiter ~ Changeset ec240f3789e4102e71fe1246fbff2af5f6fb3dc2",
    "title": "",
    "url": "http://labs.omniti.com/labs/reconnoiter/changeset/ec240f3789e4102e71fe1246fbff2af5f6fb3dc2",
    "hasHeader": true,
    "headerPosition": "MIXED",
    "tableType": "RELATION",
    "tableNum": 0,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988860.4/warc/CC-MAIN-20150728002308-00014-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 136693502,
    "recordOffset": 136685300,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "src/modules/ping_icmp.c Moved Copied Modified Removed Added Unmodified Legend: src/modules/ping_icmp.c (modified) (5\u00a0diffs) Files: make ping cognizant of generation gaps on checks, fixes #107 Message: Theo Schlossnagle <jesus@omniti.com> 1237232692 +0000 git-author: [5b175f1d6f70b127b0df3c66d53fff4ec99c769b] git-parent: Theo Schlossnagle <jesus@omniti.com> 1237232692 +0000 git-committer: Theo Schlossnagle <jesus@omniti.com> Author: 03/16/09 19:44:52 (6 years ago) Timestamp: White space changes Case changes Blank lines Ignore: lines around each change Show",
    "textAfterTable": "Download in other formats: Unified Diff Zip Archive",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}