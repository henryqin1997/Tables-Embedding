{
    "relation": [
        [
            "Module/Class",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num",
            "GHC.Num(Eq)",
            "GHC.Num(Eq)",
            "GHC.Num(Eq)",
            "GHC.Num(Eq)",
            "GHC.Num(Eq)",
            "GHC.Num(Eq)",
            "GHC.Float",
            "GHC.Float",
            "GHC.Float",
            "GHC.Float",
            "GHC.Float",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "Data.Bits",
            "StringBuffer"
        ],
        [
            "Haskell Function",
            "(+)",
            "(-)",
            "(*)",
            "div",
            "negate",
            "abs",
            "signum",
            "subtract",
            "even",
            "odd",
            "gcd",
            "lcm",
            "(^)",
            "(^^)",
            "zeroInteger",
            "<",
            "<=",
            ">",
            ">=",
            "==",
            "!=",
            "floatRadix",
            "encodeFloat",
            "decodeFloat",
            "encodeDouble",
            "decodeDouble",
            "(.&.)",
            "(.|.)",
            "xor",
            "complement",
            "shift",
            "rotate",
            "bit",
            "setBit",
            "clearBit",
            "complementBit",
            "testBit",
            "bitSize",
            "isSigned",
            "shiftL",
            "shiftR",
            "rotateL",
            "rotateR",
            "parseInteger"
        ],
        [
            "Notes",
            "rts/PrimOps.cmm --> Haskell",
            "rts/PrimOps.cmm --> Haskell",
            "rts/PrimOps.cmm --> Haskell",
            "rts/PrimOps.cmm --> Haskell",
            "rts/PrimOps.cmm --> Haskell",
            "",
            "",
            "rts/PrimOps.cmm --> Haskell",
            "rts/PrimOps.cmm --> Haskell",
            "",
            "rts/PrimOps.cmm --> Haskell",
            "rts/PrimOps.cmm --> Haskell",
            "need exceptions for overflow",
            "need exceptions for overflow",
            "(see other primitives below)",
            "",
            "",
            "",
            "",
            "",
            "",
            "rts/StgPrimFloat.c",
            "rts/StgPrimFloat.c --> linked in directly?",
            "rts/StgPrimFloat.c --> rts/Rts.h --> PrimOps.cmm",
            "rts/StgPrimFloat.c --> linked in directly?",
            "rts/StgPrimFloat.c --> rts/Rts.h --> PrimOps.cmm",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Haskell function",
            "Haskell function",
            "rotates operate as shifts for Integer",
            "rotates operate as shifts for Integer",
            "Haskell function"
        ]
    ],
    "pageTitle": "ReplacingGMPNotes/RequiredIntegerFunctions \u2013 GHC",
    "title": "",
    "url": "https://ghc.haskell.org/trac/ghc/wiki/ReplacingGMPNotes/RequiredIntegerFunctions?version=3",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 1,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989301.17/warc/CC-MAIN-20150728002309-00000-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 866950345,
    "recordOffset": 866942143,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "GHC Functions Note: this is a very rough overview of the Integer functions in GHC. It is not yet even a sketch of functions that a replacement library should implement, although the Primitive Functions (in Cmm or C) provide an overview of what GMP currently provides. Functions that operate on Integer values add encodeDouble; some notes Version 3 (modified by p_tanski, 9 years ago) (diff) Wiki Notes Recent Changes Title Index Wiki \u00a0 New Feature Req New Task New Bug Create Ticket \u00a0 Patches for review By Architecture By OS By Milestone Tickets I Created My Tickets View Tickets \u00a0 Infrastructure Debugging Commentary Working conventions Building Guide Repositories GHC Status Info Documentation \u00a0 The GHC Team Mailing Lists & IRC Newcomers info Report a bug Joining In \u00a0 GHC Home GHC Git Repos GHC Trac Home",
    "textAfterTable": "Primitive Functions (in Cmm or C) Module/Class Haskell Function Notes GHC.Prim integer2Int# from rts/PrimOps.cmm GHC.Prim integer2Word# from rts/PrimOps.cmm GHC.Prim int2Integer# from rts/PrimOps.cmm GHC.Prim word2Integer# from rts/PrimOps.cmm GHC.Prim int64ToInteger# from rts/PrimOps.cmm GHC.Prim word64ToInteger# from rts/PrimOps.cmm GHC.Prim decodeDouble# from rts/PrimOps.cmm GHC.Prim decodeFloat# from rts/PrimOps.cmm GHC.Prim plusInteger# from rts/PrimOps.cmm GHC.Prim minusInteger# from rts/PrimOps.cmm GHC.Prim timesInteger# from rts/PrimOps.cmm GHC.Prim gcdInteger# from rts/PrimOps.cmm GHC.Prim gcdIntegerInt# from rts/PrimOps.cmm GHC.Prim divExactInteger# from rts/PrimOps.cmm GHC.Prim quotInteger# from rts/PrimOps.cmm GHC.Prim remInteger# from rts/PrimOps.cmm GHC.Prim cmpInteger# from rts/PrimOps.cmm GHC.Prim cmpIntegerInt# from rts/PrimOps.cmm GHC.Prim quotRemInteger# from rts/PrimOps.cmm",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}