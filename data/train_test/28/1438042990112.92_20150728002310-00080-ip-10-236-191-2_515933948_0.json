{
    "relation": [
        [
            "Version",
            "IIS 8.5",
            "IIS 8.0",
            "IIS 7.5",
            "IIS 7.0",
            "IIS 6.0"
        ],
        [
            "Notes",
            "The element was not modified in IIS 8.5.",
            "The element was not modified in IIS 8.0.",
            "The element was not modified in IIS 7.5.",
            "The element was introduced in IIS 7.0.",
            "N/A"
        ]
    ],
    "pageTitle": "Handlers <handlers> : The Official Microsoft IIS Site",
    "title": "",
    "url": "http://www.iis.net/configreference/system.webserver/handlers",
    "hasHeader": true,
    "headerPosition": "MIXED",
    "tableType": "RELATION",
    "tableNum": 0,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990112.92/warc/CC-MAIN-20150728002310-00080-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 515949591,
    "recordOffset": 515933948,
    "tableOrientation": "HORIZONTAL",
    "textBeforeTable": "Compatibility IHttpHandler interface. Handlers are Internet Information Services (IIS) components that are configured to process requests to specific content, typically to generate a response for the request resource. For example, an ASP.NET Web page is one type of handler. You can use handlers to process requests to any resource that needs to return information to users that is not a static file. IIS provides several different handler types to support static files, Common Gateway Interface (CGI) applications, FastCGI applications, and Internet Server API (ISAPI) extensions. ASP.NET also provides support for additional handler types through the HTTP handler interface. Developers can create custom handlers to perform special handling that you can identify using file name extensions in your application. For example, if a developer created a handler that created RSS-formatted XML, you could bind the .rss file name extension in your application to the custom handler. Developers can also create handlers that map to a specific file and can implement these handlers as native modules or as implementations of the ASP.NET The <handlers> element defines the handlers registered for a specific file name extension or URL. Overview Sample Code Configuration How To Setup Compatibility Overview Handlers <handlers> HomeConfiguration Referencesystem.webServerhandlers Forums Blogs More Help Resources Ask a Question in our",
    "textAfterTable": "Setup The <handlers> element is included in the default installation of IIS 7. How To How create a handler mapping for an ASP.NET handler in an IIS 7 application running in Integrated mode Open Internet Information Services (IIS) Manager: If you are using Windows Server 2012 or Windows Server 2012 R2: On the taskbar, click Server Manager, click Tools, and then click Internet Information Services (IIS) Manager. If you are using Windows 8 or Windows 8.1: Hold down the Windows key, press the letter X, and then click Control Panel. Click Administrative Tools, and then double-click Internet Information Services (IIS) Manager. If you are using Windows Server 2008 or Windows Server 2008 R2: On the taskbar, click Start, point to Administrative Tools, and then click Internet Information Services (IIS) Manager. If you are using Windows Vista or Windows 7: On the taskbar, click Start, and then click Control Panel. Double-click Administrative Tools, and then double-click Internet Information Services (IIS) Manager. In the Connections pane, click the server connection that you want to add the native module to. In the Home pane, double-click Handler Mappings. On the Actions pane, click Add Managed Handler... In the Add Managed Handler dialog box, specify the following: Request Path. The file name or file name extension to map. Type. The type (class) name of",
    "hasKeyColumn": true,
    "keyColumnIndex": 1,
    "headerRowIndex": 0
}