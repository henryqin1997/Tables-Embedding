{
    "relation": [
        [
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int",
            "int"
        ],
        [
            "CLIP_TO_PADDING_MASK",
            "FOCUS_AFTER_DESCENDANTS",
            "FOCUS_BEFORE_DESCENDANTS",
            "FOCUS_BLOCK_DESCENDANTS",
            "LAYOUT_MODE_CLIP_BOUNDS",
            "LAYOUT_MODE_OPTICAL_BOUNDS",
            "PERSISTENT_ALL_CACHES",
            "PERSISTENT_ANIMATION_CACHE",
            "PERSISTENT_NO_CACHE",
            "PERSISTENT_SCROLLING_CACHE"
        ],
        [
            "We clip to padding when FLAG_CLIP_TO_PADDING and FLAG_PADDING_NOT_NULL are set at the same time.",
            "This view will get focus only if none of its descendants want it.",
            "This view will get focus before any of its descendants.",
            "This view will block any of its descendants from getting focus, even if they are focusable.",
            "This constant is a layoutMode.",
            "This constant is a layoutMode.",
            "Used to indicate that all drawing caches should be kept in memory.",
            "Used to indicate that the animation drawing cache should be kept in memory.",
            "Used to indicate that no drawing cache should be kept in memory.",
            "Used to indicate that the scrolling drawing cache should be kept in memory."
        ]
    ],
    "pageTitle": "LinearLayout | Android Developers",
    "title": "",
    "url": "http://developer.android.com/reference/android/widget/LinearLayout.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 10,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990177.43/warc/CC-MAIN-20150728002310-00134-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 65912475,
    "recordOffset": 65840498,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{637861=May be a color value, in the form of \"#rgb\", \"#argb\", \"#rrggbb\", or \"#aarrggbb\"., 637617=May be a reference to another resource, in the form \"@[+][package:]type:name\" or to a theme attribute in the form \"?[package:][type:]name\".}",
    "textBeforeTable": "ZoomControls TextInputLayout, TableRow, TableLayout, TabWidget, SearchView, RadioGroup, NumberPicker, ListRowView, ListRowHoverCardView, AppBarLayout, ActionMenuView, Known Direct Subclasses android.widget.LinearLayout \u00a0\u00a0\u00a0\u21b3 \u00a0 \u00a0 android.view.ViewGroup \u00a0\u00a0\u00a0\u21b3 \u00a0 android.view.View \u00a0\u00a0\u00a0\u21b3 java.lang.Object ViewGroup LinearLayout API level 1 [Expand All]Inherited MethodsProtected MethodsMethodsCtorsInherited FieldsInherited ConstantsConstantsInherited XML AttrsXML AttrsNested Classes }); scrollIntoView(\"classes-nav\"); scrollIntoView(\"packages-nav\"); $(document).ready(function() { // scroll the selected page into view } } init_default_navtree(\"/\"); if ($(\"#nav-tree\").is(':visible')) { chooseDefaultNav(); } else { $('#nav-swap').hide(); swapNav(); // tree view should be used on mobile if (isMobile) { // init nav version for mobile } } toggleFullscreen(true); } else { toggleFullscreen(false); if (fullscreen == \"false\") extends public class Added in | | | | | | | | | | Summary:",
    "textAfterTable": "Class Overview A Layout that arranges its children in a single column or a single row. The direction of the row can be set by calling setOrientation(). You can also specify gravity, which specifies the alignment of all the child elements by calling setGravity() or specify that specific children grow to fill up any remaining space in the layout by setting the weight member of LinearLayout.LayoutParams. The default orientation is horizontal. See the Linear Layout guide. Also see android.widget.LinearLayout.LayoutParams for layout attributes Summary Nested Classes class LinearLayout.LayoutParams Per-child layout information associated with ViewLinearLayout.\u00a0 XML Attributes Attribute Name Related Method Description android:baselineAligned setBaselineAligned(boolean) When set to false, prevents the layout from aligning its children's baselines.\u00a0 android:baselineAlignedChildIndex setBaselineAlignedChildIndex(int) When a linear layout is part of another layout that is baseline aligned, it can specify which of its children to baseline align to (that is, which child",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}