{
    "relation": [
        [
            "Option",
            "--prefix (global)",
            "--prefix (per-user)",
            "--bindir",
            "--libdir",
            "--libsubdir (Hugs)",
            "--libsubdir (others)",
            "--libexecdir",
            "--datadir (executable)",
            "--datadir (library)",
            "--datasubdir",
            "--docdir",
            "--htmldir",
            "--program-prefix",
            "--program-suffix"
        ],
        [
            "Windows Default",
            "C:\\Program Files\\Haskell",
            "C:\\Documents And Settings\\user\\Application Data\\cabal",
            "$prefix\\bin",
            "$prefix",
            "hugs\\packages\\$pkg",
            "$pkgid\\$compiler",
            "$prefix\\$pkgid",
            "$prefix",
            "C:\\Program Files\\Haskell",
            "$pkgid",
            "$prefix\\doc\\$pkgid",
            "$docdir\\html",
            "(empty)",
            "(empty)"
        ],
        [
            "Unix Default",
            "/usr/local",
            "$HOME/.cabal",
            "$prefix/bin",
            "$prefix/lib",
            "hugs/packages/$pkg",
            "$pkgid/$compiler",
            "$prefix/libexec",
            "$prefix/share",
            "$prefix/share",
            "$pkgid",
            "$datadir/doc/$pkgid",
            "$docdir/html",
            "(empty)",
            "(empty)"
        ]
    ],
    "pageTitle": "Cabal User Guide",
    "title": "",
    "url": "https://www.haskell.org/cabal/release/cabal-1.14.0/doc/users-guide/installing-packages.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 0,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990177.43/warc/CC-MAIN-20150728002310-00145-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 917609071,
    "recordOffset": 917597953,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{44337=Determines if the results of individual test cases are shown on the terminal. May be always (always show), never (never show), or failures (show only the test cases of failing test suites).}",
    "lastModified": "Sun, 01 Feb 2015 21:15:45 GMT",
    "textBeforeTable": "For the simple build system, the following defaults apply: Paths in the simple build system The architecture of the computer being used to build the package, eg i386, x86_64, ppc or sparc $arch The operating system of the computer being used to build the package, eg linux, windows, osx, freebsd or solaris $os The compiler being used to build the package, eg ghc-6.6.1 $compiler The version of the package, eg 0.2 $version The name of the package, eg mypkg $pkg The name and version of the package, eg mypkg-0.2 $pkgid As above but for --docdir $docdir As above but for --datasubdir $datasubdir As above but for --datadir $datadir As above but for --libsubdir $libsubdir As above but for --libdir $libdir The path variable that expands to the path given by the --bindir configure option (or the default). $bindir The path variable that stands for the root of the installation. For an installation to be relocatable, all other instllation paths must be relative to the $prefix variable. $prefix For the simple build system, there are a number of variables that can be used when specifying installation paths. The defaults are also specified in terms",
    "textAfterTable": "Prefix-independence On Windows, and when using Hugs on any system, it is possible to obtain the pathname of the running program. This means that we can construct an installable executable package that is independent of its absolute install location. The executable can find its auxiliary files by finding its own path and knowing the location of the other files relative to $bindir. Prefix-independence is particularly useful: it means the user can choose the install location (i.e. the value of $prefix) at install-time, rather than having to bake the path into the binary when it is built. In order to achieve this, we require that for an executable on Windows, all of $bindir, $libdir, $datadir and $libexecdir begin with $prefix. If this is not the case then the compiled executable will have baked-in all absolute paths. The application need do nothing special to achieve prefix-independence. If it finds any files using getDataFileName and the other functions provided for the purpose, the files will be accessed relative to the location of the current executable. A library cannot (currently) be prefix-independent, because it will be linked into an executable whose file system location bears no relation to the library package. Controlling Flag Assignments Flag assignments (see the resolution of conditions and flags) can be controlled with the followingcommand line options. -f flagname or -f - flagname Force the specified flag to true or false (if preceded with a -).",
    "hasKeyColumn": false,
    "keyColumnIndex": -1,
    "headerRowIndex": 0
}