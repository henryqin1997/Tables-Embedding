{
    "relation": [
        [
            "Variable",
            "ARGUMENTS",
            "CLASSNAME",
            "CONTEXTID",
            "CTXPAYLOAD",
            "DOMAIN",
            "DYES",
            "FILENAME",
            "LINENUM",
            "METHODNAME",
            "METHODDSC",
            "MODULE",
            "MONITOR",
            "PAYLOAD",
            "RECORDID",
            "RETVAL",
            "SCOPE",
            "SERVER",
            "TIMESTAMP",
            "TXID",
            "TYPE",
            "USERID"
        ],
        [
            "Description",
            "Arguments passed to the method that was invoked.",
            "Class name of joinpoint.",
            "Diagnostic context ID of instrumentation event.",
            "The context payload associated with this request.",
            "Name of domain.",
            "Dyes associated with this request.",
            "Source file name.",
            "Line number in source file.",
            "Method name of joinpoint.",
            "Method arguments of joinpoint.",
            "Name of the diagnostic module.",
            "Name of the monitor.",
            "Payload of instrumentation event.",
            "The number of the record in the log.",
            "Return value of joinpoint.",
            "Name of instrumentation scope.",
            "Name of server that created the instrumentation event.",
            "Timestamp when the instrumentation event was created.",
            "JTA transaction ID of thread that created the instrumentation event.",
            "Type of monitor.",
            "ID of the user that created the instrumentation event."
        ],
        [
            "Data Type",
            "String",
            "String",
            "String",
            "String",
            "String",
            "Long",
            "String",
            "Integer",
            "String",
            "String",
            "String",
            "String",
            "String",
            "Long",
            "String",
            "String",
            "String",
            "Long",
            "String",
            "String",
            "String"
        ]
    ],
    "pageTitle": "A WLDF Query Language",
    "title": "",
    "url": "http://docs.oracle.com/cd/E17904_01/web.1111/e13714/appendix_query.htm",
    "hasHeader": true,
    "headerPosition": "MIXED",
    "tableType": "RELATION",
    "tableNum": 2,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988305.14/warc/CC-MAIN-20150728002308-00202-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 74987259,
    "recordOffset": 74971310,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{2580=1010 | 0001 = 1011, 2606=( 1010 & ( 1100 | 1101 )) = 1000, 2550=1010 & 0010 = 0010}",
    "lastModified": "Wed, 13 May 2015 05:16:59 GMT",
    "textBeforeTable": "Table A-3 Variable Names for Instrumentation Event Rule Expressions Variable names for instrumentation data record attributes are listed and explained in Table A-3: An instrumentation event watch rule expression is based upon attributes of a data record created by a diagnostic monitor action. Creating Instrumentation Event Watch Rule Expressions (SEVERITY = 'Warning') AND (MSGID = 'BEA-320012')  An example log event watch rule expression is:  String ID of the user that generated the log message. USERID String JTA transaction ID of thread that generated the log message. TXID Long Timestamp when the log message was created. TIMESTAMP String Name of thread that generated the log message. THREAD String Name of subsystem emitting the log message. SUBSYTEM String Severity of log message. Values",
    "textAfterTable": "An example instrumentation event data rule expression is:  (USERID = 'weblogic') Creating Harvester Watch Rule Expressions A harvester watch rule expression is based upon one or more harvestable MBean attributes. The expression can specify an MBean type, an instance, and/or an attribute. Instance-based and type-based expressions can contain an optional namespace component, which is the namespace of the metric being watched. It can be set to either Server Runtime or DomainRuntime. If omitted, it defaults to ServerRuntime. If included and set to DomainRuntime, you should limit the usage to monitoring only DomainRuntime-specific MBeans, such as the ServerLifeCycleRuntimeMBean. Monitoring remote managed server MBeans through the DomainRuntime MBeanServer is possible, but is discouraged for performance reasons. It is a best practice to use the resident watcher in each managed server to monitor metrics related to that managed server instance. You can also use wildcards in instance names in Harvester watch rule expressions, as well as specify complex attributes in Harvester watch rule expressions. See Appendix C, \"Using Wildcards in Expressions.\" The syntax for constructing a Harvester watch rule expression is as follows: To specify an attribute of all instances of a type, use the following syntax:  ${namespace//[type_name]//attribute_name}  To specify an attribute of an instance of a WebLogic type, use the following syntax:  ${com.bea:",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}