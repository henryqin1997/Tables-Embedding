{
    "relation": [
        [
            "Date",
            "20 May 1999",
            "14 Sep 2005",
            "1 Feb 2010",
            "25 Jun 2010",
            "17 Aug 2010"
        ],
        [
            "Code",
            "AS",
            "FPAY",
            "REMI",
            "LAPS",
            "FP"
        ],
        [
            "Event",
            "Assignment",
            "Fee payment",
            "Maintenance fee reminder mailed",
            "Lapse for failure to pay maintenance fees",
            "Expired due to failure to pay maintenance fee"
        ],
        [
            "Description",
            "Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW Y Free format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CREAMER, THOMAS E.;LOZINSKI, ZYGMUNT A.;MANDALIA, BAIJU D.;REEL/FRAME:009983/0021;SIGNING DATES FROM 19990511 TO 19990512",
            "Year of fee payment: 4",
            "",
            "",
            "Effective date: 20100625"
        ]
    ],
    "pageTitle": "Patent US6411697 - System and method for providing customer personalized and modifiable ... - Google Patents",
    "title": "",
    "url": "http://www.google.ca/patents/US6411697",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 8,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042991019.80/warc/CC-MAIN-20150728002311-00283-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 477869619,
    "recordOffset": 477840370,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampAfterTable": "{27994=Example: Calling your parents, whose number is (777) 555-1234, call and the service logic has been modified to check the calling number and play the associated message\u2014\u201cMom and Dad, we are out of town for the weekend. We plan to return late Sunday evening and will check messages while we are way . . . \u201d., 44884=The JAVA virtual machine 19 executes real time, JAVA applications or \u201capplets\u201d. A JAVA applet is a compiled JAVA program, composed of object classes described in object-oriented programming. Applets are autonomous programs confined within the walls of a JAVA virtual machine or a web browser. JAVA applets comprise reusable software components called Java Beans. Java beans define a reusable software building block. A graphical development tool such as the \u201cAbstract Window Tool Kit\u201d (AWT) can determine a building block's capability, customize the building block, and connect the block to other components to build applications. The AWT kit is described in the text, \u201cJAVA AWT Reference\u201d, by John Zukowski, published by O'Reilly & Associates, Inc., Sebastopol, Calif., 1997., 43613=In one form, the platform independent-specific run-time system 14 is a JAVA virtual machine 19. JAVA is a programming language developed at Sun Microsystems and designed to be a machine-independent programming language safe enough to traverse networks and powerful enough to replace native executable code. The JAVA programming language is described in \u201cJAVA in a Nut Shell\u201d, by J. Zukowski, published by O'Reilly & Associates, Inc., Sebastopol, Calif., 1997. The JAVA run-time system performs all normal activities of a real processor in a virtual environment. The interpreter executes stacked-based instructions; manages a storage heap; creates and manipulates primitive data types; and loads and invokes newly referenced blocks of code. The JAVA interpreter can be implemented in whatever form is desirable for a particular platform. On most systems the interpreter is written in natively compiled language like C or C++. The interpreter can be run as a separate application or embedded in another piece of software such as a web browser. Further details of a JAVA virtual machine are described in the text \u201cExploring JAVA, 2nd Edition,\u201d by P. Niemeyer et al., published by O'Reilly and Associates, Inc., Sebastopol, Calif., 1997., 30525=U.S. Pat. No. 4,611,094 issued Sep. 9, 1986, discloses a method allowing a customer to find telephone service within flexible boundaries for calls directed to the customer. Within constraints imposed by the selected embodiment, the method reduces software development traditionally associated with the provision of new services. A plurality of independent call processing capabilites, such as announcement, designated collection and billing, are provided at a switching office. A program defined by a customer is executed in response to each call to the customer. The program makes decisions based on the parameters of the calls such as time, Automatic Number Identification (ANI), information digits requested and received from a caller, etc., and links together the appropriate ones and capabilities in the proper order to dispose of the call based on the call parameters specified in the program. A customer service may be modified by changing the customer program., 31513=U.S. Pat. No. 5,544,229 issued Aug. 6, 1996, discloses a common adjunct switch in association with a communication network provides a number of functionalities, one of which allows associated subscribers to customize the way in which they receive telephone calls and access enhanced services, such as facsimile services. In particular, each subscriber may dynamically specify a number of calling identifiers and a different call treatment for each such identifier as well as a particular billing mode. A call treatment may include, for example, a specification to forward an associated call to (a) a particular telephone number; (b) a default telephone number, or (c) a messaging service.}",
    "textBeforeTable": "Patent Citations While the invention has been shown and described in conjunction with an embodiment, various changes can be made therein without departing from the spirit and scope of the invention as defined in the appended claims, in which: Summarizing, a system and method have been described for telephone systems to personalize and modify a Service Provider's logic and data, implemented in a Java virtual machine. A process enables service logic modification by the subscriber through a service logic transfer from the Service Provider and service data provisioning using a variety of methods including, but not limited to communicating (a) with a service support representative; (b) phone/voice interface; (c) web interface. The process enables the service logic to function within the Service Provider's platform, or within the subscriber's appliance, or in a function sharing mode between the Service Provider's platform and the subscriber's appliance. The system and method further provide a process enabling the subscriber to test personalized service logic prior to provisioning of the modified service logic by the service provider by local customer premise testing using a service tool kit provided by the service provider or using facilities provided by a service support service for remote testing. A service support server is described with supports service logic upload from a subscriber's terminal for example, e.g., EPC or telephony voice interface from the PSTN or an IP/data interface from any IP network. A service management system supports",
    "textAfterTable": "Alcatel Usa Sourcing, L.P. Method and system for provisioning telecommunications services US6243443 * 20 Feb 1997 5 Jun 2001 Hewlett-Packard Company Method of making available content resources to users of a telephone network US6282281 * 11 Dec 1996 28 Aug 2001 Hewlett-Packard Company Method of providing telecommunications services US6314445 * 3 Aug 1998 6 Nov 2001 International Business Machines Coproration Native function calling US6339782 * 21 Nov 1997 15 Jan 2002 International Business Machines Corporation Persistence mechanism and method for objects * Cited by examiner Referenced by Citing Patent Filing date Publication date Applicant Title US6546095 * 5 Jan 2001 8 Apr 2003 America Online, Inc. Automated provisioning of telephone services US6636588 * 28 Dec 1999 21 Oct 2003",
    "hasKeyColumn": true,
    "keyColumnIndex": 2,
    "headerRowIndex": 0
}