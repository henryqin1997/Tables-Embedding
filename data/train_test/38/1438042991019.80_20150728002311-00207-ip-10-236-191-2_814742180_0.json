{
    "relation": [
        [
            "Notation",
            "decimal-digit",
            "hexadecimal-digit",
            "unsigned-integer",
            "positive-integer",
            "integer",
            "unsigned-number",
            "number",
            "character",
            "string",
            "length",
            "unit",
            "namedlength",
            "color",
            "id",
            "idref",
            "URI",
            "italicized word",
            "\"literal\""
        ],
        [
            "What it matches",
            "a decimal digit from the range U+0030 to U+0039",
            "a hexadecimal (base 16) digit from the ranges U+0030 to U+0039, U+0041 to U+0046 and U+0061 to U+0066",
            "a string of decimal-digits, representing a non-negative integer",
            "a string of decimal-digits, but not consisting solely of \"0\"s (U+0030), representing a positive integer",
            "an optional \"-\" (U+002D), followed by a string of decimal digits, and representing an integer",
            "a string of decimal digits with up to one decimal point (U+002E), representing a non-negative terminating decimal number (a type of rational number)",
            "an optional prefix of \"-\" (U+002D), followed by an unsigned number, representing a terminating decimal number (a type of rational number)",
            "a single non-whitespace character",
            "an arbitrary, nonempty and finite, string of characters",
            "a length, as explained below, Section 2.1.5.2 Length Valued Attributes",
            "a unit, typically used as part of a length, as explained below, Section 2.1.5.2 Length Valued Attributes",
            "a named length, as explained below, Section 2.1.5.2 Length Valued Attributes",
            "a color, as explained below, Section 2.1.5.3 Color Valued Attributes",
            "an identifier, unique within the document; must satisfy the NAME syntax of the XML recommendation [XML]",
            "an identifier referring to another element within the document; must satisfy the NAME syntax of the XML recommendation [XML]",
            "a Uniform Resource Identifier [RFC3986]. Note that the attribute value is typed in the schema as anyURI which allows any sequence of XML characters. Systems needing to use this string as a URI must encode the bytes of the UTF-8 encoding of any characters not allowed in URI using %HH encoding where HH are the byte value in hexadecimal. This ensures that such an attribute value may be interpreted as an IRI, or more generally a LEIRI, see [IRI].",
            "values as explained in the text for each attribute; see Section 2.1.5.4 Default values of attributes",
            "quoted symbol, literally present in the attribute value (e.g. \"+\" or '+')"
        ]
    ],
    "pageTitle": "MathML Fundamentals",
    "title": "",
    "url": "http://www.w3.org/TR/MathML3/chapter2.html",
    "hasHeader": true,
    "headerPosition": "FIRST_ROW",
    "tableType": "RELATION",
    "tableNum": 0,
    "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042991019.80/warc/CC-MAIN-20150728002311-00207-ip-10-236-191-2.ec2.internal.warc.gz",
    "recordEndOffset": 814764103,
    "recordOffset": 814742180,
    "tableOrientation": "HORIZONTAL",
    "TableContextTimeStampBeforeTable": "{4925=HTML does not support namespace extensibility in the same way, the HTML parser has in-built knowledge of the HTML, SVG and MathML namespaces. xmlns attributes are just treated as normal attributes. Thus when using the HTML serialisation of MathML, prefixed element names must not be used. xmlns=\"http://www.w3.org/1998/Math/MathML\" may be used on the math element, it will be ignored by the HTML parser, which always places math elements and its descendents in the MathML namespace (other than special rules described in Appendix\u00a0A Parsing MathMLfor invalid input, and for annotation-xml. If a MathML expression is likely to be in contexts where it may be parsed by an XML parser or an HTML parser, it SHOULD use the following form to ensure maximum compatibility:, 6295=The following sections discuss the general aspects of the MathML grammar as well as describe the syntaxes used for attribute values.}",
    "TableContextTimeStampAfterTable": "{16759=A color is specified either by \"#\" followed by hexadecimal values for the red, green, and blue components, with no intervening whitespace, or by an html-color-name. The color components can be either 1-digit or 2-digit, but must all have the same number of digits; the component ranges from 0 (component not present) to FF (component fully present). Note that, for example, by the digit-doubling rule specified under Colors in [CSS21] #123 is a short form for #112233., 32131=The math element accepts any of the attributes that can be set on Section\u00a03.3.4 Style Change <mstyle>, including the common attributes specified in Section\u00a02.1.6 Attributes Shared by all MathML Elements. In particular, it accepts the dir attribute for setting the overall directionality; the math element is usually the most useful place to specify the directionality (See Section\u00a03.1.5 Directionality for further discussion). Note that the dir attribute defaults to \"ltr\" on the math element (but inherits on all other elements which accept the dir attribute); this provides for backward compatibility with MathML 2.0 which had no notion of directionality. Also, it accepts the mathbackground attribute in the same sense as mstyle and other presentation elements to set the background color of the bounding box, rather than specifying a default for the attribute (see Section\u00a03.1.10 Mathematics style attributes common to presentation elements)}",
    "lastModified": "Wed, 09 Apr 2014 17:29:56 GMT",
    "textBeforeTable": "To describe the MathML-specific syntax of attribute values, the following conventions and notations are used for most attributes in the present document. We use below the notation beginning with U+ that is recommended by Unicode for referring to Unicode characters [see [Unicode], page xxviii]. 2.1.5.1 Syntax notation used in the MathML specification Except when explicitly forbidden by the specification for an attribute, MathML attribute values may contain any legal characters specified by the XML recommendation. See Chapter\u00a07 Characters, Entities and Fonts for further clarification. MathML elements take attributes with values that further specialize the meaning or effect of the element. Attribute names are shown in a monospaced font throughout this document. The meanings of attributes and their allowed values are described within the specification of each element. The syntax notation explained in this section is used in specifying allowed values. 2.1.5 MathML Attribute Values Nevertheless, some parts of this specification describe these recommended visual rendering rules in detail; in those descriptions it is often assumed that the model of rendering used supports the concepts of a well-defined 'current rendering environment' which, in particular, specifies a 'current font', a 'current display' (for pixel size) and a 'current baseline'. The 'current font' provides certain metric properties and an encoding of glyphs. MathML presentation elements only recommend (i.e., do not require) specific ways of rendering; this is in order to allow for medium-dependent rendering and for",
    "textAfterTable": "The \u2018types\u2019 described above, except for string, may be combined into composite patterns using the following operators. The whole attribute value must be delimited by single (') or double (\") quotation marks in the marked up document. Note that double quotation marks are often used in this specification to mark up literal expressions; an example is the \"-\" in line 5 of the table above. In the table below a form f means an instance of a type described in the table above. The combining operators are shown in order of precedence from highest to lowest: Notation What it matches ( f ) same as f f? an optional instance of f f * zero or more instances of f, with separating whitespace characters f + one or more instances of f, with separating whitespace characters f1 f2 ... fn one instance of each form fi, in sequence, with no separating whitespace f1, f2, ..., fn one instance of each form fi, in sequence, with separating whitespace characters (but no commas) f1 | f2 | ... | fn any one of the specified forms fi The notation we have chosen here is in the style of the syntactical notation of the RelaxNG used for MathML's basic schema, Appendix\u00a0A Parsing MathML. Since some applications are",
    "hasKeyColumn": true,
    "keyColumnIndex": 0,
    "headerRowIndex": 0
}