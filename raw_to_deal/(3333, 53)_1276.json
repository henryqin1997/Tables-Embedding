{"relation": [["Policy Name", "ahlt", "arge", "argv", "cnt", "group", "path", "perzone", "public", "seq", "trail", "zonename"], ["Description", "This policy applies to asynchronous events only. When disabled, this policy allows the event to complete without an audit record being generated. When enabled, this policy stops the system when the audit file systems are full. Administrative intervention is required to clean up the audit queue, make space available for audit records, and reboot. This policy can only be enabled in the global zone. The policy affects all zones.", "When disabled, this policy omits environment variables of an executed program from the exec audit record. When enabled, this policy adds the environment variables of an executed program to the exec audit record. The resulting audit records contain much more detail than when this policy is disabled.", "When disabled, this policy omits the arguments of an executed program from the exec audit record. When enabled, this policy adds the arguments of an executed program to the exec audit record. The resulting audit records contain much more detail than when this policy is disabled.", "When disabled, this policy blocks a user or application from running. The blocking happens when audit records cannot be added to the audit trail because no disk space is available. When enabled, this policy allows the event to complete without an audit record being generated. The policy maintains a count of audit records that are dropped.", "When disabled, this policy does not add a groups list to audit records. When enabled, this policy adds a groups list to every audit record as a special token.", "When disabled, this policy records in an audit record at most one path that is used during a system call. When enabled, this policy records every path that is used in conjunction with an audit event to every audit record.", "When disabled, this policy maintains a single audit configuration for a system. One audit daemon runs in the global zone. Audit events in non-global zones can be located in the audit record by preselecting the zonename audit token. When enabled, this policy maintains separate audit configuration, audit queue, and audit logs for each zone. A separate version of the audit daemon runs in each zone. This policy can be enabled in the global zone only.", "When disabled, this policy does not add read-only events of public objects to the audit trail when the reading of files is preselected. Audit classes that contain read-only events include fr, fa, and cl. When enabled, this policy records every read-only audit event of public objects if an appropriate audit class is preselected.", "When disabled, this policy does not add a sequence number to every audit record. When enabled, this policy adds a sequence number to every audit record. The sequence token holds the sequence number.", "When disabled, this policy does not add a trailer token to audit records. When enabled, this policy adds a trailer token to every audit record.", "When disabled, this policy does not include a zonename token in audit records. When enabled, this policy includes a zonename token in every audit record from a non-global zone."], ["Why Change the Policy Option?", "The disabled option makes sense when system availability is more important than security. The enabled option makes sense in an environment where security is paramount.", "The disabled option collects much less information than the enabled option. The enabled option makes sense when you are auditing a few users. The option is also useful when you have suspicions about the environment variables that are being used in exec programs.", "The disabled option collects much less information than the enabled option. The enabled option makes sense when you are auditing a few users. The option is also useful when you have reason to believe that unusual exec programs are being run.", "The disabled option makes sense in an environment where security is paramount. The enabled option makes sense when system availability is more important than security.", "The disabled option usually satisfies requirements for site security. The enabled option makes sense when you need to audit which groups are generating audit events.", "The disabled option places at most one path in an audit record. The enabled option enters each file name or path that is used during a system call in the audit record as a path token.", "The disabled option is useful when you have no special reason to maintain a separate audit log, queue, and daemon for each zone. The enabled option is useful when you cannot monitor your system effectively by simply preselecting the zonename audit token.", "The disabled option usually satisfies requirements for site security. The enabled option is rarely useful.", "The disabled option is sufficient when auditing is running smoothly. The enabled option makes sense when the cnt policy is enabled. The seq policy enables you to to determine when data was discarded.", "The disabled option creates a smaller audit record. The enabled option clearly marks the end of each audit record with a trailer token. The trailer token is often used in conjunction with the sequence token. The trailer token provides easier and more accurate resynchronization of audit records.", "The disabled option is useful when you do not need to compare audit behavior across zones. The enabled option is useful when you want to isolate and compare audit behavior across zones."]], "pageTitle": "", "title": "", "url": "http://docs.oracle.com/cd/E19253-01/816-4557/6maosrk4c/index.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 7, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990177.43/warc/CC-MAIN-20150728002310-00160-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 75732955, "recordOffset": 75653814, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{28873=Up to 1024 characters per audit record\u00a0, 19303=In addition to the audit events that are defined by the Solaris audit service, third-party applications can generate audit events. Audit event numbers from 32768 to 65535 are available for third-party applications., 31867=By using syslog.conf to store audit records remotely, you protect log data from alteration or deletion by an attacker. On the other hand, when audit records are stored remotely, the records are susceptible to network attacks such as denial of service and spoofed source addresses. Also, UDP can drop packets or can deliver packets out of order. The limit on syslog entries is 1024 characters, so some audit records could be truncated in the log. On a single system, not all audit records are collected. The records might not display in order. Because each audit record is stamped with the local system's date and time, you can not rely on the timestamp to construct an audit trail for several systems., 191380=You can look for specific events in this file. In the following example, what time the user logged in and out on Sept 7, 2003, your time, is checked. Only those files with the user's name as the file suffix are checked. The short form of the date is yyyymmdd., 198955=praudit: Can't assign 20090408164827.20090408171614.example1 to stdin., 234883=The user's audit ID is 1002. The user's audit session ID is 713.}", "lastModified": "Thu, 06 Jan 2011 08:03:04 GMT", "textBeforeTable": "Table\u00a028\u20131 Solaris Auditing Terms The following terms are used to describe the audit service. Some definitions include pointers to more complete descriptions. Audit Terminology and Concepts What loopholes need to be closed to ensure the desired level of security How system security was compromised Auditing cannot prevent hackers from unauthorized entry. However, the audit service can report, for example, that a specific user performed specific actions at a specific time and date. The audit report can identify the user by entry path and user name. Such information can be reported immediately to your terminal and to a file for later analysis. Thus, the audit service provides data that helps you determine the following: To protect a computer system, especially a system on a network, requires mechanisms that control activities before system processes or user processes begin. Security requires tools that monitor activities as the activities occur. Security also requires reports of activities after the activities have happened. Initial configuration of Solaris auditing requires that parameters be set before users log in or system processes begin. Most auditing activities involve monitoring current events and reporting those events that meet the specified parameters. How Solaris auditing monitors and reports these events is discussed in detail in Chapter\u00a029, Planning for Solaris Auditing and Chapter\u00a030, Managing Solaris Auditing (Tasks). Solaris auditing helps to detect potential security breaches by revealing suspicious or abnormal patterns of system usage. Solaris auditing also provides", "textAfterTable": "Attributable events \u2013 Events that can be attributed to a user. The exec() system call can be attributed to a user, so the call is considered an attributable event. All attributable events are synchronous events. Nonattributable events \u2013 Events that occur at the kernel-interrupt level or before a user is authenticated. The na audit class handles audit events that are nonattributable. For example, booting the system is a nonattributable event. Most nonattributable events are asynchronous events. However, nonattributable events that have associated processes, such as failed login, are synchronous events. Synchronous events \u2013 Events that are associated with a process in the system. Synchronous events are the majority of system events. Asynchronous events \u2013 Events that are not associated with any process, so no process is available to be blocked and later woken up. Initial system boot and PROM enter and exit events are examples of asynchronous events. When the class to which an audit event belongs is preselected for auditing, the event is recorded in the audit trail. For example, when you preselect the ps and na audit classes for auditing, the exec() system calls and system boot actions, among other events, are recorded in the audit trail. In addition to the audit events that are defined by the Solaris audit service, third-party applications can generate audit events. Audit event numbers from 32768 to 65535 are available for third-party applications. Audit Classes", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}