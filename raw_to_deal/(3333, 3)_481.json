{"relation": [["Exception", "UnauthorizedAccessException", "ArgumentException", "ArgumentNullException", "PathTooLongException", "IOException", "DirectoryNotFoundException"], ["Condition", "The caller does not have the required permission.", "path is a zero-length string, contains only white space, or contains one or more invalid characters. You can query for invalid characters by using the GetInvalidPathChars method.", "path is null.", "The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters.", "path is a file name.", "The specified path is invalid (for example, it is on an unmapped drive)."]], "pageTitle": "Directory.GetDirectories Method (String) (System.IO)", "title": "", "url": "https://msdn.microsoft.com/en-us/library/c1sez4sc.aspx", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 0, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981753.21/warc/CC-MAIN-20150728002301-00323-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 860295775, "recordOffset": 860282815, "tableOrientation": "HORIZONTAL", "textBeforeTable": "Exceptions An array of the full names (including paths) of subdirectories in the specified path, or an empty array if no directories are found. [] System.String Return ValueType: The relative or absolute path to the directory to search. This string is not case-sensitive. System.String Type: path Parameters ) string\u00a0path public\u00a0static\u00a0string[] GetDirectories(     Copy   VB  JScript  F#  C++  C# Syntax mscorlib (in mscorlib.dll) Assembly: \u00a0 System.IO Namespace: \u00a0 Returns the names of subdirectories (including their paths) in the specified directory. Silverlight .NET Framework 2.0", "textAfterTable": "Remarks This method is identical to GetDirectories(String, String) with the asterisk (*) specified as the search pattern, so it returns all subdirectories.If you need to search subdirectories, use the GetDirectories(String, String, SearchOption) method, which enables you to specify a search of subdirectories with the searchOption parameter. The EnumerateDirectories and GetDirectories methods differ as follows: When you use EnumerateDirectories, you can start enumerating the collection of names before the whole collection is returned; when you use GetDirectories, you must wait for the whole array of names to be returned before you can access the array. Therefore, when you are working with many files and directories, EnumerateDirectories can be more efficient. The path parameter can specify relative or absolute path information. Relative path information is interpreted as relative to the current working directory. To obtain the current working directory, see GetCurrentDirectory. The names returned by this method are prefixed with the directory information provided in path. The path parameter is not case-sensitive. For a list of common I/O tasks, see Common I/O Tasks. Examples The following example takes an array of file or directory names on the", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}