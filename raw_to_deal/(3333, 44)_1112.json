{"relation": [["Property", "request.remoteAddr", "request.header['x-forwarded-for']", "request.header['x-forwarded-by']", "request.header['x-forwarded-proto']", "request.scheme", "request.secure", "request.serverPort"], ["Value Before RemoteIpFilter", "192.168.0.10", "140.211.11.130, 192.168.0.10", "null", "https", "http", "false", "80"], ["Value After RemoteIpFilter", "140.211.11.130", "null", "null", "https", "https", "true", "443"]], "pageTitle": "Apache Tomcat 8 Configuration Reference (8.0.25-dev) - Container Provided Filters", "title": "", "url": "https://ci.apache.org/projects/tomcat/tomcat8/docs/config/filter.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 7, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981969.11/warc/CC-MAIN-20150728002301-00040-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 858433107, "recordOffset": 858416098, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{34583=Note: There is a caveat when using this filter with IPv6 addresses. Format of the IP address that this valve is processing depends on the API that was used to obtain it. If the address was obtained from Java socket using Inet6Address class, its format will be x:x:x:x:x:x:x:x. That is, the IP address for localhost will be 0:0:0:0:0:0:0:1 instead of the more widely used ::1. Consult your access logs for the actual value., 53247=Note : proxy1 and proxy2 are both trusted proxies that come in x-forwarded-for header, they both are migrated in x-forwarded-by header. As 192.168.0.10 is an internal proxy, it does not appear in x-forwarded-by. x-forwarded-for is null because all the proxies are trusted or internal., 22667=The base time is either the last modification time of the file, or the time of the client's access to the document. Which should be used is specified by the <code> field; M means that the file's last modification time should be used as the base time, and A means the client's access time should be used. The duration is expressed in seconds. A2592000 stands for access plus 30 days in alternate syntax., 4969=The amount of seconds, browser is allowed to cache the result of the pre-flight request. This will be included as part of Access-Control-Max-Age header in the pre-flight response. A negative value will prevent CORS Filter from adding this response header to pre-flight response. Defaults: 1800, 13383=To modify Cache-Control directives other than max-age (see RFC 2616 section 14.9), you can use other servlet filters or Apache Httpd mod_headers module.}", "lastModified": "Tue, 28 Jul 2015 13:52:24 GMT", "textBeforeTable": "The Add Default Character Set Filter supports the following initialization parameters: Initialisation parameters The filter class name for the Add Default Character Set Filter is org.apache.catalina.filters.AddDefaultCharsetFilter . Filter Class Name This filter prevents the attack by explicitly setting a character set. Unless the provided character set is explicitly overridden by the user the browser will adhere to the explicitly set character set, thus preventing the XSS attack. The HTTP specification is clear that if no character set is specified for media sub-types of the \"text\" media type, the ISO-8859-1 character set must be used. However, browsers may attempt to auto-detect the character set. This may be exploited by an attacker to perform an XSS attack. Internet Explorer and other browsers have an option to enable this behavior. Introduction Add Default Character Set Filter This description uses the variable name $CATALINA_BASE to refer the base directory against which most relative paths are resolved. If you have not configured Tomcat for multiple instances by setting a CATALINA_BASE directory, then $CATALINA_BASE will be set to the value of $CATALINA_HOME, the directory into which you have installed Tomcat. Tomcat provides a number of Filters which may be configured for use with all web applications using $CATALINA_BASE/conf/web.xml or may be configured for individual web applications by configuring them in the application's WEB-INF/web.xml. Each filter is described below. Introduction", "textAfterTable": "The CORS Filter supports following initialisation parameters: Attribute Description cors.allowed.origins A list of origins that are allowed to access the resource. A * can be specified to enable access to resource from any origin. Otherwise, a whitelist of comma separated origins can be provided. Eg: http://www.w3.org, https://www.apache.org. Defaults: * (Any origin is allowed to access the resource). cors.allowed.methods A comma separated list of HTTP methods that can be used to access the resource, using cross-origin requests. These are the methods which will also be included as part of Access-Control-Allow-Methods header in pre-flight response. Eg: GET, POST. Defaults: GET, POST, HEAD, OPTIONS cors.allowed.headers A comma separated list of request headers that can be used when making an actual request. These headers will also be returned as part of Access-Control-Allow-Headers header in a pre-flight response. Eg: Origin,Accept. Defaults: Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers cors.exposed.headers A comma separated list of headers other than simple response headers that browsers are allowed to access. These are the headers which will also be included as part of Access-Control-Expose-Headers header in the pre-flight response. Eg: X-CUSTOM-HEADER-PING,X-CUSTOM-HEADER-PONG. Default: None. Non-simple headers are not exposed by default. cors.preflight.maxage The amount of seconds, browser is allowed to cache the result of the pre-flight request. This will be included as", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}