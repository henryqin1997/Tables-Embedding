{"relation": [["Error Code", "", "InvalidResourceType", "ResourceCompileFailed", "RootElementNameUnspecified", "InvalidRootElementName", "NonMessageVariable", "SourceMessageNotAvailable", "NoElements", "Failed"], ["Message", "", "InvalidResourceType MessageValidation {0}: Invalid Resource Type {1}. It should be xsd or wsdl. Context {2}", "ResourceCompileFailed MessageValidation {0}: Failed to compile resource {1}. Context {2}", "RootElementNameUnspecified MessageValidation {0}: RootElement name is not specified", "InvalidRootElementName MessageValidation {0}: RootElement name {1} is invalid", "NonMessageVariable Variable {0} does not resolve to a Message", "SourceMessageNotAvailable {0} message is not available for MessageValidation: {1}", "Resource \"{0}\" has no element definitions", "MessageValidation {0} failed with reason: \"{1}\""]], "pageTitle": "SOAP Message Validation policy | Apigee Product Documentation", "title": "", "url": "http://apigee.com/docs/api-services/reference/message-validation-policy?rate=PqDofkEobz4J-Slptar3z8KdpTmRV3HEWzjcKgmGCdE", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 9, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981856.5/warc/CC-MAIN-20150728002301-00230-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 10117347, "recordOffset": 10078138, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{22493=\u00a9 2015 Apigee Corp. All rights reserved}", "lastModified": "Tue, 28 Jul 2015 10:27:05 GMT", "textBeforeTable": "The MessageValidation policy type defines the following error codes: } \"contexts\" : [ ] \"message\" : \" {Error message} \", \"code\" : \" {ErrorCode} \", {  The default format for error codes returned by policies is: Error codes    Optional \"http://sample.com\"  Provides the namespace of the root, or parent, element of the messages to be validated.  namespace   Presence Default Description Attribute   Attributes      String Type:   Optional Presence:   sampleObject Default:    Specifies the root, or parent, element of the messages to be validated. <Element> element   <Element namespace=\"http://finance.com/2000\">PurchaseOrder</Element> <Element namespace=\"http://finance.com/1999\">PurchaseOrder</Element>    Optional  1.1/1.2 1.2 1.1   None  Identifies the SOAP version against which to validate SOAP messages.  version   Presence Valid values Default Description Attribute   Attributes    N/A Type:   Optional Presence:   N/A Default:    Provides the SOAP version against which to validate SOAP messages. <SOAPMessage> element <SOAPMessage version=\"1.1/1.2\"/>    String Type:   Optional Presence:   wsdl://<name> Default:    If the WSDL does not have schemas or if the maximum <ResourceURL>xsd://sample</ResourceURL>", "textAfterTable": "Schemas Each policy type is defined by an XML schema (.xsd). For reference, policy schemas are available on GitHub. Usage notes The MessageValidation Policy type enables you to configure API proxies to reject messages that do not conform to schema (.xsd) or WSDL definition(s). That means developers building apps to consume your API are immediately notified if they are submitting non-conformant requests. Message validation helps developers by indicating where XML tags may not be properly closed, for example. Validation also protects backend services by blocking XML or SOAP messages who structure might cause unpredictable behavior. Validation can save you a call to tech support, and can help developers avoid time in the forums trying to find troubleshooting help. If developers are notified that they are submitting invalid requests, they can refer to the XML schema for the API to understand how to fix the error. This makes well-understood XML schemas a key component of your API documentation. Apigee Edge enables you to configure your API with a MessageValidation policy that validates messages with the XML payload. The policy validates that an XML or JSON message is well-formed, and that the SOAP format is correct according to the specified XSD or WSDL file, ensuring that tags are balanced. If the XML configuration is incomplete, the policy returns a message validation error. Related topics XML Threat Protection policy XML to JSON policy JSON to XML policy JSON Threat Protection policy", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}