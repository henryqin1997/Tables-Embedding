{"relation": [["Modifier and Type", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int", "static int"], ["Field and Description", "ARROW", "ASSIGNMENT", "BITAND", "BITNOT", "BITOR", "COLON", "COMMA", "COMMENT", "DIGIT", "DIVIDES", "DOTDOT", "EOF", "EOL", "EQUALITY", "EQUIV", "GREATER", "GREATEREQ", "IDENT", "IGNORE", "IMPLIES", "LABEL", "LBRACK", "LBRACKGRID", "LESS", "LESSEQ", "LETTER", "LITERAL_AND", "LITERAL_ARRAY", "LITERAL_assume", "LITERAL_auto", "LITERAL_autostar", "LITERAL_AXIOM", "LITERAL_BIT", "LITERAL_BITFALSE", "LITERAL_BITTRUE", "LITERAL_BOOLEAN", "LITERAL_case", "LITERAL_counterexample", "LITERAL_decompose", "LITERAL_ELSE", "LITERAL_ELSIF", "LITERAL_ENDIF", "LITERAL_environment", "LITERAL_EXISTS", "LITERAL_expand", "LITERAL_FALSE", "LITERAL_flatten", "LITERAL_flip", "LITERAL_FORALL", "LITERAL_FORMULA", "LITERAL_goal", "LITERAL_goto", "LITERAL_IF", "LITERAL_in", "LITERAL_IN", "LITERAL_induction", "LITERAL_instantiate", "LITERAL_INT", "LITERAL_LAMBDA", "LITERAL_lemma", "LITERAL_LET", "LITERAL_LOGICAL", "LITERAL_LOGICALFALSE", "LITERAL_LOGICALTRUE", "LITERAL_NAT", "LITERAL_newcontext", "LITERAL_next", "LITERAL_NOT", "LITERAL_OF", "LITERAL_open", "LITERAL_option", "LITERAL_OR", "LITERAL_prev", "LITERAL_printf", "LITERAL_printt", "LITERAL_printv", "LITERAL_proof", "LITERAL_prove", "LITERAL_quit", "LITERAL_read", "LITERAL_REAL", "LITERAL_redo", "LITERAL_scatter", "LITERAL_simplify", "LITERAL_skolemize", "LITERAL_split", "LITERAL_state", "LITERAL_SUBTYPE", "LITERAL_tcc", "LITERAL_THEN", "LITERAL_TRUE", "LITERAL_TYPE", "LITERAL_typeaxiom", "LITERAL_undo", "LITERAL_WITH", "LITERAL_XOR", "LPAR", "LPARGRID", "MINUS", "NONEQUALITY", "NULL_TREE_LOOKAHEAD", "NUMBER", "PERIOD", "PLUS", "POWER", "RBRACK", "RBRACKGRID", "REALLETTER", "RPAR", "RPARGRID", "SEMICOLON", "STRING", "TIMES", "UNDERSCORE", "WS"]], "pageTitle": "PNParserTokenTypes", "title": "Fields", "url": "http://www.risc.jku.at/research/formal/software/ProgramExplorer/doc/fmrisc/ProofNavigator/PNParserTokenTypes.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 0, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989042.37/warc/CC-MAIN-20150728002309-00071-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 693670125, "recordOffset": 693661923, "tableOrientation": "HORIZONTAL", "lastModified": "Mon, 29 Sep 2014 13:34:30 GMT", "textBeforeTable": "Field Summary public interface PNParserTokenTypes PNParser PNLexer, All Known Implementing Classes: Interface PNParserTokenTypes fmrisc.ProofNavigator Method Constr\u00a0|\u00a0 Field\u00a0|\u00a0 Detail:\u00a0 Method Constr\u00a0|\u00a0 Field\u00a0|\u00a0 Nested\u00a0|\u00a0 Summary:\u00a0 //--> } allClassesLink.style.display = \"none\"; else { } allClassesLink.style.display = \"block\"; if(window==top) { allClassesLink = document.getElementById(\"allclasses_navbar_top\"); //--> } parent.document.title=\"PNParserTokenTypes\"; if (location.href.indexOf('is-external=true') == -1) {", "textAfterTable": "Field Detail EOF static final\u00a0int EOF See Also: Constant Field Values NULL_TREE_LOOKAHEAD static final\u00a0int NULL_TREE_LOOKAHEAD See Also: Constant Field Values SEMICOLON static final\u00a0int SEMICOLON See Also: Constant Field Values LITERAL_tcc static final\u00a0int LITERAL_tcc See Also: Constant Field Values LITERAL_prove static final\u00a0int LITERAL_prove See Also: Constant Field Values IDENT static final\u00a0int IDENT See Also: Constant Field Values LITERAL_flip static final\u00a0int LITERAL_flip See Also: Constant Field Values LABEL static final\u00a0int LABEL See Also: Constant Field Values", "hasKeyColumn": true, "keyColumnIndex": 1, "headerRowIndex": 0}