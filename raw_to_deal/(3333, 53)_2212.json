{"relation": [["User Agent", "", "Safari", "Safari", "Safari", "Safari", "Safari", "Safari", "Blackberry", "Blackberry (versions 4.5 and later)", "All other mobile browsers"], ["Platform", "Windows mobile", "iPhone/iPod", "Linux", "Macintosh", "Symbian", "Windows", "Unknown platforms", "", "", ""], ["Skin Family Type", "windowsmobile", "iPhonewebkit", "linuxwebkit", "macwebkit", "nokiawebkit", "windowswebkit", "defaultwebkit", "blackberryminimal", "blackberry", "genericpda"]], "pageTitle": "Narrow Screen Support and User Agent Details Support", "title": "", "url": "http://docs.oracle.com/cd/E28280_01/web.1111/e10140/el_sup.htm", "hasHeader": true, "headerPosition": "MIXED", "tableType": "RELATION", "tableNum": 1, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042982502.13/warc/CC-MAIN-20150728002302-00243-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 70334630, "recordOffset": 70326428, "tableOrientation": "HORIZONTAL", "lastModified": "Wed, 14 Jan 2015 14:07:17 GMT", "textBeforeTable": "Table 7-2 Skin Family Types Returned by the SkinFamilyType Attribute Trinidad categorizes incoming user agents into different skin family types based on CSS support. It exposes the skin family type using the #{requestContext.agent.skinFamilyType} EL expression. For example, Trinidad uses this EL expression to derive the value of windowswebkit for a Safari user agent running in a Windows platform. For Safari browsers running on Symbian devices, this expression returns the Nokia Webkit (nokiawebkit). Table 7-2 lists the skin family types returned by #{requestContext.agent.skinFamilyType} according to user agent, platform, and platform version. 7.2.1.1 Determining the Skin Type Trinidad categorizes the mobile browsers into different skin types based on their CSS capabilities. For more information, see Section 7.2.1.1, \"Determining the Skin Type.\" skinFamilyType The model of the mobile device hardwareMakeModel The version of the platform on which the agent runs platformVersion The platform on which the agent runs platformName The version of the agent agentVersion The name of the", "textAfterTable": "7.2.2 How to Determine Browser Capabilities Trinidad sends its response to a user agent's request based on the capabilities that it assigns to a user agent. These capabilities include a user agent's support for JavaScript and PPR (partial-page rendering). Some of these capabilities (listed in Table 7-3) are exposed through the EL expression #{requestContext.agent.capabilities}. Use the EL expression #{requestContext.agent.capabilities.<capability-name>}to determine the specific capability assigned to a user agent by Trinidad. For example, to determine whether Trinidad assigns JavaScript capability to a user agent, use the following EL expression: # {requestContext.agent.capabilities.scriptingSpeed!='none'}. Table 7-3 Browser Capabilities Exposed through EL Expressions Capability Name Detail narrowScreen Indicates whether Trinidad optimizes its rendering for a narrow-screen device. It returns true (a Boolean type) if Trinidad optimizes its rendering for a narrow-screen device. scriptingSpeed Indicates JavaScript support for a user agent. Returns \"none\"(a String type) if the user agent does not support JavaScript. partialRendering Indicates PPR support for a user agent. Returns true (a Boolean", "hasKeyColumn": true, "keyColumnIndex": 2, "headerRowIndex": 0}