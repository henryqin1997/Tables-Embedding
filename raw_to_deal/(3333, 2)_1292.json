{"relation": [["Event name", "loadstart", "progress", "suspend", "abort", "error", "emptied", "stalled", "play", "pause", "loadedmetadata", "loadeddata", "waiting", "playing", "canplay", "canplaythrough", "seeking", "seeked", "timeupdate", "ended", "ratechange", "durationchange", "volumechange"], ["Dispatched when...", "The user agent begins looking for media data, as part of the resource selection algorithm.", "The user agent is fetching media data.", "The user agent is intentionally not currently fetching media data, but does not have the entire media resource downloaded.", "The user agent stops fetching the media data before it is completely downloaded, but not due to an error.", "An error occurs while fetching the media data.", "A media element whose networkState was previously not in the NETWORK_EMPTY state has just switched to that state (either because of a fatal error during load that's about to be reported, or because the load() method was invoked while the resource selection algorithm was already running).", "The user agent is trying to fetch media data, but data is unexpectedly not forthcoming.", "Playback has begun. Fired after the play() method has returned, or when the autoplay attribute has caused playback to begin.", "Playback has been paused. Fired after the pause() method has returned.", "The user agent has just determined the duration and dimensions of the media resource", "The user agent can render the media data at the current playback position for the first time.", "Playback has stopped because the next frame is not available, but the user agent expects that frame to become available in due course.", "Playback has started.", "The user agent can resume playback of the media data, but estimates that if playback were to be started now, the media resource could not be rendered at the current playback rate up to its end without having to stop for further buffering of content.", "The user agent estimates that if playback were to be started now, the media resource could be rendered at the current playback rate all the way to its end without having to stop for further buffering.", "The seeking IDL attribute changed to true and the seek operation is taking long enough that the user agent has time to fire the event.", "The seeking IDL attribute changed to false.", "The current playback position changed as part of normal playback or in an especially interesting way, for example discontinuously.", "Playback has stopped because the end of the media resource was reached.", "Either the defaultPlaybackRate or the playbackRate attribute has just been updated.", "The duration attribute has just been updated.", "Either the volume attribute or the muted attribute has changed. Fired after the relevant attribute's setter has returned."]], "pageTitle": "HTML/Elements/video - W3C Wiki", "title": "", "url": "http://www.w3.org/wiki/HTML/Elements/video", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 0, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042992543.60/warc/CC-MAIN-20150728002312-00170-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 824544930, "recordOffset": 824529310, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{17733=The HTML5 specification does not require a video codec to be supported by all user agents. Thus, one need to provide alternate sources to ensure proper user experience in the existing user agents. Using Ogg/Theora/Vorbis and MP4/H.264/AAC seems to cover most of the cases out there (if not all). However, Ogg/Theora/Vorbis is being replaced in favor of WebM nowadays. See the wikipedia browser support table.}", "lastModified": "Mon, 23 Mar 2015 10:55:50 GMT", "textBeforeTable": "Media Events Note: Relating API is not a document yet. attribute boolean muted; attribute float volume; attribute boolean controls; // controls void pause(); void play(); attribute boolean loop; attribute boolean autoplay; readonly attribute boolean ended; readonly attribute TimeRanges seekable; readonly attribute TimeRanges played; attribute float playbackRate; attribute float defaultPlaybackRate; readonly attribute boolean paused; readonly attribute float duration; readonly attribute float startTime; attribute float currentTime; // playback state readonly attribute boolean seeking; readonly attribute unsigned short readyState; const unsigned short HAVE_ENOUGH_DATA = 4; const unsigned short HAVE_FUTURE_DATA = 3; const unsigned short HAVE_CURRENT_DATA = 2; const unsigned short HAVE_METADATA = 1; const unsigned short HAVE_NOTHING = 0; // ready state DOMString canPlayType(in DOMString type); void load(); readonly attribute TimeRanges buffered; attribute DOMString preload; readonly attribute unsigned short networkState; const unsigned short NETWORK_NO_SOURCE = 3; const unsigned short NETWORK_LOADING = 2; const unsigned short NETWORK_IDLE = 1; const unsigned short NETWORK_EMPTY = 0; readonly attribute DOMString currentSrc; attribute DOMString src; // network state readonly attribute MediaError error; // error state attribute DOMSettableTokenList audio; attribute DOMString poster; readonly attribute unsigned long videoHeight; readonly attribute unsigned long videoWidth; attribute DOMString height; attribute DOMString width;  The following IDL attributes and methods are exposed to dynamic scripts.  IDL Attributes and Methods   </script> } } myVideo.pause(); } else { myVideo.play(); if (myVideo.paused) { var myVideo = document.getElementById(\"myVideo\"); function vid_play_pause() { <script> <button type=\"button\" onclick=\"vid_play_pause()\">Play/Pause</button> </video> Your user agent does", "textAfterTable": "Accessibility Authors should ensure that the information and user interface components must be presentable to users in ways they can perceive (WCAG 2.0 - Principle 1: Perceivable). This includes providing alternatives for time-based media Guideline 1.2. Work in still in progress proper technical support in HTML5. Formats and Codecs The HTML5 specification does not require a video codec to be supported by all user agents. Thus, one need to provide alternate sources to ensure proper user experience in the existing user agents. Using Ogg/Theora/Vorbis and MP4/H.264/AAC seems to cover most of the cases out there (if not all). However, Ogg/Theora/Vorbis is being replaced in favor of WebM nowadays. See the wikipedia browser support table. Streaming The HTML5 specification does not specify a particular streaming method. It is expected that HTTP 1.1 progressive streaming is at least supported. Adaptive/live streaming may be supported as a UA extension. For an example, see the HTTP Live Streaming Overview from Apple. Digital Rights Management The HTML5 specification does not specify a particular digital rights management (DRM) method. It is expected that videos with no DRM are at least supported. DRM may be supported as a UA extension. HTML reference This element was introduced in HTML5 - 4.8.6 The video element. See also", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}