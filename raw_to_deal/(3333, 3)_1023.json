{"relation": [["SQL statement", "CREATE TABLE... AS SELECT", "DELETE", "INSERT", "INSERT...SELECT", "MERGE", "SELECT", "SELECT...{UNION|MINUS| INTERSECT} SELECT...", "UPDATE"], ["Placement of hint", "CREATE TABLE...AS SELECT [hint]... Do not use transaction level hints with the CREATE TABLE...AS SELECT statement.", "DELETE [hint] ...", "INSERT [hint] ...", "INSERT...SELECT [hint]...", "MERGE [hint]...", "SELECT [hint]... Do not specify a hint in a subquery.", "SELECT [hint] {UNION|MINUS|INTERSECT} SELECT...", "UPDATE [hint]..."]], "pageTitle": "SQL Statements", "title": "", "url": "https://docs.oracle.com/database/121/TTSQL/state.htm", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 1, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987402.78/warc/CC-MAIN-20150728002307-00260-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 857290344, "recordOffset": 857139499, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{916399=Use subqueries in the SET clause of the UPDATE statement. Update employees with location_id = 1700 or location_id = 2400. Set department_id for these employees to the department_id of location_id = 2500. (This is department_id 80). Set salary for these employees to the maximum salary of their department., 223584=The total number of columns in the table cannot exceed 1000. In addition, the total number of partitions in a table cannot exceed 1000, one of which is used by TimesTen., 197826=If you specify CURRENT, the current number of rows in the table is used to calculate the page count value. If you specify RowPages, the number of pages is used. To determine the value for RowPages, divide the number of expected rows in your table by 256. For example, if your table has 256,000 rows, specify 1000 for RowPages (256000/256=1000)., 808926=To find the total value of all orders entered since the beginning of the year, use the HAVING clause to select only those orders that were entered on or after January 1, 2000:, 368414=Sizes the hash index to reflect the expected number of pages in the table. If you specify CURRENT, the current number of rows in the table is used to calculate the page count value. If you specify RowPages, the number of pages is used. To determine the value for RowPages, divide the number of expected rows in your table by 256. For example, if your table has 256,000 rows, specify 1000 for RowPages (256000/256=1000)., 375351=To ensure that your hash index is sized correctly, your application must indicate the expected size of your table with the value of the RowPages parameter of the SET PAGES clause. Compute this value by dividing the number of expected rows in your table by 256. For example, if your table has 256,000 rows, specify 1000 for the value of RowPages (256000/256=1000)., 837797=The following query joins table purchasing.parts to itself to determine which parts have the same sales price as the part whose serial number is '1133-P-01'.}", "lastModified": "Thu, 02 Jul 2015 09:42:04 GMT", "textBeforeTable": "Table 6-1 Placement of statement level hints in SQL statements You can specify statement level optimizer hints in DELETE, INSERT, MERGE, SELECT, and UPDATE statements. You can also specify statement level optimizer hints in the CREATE TABLE...AS SELECT statement and in the INSERT... SELECT statement. You must specify the hint within comment syntax and the comment syntax must immediately follow the SQL VERB. (For example, DELETE /*+ hint */...). Table 6-1 shows the correct placement of the statement level hint. SQL statements that support statement level optimizer hints The TimesTen query optimizer does not recognize statement level optimizer hints for passthrough statements. TimesTen passes the SQL text for passthrough statements to the Oracle database and the SQL text is processed according to the SQL rules of the Oracle database. Do not use statement level optimizer hints in a subquery. Statement level optimizer hints override conflicting transaction level optimizer hints. So if you specify a transaction level optimizer hint that conflicts with a statement level optimizer hint, the statement level optimizer hint overrides the conflicting transaction level optimizer hint. For example, if you call ttOptSetFlag, and enable the Range flag and then you issue a SQL query and disable the statement level", "textAfterTable": "Understanding hints Use optimizer hints to influence the TimesTen query optimizer in determining the choice of the execution plan for your query. To view transaction level optimizer hints, execute the built-in procedure, ttOptSetFlag. For more information on the built-in procedure, ttOptGetFlag, see \"ttOptGetFlag\" in Oracle TimesTen In-Memory Database Reference. Table 6-2, \"Differences between statement level and transaction level optimizer hints\" summarizes the differences between statement level optimizer hints and transaction level optimizer hints. Before using hints, confirm whether you need to update statistics, because the TimesTen optimizer is a cost based optimizer and uses statistics and indexes to generate a query plan. For more information on the query optimizer, see \"The TimesTen Query Optimizer\" in the Oracle TimesTen In-Memory Database Operations Guide. Table 6-2 Differences between statement level and transaction level optimizer hints Statement level optimizer hints Transaction level optimizer hints Specify within comment syntax and after a SQL VERB in a SQL statement. Specify by invoking the built-in procedures, ttOptSetFlag,", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}