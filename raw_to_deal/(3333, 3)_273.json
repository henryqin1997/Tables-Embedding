{"relation": [["Make Target", "base", "modules", "MODULENAME.pp", "all", "install", "load", "validate", "install-headers"], ["Comments", "Compile and package the base module. This is the default target for modular policies.", "Compile and package all Reference Policy modules configured to be built as loadable modules.", "Compile and package the MODULENAME Reference Policy module.", "Compile and package the base module and all Reference Policy modules configured to be built as loadable modules.", "Compile, package, and install the base module and Reference Policy modules configured to be built as loadable modules.", "Compile, package, and install the base module and Reference Policy modules configured to be built as loadable modules, then insert them into the module store.", "Validate if the configured modules can successfully link and expand.", "Install the policy headers into /usr/share/selinux/NAME. The headers are sufficient for building a policy module locally, without requiring the complete Reference Policy sources. The build.conf settings for this policy configuration should be set before using this target."]], "pageTitle": "NB RefPolicy - SELinux Wiki", "title": "", "url": "http://selinuxproject.org/w/?title=NB_RefPolicy&diff=1037&oldid=992", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 8, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438043062723.96/warc/CC-MAIN-20150728002422-00291-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 216229747, "recordOffset": 216192130, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{98691=The serefpolicy-3.6.32 directory will now contain the source code with the latest patches for this release (3.6.32-103) of the Red Hat Reference Policy and the correct configuration files for a targeted policy., 95568=The source will be installed in the users home directory under ./rpmbuild/SOURCES where the serefpolicy-3.6.32.tgz will need to be unpacked:, 101879=From the ./serefpolicy-3.6.32 directory run the following command:}", "textBeforeTable": "During the build process, a file is generated in the ./policy directory called either policy.conf or base.conf depending whether a monolithic or modular policy is being built. This file is explained in the Modular Policy Build Structure section. Two of these configuration files (build.conf and modules.conf) are further detailed in the Source Configuration Files section as they define how the policy will be built. Table 1 shows the major files and their directories with a description of each taken from the README file. All directories are relative to the root of the Reference Policy source directory ./policy. Reference Policy Files and Directories The Installing and Building the Reference Policy Source section then describes how the initial source is installed and configured to allow a version of the F-12 targeted policy to be built. Modular Policy Build Process - Describes how the various source files are linked together to form a base policy module (base.conf) during the build process. Source Installation and Build Make Options - Describes the make targets. Source Configuration Files - Details the contents of the build.conf and modules.conf configuration files. Reference Policy Files and Directories - Describes the files and their location. The following sections detail the source contents:", "textAfterTable": "doc/policy.xml This file is generated/updated by the conf and html make targets. It contains the complete XML documentation included in the policy. doc/templates/* Templates used for documentation web pages. support/* Tools used in the build process. policy/flask/initial_sids This file has declarations for each initial SID. The file usage in policy generation is described in the Modular Policy Build Structure section. policy/flask/security_classes This file has declarations for each security class. The file usage in policy generation is described in the Modular Policy Build Structure section. policy/flask/access_vectors This file defines the access vectors. Common prefixes for access vectors may be defined at the beginning of the file. After the common prefixes are defined, an access vector may be defined for each security class. The file usage in policy generation is described in the Modular Policy Build Structure section. policy/modules/* Each directory represents a layer in Reference Policy all of the modules are contained in one of these layers. The files present are: metadata.xml - describes the layer. <module_name>.te, .if & .fc - contains policy source as described in the Reference Policy Module Files section. The file usage in policy generation is described in the", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}