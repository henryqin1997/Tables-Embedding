{"relation": [["Project type", "Windows Application", "Class Library", "Console Application", "Windows Control Library", "Web Control Library", "Windows Service", "Web Site"], ["Available", "Yes", "No", "No", "No", "No", "No", "No"]], "pageTitle": "My.Application.StartupNextInstance Event", "title": "", "url": "https://msdn.microsoft.com/en-us/library/b9z4eyh8", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 2, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986022.41/warc/CC-MAIN-20150728002306-00245-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 887996735, "recordOffset": 887976514, "tableOrientation": "HORIZONTAL", "textBeforeTable": "This event is raised on the application's main thread with the other user-interface events. This allows the event handler to access directly the application's user interface. However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the My.Application.DoEvents Method. This event is part of the Visual Basic Application model. For more information, see Overview of the Visual Basic Application Model. A single-instance application raises the StartupNextInstance event when you attempt to restart the application when it is already active. When a single-instance application starts for the first time, it raises the Startup event. For more information, see My.Application.Startup Event and How to: Specify Instancing Behavior for an Application (Visual Basic). Remarks A StartupEventArgs object that contains the application's command-line arguments. e The Object that raised the event. sender Parameters ) ByVal e As StartupNextInstanceEventArgs _ ByVal sender As Object, _ Public Event StartupNextInstance( _ ' Declaration End Sub ) Handles Me.StartupNextInstance ByVal e As StartupNextInstanceEventArgs _ ByVal", "textAfterTable": "To See Use the events provided by the Visual Basic Application model to run code How to: Run Code When the Application Starts or Ends Check the command-line arguments of the first application instance My.Application.CommandLineArgs Property Example This example uses the e parameter of the StartupNextInstance event handler to examine the application's command-line arguments. If an argument is found that starts with /input=, the rest of that argument is displayed. VB Copy  Private\u00a0Sub MyApplication_StartupNextInstance( _ ByVal sender As\u00a0Object, _ ByVal e As Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs _ ) Handles\u00a0Me.StartupNextInstance Dim inputArgument As\u00a0String = \"/input=\"\u00a0 Dim inputName As\u00a0String = \"\"\u00a0 For\u00a0Each s As\u00a0String\u00a0In e.CommandLine If s.ToLower.StartsWith(inputArgument) Then inputName = s.Remove(0, inputArgument.Length) End\u00a0If\u00a0 Next\u00a0 If inputName = \"\"\u00a0Then MsgBox(\"No input name\") Else MsgBox(\"Input name: \" & inputName) End\u00a0If\u00a0 End\u00a0Sub You must enter the code", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}