{"relation": [["r057e0c6", "57", "58", "59", "", "60", "61", "\u2026", "1288", "1289", "1290", "", "1291", "1292", "1293", "", "", "1294", "1295", "", "1296", "1297", "\u2026", "1307", "1308", "1309", "1310", "", "", "1311", "1312", "", "1313", "1314", "\u2026", "1321", "1322", "1323", "1324", "1325", "1326", "", "", "", "", "1327", "1328", "1329", "1330", "1331", "1332", "1333", "1334", "1335", "", "", "", "", "", "", "1336", "1337", "1338", "1339", "1340", "1341", "1342", "1343", "1344", "", "", "", "", "", "1345", "1346", "1347", "1348", "1349", "", "", "", "1350", "1351", "1352", "1353", "1354", "1355", "1356", "", "", "", "", "", "1357", "1358", "1359", "1360", "1361", "1362", "1363", "1364", "1365", "", "", "", "", "", "", ""], ["r56c7e9d", "57", "58", "", "59", "60", "61", "\u2026", "1288", "1289", "", "1290", "1291", "", "", "1292", "1293", "1294", "", "1295", "1296", "1297", "\u2026", "1307", "1308", "", "", "1309", "1310", "1311", "", "1312", "1313", "1314", "\u2026", "1321", "1322", "", "", "", "", "1323", "1324", "1325", "1326", "1327", "1328", "1329", "", "", "", "", "", "", "1330", "1331", "1332", "1333", "1334", "1335", "1336", "1337", "1338", "1339", "", "", "", "", "", "1340", "1341", "1342", "1343", "1344", "1345", "1346", "", "", "", "1347", "1348", "1349", "1350", "1351", "", "", "", "", "", "1352", "1353", "1354", "1355", "1356", "1357", "1358", "", "", "", "", "", "", "", "1359", "1360", "1361", "1362", "1363", "1364", "1365"], ["", "i++) {", "noit_console_state_add_cmd(state,", "NCSCMD(valid_attrs[i].name, f,", "NCSCMD(valid_attrs[i].name, f, NULL,", "NULL, &valid_attrs[i]));", "}", "", "", "#define NEW_STATE(a) (a) = noit_console_state_alloc()", "#define ADD_CMD(a,cmd,func, ss,c) \\", "#define ADD_CMD(a,cmd,func, ac,ss,c) \\", "noit_console_state_add_cmd((a), \\", "NCSCMD(cmd, func, ss, c))", "#define DELEGATE_CMD(a,cmd, ss) \\", "NCSCMD(cmd, func, ac, ss, c))", "#define DELEGATE_CMD(a,cmd, ac,ss) \\", "noit_console_state_add_cmd((a), \\", "NCSCMD(cmd, noit_console_state_delegate, ss, NULL))", "NCSCMD(cmd, noit_console_state_delegate, ac, ss, NULL))", "", "static", "", "/* write */", "NEW_STATE(_write_state);", "ADD_CMD(_write_state, \"terminal\", noit_conf_write_terminal, NULL, NULL );", "ADD_CMD(_write_state, \"file\", noit_conf_write_file, NULL, NULL );", "ADD_CMD(_write_state, \"terminal\", noit_conf_write_terminal, NULL, NULL , NULL);", "ADD_CMD(_write_state, \"file\", noit_conf_write_file, NULL, NULL , NULL);", "/* write memory? It's to a file, but I like router syntax */", "ADD_CMD(_write_state, \"memory\", noit_conf_write_file, NULL, NULL );", "ADD_CMD(_write_state, \"memory\", noit_conf_write_file, NULL, NULL , NULL);", "", "/* attribute */", "", "", "NEW_STATE(_unset_state);", "DELEGATE_CMD(_unset_state, \"attribute\", _uattr_state);", "ADD_CMD(_unset_state, \"section\", noit_console_config_section, NULL, (void *)1);", "ADD_CMD(_unset_state, \"config\", noit_console_config_unsetconfig, NULL, NULL );", "ADD_CMD(_unset_state, \"check\", noit_console_config_nocheck, NULL, NULL );", "DELEGATE_CMD(_unset_state, \"attribute\", noit_console_opt_delegate, _uattr_state);", "ADD_CMD(_unset_state, \"section\", noit_console_config_section, NULL, NULL, (void *)1);", "ADD_CMD(_unset_state, \"config\", noit_console_config_unsetconfig, NULL, NULL , NULL);", "ADD_CMD(_unset_state, \"check\", noit_console_config_nocheck, NULL, NULL , NULL);", "", "NEW_STATE(_conf_t_check_state);", "_conf_t_check_state->console_prompt_function = conf_t_check_prompt;", "DELEGATE_CMD(_conf_t_check_state, \"attribute\", _attr_state);", "DELEGATE_CMD(_conf_t_check_state, \"no\", _unset_state);", "ADD_CMD(_conf_t_check_state, \"config\", noit_console_config_setconfig, NULL, NULL );", "ADD_CMD(_conf_t_check_state, \"status\", noit_console_show_check, NULL, NULL );", "ADD_CMD(_conf_t_check_state, \"exit\", noit_console_config_cd, NULL, \"..\");", "ADD_CMD(_conf_t_check_state, \"check\", noit_console_check, _conf_t_check_state, \"..\");", "DELEGATE_CMD(_conf_t_check_state, \"attribute\", noit_console_opt_delegate, _attr_state);", "DELEGATE_CMD(_conf_t_check_state, \"no\", noit_console_opt_delegate, _unset_state);", "ADD_CMD(_conf_t_check_state, \"config\", noit_console_config_setconfig, NULL, NULL , NULL);", "ADD_CMD(_conf_t_check_state, \"status\", noit_console_show_check, NULL, NULL , NULL);", "ADD_CMD(_conf_t_check_state, \"exit\", noit_console_config_cd, NULL, NULL, \"..\");", "ADD_CMD(_conf_t_check_state, \"check\", noit_console_check, NULL, _conf_t_check_state, \"..\");", "", "NEW_STATE(_conf_t_state);", "_conf_t_state->console_prompt_function = conf_t_prompt;", "noit_console_state_add_cmd(_conf_t_state, &console_command_exit);", "ADD_CMD(_conf_t_state, \"ls\", noit_console_config_show, NULL, NULL );", "ADD_CMD(_conf_t_state, \"cd\", noit_console_config_cd, NULL, NULL );", "ADD_CMD(_conf_t_state, \"config\", noit_console_config_setconfig, NULL, NULL );", "ADD_CMD(_conf_t_state, \"section\", noit_console_config_section, NULL, (void *)0);", "ADD_CMD(_conf_t_state, \"check\", noit_console_check, _conf_t_check_state, NULL);", "ADD_CMD(_conf_t_state, \"ls\", noit_console_config_show, NULL, NULL , NULL);", "ADD_CMD(_conf_t_state, \"cd\", noit_console_config_cd, NULL, NULL , NULL);", "ADD_CMD(_conf_t_state, \"config\", noit_console_config_setconfig, NULL, NULL , NULL);", "ADD_CMD(_conf_t_state, \"section\", noit_console_config_section, NULL, NULL, (void *)0);", "ADD_CMD(_conf_t_state, \"check\", noit_console_check, NULL, _conf_t_check_state, NULL);", "", "showcmd = noit_console_state_get_cmd(tl, \"show\");", "ADD_CMD(showcmd->dstate, \"check\", noit_console_show_check, NULL, NULL );", "", "ADD_CMD(tl, \"watch\", noit_console_watch_check, NULL, (void *)1);", "ADD_CMD(showcmd->dstate, \"check\", noit_console_show_check, NULL, NULL , NULL);", "", "ADD_CMD(tl, \"watch\", noit_console_watch_check, NULL, NULL, (void *)1);", "", "nocmd = noit_console_state_get_cmd(tl, \"no\");", "ADD_CMD(nocmd->dstate, \"watch\", noit_console_watch_check, NULL, (void *)0);", "", "DELEGATE_CMD(_conf_t_state, \"write\", _write_state);", "DELEGATE_CMD(_conf_t_state, \"attribute\", _attr_state);", "DELEGATE_CMD(_conf_t_state, \"no\", _unset_state);", "ADD_CMD(nocmd->dstate, \"watch\", noit_console_watch_check, NULL, NULL, (void *)0);", "", "DELEGATE_CMD(_conf_t_state, \"write\", noit_console_opt_delegate, _write_state);", "DELEGATE_CMD(_conf_t_state, \"attribute\", noit_console_opt_delegate, _attr_state);", "DELEGATE_CMD(_conf_t_state, \"no\", noit_console_opt_delegate, _unset_state);", "", "NEW_STATE(_conf_state);", "ADD_CMD(_conf_state, \"terminal\", noit_console_state_conf_terminal, _conf_t_state, NULL);", "", "ADD_CMD(tl, \"configure\", noit_console_state_delegate, _conf_state, NULL);", "ADD_CMD(tl, \"write\", noit_console_state_delegate, _write_state, NULL);", "ADD_CMD(tl, \"reload\", noit_conf_checks_reload, NULL, NULL );", "}", "", "ADD_CMD(_conf_state, \"terminal\", noit_console_state_conf_terminal, NULL, _conf_t_state, NULL);", "", "ADD_CMD(tl, \"configure\", noit_console_state_delegate, noit_console_opt_delegate, _conf_state, NULL);", "ADD_CMD(tl, \"write\", noit_console_state_delegate, noit_console_opt_delegate, _write_state, NULL);", "ADD_CMD(tl, \"reload\", noit_conf_checks_reload, NULL, NULL , NULL);", "}", ""]], "pageTitle": "Reconnoiter ~ Changeset 56c7e9dd00981d9018a28e7adf1fb6144821c51e", "title": "", "url": "https://labs.omniti.com/labs/reconnoiter/changeset/56c7e9dd00981d9018a28e7adf1fb6144821c51e?new_path=", "hasHeader": true, "headerPosition": "MIXED", "tableType": "RELATION", "tableNum": 2, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989042.37/warc/CC-MAIN-20150728002309-00026-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 885863271, "recordOffset": 885849137, "tableOrientation": "HORIZONTAL", "textBeforeTable": "src/Makefile.in Moved Copied Modified Removed Added Unmodified Legend: src/noitedit/chared.h (modified) (1\u00a0diff) src/noit_module.c (modified) (2\u00a0diffs) src/noit_console_state.c (modified) (6\u00a0diffs) src/noit_console_complete.c (added) src/noit_console.h (modified) (6\u00a0diffs) src/noit_console.c (modified) (3\u00a0diffs) src/noit_conf_checks.c (modified) (4\u00a0diffs) src/noit_check.c (modified) (1\u00a0diff) src/Makefile.in (modified) (2\u00a0diffs) Files: refs #37... lots of progress here Message: Theo Schlossnagle <jesus@omniti.com> 1236922918 +0000 git-author:", "textAfterTable": "1351 1351 \u00a0 nocmd = noit_console_state_get_cmd(tl, \"no\");\u00a0 1352 \u00a0 \u00a0 ADD_CMD(nocmd->dstate, \"watch\", noit_console_watch_check, NULL, (void *)0);\u00a0 1353 \u00a0 \u00a0 1354 \u00a0 \u00a0 DELEGATE_CMD(_conf_t_state, \"write\", _write_state);\u00a0 1355 \u00a0 \u00a0 DELEGATE_CMD(_conf_t_state, \"attribute\", _attr_state);\u00a0 1356 \u00a0 \u00a0 DELEGATE_CMD(_conf_t_state, \"no\", _unset_state);\u00a0 \u00a0 1352 \u00a0 ADD_CMD(nocmd->dstate, \"watch\", noit_console_watch_check, NULL, NULL, (void *)0);\u00a0 \u00a0 1353 \u00a0 \u00a0 1354 \u00a0 DELEGATE_CMD(_conf_t_state, \"write\", noit_console_opt_delegate, _write_state);\u00a0 \u00a0 1355 \u00a0 DELEGATE_CMD(_conf_t_state, \"attribute\", noit_console_opt_delegate, _attr_state);\u00a0 \u00a0 1356 \u00a0 DELEGATE_CMD(_conf_t_state, \"no\", noit_console_opt_delegate, _unset_state);\u00a0 1357 1357 \u00a0 1358 1358 \u00a0 NEW_STATE(_conf_state);\u00a0 1359 \u00a0 \u00a0 ADD_CMD(_conf_state, \"terminal\", noit_console_state_conf_terminal, _conf_t_state, NULL);\u00a0 1360 \u00a0 \u00a0 1361 \u00a0 \u00a0 ADD_CMD(tl, \"configure\", noit_console_state_delegate, _conf_state, NULL);\u00a0 1362 \u00a0 \u00a0 ADD_CMD(tl, \"write\", noit_console_state_delegate, _write_state, NULL);\u00a0 1363 \u00a0 \u00a0 ADD_CMD(tl, \"reload\", noit_conf_checks_reload, NULL, NULL );\u00a0 1364 \u00a0 } \u00a0 1365 \u00a0 \u00a0 \u00a0 1359 \u00a0 ADD_CMD(_conf_state, \"terminal\", noit_console_state_conf_terminal, NULL, _conf_t_state, NULL);\u00a0 \u00a0 1360 \u00a0 \u00a0 1361 \u00a0 ADD_CMD(tl, \"configure\", noit_console_state_delegate, noit_console_opt_delegate, _conf_state, NULL);\u00a0 \u00a0 1362 \u00a0 ADD_CMD(tl, \"write\", noit_console_state_delegate, noit_console_opt_delegate, _write_state, NULL);\u00a0 \u00a0 1363 \u00a0 ADD_CMD(tl, \"reload\", noit_conf_checks_reload, NULL, NULL , NULL);\u00a0 \u00a0 1364 } \u00a0", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}