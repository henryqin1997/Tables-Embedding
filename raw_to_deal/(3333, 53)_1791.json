{"relation": [["Short", ":g", ":x(n)", ":nth", ":c(n)", ":p(n)", ":ov", ":ex", "", "", "", ":rw", ":s", ":ss", ":i", ":ii", ":a", ":aa", "", "", "", "", ":P5"], ["Long", ":global", "", ":st :nd :rd :th", ":continue", ":pos", ":overlap", ":exhaustive", ":ratchet", ":panic", ":keepall", "", ":sigspace", ":samespace", ":ignorecase", ":samecase", ":ignoreaccent", ":sameaccent", ":bytes", ":chars", ":codes", ":graphs", ":Perl5"], ["Meaning", "searches for any finding", "searches n times (n is an int)", "demands the nth finding, has many aliases for correct spelling (:2nd)", "searches from nth position (counting from 0)", "searches only on nth position (counting from 0)", "searches on all positionens just one time (activates backtracking)", "searches on all positions as long as it findes something (activates backtracking)", "deactivates backtracking", "overwriting of possible set :ratchet for all subrules (activates backtracking)", "subrules have to memorize everything", "the regex has the right to change the string", "whitespace just separate parts of the Regex, don't stand for spaces to look for", "as in :s for substitutions, 1st part replaced with 1st part in second half a.s.o. (ss/teh hsa/the has/;)", "no distinctions between uppercase and lowercase", "substitute with chars of same case as the matching", "no distinctions between same chars with or without accent (funny symbols above)", "substitute with chars that has same accent as the matching", "searches on byte level", "searches on character level (default)", "matches between codepoints", "match language-independent graphemes", "use the old Regex"]], "pageTitle": "Perl 6 Lookup Tablet: Revision 11 / Perl 6", "title": "", "url": "http://www.perlfoundation.org/perl6/index.cgi?action=revision_view;page_name=perl_6_lookup_tablet;revision_id=20100325005643", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 8, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981460.12/warc/CC-MAIN-20150728002301-00265-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 654069359, "recordOffset": 654050701, "tableOrientation": "HORIZONTAL", "textBeforeTable": "N . Terminator. . . . . . . ; {...}, unless, extra ), ], } X . Sequencer. . . . . . . <==, ==>, <<==, ==>> X . Loose or . . . . . . . . or xor orelse X . Loose and . . . . . . . and andthen any $ @ [+] [*] R . List prefix. . . . . . . . print push say die map substr ... X . List infix. . . . . . . . . Z minmax X X~ X* Xeqv ... X . Comma operator . . . , p5=> : L . Loose unary . . . . . . true not R . Item assignment . . . = := ::= => += -= **= xx= .= R . Conditional. . . . . . . ?? !! ff fff X . Tight or. . . . . . . . . || ^^ // min max X . Tight and. . . . . . . . && C . Chaining infix . . . . . != == < <= > >= eq ne lt le gt ge ~~ === eqv !eqv N . Nonchaining infix. . . but does <=>", "textAfterTable": "Contextualizers Infix operator that forcing a context. $ . . . scalar context @. . . array context (flat array) @@ . slice c., array that may contain arrayref %. . . hash c. ? . . . boolean + . . . numeric ~. . . string | . . . capture (mix of positional (array) and named parameter (hash) ) & . . . coderef, routines Filetest Ops :r . . . file is readable by effective uid/gid. :w. . . file is writeable by effective uid/gid. :x . . . file is executable by effective uid/gid. :o . . . file is owned by effective uid. . :R . . . file is readable by real uid/gid. :W . . . file is writeable by real uid/gid. :X . . . file is executable by real uid/gid. :O . . . file is owned by real uid. . :e . . . file exists :z . . . file has size equal to 0 (an empty file). :s . . . file has size greater than 0 (returns size in bytes) . :f . . . file is", "hasKeyColumn": true, "keyColumnIndex": 2, "headerRowIndex": 0}