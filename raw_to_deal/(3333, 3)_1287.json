{"relation": [["WCAP Command", "Command: check_id", "Command: createcalendar", "Command: deletecalendar", "Command: deletecomponents_by_range", "Command: deleteevents_by_id", "Command: deleteevents_by_range", "Command: deletetodos_by_id", "Command: deletetodos_by_range", "Command: export", "Command: fetchcomponents_by_alarmrange", "Command: fetchcomponents_by_attendee_error", "Command: fetchcomponents_by_lastmod", "Command: fetch_deletedcomponents", "Command: fetchcomponents_by_range", "Command: fetchevents_by_id", "Command: fetchtodos_by_id", "Command: get_all_timezones", "Command: get_calprops", "Command: get_freebusy", "Command: get_guids", "Command: gettime", "Command: get_userprefs", "Command: import", "Command: list", "Command: list_subscribed", "Command: login", "Command: logout", "Command: ping", "Command: search_calprops", "Command: set_calprops", "Command: set_userprefs", "Command: storeevents", "Command: storetodos", "Command: subscribe_calendars", "Command: unsubscribe_calendars", "Command: verifyevents_by_ids", "Command: verifytodos_by_ids", "Command: version"], ["Description", "Administrator only: Check if user\u2019s session ID is valid.", "Create a new calendar.", "Delete an existing calendar.", "Delete both events and todos in a calendar(s) over a specific time period.", "Delete events given a specific calid and uid or recurrence-ID pair.", "Delete events in a calendar(s) over a specific time period.", "Delete todos given a specific calid and uid or recurrence-ID pair.", "Deletes todos in a calendar(s) over a specific time period.", "Exports a calendar to a file.", "Queries for components that have alarms to trigger over a specific time period.", "Queries for components that had errors while sending group scheduling messages.", "Queries for components that have changed, during the specified time range.", "Queries the deletelog database for deleted components.", "Queries for components over a specific time period, with filtering attributes.", "Queries for one or more events by a unique identifier (UID, Recurrence ID, modifier).", "Queries for one or more todos by a unique identifier (UID, Recurrence ID, modifier).", "Returns all the time zones the server supports.", "Returns calendar properties.", "Returns calendar free-busy time.", "Returns a set of random UID's.", "Returns the server times for the requested calids.", "Returns user preferences and some server settings.", "Imports a calendar from a file to a user\u2019s calendar.", "Lists all calendars owned by a user.", "Lists all calendars subscribed to by a user.", "Authenticates a user and redirects to first HTML view.", "Terminates the current user\u2019s session and return to login screen.", "Administrator only: Pings the calendar server.", "Searches for a calendar with the specified parameter values.", "Sets calendar properties.", "Sets user preferences.", "Stores events that are specified in application or URL encoded manner. For storing an even by passing properties in a URL.", "Stores todos that are specified in the application or URL encoded manner.", "Adds calendars to a users subscription list.", "Removes calendars from a user\u2019s subscription list.", "Fetches events and returns the uid or rid of events not in the database.", "Fetches todos and returns the uid or rid of todos not in the database.", "Returns the WCAP version that the server supports."]], "pageTitle": "Part\u00a0III WCAP Protocol (Sun Java System Calendar Server 6 2005Q4 Developer's Guide)", "title": "", "url": "http://docs.oracle.com/cd/E19636-01/819-2434/fxjum/index.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 0, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042992201.62/warc/CC-MAIN-20150728002312-00158-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 65205247, "recordOffset": 65133218, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{82483=As a reminder, the maximum parameter value length is 1024 characters., 82311=http://www.ietf.org/rfc/rfc2446.txt, 127814=The server never uses the system time zone information to calculate the current date and time. It uses the time elapsed in seconds since the Epoch (00:00:00 UTC, January 1, 1970) to calculate current date and time. Then depending on the user\u2019s time zone settings, the date is displayed to reflect the correct time zone., 61225=Reached the maximum number of connections. When some of the connections are freed, users can successfully connect. Same as error 11001., 20457=The maximum length for WCAP parameters is 1024 characters., 327139=This query fetches the last two recurrences by specifying the recurrence ID of the second to last recurrence on Feb. 22, 2002 (rid=20020222T170000Z) and a modifier of 2 (mod=2) which means THISANDFUTURE recurrences:, 74059=11006, 105369=The rrules parameter takes a semicolon-separated list of quoted recurrence rule strings. Each string represents a recurrence rule of the event. Each string must be enclosed in quotes. Many parameters are possible for recurrence rules. (See RFC 2445 for a complete description of the syntax.), 468830=A todo\u2019s iCalendar RFC 2445 attendee properties. For a list of the properties understood by Calendar Server, see Examples of WCAP Attendee Entries, 336287=The following is an example of a time zone array element where crossover dates have been limited to the years from mid-1998 to 2006:, 109168=For example, the following rdates parameter specifies a recurring event with two recurrence dates (3/31/02 11:22:33 and 5/31/02 11:22:33):, 81932=Find the exact format and definition for all times, strings, parameters, and so forth, by referring to RFC 2445, RFC 2446, and RFC 2447. Unless otherwise noted, all WCAP commands follow these specifications., 147992=Unless otherwise noted, the maximum length value for any parameter accepted by WCAP commands is 1024 characters. While no input length checking is performed by WCAP, any parameter value longer than 1024 can produce unpredictable results., 357590=The following URL generates free-busy information found in the calendar jdoe between May 1, 2002 and July 1, 2002., 121387=For example, this URL would delete the event that occurs on the date March 1, 200211:22:33 AM GMT and all prior instances of this event (uid 001)., 259373=The above query would fetch all events and todos that have been modified between 1/1/2002 and 6/1/2002. Thus eventA and todoA would be returned., 203191=Use this command to delete the todos that fall completely within the specified range from the specified calendars. If a range is not specified, it deletes all todos. For example, the following URL would delete just the todos that occur on the date March 1, 2002., 225378=eventA: alarm on Dec. 25, 2001, 12:30 PM GMT, 120008=To delete just the single instance of the event, the mod parameter should be set to 1. For example, this URL would delete just the event that occurs on the date March 1, 2002 11:22:33 AM GMT., 225514=todoA: alarm on Jan. 20, 2002, 1:15 PM GMT, 228888=This query fetches all events and todos that have alarms to go off between Jan. 1, 2002 and June 1, 2002., 61890=Generic response. Check all DWP servers. One might be down. Same as error 11003., 258157=eventA: last-modified on Feb. 10, 2002, 10:00 AM GMT., 278777=This example fetches components for the current user from Dec. 1, 2001 to Jan. 31, 2002, using the following URL:, 85110=If user john has only free-busy access to the calendar jdoe, user john gets only a free-busy version of the calendar. The free-busy time for jdoe (from 9:00 to 6:00) would appear as the following:, 72369=11001, 82241=http://www.ietf.org/rfc/rfc2445.txt, 73745=11005, 116415=However, you might not want to expand recurrences when you are modifying multiple events. For example, suppose a meeting recurs every Friday starting Jan. 1, 2002. Use the following URL to change the summary of each event after Feb. 1, 2002 to changed-event., 281930=The second example fetches all components for calendars jdoe and susan between Dec. 1, 2001 to Jan. 31, 2002., 434152=An event\u2019s iCalendar RFC 2445 attendee properties. For a list of the properties understood by Calendar Server, see Examples of WCAP Attendee Entries., 82381=http://www.ietf.org/rfc/rfc2447.txt, 225671=This query fetches all events and todos that have alarms about to go off between Dec. 1, 2001 and Jan. 31, 2002., 258311=todoA: last-modified on Jan. 20, 2002, 1:15 PM GMT., 333508=If you specify a range of years with the dtstart and dtend parameters, the command returns only the crossover dates for the years within the range. Otherwise, it returns all crossover dates from the first to the last known year (1987-2087)., 73366=11004, 120599=To delete the event and all future instances of the event, the mod parameter should be set to 2. For example, this URL would delete the event that occurs on the date March 1, 2002 11:22:33 AM GMT and all future instances of this event (uid 001)., 73005=11003, 259005=The above query would fetch all modified events and todos between 12/1/2001 and 1/31/2002. Thus eventB and todoA would be returned., 356264=The free-busy time for jdoe (from 9:00 to 6:00) would be the following:, 448653=Event priority. Follows RFC 2445.\u00a0, 72023=11000, 72713=11002, 324745=This query fetches just the first todo, on Feb. 1, 2002, because the recurrence ID, rid=20020201T170000Z, of the first item is specified, but no modifier is specified. Therefore, it defaults to 1 THISINSTANCE:, 74635=11008, 112070=For example, the following exdates parameter specifies a recurring event that does not occur on the two specified dates (3/31/02 11:22:33 and 5/31/02 11:22:33):, 258234=eventB: last-modified on Dec. 25, 2001, 12:30 PM GMT., 457678=One or more X-Token properties, in iCalendar RFC 2445 format. For more information on X-Tokens, see X-Tokens., 266250=The name can be any valid event or todo RFC 2445 compliant property., 268962=Name/value pair that represents a filter for an event. The left side is any valid property of an event or todo from RFC 2445. Only single valued filters are currently supported. For example: filter=(ATTENDEE=jdoe@sesta.com) where the left side of the value is a property from RFC 2445 and the right side is the value to match in the events and todos. The following are the only supported properties for filtering:, 225446=eventB: alarm on Feb. 10, 2002, 10:00 AM GMT, 324587=For example, a todo \u201cweekly todo B\u201d that\u2019s due weekly at 5:00 PM starting on Feb. 1, 2002 and ending on Mar 1, 2002., 61598=Front end can\u2019t resolve to a particular back end. Same as error11002., 17461=The number of characters that can be passed in for each parameter is limited to 1024 characters., 74371=11007}", "lastModified": "Thu, 03 Feb 2011 17:06:30 GMT", "textBeforeTable": "Table 5\u20131 WCAP Command Overview The following is a list of commands supported in WCAP. For a detailed description of each command, see Chapter\u00a07, WCAP Command Reference Command Overview Miscellaneous commands Communication-sending for group scheduling Web Calendaring Data User Configuration Information WCAP commands consist of four general categories of usage: WCAP is a command based system consisting of client requests and server responses for transmitting calendaring data. WCAP returns calendaring data using the HTTP protocol. In most cases, Calendar Server receives data through URL-encoded arguments. Calendar Server communicates with Communications Express using the text/xml format. Calendar data is stored in a proprietary format in the various calendar databases. You retrieve calendar data using WCAP commands with the fmt-out parameter set to either text/calendar or text/xml. Introduction Command Formats Command Overview Introduction This chapter describes the Web Calendar Access Protocol (WCAP), which is a high level command-based protocol used to communicate with the Calendar Server. This chapter has the following sections: Chapter\u00a05 Web Calendar Access Protocol Overview Chapter\u00a07, WCAP Command Reference Chapter\u00a06, WCAP Common Topics Chapter\u00a05, Web Calendar Access Protocol Overview", "textAfterTable": "Session Identifiers For many WCAP commands, you must specify the session identifier (id) that is returned by the login command. The session identifier ensures that data is accessible only to authenticated users with the required level of privilege or ownership. When logging into the system, a user provides authentication of identity. The default authentication mechanism uses plain-text passwords and user names. Calendar Server generates the session identifier only when authentication is successful. The identifier then serves as proof of authentication in subsequent calendaring operations. You can customize the authentication mechanism to use a local or external authentication scheme, see API: csIAccessControl. For more information about how to configure authentication, see chapter 10 in the Calendar Server Administration Guide: Sun Java System Calendar Server 6 2005Q4 Administration Guide. Hosted (Virtual) Domain Mode If you are using hosted (virtual) domains, all WCAP commands you issue must have fully qualified user ID's (uid) and calendar ID's (calid), for example jdoe@example.com. In order to be in hosted domain mode, several parameters in the ics.conf file must be configured as specified in chapter 12 in the Calendar Server Administration Guide: Sun Java System Calendar Server 6 2005Q4 Administration Guide. See your Calendar Server administrator if you do not know whether you are using hosted domains. The following two example WCAP commands demonstrate the difference between calid values for non-hosted domain mode and hosted domain mode. Non-hosted domain", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}