{"relation": [["Man Page", "Algorithms", "Associative_Containers", "Bidirectional_Iterators", "Containers", "Forward_Iterators", "Function_Objects", "Heap_Operations", "Input_Iterators", "Insert_Iterators", "Iterators", "Negators", "Operators", "Output_Iterators", "Predicates", "Random_Access_Iterators", "Sequences", "Stream_Iterators", "__distance_type", "__iterator_category", "__reverse_bi_iterator", "accumulate", "adjacent_difference", "adjacent_find", "advance", "allocator", "auto_ptr", "back_insert_iterator", "back_inserter", "basic_filebuf", "basic_fstream", "basic_ifstream", "basic_ios", "basic_iostream", "basic_istream", "basic_istringstream", "basic_ofstream", "basic_ostream", "basic_ostringstream", "basic_streambuf", "basic_string", "basic_stringbuf", "basic_stringstream", "binary_function", "binary_negate", "binary_search", "bind1st", "bind2nd", "binder1st", "binder2nd", "bitset", "cerr", "char_traits", "cin", "clog", "codecvt", "codecvt_byname", "collate", "collate_byname", "compare", "complex", "copy", "copy_backward", "count", "count_if", "cout", "ctype", "ctype_byname", "deque", "distance", "divides", "equal", "equal_range", "equal_to", "exception", "facets", "filebuf", "fill", "fill_n", "find", "find_end", "find_first_of", "find_if", "for_each", "fpos", "front_insert_iterator", "front_inserter", "fstream", "generate", "generate_n", "get_temporary_buffer", "greater", "greater_equal", "gslice", "gslice_array", "has_facet", "ifstream", "includes", "indirect_array", "inner_product", "inplace_merge", "insert_iterator", "inserter", "ios", "ios_base", "iosfwd", "isalnum", "isalpha", "iscntrl", "isdigit", "isgraph", "islower", "isprint", "ispunct", "isspace", "istream", "istream_iterator", "istreambuf_iterator", "istringstream", "istrstream", "isupper", "isxdigit", "iter_swap", "iterator", "iterator_traits", "less", "less_equal", "lexicographical_compare", "limits", "list", "locale", "logical_and", "logical_not", "logical_or", "lower_bound", "make_heap", "map", "mask_array", "max", "max_element", "mem_fun", "mem_fun1", "mem_fun_ref", "mem_fun_ref1", "merge", "messages", "messages_byname", "min", "min_element", "minus", "mismatch", "modulus", "money_get", "money_put", "moneypunct", "moneypunct_byname", "multimap", "multiplies", "multiset", "negate", "next_permutation", "not1", "not2", "not_equal_to", "nth_element", "num_get", "num_put", "numeric_limits", "numpunct", "numpunct_byname", "ofstream", "ostream", "ostream_iterator", "ostreambuf_iterator", "ostringstream", "ostrstream", "pair", "partial_sort", "partial_sort_copy", "partial_sum", "partition", "permutation", "plus", "pointer_to_binary_function", "pointer_to_unary_function", "pop_heap", "prev_permutation", "priority_queue", "ptr_fun", "push_heap", "queue", "random_shuffle", "raw_storage_iterator", "remove", "remove_copy", "remove_copy_if", "remove_if", "replace", "replace_copy", "replace_copy_if", "replace_if", "return_temporary_buffer", "reverse", "reverse_copy", "reverse_iterator", "rotate", "rotate_copy", "search", "search_n", "set", "set_difference", "set_intersection", "set_symmetric_difference", "set_union", "slice", "slice_array", "smanip", "smanip_fill", "sort", "sort_heap", "stable_partition", "stable_sort", "stack", "streambuf", "string", "stringbuf", "stringstream", "strstream", "strstreambuf", "swap", "swap_ranges", "time_get", "time_get_byname", "time_put", "time_put_byname", "tolower", "toupper", "transform", "unary_function", "unary_negate", "uninitialized_copy", "uninitialized_fill", "uninitialized_fill_n", "unique", "unique_copy", "upper_bound", "use_facet", "valarray", "vector", "wcerr", "wcin", "wclog", "wcout", "wfilebuf", "wfstream", "wifstream", "wios", "wistream", "wistringstream", "wofstream", "wostream", "wostringstream", "wstreambuf", "wstring", "wstringbuf"], ["Overview", "Generic algorithms for performing various operations on containers and sequences", "Ordered containers", "An iterator that can both read and write and can traverse a container in both directions", "A standard template library (STL) collection", "A forward-moving iterator that can both read and write", "Object with an operator() defined", "See entries for make_heap, pop_heap, push_heap and sort_heap", "A read-only, forward moving iterator", "An iterator adaptor that allows an iterator to insert into a container rather than overwrite elements in the container", "Pointer generalizations for traversal and modification of collections", "Function adaptors and function objects used to reverse the sense of predicate function objects", "Operators for the C++ Standard Template Library Output", "A write-only, forward moving iterator", "A function or a function object that returns a boolean (true/false) value or an integer value", "An iterator that reads, writes, and allows random access to a container", "A container that organizes a set of sequences", "Includes iterator capabilities for ostreams and istreams that allow generic algorithms to be used directly on streams", "Determines the type of distance used by an iterator\u2014 obsolete", "Determines the category to which an iterator belongs\u2014obsolete", "An iterator that traverses a collection backwards", "Accumulates all elements within a range into a single value", "Outputs a sequence of the differences between each adjacent pair of elements in a range", "Find the first adjacent pair of elements in a sequence that are equivalent", "Moves an iterator forward or backward (if available) by a certain distance", "The default allocator object for storage management in Standard Library containers", "A simple, smart pointer class", "An insert iterator used to insert items at the end of a collection", "An insert iterator used to insert items at the end of a collection", "Class that associates the input or output sequence with a file", "Supports reading and writing of named files or devices associated with a file descriptor", "Supports reading from named files or other devices associated with a file descriptor", "A base class that includes the common functions required by all streams", "Assists in formatting and interpreting sequences of characters controlled by a stream buffer", "Assists in reading and interpreting input from sequences controlled by a stream buffer", "Supports reading objects of class basic_string from an array in memory", "Supports writing into named files or other devices associated with a file descriptor", "Assists in formatting and writing output to sequences controlled by a stream buffer", "Supports writing objects of class basic_string", "Abstract base class for deriving various stream buffers to facilitate control of character sequences", "A templatized class for handling sequences of character-like entities", "Associates the input or output sequence with a sequence of arbitrary characters", "Supports writing and reading objects of class basic_string to or from an array in memory", "Base class for creating binary function objects", "A function object that returns the complement of the result of its binary predicate", "Performs a binary search for a value on a container", "Templatized utilities to bind values to function objects", "Templatized utilities to bind values to function objects", "Templatized utilities to bind values to function objects", "Templatized utilities to bind values to function objects", "A template class and related functions for storing and manipulating fixed-size sequences of bits", "Controls output to an unbuffered stream buffer associated with the object stderr declared in", "A traits class with types and operations for the basic_string container and iostream classes", "Controls input from a stream buffer associated with the object stdin declared in", "Controls output to a stream buffer associated with the object stderr declared in", "A code conversion facet", "A facet that includes code set conversion classification facilities based on the named locales", "A string collation, comparison, and hashing facet", "A string collation, comparison, and hashing facet", "A binary function or a function object that returns true or false", "C++ complex number library", "Copies a range of elements", "Copies a range of elements", "Count the number of elements in a container that satisfy a given condition", "Count the number of elements in a container that satisfy a given condition", "Controls output to a stream buffer associated with the object stdout declared in", "A facet that includes character classification facilities", "A facet that includes character classification facilities based on the named locales", "A sequence that supports random access iterators and efficient insertion/deletion at both beginning and end", "Computes the distance between two iterators", "Returns the result of dividing its first argument by its second", "Compares two ranges for equality", "Finds the largest subrange in a collection into which a given value can be inserted without violating the ordering of the collection", "A binary function object that returns true if its first argument equals its second", "A class that supports logic and runtime errors", "A family of classes used to encapsulate categories of locale functionality", "Class that associates the input or output sequence with a file", "Initializes a range with a given value", "Initializes a range with a given value", "Finds an occurrence of value in a sequence", "Finds the last occurrence of a sub-sequence in a sequence", "Finds the first occurrence of any value from one sequence in another sequence", "Finds an occurrence of a value in a sequence that satisfies a specified predicate", "Applies a function to each element in a range", "Maintains position information for the iostream classes", "An insert iterator used to insert items at the beginning of a collection", "An insert iterator used to insert items at the beginning of a collection", "Supports reading and writing of named files or devices associated with a file descriptor", "Initialize a container with values produced by a value-generator class", "Initialize a container with values produced by a value-generator class", "Pointer based primitive for handling memory", "A binary function object that returns true if its first argument is greater than its second", "A binary function object that returns true if its first argument is greater than or equal to its second", "A numeric array class used to represent a generalized slice from an array", "A numeric array class used to represent a BLAS-like slice from a valarray", "A function template used to determine if a locale has a given facet", "Supports reading from named files or other devices associated with a file descriptor", "A basic set of operation for sorted sequences", "A numeric array class used to represent elements selected from a valarray", "Computes the inner product A X B of two ranges A and B", "Merges two sorted sequences into one", "An insert iterator used to insert items into a collection rather than overwrite the collection", "An insert iterator used to insert items into a collection rather than overwrite the collection", "A base class that includes the common functions required by all streams", "Defines member types and maintains data for classes that inherit from it", "Declares the input/output library template classes and specializes them for wide and tiny characters", "Determines if a character is alphabetic or numeric", "Determines if a character is alphabetic", "Determines if a character is a control character", "Determines if a character is a decimal digit", "Determines if a character is a graphic character", "Determines whether a character is lower case", "Determines if a character is printable", "Determines if a character is punctuation", "Determines if a character is a space", "Assists in reading and interpreting input from sequences controlled by a stream buffer", "A stream iterator that has iterator capabilities for istreams", "Reads successive characters from the stream buffer for which it was constructed", "Supports reading objects of class basic_stringfrom an array in memory", "Reads characters from an array in memory", "Determines whether a character is upper case", "Determines whether a character is a hexadecimal digit", "Exchanges values in two locations", "A base iterator class", "Returns basic information about an iterator", "A binary function object that returns true if tis first argument is less than its second", "A binary function object that returns true if its first argument is less than or equal to its second", "Compares two ranges lexicographically", "Refer to numeric_limits", "A sequence that supports bidirectional iterators", "A localization class containing a polymorphic set of facets", "A binary function object that returns true if both of its arguments are true", "A unary function object that returns true if its argument is false", "A binary function object that returns true if either of its arguments are true", "Determines the first valid position for an element in a sorted container", "Creates a heap", "An associative container with access to non-key values using unique keys", "A numeric array class that gives a masked view of a valarray", "Finds and returns the maximum of a pair of values", "Finds the maximum value in a range", "Function objects that adapt a pointer to a member function, to take the place of a global function", "Function objects that adapt a pointer to a member function, to take the place of a global function", "Function objects that adapt a pointer to a member function, to take the place of a global function", "Function objects that adapt a pointer to a member function, to take the place of a global function", "Merges two sorted sequences into a third sequence", "Messaging facets", "Messaging facets", "Finds and returns the minimum of a pair of values", "Finds the minimum value in a range", "Returns the result of subtracting its second argument from its first", "Compares elements from two sequences and returns the first two elements that don\u2019t match each other", "Returns the remainder obtained by dividing the first argument by the second argument", "Monetary formatting facet for input", "Monetary formatting facet for output", "Monetary punctuation facets", "Monetary punctuation facets", "An associative container that gives access to non-key values using keys", "A binary function object that returns the result of multiplying its first and second arguments", "An associative container that allows fast access to stored key values", "Unary function object that returns the negation of its argument", "Generates successive permutations of a sequence based on an ordering function", "A function adaptor used to reverse the sense of a unary predicate function object", "A function adaptor used to reverse the sense of a binary predicate function object", "A binary function object that returns true if its first argument is not equal to its second", "Rearranges a collection so that all elements lower in sorted order than the nth element come before it and all elements higher in sorter order than the nth element come after it", "A numeric formatting facet for input", "A numeric formatting facet for output", "A class for representing information about scalar types", "A numeric punctuation facet", "A numeric punctuation facet", "Supports writing into named files or other devices associated with a file descriptor", "Assists in formatting and writing output to sequences controlled by a stream buffer", "Stream iterators allow for use of iterators with ostreams and istreams", "Writes successive characters onto the stream buffer object from which it was constructed", "Supports writing objects of class basic_string", "Writes to an array in memory", "A template for heterogeneous pairs of values", "Templatized algorithm for sorting collections of entities", "Templatized algorithm for sorting collections of entities", "Calculates successive partial sums of a range of values", "Places all of the entities that satisfy the given predicate before all of the entities that do not", "Generates successive permutations of a sequence based on an ordering function", "A binary function object that returns the result of adding its first and second arguments", "A function object that adapts a pointer to a binary function, to take the place of a binary_function", "A function object class that adapts a pointer to a function, to take the place of a unary_function", "Moves the largest element off the heap", "Generates successive permutations of a sequence based on an ordering function", "A container adapter that behaves like a priority queue", "A function that is overloaded to adapt a pointer to a function, to take the place of a function", "Places a new element into a heap", "A container adaptor that behaves like a queue (first in, first out)", "Randomly shuffles elements of a collection", "Enables iterator-based algorithms to store results into uninitialized memory", "Moves desired elements to the front of a container, and returns an iterator that describes where the sequence of desired elements ends", "Moves desired elements to the front of a container, and returns an iterator that describes where the sequence of desired elements ends", "Moves desired elements to the front of a container, and returns an iterator that describes where the sequence of desired elements ends", "Moves desired elements to the front of a container, and returns an iterator that describes where the sequence of desired elements ends", "Substitutes elements in a collection with new values", "Substitutes elements in a collection with new values, and moves the revised sequence into result", "Substitutes elements in a collection with new values, and moves the revised sequence into result", "Substitutes elements in a collection with new values", "A pointer-based primitive for handling memory", "Reverses the order of elements in a collection", "Reverses the order of elements in a collection while copying them to a new collection", "An iterator that traverses a collection backwards", "Swaps the segment that contains elements from first through middle-minus-one with the segment that contains the elements from middle through last", "Swaps the segment that contains elements from first through middle-minus-one with the segment that contains the elements from middle through last", "Finds a sub-sequence within a sequence of values that is element-wise equal to the values in an indicated range", "Finds a sub-sequence within a sequence of values that is element-wise equal to the values in an indicated range", "An associative container that supports unique keys", "A basic set operation for constructing a sorted difference", "A basic set operation for constructing a sorted intersection", "A basic set operation for constructing a sorted symmetric difference", "A basic set operation for constructing a sorted union", "A numeric array class for representing a BLAS-like slice from an array", "A numeric array class for representing a BLAS-like slice from a valarray", "Helper classes used to implement parameterized manipulators", "Helper classes used to implement parameterized manipulators", "A templatized algorithm for sorting collections of entities", "Converts a heap into a sorted collection", "Places all of the entities that satisfy the given predicate before all of the entities that do not, while maintaining the relative order of elements in each group", "A templatized algorithm for sorting collections of entities", "A container adapter that behaves like a stack (last in, first out)", "Abstract base class for deriving various stream buffers to facilitate control of character sequences", "A typedef for basic_string, allocator>", "Associates the input or output sequence with a sequence of arbitrary characters", "Supports writing and reading objects of class basic_stringto/from an array in memory", "Reads and writes to an array in memory", "Associates either the input sequence or the output sequence with a tiny character array whose elements store arbitrary values", "Exchanges values", "Exchanges a range of values in one location with those in another", "A time formatting facet for input", "A time formatting facet for input, based on the named locales", "A time formatting facet for output", "A time formatting facet for output, based on the named locales", "Converts a character to lower case.", "Converts a character to upper case", "Applies an operation to a range of values in a collection and stores the result", "A base class for creating unary function objects", "A function object that returns the complement of the result of its unary predicate", "An algorithm that uses construct to copy values from one range to another location", "An algorithm that uses the construct algorithm for setting values in a collection", "An algorithm that uses the construct algorithm for setting values in a collection", "Removes consecutive duplicates from a range of values and places the resulting unique values into the result", "Removes consecutive duplicates from a range of values and places the resulting unique values into the result", "Determines the last valid position for a value in a sorted container", "A template function used to obtain a facet", "An optimized array class for numeric operations", "A sequence that supports random access iterators", "Controls output to an unbuffered stream buffer associated with the object stderr declared in", "Controls input from a stream buffer associated with the object stdin declared in", "Controls output to a stream buffer associated with the object stderr declared in", "Controls output to a stream buffer associated with the object stdout declared in", "Class that associates the input or output sequence with a file", "Supports reading and writing of named files or devices associated with a file descriptor", "Supports reading from named files or other devices associated with a file descriptor", "A base class that includes the common functions required by all streams", "Assists in reading and interpreting input from sequences controlled by a stream buffer", "Supports reading objects of class basic_stringfrom an array in memory", "Supports writing into named files or other devices associated with a file descriptor", "Assists in formatting and writing output to sequences controlled by a stream buffer", "Supports writing objects of class basic_string", "Abstract base class for deriving various stream buffers to facilitate control of character sequences", "A typedef for basic_string, allocator>", "Associates the input or output sequence with a sequence of arbitrary characters"]], "pageTitle": "Chapter\u00a013 Using The C++ Standard Library (Sun Studio 12 Update 1: C++ User's Guide)", "title": "", "url": "http://docs.oracle.com/cd/E19205-01/820-7599/bkakb/index.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 1, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989234.2/warc/CC-MAIN-20150728002309-00216-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 78966227, "recordOffset": 78949077, "tableOrientation": "HORIZONTAL", "lastModified": "Wed, 26 Jan 2011 19:57:20 GMT", "textBeforeTable": "Table\u00a013\u20131 C++ Standard Library Header Files Table\u00a013\u20131 lists the headers for the complete standard library along with a brief description of each. 13.1 C++ Standard Library Header Files For details about the standard library, see the Standard C++ Library User\u2019s Guide and the Standard C++ Class Library Reference. If you need to use your own version of the C++ standard library instead of one of the versions that is supplied with the compiler, you can do so by specifying the -library=no%Cstd option. Replacing the standard library that is distributed with the compiler is risky, and good results are not guaranteed. For more information, see 12.7 Replacing the C++ Standard Library. The C++ compiler also supports STLport\u2019s Standard Library implementation version 4.5.3. libCstd is still the default library, but STLport\u2019s product is available as an alternative. See 13.3 STLport for more information. The C++ standard library (libCstd) is based on the RogueWaveTM Standard C++ Library, Version 2. This library is available only for the default mode (-compat=5) of the compiler and is not supported with use of the -compat[=4] option. <vector> <utility> <stack> <set> <queue> <memory> <map> <list> <iterator> <deque> <algorithm>", "textAfterTable": "strstreambuf Associates either the input sequence or the output sequence with a tiny character array whose elements store arbitrary values\u00a0 swap Exchanges values\u00a0 swap_ranges Exchanges a range of values in one location with those in another\u00a0 time_get A time formatting facet for input\u00a0 time_get_byname A time formatting facet for input, based on the named locales\u00a0 time_put A time formatting facet for output\u00a0 time_put_byname A time formatting facet for output, based on the named locales\u00a0 tolower Converts a character to lower case.\u00a0 toupper Converts a character to upper case\u00a0 transform Applies an operation to a range of values in a collection and stores the result\u00a0 unary_function A base class for creating unary function objects\u00a0 unary_negate", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}