{"relation": [["r4381", "1", "2", "3", "", "4", "5", "\u2026", "11", "12", "", "13", "14", "\u2026", "486", "487", "", "", "488", "489", "\u2026", "500", "501", "", "", "502", "503", "\u2026", "557", "558", "559", "", "560", "", "", "561", "562", "\u2026", "600", "601", "", "", "602", "603", "\u2026", "641", "642", "643", "644", "", "", "645", "646", "\u2026", "655", "656", "657", "658", "", "", "659", "660", "\u2026", "705", "706", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "707", "708"], ["r4442", "1", "2", "", "3", "4", "5", "\u2026", "11", "12", "13", "14", "15", "\u2026", "487", "488", "489", "490", "491", "492", "\u2026", "503", "504", "505", "506", "507", "508", "\u2026", "562", "563", "", "564", "565", "566", "567", "568", "569", "\u2026", "607", "608", "609", "610", "611", "612", "\u2026", "650", "651", "", "", "652", "653", "654", "655", "\u2026", "664", "665", "", "", "666", "667", "668", "669", "\u2026", "714", "715", "716", "717", "718", "719", "720", "721", "722", "723", "724", "725", "726", "727", "728", "729", "730", "731", "732", "733", "734", "735", "736", "737", "738", "739", "740", "741", "742", "743"], ["", "#!/bin/bash", "#", "# pwmconfig v0. 7", "# pwmconfig v0. 8", "# Tests the pwm outputs of sensors and configures fancontrol", "#", "", "#", "# Copyright 2003-2005 The lm_sensors project", "# Copyright (C) 2007 Jean Delvare", "#", "# This program is free software; you can redistribute it and/or modify", "", "MINSTART=`egrep '^MINSTART=.*$' $1 | sed -e 's/MINSTART= *//g'`", "MINSTOP=`egrep '^MINSTOP=.*$' $1 | sed -e 's/MINSTOP= *//g'`", "MINPWM=`egrep '^MINPWM=.*$' $1 | sed -e 's/MINPWM= *//g'`", "MAXPWM=`egrep '^MAXPWM=.*$' $1 | sed -e 's/MAXPWM= *//g'`", "", "# Check for configuration change", "", "MINSTART=\"\"", "MINSTOP=\"\"", "MINPWM=\"\"", "MAXPWM=\"\"", "fi", "done", "", "tmpfile=`mktemp -t pwmcfg.XXXXXXXXXX` || { echo \"$0: Cannot create temporary file\" >&2; exit 1; }", "trap \" [ -f \\\"$tmpfile\\\" ] && /bin/rm -f -- \\\"$tmpfile\\\"\" 0 1 2 3 13 15", "egrep -v '(INTERVAL|FCTEMPS|FCFANS|MAXTEMP|MINTEMP|MINSTART|MINSTOP )' $FCCONFIG >$tmpfile", "egrep -v '(INTERVAL|FCTEMPS|FCFANS|MAXTEMP|MINTEMP|MINSTART|MINSTOP |MINPWM|MAXPWM)' $FCCONFIG >$tmpfile", "echo -e \"INTERVAL=$INTERVAL\\nFCTEMPS=$FCTEMPS\\nFCFANS=$FCFANS\\nMINTEMP=$MINTEMP\\nMAXTEMP=$MAXTEMP\\nMINSTART=$MINSTART\\nMINSTOP=$MINSTOP\" >>$tmpfile", "[ -n \"$MINPWM\" ] && echo \"MINPWM=$MINPWM\" >>$tmpfile", "[ -n \"$MAXPWM\" ] && echo \"MAXPWM=$MAXPWM\" >>$tmpfile", "mv $tmpfile $FCCONFIG", "#check if file was written correctly", "", "echo \" MINSTART=`echo $MINSTART |sed -e \\\"s/ /\\n/g\\\" |egrep \\\"${pwmo}\\\" |sed -e \\\"s/.*=//g\\\"`\"", "echo \" MINSTOP=`echo $MINSTOP |sed -e \\\"s/ /\\n/g\\\" |egrep \\\"${pwmo}\\\" |sed -e \\\"s/.*=//g\\\"`\"", "echo \" MINPWM=`echo $MINPWM |sed -e \\\"s/ /\\n/g\\\" |egrep \\\"${pwmo}\\\" |sed -e \\\"s/.*=//g\\\"`\"", "echo \" MAXPWM=`echo $MAXPWM |sed -e \\\"s/ /\\n/g\\\" |egrep \\\"${pwmo}\\\" |sed -e \\\"s/.*=//g\\\"`\"", "done", "echo ;;", "", "fi", "echo", "echo 'Enter the low temperature ( C)'", "echo -n \" at which the fan should be switched off ($DEFMINTEMP): \"", "echo 'Enter the low temperature ( degree C)'", "echo -n \" below which the fan should spin at minimum speed ($DEFMINTEMP): \"", "read XMT", "if [ \"$XMT\" = \"\" ]", "", "fi", "echo", "echo 'Enter the high temperature ( C)'", "echo -n \" at which the fan should be switched to full speed ($DEFMAXTEMP): \"", "echo 'Enter the high temperature ( degree C)'", "echo -n \" over which the fan should spin at maximum speed ($DEFMAXTEMP): \"", "read XMT", "if [ \"$XMT\" = \"\" ]", "", "else", "MINSTOP=\"`echo $MINSTOP | sed -e \\\"s/${pwmsed}[^ ]* *//g\\\"` ${pwms}=${XMV}\"", "fi", "echo", "echo \"Enter the PWM value (0-$XMV) to use when the temperature\"", "echo -n \"is below the low temperature limit (0): \"", "read XMINP", "if [ -n \"$XMINP\" ]", "then", "if [ \"$MINPWM\" = \"\" ]", "then", "MINPWM=\"${pwms}=${XMINP}\"", "else", "MINPWM=\"`echo $MINPWM | sed -e \\\"s/${pwmsed}[^ ]* *//g\\\"` ${pwms}=${XMINP}\"", "fi", "fi", "echo", "echo \"Enter the PWM value ($XMV-$MAX) to use when the temperature\"", "echo -n \"is over the high temperature limit ($MAX): \"", "read XMAXP", "if [ -n \"$XMAXP\" ]", "then", "if [ \"$MAXPWM\" = \"\" ]", "then", "MAXPWM=\"${pwms}=${XMAXP}\"", "else", "MAXPWM=\"`echo $MAXPWM | sed -e \\\"s/${pwmsed}[^ ]* *//g\\\"` ${pwms}=${XMAXP}\"", "fi", "fi", "echo"]], "pageTitle": "Changeset 4442 \u2013 lm-sensors", "title": "", "url": "http://www.lm-sensors.org/changeset/4442", "hasHeader": true, "headerPosition": "MIXED", "tableType": "RELATION", "tableNum": 4, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990603.54/warc/CC-MAIN-20150728002310-00013-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 561871708, "recordOffset": 561855737, "tableOrientation": "HORIZONTAL", "textBeforeTable": "lm-sensors/branches/lm-sensors-3.0.0/CHANGES Removed Added Unmodified Legend: prog/pwm/pwmconfig (modified) (9 diffs) prog/pwm/fancontrol.8 (modified) (5 diffs) prog/pwm/fancontrol (modified) (9 diffs) doc/fancontrol.txt (modified) (5 diffs) CHANGES (modified) (1 diff) 5 modified Files: lm-sensors/branches/lm-sensors-3.0.0 Location: fancontrol: * Check for configuration file validity fancontrol and pwmconfig: * Support optional min and max PWM values Documentation updated accordingly. Message: khali Author: 8 years ago) 2007-06-12 13:37:19 ( Timestamp:", "textAfterTable": "\u2026 \u2026 \u00a0 83 119 fancontrol first reads its configuration, writes it to arrays and loops its\u00a0 84 120 main function.\u00a0 This function gets the temperatures and fanspeeds from\u00a0 85 \u00a0 lm_sensors proc files and calculates new speeds depending on temperature\u00a0 \u00a0 121 kernel driver files and calculates new speeds depending on temperature\u00a0 86 122 changes, but only if the temp is between MINTEMP and MAXTEMP. After that, the\u00a0 87 123 new values are written to the pwm outputs.\u00a0 Currently the speed increases\u00a0 lm-sensors/branches/lm-sensors-3.0.0/prog/pwm/fancontrol r4441 r4442 \u00a0 3 3 # Simple script implementing a temperature dependent fan speed control\u00a0 4 4 #\u00a0 5 \u00a0 # Version 0.6 5\u00a0 \u00a0 5 # Version 0.6 6\u00a0 6 6 #\u00a0 7 7 # Usage: fancontrol [CONFIGFILE]\u00a0", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}