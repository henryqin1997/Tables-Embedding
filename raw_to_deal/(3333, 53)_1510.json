{"relation": [["Value no.", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], ["Meaning", "Revision Level", "Controlled Early Classmark Sending", "A5/1 Encryption algorithm", "RF Power capability", "Pseudo-synchronisation capability", "SS Screening Indicator", "SMS capability", "Frequency capability", "Classmark 3 options", "CM Service Prompt", "A5/3 Encryption algorithm", "A5/2 Encryption algorithm"], ["Remarks", "", "1 means enabled", "0 means available", "", "1 means present", "", "", "", "1 means supported", "1 means supported", "1 means available", "1 means available"]], "pageTitle": "Neo 1973 and Neo FreeRunner gsm modem - Openmoko", "title": "", "url": "http://wiki.openmoko.org/index.php?title=Neo_1973_and_Neo_FreeRunner_gsm_modem&oldid=68779", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 22, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987228.91/warc/CC-MAIN-20150728002307-00223-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 256462679, "recordOffset": 256428540, "tableOrientation": "HORIZONTAL", "TableContextTimeStampBeforeTable": "{231=This page is about the Neo1973 and Neo FreeRunner GSM Modem, based on the Ti Calypso chipset.}", "TableContextTimeStampAfterTable": "{48707=Upgrading the modem's firmware is technically possible but no proper software is currently legally available to users outside Openmoko staff. [edit jOERG 2009-04-02] There's FLUID software and GSM-FW-images as well as a uSD-image for automatic update (this GTA02 for now) now. See GSM/Flashing, 43273=configure the sidetone level for voice calls generated inside the GSM Modem. This should normally be off, since the sidetone in GTA01/GTA02 is generated inside the the wolfson audio codec., 21562=Notice the 1800 and 1900 bands have the same channel ids and nearly the same algorithm with a different starting point., 45386=During that time, the Neo1973 Application Processor (s3c24xx) is suspended, i.e. not powered at all. The SDRAM is in self-refresh mode., 28821=My Neo1973 reports:, 57839=Issue appropriate AT%Nxxxx command to enable AEC (Echo Cancellation) in calypso. Has to be done per-call as it's not \"sticky\" (=after modem-powerup/init and after every call). Recent GSM-handling-daemons (as of Apr 2009) tend to finally implement this function., 40796=Adaptive Multi-Rate Speech Codec}", "textBeforeTable": "libgsmd-tool is less functional than the direct raw connection to the modem. If you connect directly (via cu) you must `chown uucp.uucp /dev/ttySAC0` first since cu is picky about permissions. To send commands to the GSM modem, you may use cu -l /dev/ttySAC0 or use gsmd and libgsmd-tool for a less direct method. Sending Commands AT command interface 3.5 Eliminating echo on the non-neo end (far end) of phone calls 3.4 Powering Off the GSM Modem 3.3 Resetting the GSM Modem 3.2.2 Avoiding RTSCTS Lockup 3.2.1 Avoiding Infinite Echos 3.2 The Power-On Sequence 3.1 GSM Modem Connections 3 Power On, Power Off, and Reset of the GTA01 GSM Modem 2.3 Software implementation 2.2 Logic for problem solution 2.1 Problem description 2 Wakeup of CPU from GSM Modem 1.4.3 AT@AUL 1.4.2 AT@ST 1.4.1 AT@POFF 1.4", "textAfterTable": "This command is not listed in AT+CLAC output but it is triggered by any input that starts with AT%A except AT%ALS (Alternative Line Service) and AT%ATR, which are other proprietary AT commands. So for example AT%ABCD,HELLO will also run this commands. On my Neo modem it prints a line containing nine values of the form ADC <number> = <value>: AT%A EXT: I ADC 0 = e19, ADC 1 = 0, ADC 2 = d, ADC 3 = 6ea, ADC 4 = a25, ADC 5 = 9fc, ADC 6 = 96d, ADC 7 = 0, ADC 8 = 6 It would seem there's an ADC (analog-to-digital converter) module in the modem with nine input lines connected to it and the values on these lines are reported by this command in hexadecimal format. The values change over time. Inputs 1 and 7 always show zero on my modem, input 1 value changes slightly (+/- 20), while values on inputs 3, 4, 5, 6 and 8 change seemingly randomly in the range 0x000 - 0xfff (it would seem the chip is 12-bit). AT%NRG The AT%NRG (Network registration and service selection) is an expansion of the AT+COPS command. It allows specifying the service state of the registration, in addition to AT+COPS functionality. It doesn't however allow listing all present operators (use AT+COPS for this). AT%EM Execution of Engineering Mode commands. Allows viewing the information accessible to the modem but not", "hasKeyColumn": true, "keyColumnIndex": 1, "headerRowIndex": 0}