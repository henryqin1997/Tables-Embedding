{"relation": [["Variable name", "public_functions, protected_functions, private_functions", "public_slots, protected_slots, private_slots", "signals", "public_members, protected_members, private_members", "needs_qobject_macro", "included_files"], ["Type", "FunctionDescriptionList", "FunctionDescriptionList", "FunctionDescriptionList", "VariableDescriptionList", "bool", "StringList"], ["Description", "Class functions grouped by access modifiers. These lists do not include slots.", "Qt slots grouped by access modifiers", "All Qt signals in the new class", "Data members grouped by access modifiers", "true if the class has at least one signal or slot, false otherwise", "List of headers files that need to be included. This variable lists the missing include files for base classes."]], "pageTitle": "Difference between revisions of \"Projects/KDevelop4/File template specification\" - KDE TechBase", "title": "", "url": "https://techbase.kde.org/index.php?title=Projects/KDevelop4/File_template_specification&diff=cur&oldid=74731", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 5, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042985140.15/warc/CC-MAIN-20150728002305-00335-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 895409703, "recordOffset": 895388148, "tableOrientation": "HORIZONTAL", "textBeforeTable": "The following variables are passed to all templates, regardless of their type [edit] Generic [edit] Variables The description file above results in a dialog page such as this OutputFile is the suggested output file name. The actual name can be set by the user, but this is the default value. It will be converted to lowercase if needed, so don't do in here. File is the path to the input file within the template archive Name is the user visible file name. It can be translated. The Files entry specifies template output files. It is a list of strings, where each element is the same as a name of a group in the description file. The corresponding group has three required entries [edit] Output files BaseClasses=object ; Example for a Python new-style class BaseClasses=public KDevelop::IPlugin,public KDevelop::IBasicVersionControl ; Example for a KDevelop plugin that implements an interface BaseClasses=public QObject ; Example for a Qt object  A class template description file may also contain an entry", "textAfterTable": "name String Class name without namespaces Example identifier String The full identifier of the new class, which is composed of namespaces and class name MyProject::Utilities::Example namespaces StringList List of nested namespaces in which the class is declared [MyProject, Utilities] description ClassDescription An object containing the class name, base classes, functions and members baseClasses InheritanceDescriptionList All direct base classes of the new class, containing both the inheritance type and the base class name. functions FunctionDescriptionList List of all the functions in the new class members VariableDescriptionList List of all the member variables in the new class The variables which are passed to class templates are also described in the TemplateClassGenerator API documentation. [edit] C++ Specific variables Templates for classes in C++ may make use of some additional variables provided by the language support plugin. They cover finding include files and grouping class functions and members by access specifiers. Variable name Type Description public_functions, protected_functions, private_functions FunctionDescriptionList Class functions grouped by access modifiers. These lists do not include slots. public_slots, protected_slots, private_slots", "hasKeyColumn": true, "keyColumnIndex": 1, "headerRowIndex": 0}