{"relation": [["XFA Object", "Button", "Check Box", "Circle", "Content Area", "Date Field", "Date/Time Field", "Decimal Field", "Drop-down List", "Email Submit Button", "Image Field", "HTTP Submit Button", "Image", "Line", "List Box", "Numeric Field", "Password Field", "Print Button", "Radio Button", "Rectangle", "Reset Button", "Signature Field", "Subform", "Table", "Text Field", "Text", "Time Field"], ["Class Selectors in Html div", "field, buttonfield", "field, checkboxfield", "draw, arc", "contentarea", "field, datefield", "field, datetimefield", "field, numericfield", "field, choicelistfield", "field, buttonfield", "field, imagefield", "field, buttonfield", "draw, image", "draw, line", "field, choicelistfield", "field, numericfield", "field, passwordfield", "field, buttonfield", "field, radiofield", "draw, rectangle", "field, buttonfield", "field, signaturefield", "subform", "subform", "field, textfield", "draw, text", "field, timefield"]], "pageTitle": "18 | March | 2013 | XFA@Mobile", "title": "", "url": "http://blogs.adobe.com/foxes/2013/03/18/", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 0, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042992543.60/warc/CC-MAIN-20150728002312-00035-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 31513447, "recordOffset": 31498477, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{3786=Copyright \u00a9 2015 Adobe Systems Incorporated. All rights reserved.}", "textBeforeTable": "All set for customizing the individual html elements of Mobile Form, well, you need to know what all class selectors are applied on each div element. Mobile Form first adds a class for type of objects like subform, field, draw, area etc, then subtype of object like if it a field then what type of field: textfield, choicelist etc then the name of the object. You will find these 3 class selectors on each and every html div element corresponding to XFA objects. Here is the complete list: data-xfamodel: This is again for internal usage. Mobile Form keeps xfa form specific data in this data attribute. One should not temper with this to ensure smooth processing. style: This is again for internal usage. XFA form specific layout styles are applied on the element using this attribute. id: This is for internal usage. There is no guarantee for getting same id all the time. Anybody shouldn\u2019t use it for customization. class: This is the attribute that should be used for customization. Mobile Form generates many different class selectors based on the various attributes of XFA object. One can use these class selectors to specify styles on the objects. As mentioned earlier, for each xfa object, Mobile Form will have a corresponding div. Every div has, in general, 4 attributes: Generally, Mobile Form generates an html <div> element for every object of XFA form maintaining the same hierarchical structure.", "textAfterTable": "Besides the above class selectors, Mobile Form adds the name of the object as a class selector also. This is very useful if you want to apply some customizations to a particular field or draw element. I will now backup a bit and describe how Mobile Form generates an html form from an XFA Form. The initial html snippet generated by Mobile Form looks like the following with all the jsp variables <%=@@variables@@%> expanded into encoded html strings, as soon as you open any form in the browser: 1 2 3 4 5 6 7 8 9 10 11 <form id=\"lcforms_xfaform_container\" action=\"/lc/content/xfaforms/submission/default\" enctype=\"application/x-www-form-urlencoded\" method=\"post\" target=\"_self\"> <div class=\"formLoading\" id=\"formLoadingDiv\" data-xfadom=\"&lt;%=formDom%&gt;\" data-xfahtmldom=\"&lt;%=firstpagedom%&gt;\" data-xfaresthtmldom=\"&lt;%=resthtmldom%&gt;\" data-xfahiddenobjdom=\"&lt;%=hiddenObjDom%&gt;\" data-xfamergeddom=\"&lt;%=mergedFormDom%&gt;\" data-xfalocaleset=\"&lt;%=localeset%&gt;\" data-internalcss=\"&lt;%=internalcss%&gt;\" data-xfarendercontext=\"&lt;%=renderContext%&gt;\"> \u00a0 Loading... \u00a0 <script type=\"text/javascript\"> _initializeXfaLoading(); </script> \u00a0 </div> </form> Here formAction is the submitUrl specified in the request parameter. For detail on the request parameters refer Mobile Form. The <div> at line 2 contains all the data required to show a form. The _initializeXfaLoading() method of xfa runtime javascript generates the actual form while loading which will look like following: 1 2 3 <form id=\"lcforms_xfaform_container\" enctype=\"application/x-www-form-urlencoded\" method=\"post\" target=\"_self\"> <div class=\"xfaform form1\" role=\"form\" data-xfamodel=\"{}\"><!-- form content goes here --></div> </form> Now let\u2019s see how Mobile Form represents individual XFA Objects into Html objects. For draw elements, Mobile Form uses SVG.", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}