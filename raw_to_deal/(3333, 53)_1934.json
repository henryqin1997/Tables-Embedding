{"relation": [["Option Name", "cqp Constant quantizer mode.", "crf Constant quality mode (also known as constant ratefactor).", "qmin Minimum quantizer.", "qmax Maximum quantizer.", "qdiff Set max QP step.", "bt Allowed variance of average bitrate.", "i_qfactor Qscale difference between I-frames and P-frames.", "b_qfactor Qscale difference between P-frames and B-frames.", "chromaoffset QP difference between chroma and luma.", "pass", "rc_eq Ratecontrol equation.", "qcomp QP curve compression: 0.0 => CBR, 1.0 => CQP.", "complexityblur Reduce fluctuations in QP (before curve compression).", "qblur Reduce fluctuations in QP (after curve compression)."], ["Allowed Values", "Integer", "Float", "Integer", "Integer", "Integer", "Integer", "Float", "Float", "Integer", "1, 2, 3", "String", "Float", "Float", "Float"], ["Default Values", "None", "None", "10", "50", "4", "None", "0.71", "None", "None", "None", "blurCplx^(1-qComp)", "0.60", "20.0", "0.5"]], "pageTitle": "Complete API Documentation - Encoding.com", "title": "", "url": "http://api.encoding.com/", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 29, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988511.77/warc/CC-MAIN-20150728002308-00291-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 10670031, "recordOffset": 10613731, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{34356=* Video codec settings, 72229=All: WxH, where W and N are any even integers. 3gp (h263): 128x96, 176x144, 352x288, 704x576, 1408x1152 zune: 320x180, 320x240 vp6: WxH, where W and N are multiple of 16, 214297=cea-608 \u2014 Closed Captions would be muxed in video as cea-608 track (works only with video codec libx264), 55961=You can specify several source files within the same API request. All of them will be combined to one file (in sequential order) during the encoding process. You can use different source URLs (HTTP, FTP, S3, CloudFiles) with different media properties (format, frame size, bitrate, codec, etc.) Read more., 66818=If you choose the vp6 codec for flv output, you will have fewer parameter options than if you use the vp6_flix output (see below) and therefore, your XML query will differ:, 72493=mxf: 720x480, 960x720, 1280x720, 1280x1080, 1440x1080, 1920x1080 Custom: To match your source aspect ratio, set X value to zero and Y value to your desired height. For example, 0x360 or 0x480., 179743=With this feature, you can combine multiple source video files into one file. To use this feature via the User Interface, you can add multiple video sources in the \"Add Media\" section and they will automatically combine into one file (in sequential order) during the encoding process. To utilize this concatenation feature via the API, you should use several <source> elements in your XML request which will be added sequentially during the encoding process. In addition, you can use different source video URLs / locations (HTTP, FTP, S3, CloudFiles) along with different media properties for each source video (format, frame size, bitrate, codec, etc...). [Read more] For example:, 85197=Audio codec}", "textBeforeTable": "The action to be performed in the API request. Action A user's unique authentication key string. Created automatically when a user is created and can be regenerated at anytime in the My Account tab of the Client Interface. UserKey A unique user identifier. This number can be found in the My Account tab of the Client Interface. UserID Authentication To send API requests to Encoding.com, please send HTTP(S) post requests to: http(s)://manage.encoding.com All client requests and server responses use the XML or JSON format. Clients must send the HTTP(S) POST request with a single parameter named `xml` or `json` accordingly. The server response will be a normal XML document or a JSON string. End Point API Main Fields End Function HTTPPost = oHTTP.responseText oHTTP.send sRequest oHTTP.setRequestHeader \"Content-Length\", Len(sRequest) oHTTP.setRequestHeader \"Content-Type\", \"application/x-www-form-urlencoded\" oHTTP.open \"POST\", sUrl,false Set oHTTP = CreateObject(\"Microsoft.XMLHTTP\") Function HTTPPost(sUrl, sRequest) result = HTTPPost(sUrl, sRequest) sRequest = \"xml=\" & xml sUrl = \"http://manage.encoding.com\" xmlxml = xml & \"</query>\" & VbCrLf xmlxml = xml & \"<action>\" & \"GetMediaList\" & \"</action>\" & VbCrLf xmlxml = xml & \"<userkey>\" & userKey & \"</userkey>\" & VbCrLf xmlxml = xml & \"<userid>\" & userID & \"</userid>\" & VbCrLf xmlxml = xml & \"<query>\" & VbCrLf xml = \"<?xml version=\"'1.0'\"?>\"", "textAfterTable": "HTTP http://[user[:password]@]hostname[:port]/[path]/[filename] Parameter \"?multithread=1\" in source URL turns on multithread download FTP / SFTP ftp://[user[:password]@]hostname[:port]/[path]/[filename][?passive=yes] sftp://[user[:password]@]hostname[:port]/[path]/[filename] Note: Adding ?passive=yes to the FTP URL forces downloader/uploader use Passive Mode for FTP transfer. Also, you can specify ?passive=no (the default) explicitly. It will take the same effect that if you don't specify this parameter at all. Parameter \"?multithread=1\" in source URL turns on multithread download Parameter \"?disable-epsv\" in source URL disables extended passive mode Amazon Web Services (S3) http://[bucket].s3.amazonaws.com/[filename] http://[AWS_KEY:AWS_SECRET@][bucket].s3.amazonaws.com/[filename] \u2014 If you don't specify an AWS key/secret, the object must have READ permission for AWS user 1a85ad8fea02b4d948b962948f69972a72da6bed800a7e9ca7d0b43dc61d5869 (or for all users). See Amazon S3 ACL for details. \u2014 If you need your S3 files to be accessed with your own AWS credentials, add your AWS key/secret to the URL. If you use the Access key and Secret key, they must be URL encoded. For example, if your Key and the Secret are: 1ZG3YAKJ8W0VOA9L7WT6lQT5MsQLirc8owb:SxX/9EhU4M+QarasFelQ0v2M First, we must URL encode the Secret as it contains special characters: ':','+' and '/'. The URL encoded Secret is now: lQT5MsQLirc8owb%3ASxX%2F9EhU4M%2BQarasFelQ0v2M You should NOT encode the colon between Key and Secret nor the '@' after them. So, the destination URL will be: http://1ZG3YAKJ8W0VOA9L7WT6:lQT5MsQLirc8owb%3ASxX%2F9EhU4M%2BQarasFelQ0v2M@encode.video.s3.amazonaws.com/v/encoded/ Using specific S3 endpoints: To use specific endpoint replace 's3.amazonaws.com' in", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}