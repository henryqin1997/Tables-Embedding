{"relation": [["To operate on the...", "Deployment Plan", "Deployment Plan", "Module Descriptors", "Module Overrides", "Module Overrides", "Module Overrides", "Variables", "Variables", "Variables", "Variables", "Variables", "Variables", "Variable Assignment", "Variable Assignment", "Variable Assignment"], ["Use this method...", "DeploymentPlanBean getDeploymentPlan()", "void save() throws FileNotFoundException, ConfigurationException", "ModuleDescriptorBean createModuleDescriptor(String uri, String moduleOverrideName)", "ModuleOverrideBean[] getModuleOverride(String name)", "ModuleOverrideBean[] getModuleOverrides()", "void showModuleOverrides()", "VariableBean createVariable(String name, String value)", "void destroyVariable(String name)", "VariableBean getVariable(String name)", "VariableBean[] getVariables()", "void setVariableValue(String name, String value)", "void showVariables()", "VariableAssignmentBean createVariableAssignment(String name, String moduleOverrideName, String moduleDescriptorUri)", "void destroyVariableAssignment(String name, String moduleOverrideName, String moduleDescriptorName)", "VariableAssignmentBean getVariableAssignment(String name, String moduleOverrideName, String moduleDescriptorName)"], ["To...", "Return the DeploymentPlanBean for the current application.", "Saves the deployment plan to a file from which it was read.", "Create a ModuleDescriptorBean with the specified uri for the ModuleOverrideBean moduleOverrideName", "Return the ModuleOverrideBean name.", "Return all ModuleOverrideBean objects that are available in the deployment plan.", "Prints all of the ModuleOverrideBean objects that are available in the deployment plan as name/type pairs.", "Create a VariableBean name with this specified value that can override the value in the deployment plan.", "Destroy the VariableBean name.", "Return the VariableBean name.", "Return all VariableBean objects that are available in the deployment plan.", "Set the variable name to the specified value.", "Print all of the VariableBean objects in the deployment plan as name/value pairs.", "Create a VariableAssignmentBean for the ModuleDescriptorBean moduleDescriptorUri for the ModuleOverrideBean moduelOverrideName.", "Destroy the VariableAssignmentBean name for the ModuleDescriptorBean moduleOverrideName for the ModuleDescriptorBean moduleDescriptorName.", "Return the VariableAssignmentBean name for the ModuleDescriptorBean moduleOverrideName for the ModuleDescriptorBean moduleDescriptorName."]], "pageTitle": "WLST Deployment Objects - 11g Release 1 (10.3.6)", "title": "", "url": "http://docs.oracle.com/cd/E28271_01/web.1111/e13715/dep_obs.htm", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 4, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989507.42/warc/CC-MAIN-20150728002309-00236-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 72608039, "recordOffset": 72599837, "tableOrientation": "HORIZONTAL", "lastModified": "Thu, 20 Sep 2012 07:52:22 GMT", "textBeforeTable": "Table A-1 WLSTPlan Object Methods The following table describes the WLSTPlan object methods that you can use to operate on the deployment plan. The WLSTPlan object enables you to make changes to an application deployment plan after loading an application using the loadApplication command, as described in \"loadApplication\" in WebLogic Scripting Tool Command Reference. WLSTPlan Object WLSTProgress Object WLSTPlan Object The following sections describe the WLST deployment objects: A WLST Deployment Objects PDF \u00b7 Mobi \u00b7 ePub Next Previous Contact Us Contents", "textAfterTable": "WLSTProgress Object The WLSTProgress object enables you to check the status of an executed deployment command. The WLSTProgress object is returned by the following commands (refer to the associated command section in WebLogic Scripting Tool Command Reference for more information: deploy distributeApplication redeploy startApplication stopApplication updateApplication The following table describes the WLSTProgress object methods that you can use to check the status of the current deployment action. Table A-2 WLSTProgress Object Methods Use this method... To... String getCommandType() Return the deployment CommandType of this event.This command returns one of the following values: distribute, redeploy, start, stop, or undeploy.", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}