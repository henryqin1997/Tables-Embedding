{"relation": [["r10853", "115", "116", "117", "118", "119", "", "", "", "120", "121", "\u2026", "409", "410", "411", "", "412", "413", "\u2026", "433", "434", "435", "", "436", "437", "\u2026", "439", "440", "441", "442", "443", "444", "445", "446", "", "", "", "", "", "", "447", "448", "\u2026", "476", "477", "478", "", "479", "480", "\u2026", "1127", "1128", "1129", "", "1130", "1131"], ["r10914", "115", "116", "", "", "", "117", "118", "119", "120", "121", "\u2026", "409", "410", "", "411", "412", "413", "\u2026", "433", "434", "", "435", "436", "437", "\u2026", "439", "440", "", "", "", "", "", "", "441", "442", "443", "444", "445", "446", "447", "448", "\u2026", "476", "477", "", "478", "479", "480", "\u2026", "1127", "1128", "", "1129", "1130", "1131"], ["", "", "/// Possible options:", "/// - noMatrixTransforms: set the plugin to apply matrices into the mesh vertices (\"old behaviour\") instead of restoring them (\"new behaviour\"). You may use this option to avoid a few rounding errors.", "/// - checkForEspilonIdentityMatrices: if noMatrixTransforms is \\b not set, then consider \"almost identity\" matrices to be identity ones (in case of rounding errors).", "/// - restoreMatrixTransformsNoMeshes: makes an exception to the behaviour when 'noMatrixTransforms' is \\b not set for mesh instances. When a mesh instance has a transform on it, the reader creates a MatrixTransform above the Geode. If you don't want the hierarchy to be modified, then you can use this option to merge the transform into vertices.", "/// - noMatrixTransforms: set the plugin to apply matrices into the mesh vertices (\"old behaviour\") instead of restoring them (\"new behaviour\"). You may use this option to avoid a few rounding errors.", "/// - checkForEspilonIdentityMatrices: if noMatrixTransforms is \\b not set, then consider \"almost identity\" matrices to be identity ones (in case of rounding errors).", "/// - restoreMatrixTransformsNoMeshes: makes an exception to the behaviour when 'noMatrixTransforms' is \\b not set for mesh instances. When a mesh instance has a transform on it, the reader creates a MatrixTransform above the Geode. If you don't want the hierarchy to be modified, then you can use this option to merge the transform into vertices.", "class ReaderWriter3DS : public osgDB::ReaderWriter", "{", "", "Lib3dsMeshInstanceNode * object = (node->type == LIB3DS_NODE_MESH_INSTANCE) ? reinterpret_cast(node) : NULL;", "Lib3dsMesh * mesh = lib3ds_file_mesh_for_node(f,node);", "assert(!(mesh && !object)); // Node must be a LIB3DS_NODE_MESH_INSTANCE if a mesh exists", "assert(!(mesh && !object)); // Node must be a LIB3DS_NODE_MESH_INSTANCE if a mesh exists", "", "// Retreive LOCAL transform", "", "// There can be a transform directly on a mesh instance (= as if a osg::MatrixTransform and a osg::Geode were merged together) in object->pos/rot/scl", "if (!pivoted) {", "meshMat = osg::Matrix::inverse(copyLib3dsMatrixToOsgMatrix(mesh->matrix));", "meshMat = osg::Matrix::inverse(copyLib3dsMatrixToOsgMatrix(mesh->matrix));", "} else {", "meshMat = osg::Matrix::inverse(copyLib3dsMatrixToOsgMatrix(mesh->matrix)) * osg::Matrix::translate(-pivot);", "", "}", "else {", "if (pivoted) {", "meshMat = osg::Matrix::inverse(copyLib3dsMatrixToOsgMatrix(mesh->matrix)) * osg::Matrix::translate(-pivot) * copyLib3dsMatrixToOsgMatrix(node->matrix);", "} else {", "meshMat = osg::Matrix::inverse(copyLib3dsMatrixToOsgMatrix(mesh->matrix)) * copyLib3dsMatrixToOsgMatrix(node->matrix);", "}", "osgNodeMatrix = osg::Matrix::identity(); // Not sure it's useful, but it's harmless ;)", "if (pivoted) {", "meshMat = osg::Matrix::inverse(copyLib3dsMatrixToOsgMatrix(mesh->matrix)) * osg::Matrix::translate(-pivot) * copyLib3dsMatrixToOsgMatrix(node->matrix);", "} else {", "meshMat = osg::Matrix::inverse(copyLib3dsMatrixToOsgMatrix(mesh->matrix)) * copyLib3dsMatrixToOsgMatrix(node->matrix);", "}", "osgNodeMatrix = osg::Matrix::identity(); // Not sure it's useful, but it's harmless ;)", "}", "}", "", "}", "} else {", "assert(node->childs == NULL); // Else we must have a group to put childs into", "assert(node->childs == NULL); // Else we must have a group to put childs into", "}", "", "", "return false;", "w.writeMaterials();", "return true; //w.good();", "return true; //w.good();", "}", "#endif // ENABLE_3DS_WRITER"]], "pageTitle": "Changeset 10914 \u2013 osg", "title": "", "url": "http://trac.openscenegraph.org/projects/osg/changeset/10914", "hasHeader": true, "headerPosition": "MIXED", "tableType": "RELATION", "tableNum": 0, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988511.77/warc/CC-MAIN-20150728002308-00067-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 240231202, "recordOffset": 240223000, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{16594=Copyright, 2007 OSG Community. Kindly hosted by AI2, Universidad Politecnica de Valencia, Spain. www.ai2.upv.es}", "textBeforeTable": "OpenSceneGraph/trunk/src/osgPlugins/3ds/ReaderWriter3DS.cpp Removed Added Unmodified Legend: OpenSceneGraph/trunk/src/osgPlugins/3ds/ReaderWriter3DS.cpp (modified) (6 diffs) 1 modified Files: Fixed indentation Message: robert Author: 6 years ago) 01/05/10 12:10:21 ( Timestamp: White space changes Case changes Blank lines Ignore: lines around each change Show inline side by side View differences Changeset 10914 Next Changeset \u2192 \u2190 Previous Changeset Context Navigation", "textAfterTable": "Download in other formats: Unified Diff Zip Archive Powered by Trac 0.11 By Edgewall Software. Copyright, 2007 OSG Community. Kindly hosted by AI2, Universidad Politecnica de Valencia, Spain. www.ai2.upv.es", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}