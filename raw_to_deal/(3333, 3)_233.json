{"relation": [["Subprogram", "SDO_UTIL.APPEND", "SDO_UTIL.CIRCLE_POLYGON", "SDO_UTIL.CONCAT_LINES", "SDO_UTIL.CONVERT_UNIT", "SDO_UTIL.ELLIPSE_POLYGON", "SDO_UTIL.EXTRACT", "SDO_UTIL.GETNUMELEM", "SDO_UTIL.GETNUMVERTICES", "SDO_UTIL.GETVERTICES", "SDO_UTIL.INITIALIZE_INDEXES_FOR_TTS", "SDO_UTIL.POINT_AT_BEARING", "SDO_UTIL.POLYGONTOLINE", "SDO_UTIL.PREPARE_FOR_TTS", "SDO_UTIL.REMOVE_DUPLICATE_VERTICES", "SDO_UTIL.REVERSE_LINESTRING", "SDO_UTIL.SIMPLIFY", "SDO_UTIL.TO_GMLGEOMETRY"], ["Description", "Appends one geometry to another geometry to create a new geometry.", "Returns the polygon geometry that approximates and is covered by a specified circle.", "Concatenates two line or multiline two-dimensional geometries to create a new geometry.", "Converts values from one angle, area, or distance unit of measure to another.", "Returns the polygon geometry that approximates and is covered by a specified ellipse.", "Returns the geometry that represents a specified element (and optionally a ring) of the input geometry.", "Returns the number of elements in the input geometry.", "Returns the number of vertices in the input geometry.", "Returns the coordinates of the vertices of the input geometry.", "Initializes all spatial indexes in a tablespace that was transported to another database.", "Returns a point geometry that is at the specified distance and bearing from the start point.", "Converts all polygon-type elements in a geometry to line-type elements, and sets the SDO_GTYPE value accordingly.", "Prepares a tablespace to be transported to another database, so that spatial indexes will be preserved during the transport operation.", "Removes duplicate (redundant) vertices from a geometry.", "Returns a line string geometry with the vertices of the input geometry in reverse order.", "Simplifies the input geometry, based on a threshold value, using the Douglas-Peucker algorithm.", "Converts a Spatial geometry object to a geography markup language (GML 2.0) fragment based on the geometry types defined in the Open GIS geometry.xsd schema document."]], "pageTitle": "19 Spatial Utility Subprograms", "title": "", "url": "http://web.stanford.edu/dept/itss/docs/oracle/10g/appdev.101/b10826/sdo_util.htm", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 4, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981921.1/warc/CC-MAIN-20150728002301-00002-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 254240615, "recordOffset": 254221959, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{65815=Because the SDO_GTYPE value of the input geometry must be 2002, this function cannot be used to reverse LRS geometries. To reverse an LRS geometry, use the SDO_LRS.REVERSE_GEOMETRY function, which is described in Chapter 16., 65412=Line string geometry whose vertices are to be reversed in the output geometry. The SDO_GTYPE value of the input geometry must be 2002. (Section 2.2.1 explains SDO_GTYPE values.), 30502=Number of the element in the geometry: 1 for the first element, 2 for the second element, and so on. Geometries with SDO_GTYPE values (explained in Section 2.2.1) ending in 1, 2, or 3 have one element; geometries with SDO_TYPE values ending in 4, 5, 6, or 7 can have more than one element. For example, a multipolygon with an SDO_GTYPE of 2007 might contain three elements (polygons)., 16544=Each input geometry must be a two-dimensional line or multiline geometry (that is, the SDO_GTYPE value must be 2002 or 2006). This function is not supported for LRS geometries. To concatenate LRS geometric segments, use the SDO_LRS.CONCATENATE_GEOM_SEGMENTS function (described in Chapter 16).}", "lastModified": "Mon, 17 May 2004 17:04:24 GMT", "textBeforeTable": "Table 19-1 Spatial Utility Subprograms This chapter contains descriptions of the spatial utility subprograms shown in Table 19-1. 19 Spatial Utility Subprograms View PDF Next Previous Feedback Master\u00a0Index Index Contents Book List Home Oracle\u00ae Spatial User's Guide and Reference 10g Release 1 (10.1) Part Number B10826-01", "textAfterTable": "SDO_UTIL.APPEND Format SDO_UTIL.APPEND( \u00a0\u00a0\u00a0\u00a0\u00a0geom1 IN SDO_GEOMETRY, \u00a0\u00a0\u00a0\u00a0\u00a0geom2 IN SDO_GEOMETRY \u00a0\u00a0\u00a0\u00a0\u00a0) RETURN SDO_GEOMETRY; Description Appends one geometry to another geometry to create a new geometry. Parameters geom1 Geometry object to which geom2 is to be appended. geom2 Geometry object to append to geom1. Usage Notes This function should be used only on geometries that do not have any spatial interaction (that is, on disjoint objects). If the input geometries are not disjoint, the resulting geometry might be invalid. This function does not perform a union operation or any other computational geometry operation. To perform a union operation, use the SDO_GEOM.SDO_UNION function, which is described in Chapter 13. The APPEND function executes faster than the SDO_GEOM.SDO_UNION function. The geometry type (SDO_GTYPE value) of the resulting geometry reflects the types of the input geometries and the append operation. For example, if the input geometries are two-dimensional polygons (SDO_GTYPE = 2003), the resulting geometry is a two-dimensional multipolygon (SDO_GTYPE = 2007). An exception is raised if geom1 and geom2", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}