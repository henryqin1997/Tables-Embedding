{"relation": [["Attribute Name", "target", "real_board", "inherit_from", "description", "TOOL_PATH", "ARCH", "CROSS_COMPILE", "INSTALL_PATH", "KERNEL_SRC", "KBUILD_OUTPUT", "kimage", "kinstall_cmd", "get_config_cmd", "get_kernel_cmd", "copy_to_cmd", "copy_from_cmd", "rm_cmd", "ipaddr", "reboot_cmd", "reset_cmd", "console_cmd", "login_cmd", "target_bin", "fsbuild_cmd", "fsinstall_cmd", "run_cmd"], ["Meaning of value", "Short (one-word) name of the target", "\"Real\" name for the target board", "Target to inherit attributes from.", "A description of the target board. Usually multi-line", "Path where toolchain tools are located.", "Architecture specifier for the kernel build (eg. arm, ppc, i386)", "Toolchain prefix used with kernel builds (eg. arm-sony-linux- )", "Place where kernel is installed", "Default name to use for kernel source directory", "Default directory for kernel build output", "Name of the kernel image file (eg. bzImage, uImage)", "Command(s) to install the kernel image.", "Command(s) to put a default kernel configuration file (.config) in $KBUILD_OUTPUT", "Command(s) to put the kernel source code in $KERNEL_SRC", "Command(s) to copy files from host to target", "Command(s) to copy files from target to host", "Command(s) to remove files from target", "Target IP address", "Command(s) to reboot the target, from the host", "Command(s) to reset the target, from the host", "Command(s) to start an interactive console for the target.", "Command(s) to start an interactive login session with the target", "Directory on target where binary files are located", "Command(s) to build a new filesystem image for the target", "Command(s) to install a new filesystem imgae for the target", "Command to execute a command on the target"], ["Notes", "Names starting with '.' are hidden from 'ttc list'", "This is used if the multiple target configurations are used with a single physical (real) target board.", "Used to reference a common block of attributes.", "This field is used for humans to let them know the attributes of the board.", "This appended to the PATH env. variable.", ".", ".", ".", ".", ".", ".", "Assumes that the current working dir is the top directory of the kernel source.", ".", ".", "Should reference $src and $dest", "Should reference $src and $dest", "This command should reference $dest as the location on the target of the file(s) to be removed.", ".", "This should power-cycle of the board, producing a cold boot of the hardware.", "This is intended to be a soft reset of the hardware.", "This is usually something like minicom or screen.", "This is usually telnet, ssh or 'adb shell'. Usually, multiple login commands can be started at one time to a single target.", "This can be used with 'ttc cp' to put executable files in a place on the target where they can be found using the target's PATH variable.", ".", ".", "."]], "pageTitle": "Difference between revisions of \"Ttc Program Usage Guide\" - eLinux.org", "title": "", "url": "http://elinux.org/index.php?title=Ttc_Program_Usage_Guide&oldid=312476&diff=prev", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 3, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042987171.38/warc/CC-MAIN-20150728002307-00219-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 88353271, "recordOffset": 88325533, "tableOrientation": "HORIZONTAL", "textBeforeTable": "Download the tarball from one of the following links and follow the instructions in the README (and in this document). Downloading 'ttc' These things must be set up on the host machine, and then the ttc configuration file must be written to take into account the specific settings for each target connected to the host. the method of installing files to the file system of the target the method of rebooting the target board the method of installing the kernel on the target board the menu location of kernel configuration options the version and location of the Linux kernel source code the location and name of the cross-compiler (and other toolchain programs) The things that ttc hides, include things such as: The most important aspect of ttc is that it hides certain operational details from the user, so that common commands can be used to perform operations related to an embedded development board. Theory of operation In order to use ttc on your system, you need to install the software and edit the configuration file to match your host/target setup. You may also need to install various helper scripts, referenced in your ttc.conf file, in your PATH. In reality, ttc is a rather thin wrapper program which sets up the environment and performs some common operations. The bulk of the \"intelligence\" (how to do the actual operations) is contained in the configuration file", "textAfterTable": "Run a command on the target, collecting it's output . set_config Set an individual config option assumes the current directory is top kernel source dir setenv Starts shell with environment for performing build and other operations . status Show status of target, including reservations. not implemented yet (currently only shows reservation, but not board status) vars Show information about environment vars used by 'ttc' . version Show version information and exit. . wait_for Wait for a condition to be true. command is executed on host (not on the target) Use cases Example 1: build and install a kernel and log on to the target to use it A normal sequence of operations for an interactive user of ttc would be: get a list of targets connected to this host select a target to work on, and set up the environment for it get the kernel sources for a build (optionally) apply patches to the kernel sources get a (default) kernel configuration for this target set specific configuration options build the kernel, and install it reboot the target with the new kernel (optionally) put additional files on the target access the target console and do work Here are the", "hasKeyColumn": true, "keyColumnIndex": 1, "headerRowIndex": 0}