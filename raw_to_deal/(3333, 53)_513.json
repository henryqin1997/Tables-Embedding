{"relation": [["r2", "14", "15", "", "16", "17", "\u2026", "118", "119", "120", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "121", "122", "\u2026", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "", "163", "164", "", "", "", "165", "166"], ["r6", "14", "15", "16", "17", "18", "\u2026", "119", "120", "", "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "135", "136", "137", "138", "139", "140", "141", "142", "143", "144", "145", "146", "147", "148", "149", "\u2026", "177", "178", "", "", "", "", "", "", "", "", "", "", "", "179", "180", "181", "182", "183", "184", "185", "186"], ["", "use Mungo::Request;", "use Mungo::Response;", "use HTML::Entities;", "", "use vars qw/$VERSION", "", "my %copy = %$self;", "my $page = bless \\%copy, $pkg;", "$page->content(@_);", "eval { $page->content(@_); };", "if($@) {", "my $error = $@;", "my $preamble = eval \"\\$${pkg}::Mungo_preamble;\";", "my $postamble = eval \"\\$${pkg}::Mungo_postamble;\";", "my $contents = eval \"\\$${pkg}::Mungo_contents;\";", "my ($line) = ($error =~ /line (\\d+)/m);", "die \"$error\\n\\n\".pretty_print_code($preamble, $contents, $postamble, $line);", "}", "}", "sub pretty_print_code {", "my ($preamble, $contents, $postamble, $line) = @_;", "my $outer_line = 1;", "my $inner_line = 1;", "my $rv = '';", "(my $numbered_preamble = $preamble) =~", "s/^/sprintf(\"[ %4d] \", $outer_line++)/emg;", "$rv .= qq^$numbered_preamble\\n^;", "(my $numbered_contents = $$contents) =~", "s/^/sprintf(\"[%s%4d] %4d: \", ($outer_line == $line)?'*':' ',", "$outer_line++, $inner_line++)/emg;", "$numbered_contents = HTML::Entities::encode($numbered_contents);", "$rv .= \"$numbered_contents\\n\";", "(my $numbered_postamble = $postamble) =~", "s/^/sprintf(\"[ %4d] \", $outer_line++)/emg;", "$rv .= qq^$numbered_postamble\\n\\n^;", "return $rv;", "}", "sub packagize {", "", "print \"ERROR:$@\\n\\n\";", "print \"PRE PARSE:\\n\";", "my $outer_line = 1;", "my $inner_line = 1;", "(my $numbered_preamble = $preamble) =~", "s/^/sprintf(\"[%4d] \", $outer_line++)/emg;", "print qq^$numbered_preamble\\n^;", "(my $numbered_contents = $$contents) =~", "s/^/sprintf(\"[%4d] %4d: \", $outer_line++, $inner_line++)/emg;", "print \"$numbered_contents\\n\";", "(my $numbered_postamble = $postamble) =~", "s/^/sprintf(\"[%4d] \", $outer_line++)/emg;", "print qq^$numbered_postamble\\n\\n^;", "print pretty_print_code($preamble, $contents, $postamble);", "return 0;", "}", "eval \"\\$${pkg}::Mungo_preamble = \\$preamble;\";", "eval \"\\$${pkg}::Mungo_postamble = \\$postamble;\";", "eval \"\\$${pkg}::Mungo_contents = \\$contents;\";", "return 1;", "}"]], "pageTitle": "Mungo - a lighter Apache::ASP, from OmniTI Labs ~ Changeset 6", "title": "", "url": "https://labs.omniti.com/labs/mungo/changeset/6", "hasHeader": true, "headerPosition": "MIXED", "tableType": "RELATION", "tableNum": 0, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042982013.25/warc/CC-MAIN-20150728002302-00195-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 864069747, "recordOffset": 864061545, "tableOrientation": "HORIZONTAL", "textBeforeTable": "trunk/lib/Mungo.pm Moved Copied Modified Removed Added Unmodified Legend: trunk/lib/Mungo/Response.pm (modified) (2\u00a0diffs) trunk/lib/Mungo.pm (modified) (3\u00a0diffs) Files: closes, #2 Message: jesus Author: 06/27/07 03:05:37 (8 years ago) Timestamp: White space changes Case changes Blank lines Ignore: lines around each change Show inline side by side View differences Changeset 6", "textAfterTable": "trunk/lib/Mungo/Response.pm r5 r6 \u00a0 23 23 \u00a0 my %core_data = (\u00a0 24 24 \u00a0 \u00a0 'Apache::Request' => $r,\u00a0 25 \u00a0 \u00a0 \u00a0 'ContentType' => $r->dir_config('MungoContentType') ||\u00a0 26 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0$r->content_type || 'text/html',\u00a0 \u00a0 25 \u00a0 \u00a0 'ContentType' => $r->dir_config('MungoContentType') || $r->content_type || 'text/html',\u00a0 27 26 \u00a0 \u00a0 # We don't set buffer here, we set it after it has been tied.\u00a0 28 27 \u00a0 \u00a0 # 'Buffer' => $r->dir_config('MungoBuffer') || 0,\u00a0 \u2026 \u2026 \u00a0 130 129 \u00a0 };\u00a0 131 130 \u00a0 if($@) {\u00a0 132 \u00a0 \u00a0 \u00a0 print \"<pre>Error: $@\\n\\n\".Carp::shortmess().\"\\n</pre>\\n\";;\u00a0 \u00a0 131 \u00a0 \u00a0 (my $error = HTML::Entities::encode(Carp::longmess())) =~ s/\\n/<br \\/>/gsm;\u00a0 \u00a0 132 \u00a0 \u00a0 print \"Error in Include($subject):<br />$@\\n\\n\".$error.\"\\n\\n\";;\u00a0 133 133 \u00a0 \u00a0 return undef;\u00a0 134 134 \u00a0 }\u00a0", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}