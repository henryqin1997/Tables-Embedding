{"relation": [["[out]", "[in,out]", "", "", "", ""], ["block", "address", "amount", "protectionMode", "pageSize", "pool"], ["- descriptor for the reserved memory, required for further operations with the memory", "- desired starting address of the region to allocate. If NULL, the system determines the appropriate location.On success, the actual allocated address is returned", "- the size of the region in bytes. For large pages, the size must be multiply of page size", "- the bit mask of PORT_VMEM_MODE_* flags", "- the desired size of the memory page; should contain PORT_VMEM_PAGESIZE_DEFAULT, PORT_VMEM_PAGESIZE_LARGE or the actual size in bytes", "- the auxiliary pool to allocate the descriptor data, etc"]], "pageTitle": "Inter-component Interfaces: Virtual memory support", "title": "", "url": "http://harmony.apache.org/subcomponents/drlvm/doxygen/intf/html/group__port__vmem.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 3, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042986451.45/warc/CC-MAIN-20150728002306-00269-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 104382010, "recordOffset": 104373808, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{17908=Genereated on Tue Mar 11 19:25:24 2008 by Doxygen., 17966=(c) Copyright 2005, 2008 The Apache Software Foundation or its licensors, as applicable.}", "lastModified": "Wed, 12 Mar 2008 19:38:33 GMT", "textBeforeTable": "Parameters: Reserves a continuous memory region in the virtual address space of the calling process. ) \u00a0 pool apr_pool_t *\u00a0 pageSize, size_t\u00a0 protectionMode, unsigned int\u00a0 amount, size_t\u00a0 address, void **\u00a0 block, port_vmem_t **\u00a0 ( apr_status_t port_vmem_reserve Function Documentation This is an incomplete type, the run-time instance should be obtained via port_vmem_reserve() call Virtual memory block descriptor. typedef struct port_vmem_t port_vmem_t Typedef Documentation Releases previously reserved virtual memory region as a whole. \u00a0 port_vmem_free (void *addr, size_t", "textAfterTable": "Returns: APR_SUCCESS if OK; otherwise, an error code. See also: port_vmem_page_sizes() apr_status_t port_vmem_commit ( void **\u00a0 address, size_t\u00a0 amount, port_vmem_t *\u00a0 block \u00a0 ) Commits (a part of) the previously reserved memory region. The allocated memory is initialized to zero. Parameters: [in,out]\u00a0 address\u00a0 - the starting address of the region to commit; the returned value may differ due to page alignment amount\u00a0 - the size of the region in bytes block\u00a0 - the descriptor to the reserved virtual memory Returns: APR_SUCCESS if OK; otherwise, an error code.", "hasKeyColumn": false, "keyColumnIndex": -1, "headerRowIndex": 0}