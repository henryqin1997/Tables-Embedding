{"relation": [["Constant Name", "ENT_COMPAT", "ENT_QUOTES", "ENT_NOQUOTES", "ENT_HTML401", "ENT_XML1", "ENT_XHTML", "ENT_HTML5"], ["Description", "Will convert double-quotes and leave single-quotes alone.", "Will convert both double and single quotes.", "Will leave both double and single quotes unconverted.", "Handle code as HTML 4.01.", "Handle code as XML 1.", "Handle code as XHTML.", "Handle code as HTML 5."]], "pageTitle": "PHP: html_entity_decode - Manual", "title": "Available flags constants", "url": "http://www.php.net/manual/ro/function.html-entity-decode.php", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 0, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042990112.50/warc/CC-MAIN-20150728002310-00275-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 647356263, "recordOffset": 647340005, "tableOrientation": "HORIZONTAL", "lastModified": "Mon, 03 Aug 2015 04:25:06 GMT", "textBeforeTable": "A bitmask of one or more of the following flags, which specify how to handle quotes and which document type to use. The default is ENT_COMPAT | ENT_HTML401. flags The input string. string Parametri More precisely, this function decodes all the entities (including all numeric entities) that a) are necessarily valid for the chosen document type \u2014 i.e., for XML, this function does not decode named entities that might be defined in some DTD \u2014 and b) whose character or characters are in the coded character set associated with the chosen encoding and are permitted in the chosen document type. All other entities are left as is. html_entity_decode() is the opposite of htmlentities() in that it converts all HTML entities in the string to their applicable characters. string $encoding = ini_get(\"default_charset\") ]] ) int $flags = ENT_COMPAT | ENT_HTML401 [, string $string [, html_entity_decode ( string Descrierea html_entity_decode \u2014 Convert all HTML entities to their applicable characters (PHP 4 >= 4.3.0, PHP 5) html_entity_decode Report a Bug Edit", "textAfterTable": "encoding Un argument op\u021bional ce define\u0219te codarea folosit\u0103 la convertirea caracterelor. Dac\u0103 este omis\u0103, valoarea implicit\u0103 a argumentului encoding variaz\u0103 \u00een dependen\u021b\u0103 de versiunea PHP utilizat\u0103. \u00cen PHP 5.6 \u0219i ulterior, valoarea op\u021biunii de configurare default_charset este utilizat\u0103 implicit. PHP 5.4 \u0219i 5.5 vor utiliza implicit UTF-8. Versiunile anterioare ale PHP utilizau ISO-8859-1. Cu toate c\u0103 acest argument este op\u021bional, tehnic vorbind, v\u0103 \u00eendemn\u0103m s\u0103 specifica\u021bi valoarea corect\u0103 pentru codul dvs. dac\u0103 utiliza\u021bi PHP 5.5 sau anterior, sau dac\u0103 op\u021biunea de configurare default_charset poate s\u0103 nu fie setat\u0103 corect pentru intr\u0103rile date. The following character sets are supported: Supported charsets Charset Aliases Description ISO-8859-1 ISO8859-1 Western European, Latin-1. ISO-8859-5 ISO8859-5 Little used cyrillic charset (Latin/Cyrillic). ISO-8859-15 ISO8859-15 Western European, Latin-9. Adds the Euro sign, French and Finnish letters missing in Latin-1 (ISO-8859-1). UTF-8 \u00a0 ASCII compatible multi-byte 8-bit Unicode. cp866 ibm866, 866 DOS-specific Cyrillic charset. cp1251 Windows-1251, win-1251, 1251 Windows-specific Cyrillic charset. cp1252 Windows-1252, 1252 Windows specific charset for Western European. KOI8-R koi8-ru, koi8r Russian. BIG5 950 Traditional Chinese, mainly used in Taiwan. GB2312 936 Simplified", "hasKeyColumn": true, "keyColumnIndex": 1, "headerRowIndex": 0}