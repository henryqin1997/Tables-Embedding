{"relation": [["Page Type", "FIL_PAGE_INDEX", "FIL_PAGE_UNDO_LOG", "FIL_PAGE_INODE", "FIL_PAGE_IBUF_FREE_LIST", "FIL_PAGE_TYPE_ALLOCATED", "FIL_PAGE_IBUF_BITMAP", "FIL_PAGE_TYPE_SYS", "FIL_PAGE_TYPE_TRX_SYS", "FIL_PAGE_TYPE_FSP_HDR", "FIL_PAGE_TYPE_XDES", "FIL_PAGE_TYPE_BLOB", "FIL_PAGE_TYPE_ZBLOB", "FIL_PAGE_TYPE_ZBLOB2"], ["Description", "The page is a B-tree node", "The page stores undo logs", "contains an array of fseg_inode_t objects.", "The page is in the free list of insert buffer or change buffer.", "Freshly allocated page.", "Insert buffer or change buffer bitmap", "System page", "Transaction system data", "File space header", "Extent Descriptor Page", "Uncompressed BLOB page", "First compressed BLOB page", "Subsequent compressed BLOB page"]], "pageTitle": "Transactions on InnoDB", "title": "", "url": "https://blogs.oracle.com/mysqlinnodb/", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 3, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042989443.69/warc/CC-MAIN-20150728002309-00065-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 861196483, "recordOffset": 861130718, "tableOrientation": "HORIZONTAL", "TableContextTimeStampAfterTable": "{18323=Thanks to Marko Makela for his useful tips on debugging at our yearly InnoDB Team Meeting 2013 held at Shanghai, China. This article derives from his ideas., 183248=Jimmy Yang, September 29, 2012, 167281=The test is conducted on a \u201cLinux 2.6.32-300.7.1.el6uek.x86_64 ix86 (64)\u201d machine with 16 GB Memory, Intel Xeon 2.0 GHz CPU X86_64 2 CPUs- 4 Core Each, 2 RAID DISKS (1027 GB,733.9GB). Results are described in following tables:, 214161=In this particular case, where there are 293k matching results, InnoDB took only 1.35 second to get all of them, while take MyISAM almost half an hour, that is about 1289 times faster!., 213843=1289, 163822=To deal with this, we introduce a background thread that \u201cauto-commits\u201d the transaction if they are idle for certain amount of time (default is 5 seconds). The background thread will wake up every second and loop through every \u201cconnections\u201d opened by Memcached, and check for idle transactions. And if such transaction is idle longer than certain limit and not being used, it will commit such transactions. This limit is configurable by change \u201cinnodb_api_bk_commit_interval\u201d. Its default value is 5 seconds, and minimum is 1 second, and maximum is 1073741824 seconds., 247965=Jimmy Yang, September 29, 2012}", "lastModified": "Wed, 05 Mar 2014 10:38:14 GMT", "textBeforeTable": "One page can be used for many purposes. The page type will identify the purpose for which the page is being used. The page type of each page will be stored in the page header. The page types are available in the header file storage/innobase/include/fil0fil.h. The following table provides a brief description of the page types. Page Types The macro UNIV_PAGE_SIZE used to be a compile time constant. From mysql-5.6 onwards it is a global variable. The number of pages in an extent depends on the page size used. If the page size is 16K (the default), then an extent would contain 64 pages. #define FSP_EXTENT_SIZE (1048576U / UNIV_PAGE_SIZE) An extent is 1MB of consecutive pages. The size of one extent is defined as follows (1048576 bytes = 1MB): Extents", "textAfterTable": "Each page type is used for different purposes. It is beyond the scope of this article, to explore each page type. For now, it is sufficient to know that all pages have a page header (page_header_t) and they store the page type in it, and based on the page type the contents and the layout of the page would be decided. Tablespace Header Each tablespace will have a header of type fsp_header_t. This data structure is stored in the first page of a tablespace. The table space identifier (space_id) Current size of the table space in pages. List of free extents List of full extents not belonging to any segment. List of partially full/free extents not belonging to any segment. List of pages containing segment headers, where all the segment inode slots are reserved. (pages of type FIL_PAGE_INODE) List of pages containing segment headers, where not all the segment inode slots are reserved. (pages of type FIL_PAGE_INODE).", "hasKeyColumn": true, "keyColumnIndex": 1, "headerRowIndex": 0}