{"relation": [["IOleControlSite methods", "OnControlInfoChanged", "LockInPlaceActive", "GetExtendedControl", "TransformCoords", "TranslateAccelerator", "OnFocus", "ShowPropertyFrame"], ["Description", "Informs the container that the control's CONTROLINFO structure has changed and that the container should call the control's IOleControl::GetControlInfo method for an update", "Indicates whether or not this control should remain in-place active, regardless of possible deactivation events", "Requests an IDispatch pointer to the extended control that the container uses to wrap the real control", "Converts between a POINTL structure expressed in HIMETRIC units (as is standard in Object Linking and Embedding [OLE]) and a POINTF structure expressed in units the container specifies", "Instructs the container to process a specified keystroke", "Indicates whether the embedded control in this control site has gained or lost the focus", "Instructs a container to display a property sheet for the control embedded in this site"], ["Comment", "Ignore this method because the container doesn't have keyboard support. If it did, you would have grabbed the keyboard accelerator table from the CONTROLINFO structure.", "This method is not supported.", "Ignore this method. It will always return NULL because you will not use dispatch interfaces to communicate with the container.", "Ignore this method. The container only supports MM_TEXT.", "This method is supported.", "Ignore this method.", "This method is not supported."]], "pageTitle": "Hosting ActiveX Controls in the .NET Compact Framework 2.0", "title": "", "url": "https://msdn.microsoft.com/en-us/library/aa446515.aspx", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 4, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042981753.21/warc/CC-MAIN-20150728002301-00290-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 876617967, "recordOffset": 876591241, "tableOrientation": "HORIZONTAL", "TableContextTimeStampBeforeTable": "{5210=February 2006}", "TableContextTimeStampAfterTable": "{42399=There is also a .pdb file, but it's not important right now. AxWmpLib.cs is the source of the Interop library, AxWMPLib.dll. Looking inside it, you can see that it defines a AxWindowsMediaPlayer class derived from System.Windows.Forms.AxHost. The 1663 lines of code give you an idea about how unpleasant the task of manually writing this code would be., 36739=Unfortunately, there are occasions when the previously mentioned approach does not work. For example, if you try to use the type library for the desktop computer's Web browser control (SHDOCVW.DLL) to host the Pocket\u00a0PC Web browser control, you will be disappointed; they are not the same. Luckily, there is a way around this situation. If you check the Windows Mobile SDK, You will see a file called webvw.idl that contains all of the interface definitions for the Web browser control\u2014this is the good news. The bad news is that its size is 50\u00a0KB and that it contains about 1500 lines of code. This control is not feasible to manually convert to C#. But there is more good news\u2014there is a painless method of creating a type library from it.}", "textBeforeTable": "Table 1. Interfaces (and their support) that containers use From a technical standpoint, an ActiveX container is a COM object that supports several mandatory and a few optional interfaces. Table 1 shows a list of interfaces that containers use. (This information is from the Introduction to ActiveX Control Containers.) ActiveX Container Interfaces ActiveX containers are one of the main concepts of control hosting. An ActiveX container is an entity used to supply the environment for an ActiveX control to run. The basic information about ActiveX controls and containers is becoming increasingly difficult to find. There does not seem to be a single example on MSDN or in a software development kit (SDK) where how to write a container or a control without using a tool, such as Active Template Library (ATL) or Microsoft Foundation Classes (MFC) Library, is demonstrated. Granted, ATL is great help\u2014but not when you need to implement a basic container from the scratch. The literature list at the end of this article seems to be all that is available on MSDN about the subject. Controls and Containers The material in this article requires you to be familiar with Win32 and COM. While it is not absolutely necessary to read this material so that you can use the control-hosting framework described, it is recommended that you read it\u2014if only to help you appreciate the underlying complexity. Control Hosting Another important feature that is missing from the .NET Compact Framework\u00a02.0", "textAfterTable": "IOleInPlaceFrame Required N/A IOleInPlaceSite Required N/A IPropertyNotifySink Optional This interface is only needed for containers that have their own property-editing user interface (UI). IOleWindow Required This interface is implemented in the container, is queried from the hosted control, and is used by the container. IOleInPlaceUIWindow Required N/A ISimpleFrameSite Optional This interface, in addition to support for nested simple frames, is optional. Because you are going to write a container to use on a mobile device and with limited support of the OLE Controls 96 (OC 96) specification, you are going to simplify the task by ignoring most of the optional and some of the mandatory features. Self-Imposed Limitations The container you are going to write will be limited to a single control at one time. If you need more than one ActiveX control hosted on the form, you will have to create two separate containers. This decision lets you immediately leave out the ISimpleFrameSite interface. You can also leave out other interfaces. For example, you are not going to offer property editing; therefore, leave out the IPropertyNotifySink interface. The IClassFactory2 and IDispatch interfaces are obviously not necessary because CCW (part of the COM support in the .NET Compact Framework) takes care of class instantiation", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}