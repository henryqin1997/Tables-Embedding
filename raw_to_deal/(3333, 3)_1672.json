{"relation": [["Test Assertion Part", "Test Assertion ID:", "Description:", "Comments:", "Target:", "Cotarget:", "Prerequisite:", "Predicate:", "Prescription:", "Reporting:"], ["What it means:", "[markup: testAssertion/@id] (required) A unique ID for the current test assertion.", "[markup: testAssertion/description ] (optional) A plain text description of the current test assertion. At minimum expressing the TA predicate.", "[markup: testAssertion/comments ] (optional) A plain text comment about the TA script and how well it covers the profile requirement. Explanation material for users, and developers (what could be improved, etc.).", "[markup: testAssertion/target ] (required) The artifacts to be tested, defined by an XPath expression that returns a list of XML nodes from the log file in input. For every artifact (node) selected by the Target expression, there will be a report entry for this TA in the test report, with a result of either: passed failed warning notApplicable notRelevant missingInput undetermined See the \"reporting\" item for the meaning of these results.", "[markup: testAssertion/cotarget ] (optional) Artifact that is related to the target, and that needs be accessed for the testing. Identified by an XPath expression that may refer to the related target node using the variable '$target'. For example, the target can be a SOAP message and the cotarget the WSDL file that describes this SOAP message. A cotarget must have a @name attribute that identifies it. The value of this attribute can be used as a variable (when prepending '$' to it) by subsequently defined cotargets, prerequisite and predicate.", "[markup: testAssertion/@preReq ] (optional) [markup: testAssertion/prerequisite ] (optional) The pre-condition for evaluating this Test Assertion on this target. If the prerequisite evaluates to \"false\" then the target does not qualify for this Test Assertion (the test report is \"notRelevant\") The first part (preReq attribute) is an enumeration of Test Assertion IDs. Each one of the prerequisite TAs must either use the same target (e.g. SOAP Envelope, or WSDL binding, etc.) as this TA, or a target that is of a more general type than the main TA target. The target must \"pass\" each one of these prerequisite TAs in order to qualify for this TA. (e.g. the target of TA t1 can be a WSDL binding while the target of a TA t2 prerequisite of t1, can be the entire WSDL file). The second part (\"prerequisite\" element) is an XPath (boolean) expression of the same nature as the predicate. If present, it must evaluate to \"true\" for the target to qualify. If it fails, the result for the current TA in the report will be \"notRelevant\". Otherwise, the target can be further evaluated by the predicate of the main TA. The expression may refer to the target explicitly using the variable name \"$target\", or to any cotarget using its name as variable name ($[name]).", "[markup: testAssertion/predicate] required element] A logical expression that evaluates whether this target is fulfilling the profile requirement addressed by this test Assertion. By default: - A result of true means the requirement is fulfilled (reported as a \"passed\" in the test report). - A result of false means the requirement is violated (reported as a \"failed\" in the test report). However, in some cases and for testability reasons, the predicate may be designed as a partial indicator e.g. only indicates some cases of fulfillment, or some cases of violation. As a result, when \"true\" indicates fulfillment it may be that \"false\" is unconclusive, or conversely \"false\" will indicate violation, but \"true\" is unconclusive. In such cases, the \"Reporting\" element specifies the meaning of the predicate result w/r to the profile requirement. The predicate expression implicitly refers to the target (whic is its \"XPath context\") although it may explicitly refer to it using the variable name \"$target\". It may refer to any cotarget using its name as variable name ($[name]).", "[markup: testAssertion/prescription/@level ] (required) Conveys the level of prescription associated with the profile requirement. At least three values may be used: mandatory: maps to RFC2119 keywords MUST, MUST NOT, SHALL, SHALL NOT, REQUIRED (and sometimes MAY NOT) preferred: maps to RFC2119 keywords SHOULD, SHOULD NOT, RECOMMENDED, NOT RECOMMENDED permitted: maps to RFC2119 keywords MAY, OPTIONAL.", "[markup: testAssertion/reporting ] (optional) For each possible outcome of the predicate (true or false), specifies how it must be interpreted w/r to the profile feature. Two attributes are used that both must be present, when this element is present: @true attribute: may take values among {passed, failed, warning, undetermined} (default is 'passed') @false attribute: may take values among {passed, failed, warning, undetermined} (default is 'failed') The reported outcomes have the following meaning: passed: the target passes the test and can be considered as fulfilling the profile feature. failed: the target fails the test and can be considered as violating (or not exhibiting) the profile feature. warning: the test result is inconclusive. There is a possibility of profile requirement violation, that deserved further investigation. undetermined: the test result is inconclusive for this predicate value. NOTES: the predicate of the TA may be worded in a negative way so that @false='passed' although that is not recommended. The result of a test should not be related to the prescription level, e.g. a \"preferred\" or \"permitted\" level should not imply that @false='warning'. Other test results that are automatically generated and not controlled by the \"reporting\" element are: notRelevant: the target failed the prerequisite condition and therefore does not qualify for further testing (i.e. the predicate expression is NOT evaluated on it). missingInput: a cotarget expression returned an empty node set. notApplicable: this target was not even selected by the target XPath expression, while being of the same general artifact type (e.g. message type)."]], "pageTitle": "Basic Profile - Version 2.0 (Final)", "title": "", "url": "http://ws-i.org/Profiles/BasicProfile-2.0-2010-11-09.html", "hasHeader": true, "headerPosition": "FIRST_ROW", "tableType": "RELATION", "tableNum": 74, "s3Link": "common-crawl/crawl-data/CC-MAIN-2015-32/segments/1438042988458.74/warc/CC-MAIN-20150728002308-00001-ip-10-236-191-2.ec2.internal.warc.gz", "recordEndOffset": 265444987, "recordOffset": 265372041, "tableOrientation": "HORIZONTAL", "TableContextTimeStampBeforeTable": "{23243=1. Introduction 1.1. Guiding Principles 1.2. Relationships to Other Profiles 1.2.1. Compatibility with Basic Profile 1.1 1.2.2. Relationship to Basic Profile 1.2 1.3. Test Assertions 1.4. Notational Conventions 1.5. Profile Identification and Versioning 2. Profile Conformance 2.1. Conformance Requirements 2.2. Conformance Targets 2.3. Conformance Scope 2.4. Claiming Conformance 3. Messaging 3.1. Message Serialization 3.1.1. XML Envelope Serialization 3.1.2. Unicode BOMs 3.1.3. XML Declarations 3.1.4. Character Encodings 3.1.5. XOP Encoded Messages 3.2. SOAP Envelopes 3.2.1. SOAP Envelope Structure 3.2.2. SOAP Body Namespace Qualification 3.2.3. Disallowed Constructs 3.2.4. xsi:type Attributes 3.2.5. SOAP 1.2 attributes on SOAP 1.2 elements 3.3. SOAP Processing Model 3.3.1. SOAP Fault Processing 3.4. SOAP Faults 3.4.1. Identifying SOAP Faults 3.5. Use of SOAP in HTTP 3.5.1. HTTP Protocol Binding 3.5.2. Parameters on the Content-Type MIME Header 3.5.3. HTTP Success Status Codes 3.5.4. HTTP Redirect Status Codes 3.5.5. HTTP Cookies 3.5.6. Non-Addressable Consumers and Instances 3.6. Use of URIs in SOAP 3.6.1. Use of SOAP-defined URIs 3.7. WS-Addressing Support 3.7.1. Requiring WS-Addressing SOAP Headers 3.7.2. NotUnderstood block in MustUnderstand Fault on WS-Addressing SOAP Headers 3.7.3. Use of wsa:Action and WS-Addressing 1.0 - Metadata 3.7.4. Valid Values for action Parameter on the Content-Type MIME header When WS-Addressing is Used 3.7.5. SOAP Defined Faults Action URI 3.7.6. Understanding WS-Addressing SOAP Header Blocks 3.7.7. Ignored or Absent WS-Addressing Headers 3.7.8. Present and Understood WS-Addressing Headers 3.7.9. SOAP MustUnderstand or VersionMismatch fault Transmission 3.7.10. Faulting Behavior with Present and Understood WS-Addressing Headers 3.7.11. [message id] and One-Way Operations 3.7.12. Refusal to Honor WS-Addressing Headers 3.7.13. Use of Non-Anonymous Response EPRs 3.7.14. Optionality of the wsa:To header 3.7.15. Extending WSDL Endpoints with an EPR 3.7.16. Combining Synchronous and Asynchronous Operations 3.7.17. Conflicting Addressing Policies 4. Service Description 4.1. Required Description 4.2. Document Structure 4.2.1. WSDL Import location Attribute Structure 4.2.2. WSDL Import location Attribute Semantics 4.2.3. XML Version Requirements 4.2.4. XML Namespace Declarations 4.2.5. WSDL and the Unicode BOM 4.2.6. Acceptable WSDL Character Encodings 4.2.7. Namespace Coercion 4.2.8. WSDL Extensions 4.3. Types 4.3.1. QName References 4.3.2. Schema targetNamespace Structure 4.3.3. soapenc:Array 4.3.4. WSDL and Schema Definition Target Namespaces 4.3.5. Multiple GED Definitions with the same QName 4.3.6. Multiple Type Definitions with the same QName 4.4. Messages 4.4.1. Bindings and Parts 4.4.2. Bindings and Faults 4.4.3. Unbound portType Element Contents 4.5. Port Types 4.5.1. Ordering of part Elements 4.5.2. Allowed Operations 4.5.3. Distinctive Operations 4.5.4. parameterOrder Attribute Construction 4.5.5. Exclusivity of type and element Attributes 4.6. Bindings 4.6.1. Use of SOAP Binding 4.7. SOAP Binding 4.7.1. HTTP Transport 4.7.2. Consistency of style Attribute 4.7.3. Encodings and the use Attribute 4.7.4. Multiple Bindings for portType Elements 4.7.5. Operation Signatures 4.7.6. Multiple Ports on an Endpoint 4.7.7. Child Element for Document-Literal Bindings 4.7.8. One-Way Operations 4.7.9. Namespaces for wsoap12 Elements 4.7.10. Consistency of portType and binding Elements 4.7.11. Enumeration of Faults 4.7.12. Consistency of Envelopes with Descriptions 4.7.13. Response Wrappers 4.7.14. Part Accessors 4.7.15. Namespaces for Children of Part Accessors 4.7.16. Required Headers 4.7.17. Allowing Undescribed Headers 4.7.18. Ordering Headers 4.7.19. Describing action Parameter on the Content-Type MIME Header 4.7.20. SOAPAction HTTP Header 4.7.21. SOAP Binding Extensions 4.8. Use of @soapActionRequired in WSDL 1.1 SOAP 1.2 Binding 4.9. Use of XML Schema 4.10. WS-Addressing 1.0 - Metadata 5. WSDL Corrections 5.1. Document Structure 5.1.1. WSDL Schema Definitions 5.1.2. WSDL and Schema Import 5.1.3. Placement of WSDL import Elements 5.1.4. WSDL documentation Element 5.2. Message 5.2.1. Declaration of part Elements 5.3. SOAP Binding 5.3.1. Specifying the transport Attribute 5.3.2. SOAP 1.2 Binding Extension 5.3.3. Type and Name of SOAP Binding Elements 5.3.4. name Attribute on Faults 5.3.5. Omission of the use Attribute 5.3.6. Default for use Attribute 6. Service Publication and Discovery 6.1. bindingTemplates 6.2. tModels 7. Security 7.1. Use of HTTPS Appendix A: Referenced Specifications Appendix B: Extensibility Points Appendix C: Normative References Appendix D: Defined Terms Appendix E: Acknowledgements Appendix F: Schemas, 27451=Copyright \u00a9 2002-2010 by The Web Services-Interoperability Organization (WS-I) and Certain of its Members. All Rights Reserved.}", "TableContextTimeStampAfterTable": "{339413=R1141 When HTTP is used as the transport, a MESSAGE MUST be sent using either HTTP/1.1 or HTTP/1.0. HTTP-TRANSPORT TESTABLE BP1002, 1007677=In addition to the above restrictions and as stated in R1158 , the effective policy alternatives for a given policy subject must not contain conflicting assertions., 419055=RFC2616 notes that user-agents should not automatically redirect requests; however, this requirement was aimed at browsers, not automated processes (which many Web services will be). Therefore, the Profile allows, but does not require, consumers to automatically follow redirections., 92358=R4006 A RECEIVER MUST NOT fault due to the presence of a UTF-8 Unicode Byte Order Mark (BOM) in the SOAP envelope when the envelope is correctly encoded using UTF-8 and the \"charset\" parameter of the HTTP Content-Type header has a value of \"utf-8\" (see RFC3023). CORE TESTABLE_SCENARIO_DEPENDENT BP1306, 1003288=R1155 When sending a request message to an endpoint which is specified by a WSDL 1.1 description in which the wsdl:port element has not been extended with a wsa:EndpointReference, if the wsa:Action SOAP header block is present, the SENDER MAY populate the wsa:To SOAP header of that request message with the value of the location attribute of the wsoap12:address extension element. CORE TESTABLE, 765713=R1035 An ENVELOPE MUST use the http://www.w3.org/2005/08/addressing/soap/fault URI as the value for the wsa:Action SOAP header element, when present, for either of the SOAP 1.2 defined VersionMismatch and MustUnderstand faults. CORE TESTABLE BP1035, 999028=As per WS-Addressing 1.0 - Core, the [destination] message addressing property of a request message without a wsa:To header is \"http://www.w3.org/2005/08/addressing/anonymous\". Note that none of the WS-Addressing 1.0 specifications describes the semantics of sending a SOAP request message, over HTTP, either without a wsa:To header or with a wsa:To header with the value of \"http://www.w3.org/2005/08/addressing/anonymous\". To clarify, such a request is considered to be addressed to \"the entity listening at the URI of the HTTP Request that contains this message\". Sent over a connection to http://www.example.org, the following three example messages are consistent:, 224555=R9980 An ENVELOPE MUST conform to the structure specified in SOAP Version 1.2 Part 1, Section 5, \"SOAP Envelope\" (subject to amendment by the Profile). CORE TESTABLE BP1600, 386522=R1124 An INSTANCE MUST use a 2xx HTTP status code on a response message that indicates the successful outcome of a HTTP Request. HTTP-TRANSPORT NOT_TESTABLE, 1009348=The above example is incorrect for two reasons. Firstly, it violates R1157 because the GetPOStatus and CancelPO operations do not have policies containing the wsam:Addressing assertion attached to them. Secondly, the effective policies for both the CreatePO and UpdatePO operations contain conflicting assertions (a wsam:Addressing assertion that is unconstrained with regards to anonymous/non-anonymous and a wsam:Addressing assertion that is constrained to just non-anonymous) within the same alternative., 420278=R1121 An INSTANCE SHOULD NOT require consumer support for Cookies in order to function correctly. HTTP-TRANSPORT NOT_TESTED, 1035123=R2007 A DESCRIPTION MUST specify a non-empty location attribute on the wsdl:import element. CORE TESTABLE BP2098, 255912=R1014 The children of the soap12:Body element in an ENVELOPE MUST be namespace qualified. CORE TESTABLE BP1202, 781867=R1143 When a message contains multiple WS-Addressing SOAP header blocks with at least one of those header blocks containing a soap12:mustUnderstand='1' attribute, then a RECEIVER MUST honor all the WS-Addressing SOAP header blocks or none of them. CORE TESTABLE BP1043a BP1043b, 419995=R1122 An INSTANCE using Cookies SHOULD conform to RFC2965. HTTP-TRANSPORT NOT_TESTED, 76359=R9701 An ENVELOPE MUST be serialized as XML 1.0. CORE TESTABLE BP1019, 190679=R1020 A XOP_ENCODED_MESSAGE MUST include the start-info parameter in the Content-Type header of the enclosing multipart/related MIME entity body. CORE TESTABLE BP1020, 834643=SOAP 1.2 allows a RECEIVER to ignore headers that it does not understand. This behavior is particularly relevant for WS-Addressing headers that affect message processing and routing. As an example, take the following message sent to a SOAP node that does not understand the \"http://www.w3.org/2005/08/addressing\" namespace:, 456753=R1204 When an INSTANCE is non-addressable, a SOAP ENVELOPE, that is described by the output message of a WSDL operation supported by the INSTANCE, MUST be bound to a HTTP Request message. HTTP-TRANSPORT TESTABLE, 1006636=R1156 In a DESCRIPTION, a policy that contains the wsam:Addressing assertion MUST be attached to either a wsdl:port, a wsdl:binding or a wsdl:binding/wsdl:operation. CORE NOT_TESTABLE_XPATH, 271871=R1008 An ENVELOPE MUST NOT contain a Document Type Declaration. CORE TESTABLE BP1007, 817435=R1146 A RECEIVER MUST transmit non-faulting responses to the endpoint referred to by the wsa:ReplyTo header or generate a fault instead (per R1029). CORE TESTABLE BP1146, 108304=R4007 A RECEIVER MUST NOT fault due to the presence of a UTF-16 Unicode Byte Order Mark (BOM) in the SOAP envelope when the envelope is correctly encoded using UTF-16 and the \"charset\" parameter of the HTTP Content-Type header has a value of \"utf-16\" (see RFC3023). CORE TESTABLE_SCENARIO_DEPENDENT BP1307, 1051152=R2008 A CONSUMER MAY, but need not, retrieve a WSDL description from the URI specified in the location attribute on a wsdl:import element. CORE NOT_TESTED, 402097=R1112 An INSTANCE SHOULD use either a \"200 OK\" or \"202 Accepted\" HTTP status code for a response message that does not contain a SOAP envelope but indicates the successful outcome of a HTTP Request. HTTP-TRANSPORT TESTABLE BP1101, 1052804=R4005 A DESCRIPTION SHOULD NOT contain the namespace declaration xmlns:xml=\"http://www.w3.org/XML/1998/namespace\". CORE TESTABLE BP2034, 124532=R1010 A RECEIVER MUST NOT fault due to the presence of an XML Declaration in the SOAP envelope (as specified by Section 2.8 of XML 1.0,\"Prolog and Document Type Declaration\"). CORE TESTABLE BP1015, 839649=R1148 If an error occurs when transmitting the fault in R1147, a RECEIVER MAY choose to send a fault related to this transmission error on the HTTP Response (if available). HTTP-TRANSPORT NOT_TESTED, 337468=R1107 A RECEIVER MUST interpret a SOAP message as a Fault when the soap12:Body of the message has a single soap12:Fault child. CORE NOT_TESTABLE, 841081=R1163 When applying the processing rules defined by WS-Addressing 1.0 - Core, Section 3.4, if a related message lacks a [message id] property, the RECEIVER MUST generate a wsa:MessageAddressingHeaderRequired fault. CORE TESTABLE, 838433=R1147 If a fault is generated, the RECEIVER SHOULD transmit the fault (per R1029). CORE NOT_TESTED, 370057=Note that support for HTTP/1.0 is implied in HTTP/1.1, and that intermediaries may change the version of a message; for more information about HTTP versioning, see RFC2145, \"Use and Interpretation of HTTP Version Numbers.\", 10260=Requirement levels, using RFC2119 language (e.g., MUST, MAY, SHOULD) indicate the nature of the requirement and its impact on conformance. Each requirement is individually identified (e.g., R9999) for convenience., 460374=R1040 If an endpoint requires use of WS-Addressing by use of a wsam:Addressing policy assertion, an ENVELOPE sent by a SENDER MUST carry all required WS-Addressing SOAP headers. CORE TESTABLE BP1040a BP1040b BP1040c BP1142a BP1142b BP1142c BP1143a BP1143b BP1143c, 1068986=R4003 A DESCRIPTION MUST use either UTF-8 or UTF-16 encoding. CORE TESTABLE BP2201, 840113=Note: To avoid a recursive situation, if a fault is generated while trying to transmit to the endpoint referred to by the wsa:ReplyTo header (R1146 ) and the wsa:FaultTo header is absent, R1147 does not apply., 173762=R1019 A RECEIVER MUST ignore the encoding pseudo-attribute of the envelope's XML declaration. CORE TESTABLE_SCENARIO_DEPENDENT BP1306, 912661=R1152 If an INSTANCE attempts to send a message to a non-anonymous [destination] URI then the message MUST be transmitted in the entity-body of an HTTP Request. CORE TESTABLE BP1152a BP1152b BP1152c, 157521=R1018 A SIMPLE_SOAP_MESSAGE MUST indicate the correct character encoding, using the \"charset\" parameter. CORE TESTABLE BP1018, 619766=R1041 An ENVELOPE that is a MustUnderstand SOAP fault, sent from an endpoint that has a policy alternative containing the wsam:Addressing assertion attached to its WSDL endpoint subject, MUST NOT contain a NotUnderstood SOAP header block with the qname attribute value that identifies a WS-Addressing defined SOAP header block. CORE TESTABLE BP1041, 5064=The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119., 458551=R1160 A RECEIVER, for the purposes of comparison of URI values of information items defined by the SOAP 1.2 specification, MUST treat the computed absolute URI values as simple strings as defined in RFC3986 (see RFC3986, Section 6.2.1). CORE NOT_TESTABLE, 1014639=R1158 In a DESCRIPTION the effective policy for a given endpoint MUST NOT contain both the wsam:AnonymousResponses and wsam:NonAnonymousResponses assertions within a single policy alternative. CORE NOT_TESTABLE_XPATH, 386877=R1111 An INSTANCE SHOULD use a \"200 OK\" HTTP status code on a response message that contains an envelope that is not a fault. HTTP-TRANSPORT TESTABLE BP1100, 1002003=R1154 When sending a request message to an endpoint which is specified by a WSDL 1.1 description in which the wsdl:port element has been extended with a wsa:EndpointReference, if the wsa:Action SOAP header block is present, the SENDER MUST populate the wsa:To and reference parameter SOAP headers of that request message with the values of the wsa:Address and wsa:ReferenceParameters elements (respectively) of the extending endpoint reference. CORE TESTABLE, 839271=R1162 When the wsa:FaultTo SOAP header exists, the RECEIVER MUST NOT transmit faults to the endpoint referred to by the wsa:ReplyTo header. CORE TESTABLE, 318689=R1017 A RECEIVER MUST NOT fault on the absence of the xsi:type attribute in envelopes, except in cases where this attribute is required to indicate a derived type (see XML Schema Part 1: Structures, Section 2.6.1). CORE NOT_TESTABLE, 287568=R1009 An ENVELOPE MUST NOT contain Processing Instructions. CORE TESTABLE BP1208, 1084933=R2005 The targetNamespace attribute on the wsdl:definitions element of a description that is being imported MUST have same the value as the namespace attribute on the wsdl:import element in the importing DESCRIPTION. CORE TESTABLE BP2104, 765276=WS-Addressing provides the URI http://www.w3.org/2005/08/addressing/soap/fault for \"SOAP defined faults\". However, it only recommends, rather than mandates its use for the SOAP 1.2 defined MustUnderstand and VersionMismatch faults. This Profile mandates the use of the WS-Addressing defined wsa:Action value for SOAP 1.2 defined MustUnderstand and VersionMismatch faults, for interoperability., 961804=R1153 Except in cases in which an instance exposes a WSDL description and its endpoint includes a wsdl:port that has been extended with a wsa:EndpointReference, a RECEIVER MUST NOT fault a SOAP request message due to the absence of the wsa:To header. CORE TESTABLE BP1153a BP1153b, 354810=R1140 When HTTP is used as the transport, a MESSAGE SHOULD be sent using HTTP/1.1. HTTP-TRANSPORT TESTABLE BP1001, 75114=This Profile allows for the use of protocol bindings other than HTTP. Section 2.2 identifies the use of Simple SOAP and XOP encoded messages using HTTP. Section 3.1 identifies how encoding is handled for HTTP only. RFC 2616 and RFC3023 provide guidance for HTTP, supplemented by requirements throughout this profile. If another transport protocol is used, the responsibility for defining how to handle transport-specific features (e.g. content encoding) falls to the specification of the binding of SOAP to that transport protocol., 421794=R1202 When a CONSUMER is non-addressable, a SOAP ENVELOPE, that is described by the output message of a WSDL operation supported by an INSTANCE, MUST be bound to a HTTP Response message. HTTP-TRANSPORT TESTABLE BP1126a BP1126b, 319334=R1032 The soap12:Envelope, soap12:Header, and soap12:Body elements in an ENVELOPE MUST NOT have attributes in the namespace \"http://www.w3.org/2003/05/soap-envelope\". CORE TESTABLE BP1032, 842422=R1149 If a RECEIVER detects one of the error conditions specified in Section 6.4 of the Web Services Addressing 1.0 - SOAP Binding, it MUST generate a fault using the [Code], [Subcode], and [Subsubcode] listed for that particular error condition. CORE TESTABLE BP1149a BP1149b BP1149c BP1149d, 303201=R1033 An ENVELOPE MUST NOT contain the namespace declaration xmlns:xml=\"http://www.w3.org/XML/1998/namespace\". CORE TESTABLE BP1033, 240303=R9981 An ENVELOPE MUST have exactly zero or one child elements of the soap12:Body element. CORE TESTABLE BP1881, 749283=R1144 When the wsa:Action SOAP header block is present in an envelope, the value of the action parameter, if present, on the Content-Type MIME header of the MESSAGE MUST be an absolute URI that has the same value as the value of the wsa:Action header. HTTP-TRANSPORT TESTABLE BP1144, 458385=A SOAP 1.2 defined URI, such as the role value \"http://www.w3.org/2003/05/soap-envelope/role/next\", is treated as follows:, 141309=R1012 An ENVELOPE MUST be serialized using either UTF-8 or UTF-16 character encoding. CORE TESTABLE BP1018, 816262=R1145 If a SOAP envelope does not contain any WS-Addressing header blocks, or contains WS-Addressing header blocks that do not include any soap12:mustUnderstand=\"1\" attributes, and the RECEIVER chooses to ignore them, then any response (normal or fault) SHOULD be transmitted. If it is transmitted then it is transmitted on the HTTP Response message (if available). HTTP-TRANSPORT NOT_TESTED, 336242=R1029 Where the normal outcome of processing a SOAP envelope would have resulted in the transmission of a SOAP response, but rather a fault is generated instead, the RECEIVER MUST NOT transmit the non-faulting response. CORE NOT_TESTABLE, 838767=R1161 Other than those faults specified in R1036, faults in R1147 SHOULD be transmitted by the RECEIVER as specified in WS-Addressing 1.0 - Core, Section 3.4. CORE TESTABLE, 418254=There are interoperability problems with using many of the HTTP redirect status codes, generally surrounding whether to use the original method, or GET. The Profile mandates \"307 Temporary Redirect\", which has the semantic of redirection with the same HTTP method, as the correct status code for redirection. For more information, see the 3xx status code descriptions in RFC2616., 222139=R1022 A RECEIVER MUST NOT fault due to the action parameter of an XOP encoded message being included with the value of the start-info parameter inside the Content-Type header of the enclosing multipart/related MIME entity body. CORE NOT_TESTABLE, 206170=R1021 A XOP_ENCODED_MESSAGE MUST include the full value of the type parameter from the root entity body part inside the start-info parameter of the enclosing multipart/related MIME entity body part's Content-Type header. CORE TESTABLE BP1021, 837212=R1036 Regardless of whether the wsa:ReplyTo or wsa:FaultTo SOAP headers appear in the incoming message, a RECEIVER that receives a SOAP envelope that generates either a SOAP MustUnderstand or VersionMismatch fault SHOULD transmit either fault. If it is transmitted, such a fault is transmitted on the HTTP Response message (if available). HTTP-TRANSPORT NOT_TESTED, 636371=R1142 An ENVELOPE that includes a wsa:Action SOAP header block and which is described using a WSDL 1.1 description MUST conform to WS-Addressing 1.0 - Metadata, Section 5.1. CORE TESTABLE BP1142a BP1142b BP1142c BP1143a BP1143b BP1143c, 271419=Although published errata NE05 (see http://www.w3.org/XML/xml-names-19990114-errata ) allows the namespace declaration xmlns:xml=\"http://www.w3.org/XML/1998/namespace\" to appear, some older processors considered such a declaration to be an error. These requirements ensure that conformant artifacts have the broadest interoperability possible., 370455=R1109 If present, the values of the following parameters - type, start-info, action, and boundary - on the Content-Type MIME header field-value in a request MESSAGE MUST be a quoted string. HTTP-TRANSPORT TESTABLE BP1006, 418664=R1130 An INSTANCE MUST use the \"307 Temporary Redirect\" HTTP status code when redirecting a request to a different endpoint. HTTP-TRANSPORT NOT_TESTABLE, 1017855=R0001 Either an INSTANCE's WSDL 1.1 description, its UDDI binding template, or both MUST be available to an authorized consumer upon request. CORE TESTABLE BP2703, 456343=R1203 When an INSTANCE is non-addressable, a SOAP ENVELOPE, that is described by the input message of a WSDL operation supported by the INSTANCE, MUST be bound to a HTTP Response message. HTTP-TRANSPORT TESTABLE, 1007076=R1157 If a DESCRIPTION has a policy alternative containing the wsam:Addressing assertion attached to a wsdl:binding/wsdl:operation, then all of the wsdl:operations within that wsdl:binding MUST also have a policy alternative containing the wsam:Addressing assertion attached to them. CORE NOT_TESTABLE_XPATH, 815871=When WS-Addressing headers are present in a SOAP envelope, but do not contain a soap12:mustUnderstand=\"1\" attribute, a RECEIVER may choose to ignore these SOAP headers (per R1143 ). Consistent with R1036 , valid reasons may exist why (not where) faults are not transmitted.}", "lastModified": "Sun, 26 Jul 2015 18:16:11 GMT", "textBeforeTable": "HELP - GLOSSARY Diagnostic Data: Extensibility Point WARNING: The soap12:Envelope makes use of extra SOAP headers Error Message: permitted Prescription: true=warning, false=failed Reporting: fn:true() Predicate: /wsil:testLog/wsil:messageLog/wsil:message/wsil:messageContents/soap12:Envelope[soap12:Header[some $hbloc in child::* satisfies not(fn:namespace-uri($hbloc) = 'http://www.w3.org/2005/08/addressing') and not($hbloc/attribute::*:IsReferenceParameter) ]] Target: The soap:Envelope contains other header blocks. Description: BP1901 Test Assertion: E0001 - Header blocks - Header blocks are an extensibility mechanism in SOAP.CORE TESTABLE BP1901 SOAP Version 1.2 Part 1: Messaging Framework (Second Edition) Extensibility points: This section of the Profile incorporates the following specifications by reference, and defines extensibility points within them: 3. Messaging The example above shows a policy expression that requires WS-Addressing and Basic Profile 2.0.  CORRECT:  For example,  The example above shows a policy expression that requires Basic Profile 2.0.     CORRECT:  </wsp:Policy> <bp20:Conformant/> </wsam:Addressing> <wsp:Policy/> <wsam:Addressing> xmlns:wsam=\"http://www.w3.org/2007/05/addressing/metadata\"> xmlns:wsp=\"http://www.w3.org/ns/ws-policy\" <wsp:Policy xmlns:bp20=\"http://ws-i.org/profiles/basic-profile/2.0/\" </wsp:Policy> <bp20:Conformant/> xmlns:wsp=\"http://www.w3.org/ns/ws-policy\"> <wsp:Policy xmlns:bp20=\"http://ws-i.org/profiles/basic-profile/2.0/\"", "textAfterTable": "E0002 - Processing order - The order of processing of a SOAP envelope's components (e.g., headers) is unspecified, and therefore may need to be negotiated out-of-band.CORE NOT_TESTABLE E0003 - Use of intermediaries - SOAP Intermediaries is an underspecified mechanism in SOAP 1.2, and their use may require out-of-band negotiation. Their use may also necessitate careful consideration of where Profile conformance is measured.CORE NOT_TESTABLE E0004 - SOAP role values - Values of the SOAP role attribute, other than the special uri 'http://www.w3.org/2003/05/soap-envelope/role/next', represent a private agreement between parties of the web service.CORE TESTABLE BP1904 Test Assertion: BP1904 Description: The soap12:Envelope contains @role with unspecified values. Target: /wsil:testLog/wsil:messageLog/wsil:message/wsil:messageContents/soap12:Envelope[.//attribute::*:role] Predicate: every $rval in .//*/attribute::*:role satisfies ($rval = 'http://www.w3.org/2003/05/soap-envelope/role/next' or $rval = 'http://www.w3.org/2003/05/soap-envelope/role/none') Reporting: true=passed, false=warning Prescription: permitted Error Message: Extensibility Point WARNING: The soap12:Envelope contains @role with unspecified values Diagnostic Data: HELP - GLOSSARY Test Assertion Part What it", "hasKeyColumn": true, "keyColumnIndex": 0, "headerRowIndex": 0}